{"version":3,"file":"app-init.js","sourceRoot":"","sources":["../src/ts/app-init.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Application Initialization Module\n * Handles DOMContentLoaded setup and modal initialization.\n *\n * This module centralizes application bootstrap logic that was previously\n * in the DOMContentLoaded handler in app.js.\n *\n * @module app-init\n */\n\n// Export to make this a proper module for global augmentation\nexport {};\n\n/**\n * Global window interface extensions for app initialization\n */\ndeclare global {\n    interface Window {\n        initApp?: () => void;\n    }\n}\n\n/**\n * Type helper for WindowManager\n */\ninterface IWindowManager {\n    getAllWindowIds?: () => string[];\n    getTransientWindowIds?: () => string[];\n    setDialogInstance?: (id: string, instance: unknown) => void;\n}\n\n/**\n * Type helper for Dialog class\n */\ninterface IDialog {\n    new (id: string): unknown;\n}\n\n/**\n * Type helper for external module functions\n */\ninterface GlobalModules {\n    ActionBus?: {\n        init?: () => void;\n    };\n    Dialog?: IDialog;\n    FinderSystem?: {\n        init?: () => void;\n    };\n    SettingsSystem?: {\n        init?: (container: HTMLElement) => void;\n    };\n    TextEditorSystem?: {\n        init?: (container: HTMLElement) => void;\n    };\n    TerminalSystem?: {\n        init?: (container: HTMLElement) => void;\n    };\n    TerminalInstanceManager?: unknown;\n    DockSystem?: {\n        initDockDragDrop?: () => void;\n    };\n}\n\n/**\n * Initialize modal IDs from WindowManager or fallback to default list\n * @returns Object containing modalIds array and transientModalIds set\n */\nfunction initModalIds(): { modalIds: string[]; transientModalIds: Set<string> } {\n    const win = window as Window & { WindowManager?: IWindowManager; APP_CONSTANTS?: { MODAL_IDS?: string[]; TRANSIENT_MODAL_IDS?: Set<string> } };\n\n    if (win.WindowManager) {\n        const modalIds = win.WindowManager.getAllWindowIds?.() || [];\n        const transientIds = win.WindowManager.getTransientWindowIds?.() || [];\n        return {\n            modalIds,\n            transientModalIds: new Set(transientIds),\n        };\n    } else {\n        // Fallback\n        const modalIds = win.APP_CONSTANTS?.MODAL_IDS || [\n            'finder-modal',\n            'projects-modal',\n            'about-modal',\n            'settings-modal',\n            'text-modal',\n            'terminal-modal',\n            'image-modal',\n            'program-info-modal',\n        ];\n        const transientModalIds = win.APP_CONSTANTS?.TRANSIENT_MODAL_IDS || new Set(['program-info-modal']);\n        return { modalIds, transientModalIds };\n    }\n}\n\n/**\n * Main application initialization function.\n * Called automatically on DOMContentLoaded.\n * Sets up dialog instances, ActionBus, and initializes all subsystems.\n */\nfunction initApp(): void {\n    const win = window as Window & GlobalModules & { WindowManager?: IWindowManager };\n    const funcs = window as Window & {\n        hideMenuDropdowns?: () => void;\n        bringDialogToFront?: (id: string) => void;\n        updateProgramLabelByTopModal?: () => void;\n        syncTopZIndexWithDOM?: () => void;\n        restoreWindowPositions?: () => void;\n        restoreOpenModals?: () => void;\n        initSystemStatusControls?: () => void;\n        initDesktop?: () => void;\n        initDockMagnification?: () => void;\n    };\n\n    // Modal-IDs initialisieren\n    const { modalIds } = initModalIds();\n\n    // ActionBus initialisieren\n    if (win.ActionBus) {\n        win.ActionBus.init?.();\n    }\n\n    // Wenn auf einen sichtbaren Modalcontainer geklickt wird, hole das Fenster in den Vordergrund\n    document.querySelectorAll('.modal').forEach((modal) => {\n        modal.addEventListener('click', function (e) {\n            // Verhindere, dass Klicks auf interaktive Elemente im Modal den Fokuswechsel stÃ¶ren.\n            const target = e.target as Node;\n            if (e.target === modal || modal.contains(target)) {\n                funcs.hideMenuDropdowns?.();\n                funcs.bringDialogToFront?.(modal.id);\n                funcs.updateProgramLabelByTopModal?.();\n            }\n        });\n    });\n\n    // Dialog-Instanzen erstellen und im WindowManager registrieren\n    const dialogs = window.dialogs || {};\n    window.dialogs = dialogs;\n    if (modalIds && Array.isArray(modalIds)) {\n        modalIds.forEach((id) => {\n            const modal = document.getElementById(id);\n            if (!modal || !win.Dialog) return;\n            const dialogInstance = new win.Dialog(id);\n            dialogs[id] = dialogInstance as unknown as Record<string, unknown>;\n\n            // Im WindowManager registrieren\n            if (win.WindowManager) {\n                win.WindowManager.setDialogInstance?.(id, dialogInstance);\n            }\n        });\n    }\n\n    // Add click-outside-to-close functionality for launchpad\n    const launchpadModal = document.getElementById('launchpad-modal');\n    if (launchpadModal) {\n        launchpadModal.addEventListener('click', function (e) {\n            // Check if the click is on the modal background (not on the inner content)\n            if (e.target === launchpadModal) {\n                const launchpadDialog = dialogs['launchpad-modal'] as { close?: () => void };\n                launchpadDialog?.close?.();\n            }\n        });\n    }\n\n    funcs.syncTopZIndexWithDOM?.();\n    funcs.restoreWindowPositions?.();\n    funcs.restoreOpenModals?.();\n    funcs.initSystemStatusControls?.();\n    funcs.initDesktop?.();\n\n    // Finder initialisieren nach Dialog-Setup\n    if (win.FinderSystem && typeof win.FinderSystem.init === 'function') {\n        win.FinderSystem.init();\n    }\n\n    // Initialize settings module\n    if (win.SettingsSystem) {\n        const settingsContainer = document.getElementById('settings-container');\n        if (settingsContainer) {\n            win.SettingsSystem.init?.(settingsContainer);\n        }\n    }\n\n    // Initialize text editor module\n    if (win.TextEditorSystem) {\n        const textEditorContainer = document.getElementById('text-editor-container');\n        if (textEditorContainer) {\n            win.TextEditorSystem.init?.(textEditorContainer);\n        }\n    }\n\n    // Initialize terminal module (legacy) only when multiâinstance is not available\n    // Prevents duplicate inputs causing E2E strict-mode locator conflicts\n    if (!win.TerminalInstanceManager && win.TerminalSystem) {\n        const terminalContainer = document.getElementById('terminal-container');\n        if (terminalContainer) {\n            win.TerminalSystem.init?.(terminalContainer);\n        }\n    }\n\n    funcs.initDockMagnification?.();\n    if (win.DockSystem && typeof win.DockSystem.initDockDragDrop === 'function') {\n        win.DockSystem.initDockDragDrop();\n    }\n\n    // Signal that the app is ready for E2E tests\n    (window as Window & { __APP_READY?: boolean }).__APP_READY = true;\n}\n\n// ============================================================================\n// IIFE Export Pattern - Expose initApp globally and auto-attach to DOMContentLoaded\n// ============================================================================\n\n(() => {\n    if (typeof window.initApp !== 'function') {\n        window.initApp = initApp;\n    }\n\n    // Auto-attach to DOMContentLoaded\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', initApp);\n    } else {\n        // DOMContentLoaded already fired, run immediately\n        initApp();\n    }\n})();\n"]}