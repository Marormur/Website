{"version":3,"file":"storage-utils.js","sourceRoot":"","sources":["../src/ts/storage-utils.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAEH,8BAMC;AAED,8BAMC;AAED,wBAMC;AAED,0BASC;AAED,0BAMC;AAzCD,SAAgB,SAAS,CAAC,GAAW;IACjC,IAAI,CAAC;QACD,OAAO,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAAC,MAAM,CAAC;QACL,OAAO,IAAI,CAAC;IAChB,CAAC;AACL,CAAC;AAED,SAAgB,SAAS,CAAC,GAAW,EAAE,KAAa;IAChD,IAAI,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;IACrC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,6CAA6C,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;IAC5E,CAAC;AACL,CAAC;AAED,SAAgB,MAAM,CAAC,GAAW;IAC9B,IAAI,CAAC;QACD,YAAY,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACjC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,0CAA0C,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;IACzE,CAAC;AACL,CAAC;AAED,SAAgB,OAAO,CAAI,GAAW,EAAE,QAAW;IAC/C,IAAI,CAAC;QACD,MAAM,GAAG,GAAG,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,GAAG;YAAE,OAAO,QAAQ,CAAC;QAC1B,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAM,CAAC;IAChC,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,2CAA2C,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;QACtE,OAAO,QAAQ,CAAC;IACpB,CAAC;AACL,CAAC;AAED,SAAgB,OAAO,CAAC,GAAW,EAAE,KAAc;IAC/C,IAAI,CAAC;QACD,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACrD,CAAC;IAAC,OAAO,GAAG,EAAE,CAAC;QACX,OAAO,CAAC,IAAI,CAAC,2CAA2C,GAAG,IAAI,EAAE,GAAG,CAAC,CAAC;IAC1E,CAAC;AACL,CAAC","sourcesContent":["/**\r\n * src/ts/storage-utils.ts\r\n * Small, safe helpers around localStorage with JSON handling.\r\n */\r\n\r\nexport function getString(key: string): string | null {\r\n    try {\r\n        return localStorage.getItem(key);\r\n    } catch {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function setString(key: string, value: string): void {\r\n    try {\r\n        localStorage.setItem(key, value);\r\n    } catch (err) {\r\n        console.warn(`[storage-utils] setString failed for key=\"${key}\":`, err);\r\n    }\r\n}\r\n\r\nexport function remove(key: string): void {\r\n    try {\r\n        localStorage.removeItem(key);\r\n    } catch (err) {\r\n        console.warn(`[storage-utils] remove failed for key=\"${key}\":`, err);\r\n    }\r\n}\r\n\r\nexport function getJSON<T>(key: string, fallback: T): T {\r\n    try {\r\n        const raw = localStorage.getItem(key);\r\n        if (!raw) return fallback;\r\n        return JSON.parse(raw) as T;\r\n    } catch (err) {\r\n        console.warn(`[storage-utils] getJSON failed for key=\"${key}\":`, err);\r\n        return fallback;\r\n    }\r\n}\r\n\r\nexport function setJSON(key: string, value: unknown): void {\r\n    try {\r\n        localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (err) {\r\n        console.warn(`[storage-utils] setJSON failed for key=\"${key}\":`, err);\r\n    }\r\n}\r\n"]}