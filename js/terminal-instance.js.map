{"version":3,"file":"terminal-instance.js","sourceRoot":"","sources":["../src/ts/terminal-instance.ts"],"names":[],"mappings":"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","sourcesContent":["console.log('TerminalInstance (TS) loaded');\n\n/**\n * TerminalInstance - Multi-Instance capable terminal implementation\n * Ported to TypeScript with preserved global API and behavior.\n */\n(() => {\n  'use strict';\n\n  type DirEntry = {\n    type: 'directory';\n    contents: Record<string, FSNode>;\n  };\n  type FileEntry = {\n    type: 'file';\n    content: string;\n  };\n  type FSNode = DirEntry | FileEntry;\n\n  type BaseLike = {\n    container: HTMLElement | null;\n    updateState: (u: Record<string, unknown>) => void;\n  } & Record<string, unknown>;\n  type BaseCtor = new (cfg: Record<string, unknown>) => BaseLike & Record<string, unknown>;\n  const Base = (window as unknown as { BaseWindowInstance: BaseCtor }).BaseWindowInstance;\n\n  class TerminalInstance extends Base {\n    outputElement: HTMLElement | null;\n    inputElement: HTMLInputElement | null;\n    commandHistory: string[];\n    historyIndex: number;\n    currentPath: string;\n    fileSystem: Record<string, FSNode>;\n\n    constructor(config: Record<string, unknown>) {\n      super({\n        ...config,\n        type: 'terminal',\n      });\n\n      this.outputElement = null;\n      this.inputElement = null;\n      this.commandHistory = [];\n      this.historyIndex = -1;\n      this.currentPath = '~';\n\n      this.fileSystem = {\n        '~': {\n          type: 'directory',\n          contents: {\n            Desktop: { type: 'directory', contents: {} },\n            Documents: {\n              type: 'directory',\n              contents: {\n                'readme.txt': {\n                  type: 'file',\n                  content: 'Willkommen im Terminal!',\n                },\n              },\n            },\n            Downloads: { type: 'directory', contents: {} },\n            'welcome.txt': {\n              type: 'file',\n              content:\n                'Willkommen auf Marvins Portfolio-Website!\\n\\nGib \"help\" ein, um eine Liste verfügbarer Befehle zu sehen.',\n            },\n          },\n        },\n      };\n    }\n\n    // No override of _initializeState to avoid type modifier conflicts\n\n    protected render(): void {\n      if (!this.container) return;\n\n      const html = `\n                <div class=\"terminal-wrapper h-full flex flex-col bg-gray-900 text-green-400 font-mono text-sm\">\n                    <div class=\"terminal-output flex-1 overflow-y-auto p-4 space-y-1\" data-terminal-output>\n                    </div>\n                    <div class=\"terminal-input-line flex items-center px-4 py-2 border-t border-gray-700\">\n                        <span class=\"terminal-prompt text-blue-400\">guest@marvin:${this.currentPath}$</span>\n                        <input\n                            type=\"text\"\n                            class=\"flex-1 ml-2 bg-transparent outline-none text-green-400 terminal-input\"\n                            autocomplete=\"off\"\n                            spellcheck=\"false\"\n                            aria-label=\"Terminal input\"\n                            data-terminal-input\n                        />\n                    </div>\n                </div>\n            `;\n\n      this.container.innerHTML = html;\n      this.outputElement = this.container.querySelector('[data-terminal-output]');\n      this.inputElement = this.container.querySelector('[data-terminal-input]');\n\n      try {\n        this.showWelcomeMessage();\n      } catch {\n        /* noop */\n      }\n      if (this.inputElement && typeof this.inputElement.focus === 'function') {\n        this.inputElement.focus();\n      }\n    }\n\n    protected attachEventListeners(): void {\n      if (!this.inputElement) return;\n\n      this.inputElement.addEventListener('keydown', (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          const command = this.inputElement!.value.trim();\n          if (command) {\n            this.executeCommand(command);\n            this.commandHistory.push(command);\n            this.historyIndex = this.commandHistory.length;\n            this.updateState({ commandHistory: this.commandHistory });\n          }\n          this.inputElement!.value = '';\n          this.inputElement!.focus();\n        } else if (e.key === 'Tab') {\n          e.preventDefault();\n          this.handleTabCompletion();\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          if (this.historyIndex > 0) {\n            this.historyIndex--;\n            // noUncheckedIndexedAccess: array access may return undefined\n            const historyEntry = this.commandHistory[this.historyIndex];\n            if (historyEntry !== undefined) {\n              this.inputElement!.value = historyEntry;\n            }\n          }\n        } else if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          if (this.historyIndex < this.commandHistory.length - 1) {\n            this.historyIndex++;\n            // noUncheckedIndexedAccess: array access may return undefined\n            const historyEntry = this.commandHistory[this.historyIndex];\n            if (historyEntry !== undefined) {\n              this.inputElement!.value = historyEntry;\n            }\n          } else {\n            this.historyIndex = this.commandHistory.length;\n            this.inputElement!.value = '';\n          }\n        }\n      });\n    }\n\n    showWelcomeMessage(): void {\n      this.addOutput('Willkommen im Terminal! Gib \"help\" ein für verfügbare Befehle.', 'info');\n    }\n\n    handleTabCompletion(): void {\n      if (!this.inputElement) return;\n\n      const input = this.inputElement.value;\n      const [partialCmd, ...args] = input.split(' ');\n\n      // noUncheckedIndexedAccess: array destructuring may return undefined\n      if (partialCmd === undefined) return;\n\n      const availableCommands = ['help', 'clear', 'ls', 'pwd', 'cd', 'cat', 'echo', 'date', 'whoami'];\n\n      if (args.length === 0) {\n        const matches = availableCommands.filter((cmd) => cmd.startsWith(partialCmd));\n\n        if (matches.length === 1) {\n          const match = matches[0];\n          if (match !== undefined) {\n            this.inputElement.value = match + ' ';\n          }\n        } else if (matches.length > 1) {\n          this.addOutput(`guest@marvin:${this.currentPath}$ ${input}`, 'command');\n          this.addOutput(matches.join('  '), 'info');\n          const commonPrefix = this.findCommonPrefix(matches);\n          if (commonPrefix.length > partialCmd.length) {\n            this.inputElement.value = commonPrefix;\n          }\n        }\n      } else {\n        if (partialCmd === 'cd' || partialCmd === 'cat') {\n          this.completePathArgument(partialCmd, args[0] || '');\n        }\n      }\n    }\n\n    findCommonPrefix(strings: string[]): string {\n      if (!strings.length) return '';\n      // noUncheckedIndexedAccess: array access may return undefined\n      const firstString = strings[0];\n      if (strings.length === 1) return firstString ?? '';\n      if (firstString === undefined) return '';\n\n      let prefix: string = firstString;\n      for (let i = 1; i < strings.length; i++) {\n        const currentString = strings[i];\n        if (currentString === undefined) continue;\n\n        while (currentString.indexOf(prefix) !== 0) {\n          prefix = prefix.substring(0, prefix.length - 1);\n          if (!prefix) return '';\n        }\n      }\n      return prefix;\n    }\n\n    completePathArgument(cmd: 'cd' | 'cat', partial: string): void {\n      const currentDir = this.resolvePath(this.currentPath);\n      if (!currentDir || currentDir.type !== 'directory') return;\n\n      const items = Object.keys(currentDir.contents);\n      let matches: string[];\n      if (cmd === 'cd') {\n        matches = items.filter(\n          (item) => (currentDir.contents[item] as FSNode).type === 'directory' && item.startsWith(partial)\n        );\n      } else {\n        matches = items.filter(\n          (item) => (currentDir.contents[item] as FSNode).type === 'file' && item.startsWith(partial)\n        );\n      }\n\n      if (matches.length === 1) {\n        this.inputElement!.value = `${cmd} ${matches[0]}`;\n      } else if (matches.length > 1) {\n        this.addOutput(`guest@marvin:${this.currentPath}$ ${this.inputElement!.value}`, 'command');\n        const formatted = matches.map((item) => {\n          // noUncheckedIndexedAccess: dictionary access may return undefined\n          const itemObj = currentDir.contents[item] as FSNode | undefined;\n          if (!itemObj) return item;\n          const prefix = itemObj.type === 'directory' ? '📁 ' : '📄 ';\n          return prefix + item;\n        });\n        this.addOutput(formatted.join('  '), 'info');\n        const commonPrefix = this.findCommonPrefix(matches);\n        if (commonPrefix.length > partial.length) {\n          this.inputElement!.value = `${cmd} ${commonPrefix}`;\n        }\n      }\n    }\n\n    executeCommand(command: string): void {\n      this.addOutput(`guest@marvin:${this.currentPath}$ ${command}`, 'command');\n      const [cmd, ...args] = command.split(' ');\n\n      // noUncheckedIndexedAccess: array destructuring may return undefined\n      if (cmd === undefined) return;\n\n      const commands: Record<string, () => void> = {\n        help: () => this.showHelp(),\n        clear: () => this.clearOutput(),\n        ls: () => this.listDirectory(args[0]),\n        pwd: () => this.printWorkingDirectory(),\n        cd: () => this.changeDirectory(args[0]),\n        cat: () => this.catFile(args[0]),\n        echo: () => this.echo(args.join(' ')),\n        date: () => this.showDate(),\n        whoami: () => this.addOutput('guest', 'output'),\n      };\n\n      const commandFn = commands[cmd];\n      if (commandFn !== undefined) {\n        commandFn();\n      } else {\n        this.addOutput(`Befehl nicht gefunden: ${cmd}. Gib \"help\" ein für verfügbare Befehle.`, 'error');\n      }\n    }\n\n    addOutput(text: string, type: 'command' | 'output' | 'error' | 'info' = 'output'): void {\n      if (!this.outputElement) return;\n      const line = document.createElement('div');\n      line.className = `terminal-line terminal-${type}`;\n      const colorMap: Record<string, string> = {\n        command: 'text-blue-400',\n        output: 'text-green-400',\n        error: 'text-red-400',\n        info: 'text-yellow-400',\n      };\n      line.className += ` ${colorMap[type] || 'text-green-400'}`;\n      line.textContent = text;\n      this.outputElement.appendChild(line);\n      this.outputElement.scrollTop = this.outputElement.scrollHeight;\n    }\n\n    clearOutput(): void {\n      if (this.outputElement) this.outputElement.innerHTML = '';\n    }\n\n    showHelp(): void {\n      const helpText = [\n        'Verfügbare Befehle:',\n        '  help         - Zeige diese Hilfe',\n        '  clear        - Lösche Ausgabe',\n        '  ls [path]    - Liste Dateien (optional mit Pfad)',\n        '  pwd          - Zeige aktuelles Verzeichnis',\n        '  cd <dir>     - Wechsle Verzeichnis (., .., ~, relative/absolute Pfade)',\n        '  cat <file>   - Zeige Dateiinhalt (auch mit Pfad: cat ./file oder cat dir/file)',\n        '  echo <text>  - Gebe Text aus',\n        '  date         - Zeige Datum/Zeit',\n        '  whoami       - Zeige Benutzername',\n        '',\n        'Pfad-Beispiele:',\n        '  .            - Aktuelles Verzeichnis',\n        '  ..           - Übergeordnetes Verzeichnis',\n        '  ~            - Home-Verzeichnis',\n        '  ./file       - Datei im aktuellen Verzeichnis',\n        '  ../file      - Datei im übergeordneten Verzeichnis',\n        '  dir/subdir   - Unterverzeichnis (relativ)',\n        '',\n        'Tipps:',\n        '  ↑/↓          - Durchsuche Befehlshistorie',\n        '  Tab          - Vervollständige Befehle und Pfade',\n      ];\n      helpText.forEach((l) => this.addOutput(l, 'info'));\n    }\n\n    listDirectory(path?: string): void {\n      const targetPath = path ? this.normalizePath(path) : this.currentPath;\n      const targetDir = this.resolvePath(targetPath);\n      if (!targetDir) {\n        this.addOutput(`Verzeichnis nicht gefunden: ${path || targetPath}`, 'error');\n        return;\n      }\n      if (targetDir.type !== 'directory') {\n        this.addOutput(`${path || targetPath} ist kein Verzeichnis`, 'error');\n        return;\n      }\n      const items = Object.keys(targetDir.contents);\n      if (items.length === 0) this.addOutput('(leer)', 'output');\n      else {\n        items.forEach((item) => {\n          // noUncheckedIndexedAccess: dictionary access may return undefined\n          const itemObj = targetDir.contents[item];\n          if (!itemObj) return;\n          const prefix = itemObj.type === 'directory' ? '📁 ' : '📄 ';\n          this.addOutput(prefix + item, 'output');\n        });\n      }\n    }\n\n    printWorkingDirectory(): void {\n      this.addOutput(this.currentPath, 'output');\n    }\n\n    changeDirectory(path?: string): void {\n      if (!path) {\n        this.currentPath = '~';\n        this.updatePrompt();\n        return;\n      }\n      const newPath = this.normalizePath(path);\n      const resolved = this.resolvePath(newPath);\n      if (!resolved) {\n        this.addOutput(`Verzeichnis nicht gefunden: ${path}`, 'error');\n        return;\n      }\n      if (resolved.type !== 'directory') {\n        this.addOutput(`${path} ist kein Verzeichnis`, 'error');\n        return;\n      }\n      this.currentPath = newPath;\n      this.updatePrompt();\n      this.updateState({ currentPath: this.currentPath });\n    }\n\n    catFile(filename?: string): void {\n      if (!filename) {\n        this.addOutput('Dateiname fehlt', 'error');\n        return;\n      }\n      if (filename.includes('/')) {\n        const normalizedPath = this.normalizePath(filename);\n        const pathParts = normalizedPath.split('/').filter((p) => p !== '');\n        const fileName = pathParts.pop()!;\n        const dirPath = pathParts.length > 0 ? pathParts.join('/') : '~';\n        const dir = this.resolvePath(dirPath);\n        if (!dir) {\n          this.addOutput(`Verzeichnis nicht gefunden: ${dirPath}`, 'error');\n          return;\n        }\n        const file = (dir as DirEntry).contents?.[fileName] as FSNode | undefined;\n        if (!file) this.addOutput(`Datei nicht gefunden: ${filename}`, 'error');\n        else if (file.type !== 'file') this.addOutput(`${filename} ist keine Datei`, 'error');\n        else this.addOutput(file.content, 'output');\n      } else {\n        const currentDir = this.resolvePath(this.currentPath) as DirEntry | null;\n        const file = currentDir?.contents?.[filename] as FSNode | undefined;\n        if (!file) this.addOutput(`Datei nicht gefunden: ${filename}`, 'error');\n        else if (file.type !== 'file') this.addOutput(`${filename} ist keine Datei`, 'error');\n        else this.addOutput(file.content, 'output');\n      }\n    }\n\n    echo(text: string): void {\n      this.addOutput(text, 'output');\n    }\n\n    showDate(): void {\n      this.addOutput(new Date().toString(), 'output');\n    }\n\n    updatePrompt(): void {\n      const prompt = this.container?.querySelector('.terminal-prompt') as HTMLElement | null;\n      if (prompt) {\n        prompt.textContent = `guest@marvin:${this.currentPath}$`;\n      }\n    }\n\n    resolvePath(path: string | undefined | null): FSNode | null {\n      if (!path) return null;\n      const normalizedPath = this.normalizePath(path);\n\n      // noUncheckedIndexedAccess: dictionary access may return undefined\n      const homeNode = this.fileSystem['~'];\n      if (normalizedPath === '~') return homeNode ?? null;\n      if (homeNode === undefined) return null;\n\n      let current: FSNode = homeNode;\n      const parts = normalizedPath\n        .replace(/^~\\/?/, '')\n        .split('/')\n        .filter((p) => p);\n      for (const part of parts) {\n        if ((current as DirEntry).type !== 'directory') return null;\n        if (!(current as DirEntry).contents || !(current as DirEntry).contents[part]) return null;\n        // noUncheckedIndexedAccess: dictionary access may return undefined\n        const nextNode = (current as DirEntry).contents[part];\n        if (nextNode === undefined) return null;\n        current = nextNode;\n      }\n      return current;\n    }\n\n    normalizePath(path: string): string {\n      if (!path || path === '~') return '~';\n      if (path === '.') return this.currentPath;\n      if (path === './') return this.currentPath;\n      let workingPath: string;\n      if (path.startsWith('~')) workingPath = path;\n      else if (path.startsWith('/')) workingPath = '~' + path;\n      else workingPath = this.currentPath === '~' ? `~/${path}` : `${this.currentPath}/${path}`;\n      const parts = workingPath.split('/').filter((p) => p !== '' && p !== '.');\n      const resolved: string[] = [];\n      for (const part of parts) {\n        if (part === '..') {\n          if (resolved.length > 0 && resolved[resolved.length - 1] !== '~') {\n            resolved.pop();\n          }\n        } else {\n          resolved.push(part);\n        }\n      }\n      if (resolved.length === 0 || (resolved.length === 1 && resolved[0] === '~')) return '~';\n      if (resolved[0] !== '~') resolved.unshift('~');\n      return resolved.join('/');\n    }\n\n    parentPath(path: string): string {\n      const parts = path.split('/').filter(Boolean);\n      parts.pop();\n      return parts.length > 0 ? '/' + parts.join('/') : '~';\n    }\n\n    serialize(): Record<string, unknown> {\n      const baseSerialize = (Base.prototype as unknown as {\n        serialize: () => Record<string, unknown>;\n      }).serialize;\n      const baseObj = baseSerialize.call(this) as Record<string, unknown>;\n      return {\n        ...baseObj,\n        currentPath: this.currentPath,\n        commandHistory: this.commandHistory,\n        fileSystem: this.fileSystem,\n      } as Record<string, unknown>;\n    }\n\n    deserialize(data: Record<string, unknown>): void {\n      const baseDeserialize = (Base.prototype as unknown as {\n        deserialize: (d: Record<string, unknown>) => void;\n      }).deserialize;\n      baseDeserialize.call(this, data);\n      const d = data as Record<string, unknown> & {\n        currentPath?: string;\n        commandHistory?: string[];\n        fileSystem?: Record<string, FSNode>;\n      };\n      if (d.currentPath) {\n        this.currentPath = d.currentPath;\n        this.updatePrompt();\n      }\n      if (d.commandHistory) {\n        this.commandHistory = d.commandHistory;\n        this.historyIndex = this.commandHistory.length;\n      }\n      if (d.fileSystem) {\n        this.fileSystem = d.fileSystem;\n      }\n    }\n\n    focus(): void {\n      const baseFocus = (Base.prototype as unknown as { focus: () => void }).focus;\n      baseFocus.call(this);\n      if (this.inputElement) this.inputElement.focus();\n    }\n  }\n\n  (window as unknown as { TerminalInstance: typeof TerminalInstance }).TerminalInstance = TerminalInstance;\n\n  // Create Terminal Instance Manager\n  const G = window as unknown as Record<string, unknown>;\n  type InstanceManagerCtor = new (cfg: Record<string, unknown>) => unknown;\n  const InstanceManager = (G['InstanceManager'] as unknown) as InstanceManagerCtor | undefined;\n  if (InstanceManager) {\n  (G['TerminalInstanceManager'] as unknown) = new (InstanceManager as InstanceManagerCtor)({\n      type: 'terminal',\n      instanceClass: TerminalInstance,\n      maxInstances: 0,\n      createContainer: function (instanceId: string): HTMLElement | null {\n        const terminalModalContainer = document.getElementById('terminal-container');\n        if (!terminalModalContainer) {\n          console.error('Terminal container not found');\n          return null;\n        }\n        const container = document.createElement('div');\n        container.id = `${instanceId}-container`;\n        container.className = 'terminal-instance-container h-full';\n        container.classList.add('hidden');\n        terminalModalContainer.appendChild(container);\n        return container;\n      },\n    });\n  }\n})();\n"]}