{"version":3,"file":"storage.js","sourceRoot":"","sources":["../src/ts/storage.ts"],"names":[],"mappings":"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","sourcesContent":["// ============================================================================\r\n// src/ts/storage.ts — Persistence & State Management Module (TypeScript)\r\n// Mirrors js/storage.js API and preserves global export window.StorageSystem\r\n// ============================================================================\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    console.log('✅ StorageSystem (TS) loaded');\r\n\r\n    // ===== Types =====\r\n    type FinderState = { repo: string; path?: string } | null;\r\n    type Positions = Record<\r\n        string,\r\n        { left: string; top: string; width: string; height: string; position: string }\r\n    >;\r\n\r\n    // ===== Module Dependencies / Constants =====\r\n    const w = window as unknown as Record<string, unknown>;\r\n    const APP_CONSTANTS = (w.APP_CONSTANTS as Record<string, unknown>) || {};\r\n\r\n    const FINDER_STATE_KEY = (APP_CONSTANTS.FINDER_STATE_STORAGE_KEY as string) || 'finderState';\r\n    const OPEN_MODALS_KEY = 'openModals';\r\n    const MODAL_POSITIONS_KEY = 'modalPositions';\r\n\r\n    const getModalIds = (): string[] => {\r\n        const ac = (w.APP_CONSTANTS as Record<string, unknown> | undefined) || undefined;\r\n        const v = ac && (ac['MODAL_IDS'] as unknown);\r\n        return Array.isArray(v) ? (v as string[]) : [];\r\n    };\r\n    const getTransientModalIds = (): Set<string> => {\r\n        const ac = (w.APP_CONSTANTS as Record<string, unknown> | undefined) || undefined;\r\n        const v = ac && (ac['TRANSIENT_MODAL_IDS'] as unknown);\r\n        return v instanceof Set ? (v as Set<string>) : new Set<string>();\r\n    };\r\n\r\n    // ===== Finder State Persistence =====\r\n\r\n    function readFinderState(): FinderState {\r\n        try {\r\n            const raw = localStorage.getItem(FINDER_STATE_KEY);\r\n            if (!raw) return null;\r\n            const parsed = JSON.parse(raw);\r\n            if (!parsed || typeof parsed !== 'object') return null;\r\n            const po = parsed as Record<string, unknown>;\r\n            const repo = typeof po.repo === 'string' ? po.repo.trim() : '';\r\n            if (!repo) return null;\r\n            return {\r\n                repo,\r\n                path: typeof po.path === 'string' ? po.path : '',\r\n            };\r\n        } catch (err) {\r\n            console.warn('Finder state konnte nicht gelesen werden:', err);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function writeFinderState(state: { repo: string; path?: string } | null | undefined): void {\r\n        if (!state || typeof state.repo !== 'string' || !state.repo) {\r\n            clearFinderState();\r\n            return;\r\n        }\r\n        const payload = {\r\n            repo: state.repo,\r\n            path: typeof state.path === 'string' ? state.path : '',\r\n        };\r\n        try {\r\n            localStorage.setItem(FINDER_STATE_KEY, JSON.stringify(payload));\r\n        } catch (err) {\r\n            console.warn('Finder state konnte nicht gespeichert werden:', err);\r\n        }\r\n    }\r\n\r\n    function clearFinderState(): void {\r\n        try {\r\n            localStorage.removeItem(FINDER_STATE_KEY);\r\n        } catch (err) {\r\n            console.warn('Finder state konnte nicht gelöscht werden:', err);\r\n        }\r\n    }\r\n\r\n    // ===== Open Modals Persistence =====\r\n\r\n    function saveOpenModals(): void {\r\n        const modalIds = getModalIds();\r\n        const transientModalIds = getTransientModalIds();\r\n\r\n        const openModals = modalIds.filter(id => {\r\n            if (transientModalIds.has(id)) return false;\r\n            const el = document.getElementById(id) as HTMLElement | null;\r\n            if (!el) return false;\r\n            const minimized = el.dataset && el.dataset.minimized === 'true';\r\n            return !el.classList.contains('hidden') || minimized;\r\n        });\r\n\r\n        try {\r\n            localStorage.setItem(OPEN_MODALS_KEY, JSON.stringify(openModals));\r\n        } catch (err) {\r\n            console.warn('Open modals konnte nicht gespeichert werden:', err);\r\n        }\r\n    }\r\n\r\n    function restoreOpenModals(): void {\r\n        const transientModalIds = getTransientModalIds();\r\n        let openModals: string[] = [];\r\n\r\n        try {\r\n            openModals = JSON.parse(localStorage.getItem(OPEN_MODALS_KEY) || '[]');\r\n        } catch (err) {\r\n            console.warn('Open modals konnte nicht gelesen werden:', err);\r\n            return;\r\n        }\r\n\r\n        openModals.forEach(id => {\r\n            // Skip transient modals\r\n            if (transientModalIds.has(id)) return;\r\n\r\n            // Validate modal exists in DOM\r\n            const el = document.getElementById(id);\r\n            if (!el) {\r\n                console.warn(`Skipping restore of modal \"${id}\": element not found in DOM`);\r\n                return;\r\n            }\r\n\r\n            // Validate modal is registered in WindowManager (if available)\r\n            const WindowManager = w['WindowManager'] as\r\n                | { getConfig?: (id: string) => unknown }\r\n                | undefined;\r\n            if (WindowManager && typeof WindowManager.getConfig === 'function') {\r\n                const config = WindowManager.getConfig(id);\r\n                if (!config) {\r\n                    console.warn(\r\n                        `Skipping restore of modal \"${id}\": not registered in WindowManager`\r\n                    );\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Prefer WindowManager.open() to ensure initHandler/openHandler are called\r\n            const wm = w['WindowManager'] as { open?: (id: string) => void } | undefined;\r\n            if (wm && typeof wm.open === 'function') {\r\n                try {\r\n                    wm.open(id);\r\n                } catch (err) {\r\n                    console.warn(`Error restoring modal \"${id}\" via WindowManager:`, err);\r\n                    // Fallback: try direct dialog open\r\n                    const dialogs = w['dialogs'] as Record<string, unknown> | undefined;\r\n                    const dialogInstance =\r\n                        dialogs && (dialogs[id] as Record<string, unknown> | null);\r\n                    const openFn =\r\n                        dialogInstance && (dialogInstance['open'] as (() => void) | undefined);\r\n\r\n                    if (typeof openFn === 'function') {\r\n                        try {\r\n                            openFn();\r\n                        } catch (openErr) {\r\n                            console.warn(`Error restoring modal \"${id}\" via dialog.open():`, openErr);\r\n                            // Final fallback: show element directly\r\n                            const domUtils = (\r\n                                w as unknown as { DOMUtils?: { show?: (el: Element) => void } }\r\n                            ).DOMUtils;\r\n                            if (domUtils && typeof domUtils.show === 'function') {\r\n                                domUtils.show(el);\r\n                            } else {\r\n                                el.classList.remove('hidden');\r\n                            }\r\n                        }\r\n                    } else {\r\n                        // No dialog instance, show element directly\r\n                        const domUtils = (\r\n                            w as unknown as { DOMUtils?: { show?: (el: Element) => void } }\r\n                        ).DOMUtils;\r\n                        if (domUtils && typeof domUtils.show === 'function') {\r\n                            domUtils.show(el);\r\n                        } else {\r\n                            el.classList.remove('hidden');\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // No WindowManager, fallback to dialog instance\r\n                const dialogs = w['dialogs'] as Record<string, unknown> | undefined;\r\n                const dialogInstance = dialogs && (dialogs[id] as Record<string, unknown> | null);\r\n                const openFn =\r\n                    dialogInstance && (dialogInstance['open'] as (() => void) | undefined);\r\n\r\n                if (typeof openFn === 'function') {\r\n                    try {\r\n                        openFn();\r\n                    } catch (err) {\r\n                        console.warn(`Error restoring modal \"${id}\":`, err);\r\n                        // Fallback: show element directly\r\n                        const domUtils = (\r\n                            w as unknown as { DOMUtils?: { show?: (el: Element) => void } }\r\n                        ).DOMUtils;\r\n                        if (domUtils && typeof domUtils.show === 'function') {\r\n                            domUtils.show(el);\r\n                        } else {\r\n                            el.classList.remove('hidden');\r\n                        }\r\n                    }\r\n                } else {\r\n                    // No dialog instance, show element directly\r\n                    const domUtils = (\r\n                        w as unknown as { DOMUtils?: { show?: (el: Element) => void } }\r\n                    ).DOMUtils;\r\n                    if (domUtils && typeof domUtils.show === 'function') {\r\n                        domUtils.show(el);\r\n                    } else {\r\n                        el.classList.remove('hidden');\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        // Update dock indicators and program label (if available)\r\n        const updateDockIndicators = w['updateDockIndicators'] as (() => void) | undefined;\r\n        if (typeof updateDockIndicators === 'function') updateDockIndicators();\r\n        const updateProgramLabelByTopModal = w['updateProgramLabelByTopModal'] as\r\n            | (() => void)\r\n            | undefined;\r\n        if (typeof updateProgramLabelByTopModal === 'function') updateProgramLabelByTopModal();\r\n    }\r\n\r\n    // ===== Window Positions & Sizes =====\r\n\r\n    function getDialogWindowElement(modal: HTMLElement | null): HTMLElement | null {\r\n        if (!modal) return null;\r\n        return (modal.querySelector('.autopointer') as HTMLElement | null) || modal;\r\n    }\r\n\r\n    function saveWindowPositions(): void {\r\n        const modalIds = getModalIds();\r\n        const transientModalIds = getTransientModalIds();\r\n        const positions: Positions = {};\r\n\r\n        modalIds.forEach(id => {\r\n            if (transientModalIds.has(id)) return;\r\n            const el = document.getElementById(id) as HTMLElement | null;\r\n            const windowEl = getDialogWindowElement(el);\r\n            if (el && windowEl) {\r\n                positions[id] = {\r\n                    left: windowEl.style.left || '',\r\n                    top: windowEl.style.top || '',\r\n                    width: windowEl.style.width || '',\r\n                    height: windowEl.style.height || '',\r\n                    position: windowEl.style.position || '',\r\n                };\r\n            }\r\n        });\r\n\r\n        try {\r\n            localStorage.setItem(MODAL_POSITIONS_KEY, JSON.stringify(positions));\r\n        } catch (err) {\r\n            console.warn('Window positions konnte nicht gespeichert werden:', err);\r\n        }\r\n    }\r\n\r\n    function restoreWindowPositions(): void {\r\n        const transientModalIds = getTransientModalIds();\r\n        let positions: Positions = {};\r\n\r\n        try {\r\n            positions = JSON.parse(localStorage.getItem(MODAL_POSITIONS_KEY) || '{}');\r\n        } catch (err) {\r\n            console.warn('Window positions konnte nicht gelesen werden:', err);\r\n            return;\r\n        }\r\n\r\n        Object.keys(positions).forEach(id => {\r\n            if (transientModalIds.has(id)) return;\r\n            const el = document.getElementById(id) as HTMLElement | null;\r\n            const windowEl = getDialogWindowElement(el);\r\n            if (el && windowEl) {\r\n                const stored = positions[id];\r\n                // noUncheckedIndexedAccess: positions[id] may be undefined\r\n                if (!stored) return;\r\n\r\n                if (stored.position) {\r\n                    windowEl.style.position = stored.position;\r\n                } else if (stored.left || stored.top) {\r\n                    windowEl.style.position = 'fixed';\r\n                }\r\n                if (stored.left) windowEl.style.left = stored.left;\r\n                if (stored.top) windowEl.style.top = stored.top;\r\n                if (stored.width) windowEl.style.width = stored.width;\r\n                if (stored.height) windowEl.style.height = stored.height;\r\n            }\r\n\r\n            const clampWindowToMenuBar = w['clampWindowToMenuBar'] as\r\n                | ((el: HTMLElement | null) => void)\r\n                | undefined;\r\n            if (typeof clampWindowToMenuBar === 'function') {\r\n                clampWindowToMenuBar(windowEl);\r\n            }\r\n        });\r\n    }\r\n\r\n    // ===== Layout Reset =====\r\n\r\n    function resetWindowLayout(): void {\r\n        const modalIds = getModalIds();\r\n\r\n        modalIds.forEach(id => {\r\n            const modal = document.getElementById(id) as HTMLElement | null;\r\n            const windowEl = getDialogWindowElement(modal);\r\n            if (modal) {\r\n                modal.style.zIndex = '';\r\n            }\r\n            if (windowEl) {\r\n                windowEl.style.left = '';\r\n                windowEl.style.top = '';\r\n                windowEl.style.width = '';\r\n                windowEl.style.height = '';\r\n                windowEl.style.position = '';\r\n                windowEl.style.zIndex = '';\r\n            }\r\n        });\r\n\r\n        if (typeof w['topZIndex'] !== 'undefined') {\r\n            w['topZIndex'] = 1000 as unknown;\r\n        }\r\n\r\n        try {\r\n            localStorage.removeItem(MODAL_POSITIONS_KEY);\r\n        } catch (err) {\r\n            console.warn('Modal positions konnte nicht gelöscht werden:', err);\r\n        }\r\n\r\n        const hideMenuDropdowns = w['hideMenuDropdowns'] as (() => void) | undefined;\r\n        if (typeof hideMenuDropdowns === 'function') hideMenuDropdowns();\r\n\r\n        const syncTopZIndexWithDOM = w['syncTopZIndexWithDOM'] as (() => void) | undefined;\r\n        if (typeof syncTopZIndexWithDOM === 'function') syncTopZIndexWithDOM();\r\n\r\n        const dialogs = w['dialogs'] as Record<string, unknown> | undefined;\r\n        if (dialogs) {\r\n            Object.values(dialogs).forEach(dialog => {\r\n                const enforce = (dialog as Record<string, unknown>)['enforceMenuBarBoundary'] as\r\n                    | (() => void)\r\n                    | undefined;\r\n                if (typeof enforce === 'function') enforce();\r\n            });\r\n        }\r\n\r\n        // Clear finder state\r\n        clearFinderState();\r\n\r\n        const updateProgramLabelByTopModal = w['updateProgramLabelByTopModal'] as\r\n            | (() => void)\r\n            | undefined;\r\n        if (typeof updateProgramLabelByTopModal === 'function') updateProgramLabelByTopModal();\r\n    }\r\n\r\n    // ===== Public API (global) =====\r\n\r\n    const api = {\r\n        // Finder state\r\n        readFinderState,\r\n        writeFinderState,\r\n        clearFinderState,\r\n\r\n        // Open modals\r\n        saveOpenModals,\r\n        restoreOpenModals,\r\n\r\n        // Window positions\r\n        saveWindowPositions,\r\n        restoreWindowPositions,\r\n        getDialogWindowElement,\r\n\r\n        // Layout reset\r\n        resetWindowLayout,\r\n    };\r\n\r\n    w['StorageSystem'] = api;\r\n})();\r\n\r\n"]}