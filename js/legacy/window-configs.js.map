{"version":3,"file":"window-configs.js","sourceRoot":"","sources":["../../src/ts/legacy/window-configs.js"],"names":[],"mappings":"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","sourcesContent":["console.log('Window Configurations loaded');\n\n/**\n * Window-Konfigurationen\n *\n * Hier werden alle Fenster/Modals definiert.\n * Um ein neues Fenster hinzuzuf√ºgen, einfach einen neuen Eintrag hier anlegen!\n */\n(function () {\n    'use strict';\n\n    const windowConfigurations = [\n        {\n            id: 'finder-modal',\n            type: 'persistent',\n            programKey: 'programs.finder',\n            icon: './img/sucher.png',\n            closeButtonId: 'close-finder-modal',\n            metadata: {\n                initHandler: function () {\n                    // Create first Finder instance when modal opens if none exist\n                    if (\n                        window.FinderInstanceManager &&\n                        !window.FinderInstanceManager.hasInstances()\n                    ) {\n                        const inst = window.FinderInstanceManager.createInstance({\n                            title: 'Finder',\n                        });\n                        // Ensure visibility and UI sync (tab bar + content) after fresh open\n                        try {\n                            const active =\n                                inst && inst.instanceId\n                                    ? inst\n                                    : window.FinderInstanceManager.getActiveInstance?.();\n                            if (active && window.MultiInstanceIntegration) {\n                                // Show the active instance content\n                                window.MultiInstanceIntegration.showInstance(\n                                    'finder',\n                                    active.instanceId\n                                );\n                                // If available, refresh the tab UI\n                                const integ =\n                                    window.MultiInstanceIntegration.getIntegration?.('finder');\n                                integ?.tabManager?.addTab?.(active);\n\n                                // Force tab UI refresh to ensure tab is rendered\n                                if (integ?.tabManager?.controller?.refresh) {\n                                    integ.tabManager.controller.refresh();\n                                }\n                            }\n                        } catch (e) {\n                            console.warn('Finder init post-create sync failed:', e);\n                        }\n                    }\n                },\n                openHandler: function () {\n                    // On every open: ensure at least one Finder instance is available and visible\n                    if (\n                        window.FinderInstanceManager &&\n                        !window.FinderInstanceManager.hasInstances()\n                    ) {\n                        const inst = window.FinderInstanceManager.createInstance({\n                            title: 'Finder',\n                        });\n                        try {\n                            const activeId =\n                                (inst && inst.instanceId) ||\n                                window.FinderInstanceManager.getActiveInstance?.()?.instanceId;\n                            if (activeId && window.MultiInstanceIntegration) {\n                                window.MultiInstanceIntegration.showInstance('finder', activeId);\n                                const integ =\n                                    window.MultiInstanceIntegration.getIntegration?.('finder');\n                                if (\n                                    integ &&\n                                    integ.tabManager &&\n                                    typeof integ.tabManager.addTab === 'function'\n                                ) {\n                                    integ.tabManager.addTab(inst || { instanceId: activeId });\n                                }\n                                // Force tab UI refresh to ensure tab is rendered\n                                if (integ?.tabManager?.controller?.refresh) {\n                                    integ.tabManager.controller.refresh();\n                                }\n                            }\n                        } catch (e) {\n                            console.warn('Finder open post-create sync failed:', e);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'launchpad-modal',\n            type: 'persistent',\n            programKey: 'programs.launchpad',\n            icon: './img/launchpad.png',\n            closeButtonId: 'close-launchpad-modal',\n            metadata: {\n                skipMenubarUpdate: true, // Don't update menubar when launchpad is focused\n                initHandler: function () {\n                    // Initialize Launchpad module if not already done\n                    if (window.LaunchpadSystem && !window.LaunchpadSystem.container) {\n                        const container = document.getElementById('launchpad-container');\n                        if (container) {\n                            window.LaunchpadSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'projects-modal',\n            type: 'persistent',\n            programKey: 'programs.projects',\n            icon: './img/sucher.png',\n            closeButtonId: 'close-projects-modal',\n        },\n        {\n            id: 'about-modal',\n            type: 'persistent',\n            programKey: 'programs.about',\n            icon: './img/profil.jpg',\n            closeButtonId: 'close-about-modal',\n        },\n        {\n            id: 'settings-modal',\n            type: 'persistent',\n            programKey: 'programs.settings',\n            icon: './img/settings.png',\n            closeButtonId: 'close-settings-modal',\n            metadata: {\n                initHandler: function () {\n                    // Initialize settings module if not already done\n                    if (window.SettingsSystem && !window.SettingsSystem.container) {\n                        const container = document.getElementById('settings-container');\n                        if (container) {\n                            window.SettingsSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'text-modal',\n            type: 'persistent',\n            programKey: 'programs.text',\n            icon: './img/notepad.png',\n            closeButtonId: 'close-text-modal',\n            metadata: {\n                initHandler: function () {\n                    // Primary: Create first Text Editor instance when modal opens if none exist\n                    if (\n                        window.TextEditorInstanceManager &&\n                        !window.TextEditorInstanceManager.hasInstances()\n                    ) {\n                        window.TextEditorInstanceManager.createInstance({\n                            title: 'Editor',\n                        });\n                    }\n                    // Fallback: Initialize old text editor module if instance manager not available\n                    else if (window.TextEditorSystem && !window.TextEditorSystem.container) {\n                        const container = document.getElementById('text-editor-container');\n                        if (container) {\n                            window.TextEditorSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'image-modal',\n            type: 'persistent',\n            programKey: 'programs.photos',\n            icon: './img/photos-app-icon.svg',\n            closeButtonId: 'close-image-modal',\n            metadata: {\n                initHandler: function () {\n                    // Initialize Photos App when modal opens\n                    if (window.PhotosApp && typeof window.PhotosApp.init === 'function') {\n                        window.PhotosApp.init();\n                    }\n                },\n            },\n        },\n        {\n            id: 'program-info-modal',\n            type: 'transient',\n            programKey: 'programs.default',\n            icon: './img/sucher.png',\n            closeButtonId: 'close-program-info-modal',\n        },\n        {\n            id: 'terminal-modal',\n            type: 'persistent',\n            programKey: 'programs.terminal',\n            icon: './img/terminal.png',\n            closeButtonId: 'close-terminal-modal',\n            metadata: {\n                initHandler: function () {\n                    // Primary: Create first Terminal instance when modal opens if none exist\n                    if (\n                        window.TerminalInstanceManager &&\n                        !window.TerminalInstanceManager.hasInstances()\n                    ) {\n                        window.TerminalInstanceManager.createInstance({\n                            title: 'Terminal',\n                        });\n                    }\n                    // Fallback: Initialize old terminal module if instance manager not available\n                    else if (window.TerminalSystem && !window.TerminalSystem.container) {\n                        const container = document.getElementById('terminal-container');\n                        if (container) {\n                            window.TerminalSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n    ];\n\n    // Automatisch alle Fenster registrieren wenn WindowManager verf√ºgbar ist\n    if (window.WindowManager) {\n        window.WindowManager.registerAll(windowConfigurations);\n        console.log(`Registered ${windowConfigurations.length} windows`);\n    } else {\n        // Fallback: Warte auf WindowManager\n        document.addEventListener('DOMContentLoaded', () => {\n            if (window.WindowManager) {\n                window.WindowManager.registerAll(windowConfigurations);\n                console.log(`Registered ${windowConfigurations.length} windows (delayed)`);\n            }\n        });\n    }\n\n    // Export f√ºr Zugriff von au√üen\n    window.windowConfigurations = windowConfigurations;\n})();\n"]}