{"version":3,"file":"logger.js","sourceRoot":"","sources":["../src/ts/logger.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * src/ts/logger.ts\n * Typed port of the legacy `js/logger.js`.\n */\n\nexport type LogLevelName = 'ERROR' | 'WARN' | 'INFO' | 'DEBUG' | 'TRACE';\n\nconst LOG_LEVELS: Record<LogLevelName, number> = {\n    ERROR: 0,\n    WARN: 1,\n    INFO: 2,\n    DEBUG: 3,\n    TRACE: 4,\n};\n\nconst LOG_COLORS: Record<LogLevelName, string> = {\n    ERROR: '#ff0000',\n    WARN: '#ff9800',\n    INFO: '#2196f3',\n    DEBUG: '#9c27b0',\n    TRACE: '#607d8b',\n};\n\nexport class Logger {\n    level: number;\n    enabledCategories: Set<string>;\n    format: 'compact' | 'detailed';\n\n    constructor() {\n        this.level = this.isDevelopment() ? LOG_LEVELS.TRACE : LOG_LEVELS.WARN;\n        this.enabledCategories = new Set(['*']);\n        this.format = 'compact';\n    }\n\n    isDevelopment(): boolean {\n        try {\n            return (\n                location.hostname === 'localhost' ||\n                location.hostname === '127.0.0.1' ||\n                location.port !== ''\n            );\n        } catch {\n            return false;\n        }\n    }\n\n    setLevel(level: LogLevelName | number) {\n        if (typeof level === 'string') {\n            this.level = LOG_LEVELS[level.toUpperCase() as LogLevelName] ?? LOG_LEVELS.INFO;\n        } else {\n            this.level = level;\n        }\n    }\n\n    enableCategory(category: string) {\n        if (category === '*') {\n            this.enabledCategories.clear();\n            this.enabledCategories.add('*');\n        } else {\n            this.enabledCategories.add(category);\n        }\n    }\n\n    disableCategory(category: string) {\n        this.enabledCategories.delete(category);\n    }\n\n    isCategoryEnabled(category: string) {\n        return this.enabledCategories.has('*') || this.enabledCategories.has(category);\n    }\n\n    private _log(level: LogLevelName, category: string, message?: unknown, ...args: unknown[]) {\n        if (LOG_LEVELS[level] > this.level) return;\n        if (!this.isCategoryEnabled(category)) return;\n\n        const color = LOG_COLORS[level];\n        const timestamp = new Date().toLocaleTimeString();\n\n        if (this.format === 'detailed') {\n            console.log(\n                `%c[${timestamp}] [${level}] [${category}]`,\n                `color: ${color}; font-weight: bold`,\n                message,\n                ...args\n            );\n        } else {\n            console.log(`%c[${category}]`, `color: ${color}`, message, ...args);\n        }\n    }\n\n    error(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('ERROR', category, message, ...args);\n    }\n\n    warn(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('WARN', category, message, ...args);\n    }\n\n    info(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('INFO', category, message, ...args);\n    }\n\n    debug(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('DEBUG', category, message, ...args);\n    }\n\n    trace(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('TRACE', category, message, ...args);\n    }\n\n    group(category: string, title?: string) {\n        if (!this.isCategoryEnabled(category)) return;\n        console.group(title ?? category);\n    }\n\n    groupEnd() {\n        console.groupEnd();\n    }\n\n    time(label: string) {\n        console.time(label);\n    }\n\n    timeEnd(label: string) {\n        console.timeEnd(label);\n    }\n}\n\nconst logger = new Logger();\n\nexport default logger;\n\ndeclare global {\n    interface Window {\n        Logger?: Logger;\n    }\n}\n\nif (typeof window !== 'undefined') {\n    window.Logger = logger;\n}\n\n// For CommonJS compatibility\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const module: any;\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = logger;\n}\n"]}