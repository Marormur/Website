{"version":3,"file":"auto-save-helper.js","sourceRoot":"","sources":["../../src/ts/utils/auto-save-helper.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAMH,0CAUC;AAdD;;;GAGG;AACH,SAAgB,eAAe,CAAC,IAAY;IACxC,MAAM,CAAC,GAAG,MAA4C,CAAC;IACvD,MAAM,cAAc,GAAG,CAAC,CAAC,cAAqD,CAAC;IAC/E,IAAI,cAAc,IAAI,OAAO,cAAc,CAAC,gBAAgB,KAAK,UAAU,EAAE,CAAC;QAC1E,IAAI,CAAC;YACA,cAAc,CAAC,gBAA2C,CAAC,IAAI,CAAC,CAAC;QACtE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;AACL,CAAC","sourcesContent":["/**\r\n * src/ts/utils/auto-save-helper.ts\r\n * Shared utility for triggering auto-save via SessionManager\r\n */\r\n\r\n/**\r\n * Triggers auto-save for a specific instance type via SessionManager\r\n * @param type - The instance type to save\r\n */\r\nexport function triggerAutoSave(type: string): void {\r\n    const w = window as unknown as Record<string, unknown>;\r\n    const SessionManager = w.SessionManager as Record<string, unknown> | undefined;\r\n    if (SessionManager && typeof SessionManager.saveInstanceType === 'function') {\r\n        try {\r\n            (SessionManager.saveInstanceType as (type: string) => void)(type);\r\n        } catch (error) {\r\n            console.warn('Failed to trigger auto-save:', error);\r\n        }\r\n    }\r\n}\r\n"]}