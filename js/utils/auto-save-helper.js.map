{"version":3,"file":"auto-save-helper.js","sourceRoot":"","sources":["../../src/ts/utils/auto-save-helper.ts"],"names":[],"mappings":";AAAA;;;GAGG;;AAMH,0CAUC;AAdD;;;GAGG;AACH,SAAgB,eAAe,CAAC,IAAY;IACxC,MAAM,CAAC,GAAG,MAA4C,CAAC;IACvD,MAAM,cAAc,GAAG,CAAC,CAAC,cAAqD,CAAC;IAC/E,IAAI,cAAc,IAAI,OAAO,cAAc,CAAC,gBAAgB,KAAK,UAAU,EAAE,CAAC;QAC1E,IAAI,CAAC;YACA,cAAc,CAAC,gBAA2C,CAAC,IAAI,CAAC,CAAC;QACtE,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACb,OAAO,CAAC,IAAI,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;AACL,CAAC","sourcesContent":["/**\n * src/ts/utils/auto-save-helper.ts\n * Shared utility for triggering auto-save via SessionManager\n */\n\n/**\n * Triggers auto-save for a specific instance type via SessionManager\n * @param type - The instance type to save\n */\nexport function triggerAutoSave(type: string): void {\n    const w = window as unknown as Record<string, unknown>;\n    const SessionManager = w.SessionManager as Record<string, unknown> | undefined;\n    if (SessionManager && typeof SessionManager.saveInstanceType === 'function') {\n        try {\n            (SessionManager.saveInstanceType as (type: string) => void)(type);\n        } catch (error) {\n            console.warn('Failed to trigger auto-save:', error);\n        }\n    }\n}\n"]}