{"version":3,"file":"text-editor.js","sourceRoot":"","sources":["../src/ts/text-editor.ts"],"names":[],"mappings":"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","sourcesContent":["import { getString, setString, remove } from './storage-utils.js';\r\n\r\n/**\r\n * Text Editor Module\r\n * Replaces text.html iframe with inline text editor\r\n */\r\n\r\ntype WrapMode = 'soft' | 'off';\r\n\r\ninterface FileMeta {\r\n    fileName?: string;\r\n    repo?: string;\r\n    path?: string;\r\n}\r\n\r\ninterface RemoteFilePayload extends FileMeta {\r\n    content: string;\r\n}\r\n\r\ninterface LoadErrorPayload extends FileMeta {\r\n    message?: string;\r\n}\r\n\r\ntype StatusState =\r\n    | { type: 'plain'; text: string }\r\n    | { type: 'i18n'; key: string; params?: Record<string, unknown> };\r\n\r\ninterface TextEditorSystemInternal extends TextEditorSystemAPI {\r\n    container: HTMLElement | null;\r\n    editor: HTMLTextAreaElement | null;\r\n    statusBar: HTMLElement | null;\r\n    saveButton: HTMLButtonElement | null;\r\n    fileInput: HTMLInputElement | null;\r\n    wrapMode: WrapMode;\r\n    currentRemoteFile: RemoteFilePayload | null;\r\n    statusState: StatusState | null;\r\n    wordCountDisplay: HTMLElement | null;\r\n    lineColDisplay: HTMLElement | null;\r\n    findReplacePanel: HTMLElement | null;\r\n    findInput: HTMLInputElement | null;\r\n    replaceInput: HTMLInputElement | null;\r\n    toastContainer: HTMLElement | null;\r\n\r\n    // Internal methods\r\n    init(containerOrId: HTMLElement | string): void;\r\n    render(): void;\r\n    cacheElements(): void;\r\n    loadWrapPreference(): void;\r\n    attachListeners(): void;\r\n    loadSavedContent(): void;\r\n    syncSaveButtonState(): void;\r\n    registerActions(): void;\r\n    updateCSSVariables(): void;\r\n    applyWrapMode(mode?: string): void;\r\n    setStatusPlain(msg: string): void;\r\n    focusEditor(): void;\r\n    handleEditorInput(): void;\r\n    updateWordCount(): void;\r\n    updateCursorPosition(): void;\r\n    handleFileSelect(event: Event): void;\r\n    updateDocumentTitle(): void;\r\n    clearStatus(): void;\r\n    toggleWrapMode(): void;\r\n    execCommand(cmd: string): void;\r\n    handlePaste(e?: Event): void;\r\n    selectAll(): void;\r\n    wrapSelection(before: string, after: string): void;\r\n    insertHeading(level: number): void;\r\n    insertList(type: string): void;\r\n    alignText(align: string): void;\r\n    insertLink(): void;\r\n    toggleFindReplace(): void;\r\n    findNext(): void;\r\n    replaceOne(): void;\r\n    replaceAll(): void;\r\n    closeFindReplace(): void;\r\n    formatFileLabel(meta?: unknown): string;\r\n    setStatusLocalized(key: string, params?: unknown): void;\r\n    resolveTranslation(key: string, params?: unknown): { text: string; translated: boolean };\r\n    showToast(msg: string, type?: string): void;\r\n    insertTextAtCursor(text: string): void;\r\n    showInputModal(\r\n        title: string,\r\n        defaultValue?: string,\r\n        placeholder?: string\r\n    ): Promise<string | null>;\r\n    applyStatusState(state?: StatusState): void;\r\n    clearEditor(): void;\r\n    openFile(): void;\r\n    saveFile(): void;\r\n    loadRemoteFile(payload: Partial<RemoteFilePayload>): void;\r\n    showLoading(payload?: unknown): void;\r\n    showLoadError(payload?: unknown): void;\r\n    handleMenuAction(action: string): void;\r\n    destroy(): void;\r\n}\r\n\r\nconst TextEditorSystem: TextEditorSystemInternal = {\r\n    container: null,\r\n    editor: null,\r\n    statusBar: null,\r\n    saveButton: null,\r\n    fileInput: null,\r\n    wrapMode: 'off',\r\n    currentRemoteFile: null,\r\n    statusState: null,\r\n    wordCountDisplay: null,\r\n    lineColDisplay: null,\r\n    findReplacePanel: null,\r\n    findInput: null,\r\n    replaceInput: null,\r\n    toastContainer: null,\r\n\r\n    /**\r\n     * Initialize text editor in container\r\n     * @param {HTMLElement|string} containerOrId - Container element or ID\r\n     */\r\n    init(containerOrId: HTMLElement | string): void {\r\n        const container =\r\n            typeof containerOrId === 'string'\r\n                ? document.getElementById(containerOrId)\r\n                : containerOrId;\r\n\r\n        if (!container) {\r\n            console.error('Text editor container not found:', containerOrId);\r\n            return;\r\n        }\r\n\r\n        this.container = container;\r\n        this.render();\r\n        this.cacheElements();\r\n        this.loadWrapPreference();\r\n        this.attachListeners();\r\n        this.loadSavedContent();\r\n        this.syncSaveButtonState();\r\n\r\n        // Register text editor actions with ActionBus\r\n        if (window.ActionBus) {\r\n            this.registerActions();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Render text editor UI\r\n     */\r\n    render(): void {\r\n        if (!this.container) return;\r\n\r\n        this.container.innerHTML = `\r\n                <div class=\"dialog-content flex flex-col h-full\" style=\"background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827);\">\r\n                    <!-- File Operations Toolbar -->\r\n                    <div id=\"text-toolbar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: flex; gap: 8px; align-items: center; flex-wrap: wrap;\">\r\n                        <button type=\"button\" data-action=\"textEditor:clear\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.clear\" data-i18n-title=\"textEditor.toolbar.clear\">Neu</button>\r\n                        <button type=\"button\" data-action=\"textEditor:open\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.open\" data-i18n-title=\"textEditor.toolbar.open\">Öffnen</button>\r\n                        <button type=\"button\" data-action=\"textEditor:save\" class=\"text-editor-btn\" id=\"text-save-button\" data-i18n=\"textEditor.toolbar.save\" data-i18n-title=\"textEditor.toolbar.save\">Speichern</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:bold\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.bold\" style=\"font-weight: bold;\">B</button>\r\n                        <button type=\"button\" data-action=\"textEditor:italic\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.italic\" style=\"font-style: italic;\">I</button>\r\n                        <button type=\"button\" data-action=\"textEditor:underline\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.underline\" style=\"text-decoration: underline;\">U</button>\r\n                        <button type=\"button\" data-action=\"textEditor:strikethrough\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.strikeThrough\" style=\"text-decoration: line-through;\">S</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:heading1\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading1\">H1</button>\r\n                        <button type=\"button\" data-action=\"textEditor:heading2\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading2\">H2</button>\r\n                        <button type=\"button\" data-action=\"textEditor:heading3\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading3\">H3</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:unorderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.unorderedList\">• List</button>\r\n                        <button type=\"button\" data-action=\"textEditor:orderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.orderedList\">1. List</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:alignLeft\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignLeft\">⇤</button>\r\n                        <button type=\"button\" data-action=\"textEditor:alignCenter\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignCenter\">≡</button>\r\n                        <button type=\"button\" data-action=\"textEditor:alignRight\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignRight\">⇥</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:insertLink\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.insertLink\">🔗</button>\r\n                        <button type=\"button\" data-action=\"textEditor:findReplace\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.findReplace\">🔍</button>\r\n                        <input type=\"file\" id=\"text-file-input\"\r\n                            accept=\".txt,.md,.markdown,.html,.htm,.css,.scss,.js,.jsx,.ts,.tsx,.json,.yml,.yaml,.xml,.csv,.tsv,.ini,.cfg,.conf,.env,.gitignore,.log,.c,.h,.cpp,.hpp,.java,.kt,.swift,.cs,.py,.rb,.php,.rs,.go,.sh,.bash,.zsh,.fish,.ps1,.bat\"\r\n                            style=\"display:none\">\r\n                    </div>\r\n                    <!-- Find and Replace Panel (Hidden by default) -->\r\n                    <div id=\"find-replace-panel\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: none; gap: 8px; align-items: center; flex-wrap: wrap;\">\r\n                        <input type=\"text\" id=\"find-input\" data-i18n-placeholder=\"textEditor.findReplace.find\" placeholder=\"Find...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\r\n                        <input type=\"text\" id=\"replace-input\" data-i18n-placeholder=\"textEditor.findReplace.replace\" placeholder=\"Replace...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\r\n                        <button type=\"button\" data-action=\"textEditor:findNext\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.next\" data-i18n-title=\"textEditor.findReplace.next\" style=\"font-size: 12px;\">Next</button>\r\n                        <button type=\"button\" data-action=\"textEditor:replaceOne\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceOne\" data-i18n-title=\"textEditor.findReplace.replaceOne\" style=\"font-size: 12px;\">Replace</button>\r\n                        <button type=\"button\" data-action=\"textEditor:replaceAll\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceAll\" data-i18n-title=\"textEditor.findReplace.replaceAll\" style=\"font-size: 12px;\">Replace All</button>\r\n                        <button type=\"button\" data-action=\"textEditor:closeFindReplace\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.close\" data-i18n-title=\"textEditor.findReplace.close\" style=\"font-size: 12px;\">✕</button>\r\n                    </div>\r\n                    <div id=\"text-file-status\" class=\"flex-none\" style=\"padding: 8px 16px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827); font-size: 14px; opacity: 0.75; display: none;\"></div>\r\n                    <textarea id=\"text-editor-textarea\" spellcheck=\"false\" wrap=\"off\" class=\"flex-1 w-full resize-none p-4 border-0 outline-none\"\r\n                        style=\"background: var(--editor-surface-bg, #ffffff); color: inherit; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace; font-size: 14px; line-height: 1.6; tab-size: 4;\"\r\n                        title=\"textarea\"></textarea>\r\n                    <!-- Status Bar with Word Count -->\r\n                    <div id=\"word-count-bar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 6px 12px; border-top: 1px solid var(--editor-toolbar-border, #d1d5db); font-size: 12px; color: var(--editor-text, #111827); opacity: 0.75; display: flex; justify-content: space-between;\">\r\n                        <span id=\"word-count-display\" data-i18n=\"textEditor.status.wordCount\" data-i18n-params='{\"words\":0,\"chars\":0}'>Words: 0 | Characters: 0</span>\r\n                        <span id=\"line-col-display\" data-i18n=\"textEditor.status.position\" data-i18n-params='{\"line\":1,\"col\":1}'>Line 1, Col 1</span>\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n        // Apply CSS variables for dark mode support\r\n        this.updateCSSVariables();\r\n\r\n        // Apply i18n translations\r\n        if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\r\n            window.appI18n.applyTranslations();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update CSS variables for dark mode\r\n     */\r\n    updateCSSVariables(): void {\r\n        if (!this.container) return;\r\n\r\n        const isDark = document.documentElement.classList.contains('dark');\r\n\r\n        this.container.style.setProperty('--editor-body-bg', isDark ? '#0f172a' : '#fafafa');\r\n        this.container.style.setProperty('--editor-text', isDark ? '#e5e7eb' : '#111827');\r\n        this.container.style.setProperty('--editor-toolbar-bg', isDark ? '#1f2937' : '#f5f5f5');\r\n        this.container.style.setProperty('--editor-toolbar-border', isDark ? '#374151' : '#d1d5db');\r\n        this.container.style.setProperty(\r\n            '--editor-toolbar-button-bg',\r\n            isDark ? '#111827' : '#ffffff'\r\n        );\r\n        this.container.style.setProperty(\r\n            '--editor-toolbar-button-hover',\r\n            isDark ? '#1f2937' : '#e5e7eb'\r\n        );\r\n        this.container.style.setProperty(\r\n            '--editor-toolbar-button-border',\r\n            isDark ? '#475569' : '#d1d5db'\r\n        );\r\n        this.container.style.setProperty('--editor-surface-bg', isDark ? '#111827' : '#ffffff');\r\n\r\n        // Apply button styles\r\n        const buttons = this.container.querySelectorAll<HTMLElement>('.text-editor-btn');\r\n        buttons.forEach(btn => {\r\n            btn.style.margin = '0';\r\n            btn.style.padding = '6px 12px';\r\n            btn.style.fontSize = '14px';\r\n            btn.style.border = `1px solid ${isDark ? '#475569' : '#d1d5db'}`;\r\n            btn.style.background = isDark ? '#111827' : '#ffffff';\r\n            btn.style.cursor = 'pointer';\r\n            btn.style.color = 'inherit';\r\n            btn.style.borderRadius = '6px';\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Cache DOM elements\r\n     */\r\n    cacheElements(): void {\r\n        if (!this.container) return;\r\n\r\n        this.editor = this.container.querySelector<HTMLTextAreaElement>('#text-editor-textarea');\r\n        this.statusBar = this.container.querySelector<HTMLElement>('#text-file-status');\r\n        this.saveButton = this.container.querySelector<HTMLButtonElement>('#text-save-button');\r\n        this.fileInput = this.container.querySelector<HTMLInputElement>('#text-file-input');\r\n        this.wordCountDisplay = this.container.querySelector<HTMLElement>('#word-count-display');\r\n        this.lineColDisplay = this.container.querySelector<HTMLElement>('#line-col-display');\r\n        this.findReplacePanel = this.container.querySelector<HTMLElement>('#find-replace-panel');\r\n        this.findInput = this.container.querySelector<HTMLInputElement>('#find-input');\r\n        this.replaceInput = this.container.querySelector<HTMLInputElement>('#replace-input');\r\n    },\r\n\r\n    /**\r\n     * Load wrap mode preference\r\n     */\r\n    loadWrapPreference(): void {\r\n        const storedWrapMode = getString('textEditorWrapMode');\r\n        this.wrapMode = storedWrapMode === 'soft' ? 'soft' : 'off';\r\n        this.applyWrapMode(this.wrapMode);\r\n    },\r\n\r\n    /**\r\n     * Apply wrap mode\r\n     * @param {string} mode - Wrap mode (soft|off)\r\n     */\r\n    applyWrapMode(mode?: string): void {\r\n        if (!this.editor) return;\r\n        const effective = mode ?? this.wrapMode;\r\n        const normalized = effective === 'soft' ? 'soft' : 'off';\r\n        this.wrapMode = normalized;\r\n        this.editor.wrap = normalized;\r\n        this.editor.style.whiteSpace = normalized === 'soft' ? 'pre-wrap' : 'pre';\r\n\r\n        try {\r\n            setString('textEditorWrapMode', normalized);\r\n        } catch (err) {\r\n            console.warn('Wrap preference could not be stored:', err);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Toggle wrap mode\r\n     */\r\n    toggleWrapMode(): void {\r\n        const next = this.wrapMode === 'soft' ? 'off' : 'soft';\r\n        this.applyWrapMode(next);\r\n        this.setStatusPlain(\r\n            next === 'soft' ? 'Zeilenumbruch aktiviert' : 'Zeilenumbruch deaktiviert'\r\n        );\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Attach event listeners\r\n     */\r\n    attachListeners(): void {\r\n        if (!this.editor || !this.fileInput) return;\r\n\r\n        // Editor input listener for auto-save and word count\r\n        this.editor.addEventListener('input', () => {\r\n            this.handleEditorInput();\r\n            this.updateWordCount();\r\n        });\r\n\r\n        // Editor selection and cursor listener\r\n        this.editor.addEventListener('click', () => {\r\n            this.updateCursorPosition();\r\n        });\r\n\r\n        this.editor.addEventListener('keyup', () => {\r\n            this.updateCursorPosition();\r\n        });\r\n\r\n        // File input change listener\r\n        this.fileInput.addEventListener('change', event => {\r\n            this.handleFileSelect(event);\r\n        });\r\n\r\n        // Listen for theme changes to update CSS variables\r\n        const themeObserver = new MutationObserver(() => {\r\n            this.updateCSSVariables();\r\n        });\r\n        themeObserver.observe(document.documentElement, {\r\n            attributes: true,\r\n            attributeFilter: ['class'],\r\n        });\r\n\r\n        // Listen for language changes\r\n        window.addEventListener('languagePreferenceChange', () => {\r\n            this.updateDocumentTitle();\r\n            this.applyStatusState();\r\n        });\r\n\r\n        // Initial word count and cursor position\r\n        this.updateWordCount();\r\n        this.updateCursorPosition();\r\n    },\r\n\r\n    /**\r\n     * Register actions with ActionBus\r\n     */\r\n    registerActions(): void {\r\n        if (!window.ActionBus) return;\r\n\r\n        window.ActionBus.registerAll({\r\n            'textEditor:clear': () => this.clearEditor(),\r\n            'textEditor:open': () => this.openFile(),\r\n            'textEditor:save': () => this.saveFile(),\r\n            'textEditor:toggleWrap': () => this.toggleWrapMode(),\r\n            'textEditor:undo': () => this.execCommand('undo'),\r\n            'textEditor:redo': () => this.execCommand('redo'),\r\n            'textEditor:cut': () => this.execCommand('cut'),\r\n            'textEditor:copy': () => this.execCommand('copy'),\r\n            'textEditor:paste': () => this.handlePaste(),\r\n            'textEditor:selectAll': () => this.selectAll(),\r\n            // New formatting actions\r\n            'textEditor:bold': () => this.wrapSelection('**', '**'),\r\n            'textEditor:italic': () => this.wrapSelection('*', '*'),\r\n            'textEditor:underline': () => this.wrapSelection('<u>', '</u>'),\r\n            'textEditor:strikethrough': () => this.wrapSelection('~~', '~~'),\r\n            'textEditor:heading1': () => this.insertHeading(1),\r\n            'textEditor:heading2': () => this.insertHeading(2),\r\n            'textEditor:heading3': () => this.insertHeading(3),\r\n            'textEditor:unorderedList': () => this.insertList('unordered'),\r\n            'textEditor:orderedList': () => this.insertList('ordered'),\r\n            'textEditor:alignLeft': () => this.alignText('left'),\r\n            'textEditor:alignCenter': () => this.alignText('center'),\r\n            'textEditor:alignRight': () => this.alignText('right'),\r\n            'textEditor:insertLink': () => this.insertLink(),\r\n            'textEditor:findReplace': () => this.toggleFindReplace(),\r\n            'textEditor:findNext': () => this.findNext(),\r\n            'textEditor:replaceOne': () => this.replaceOne(),\r\n            'textEditor:replaceAll': () => this.replaceAll(),\r\n            'textEditor:closeFindReplace': () => this.closeFindReplace(),\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Handle editor input\r\n     */\r\n    handleEditorInput(): void {\r\n        if (!this.editor) return;\r\n\r\n        try {\r\n            setString('textEditorContent', this.editor.value);\r\n        } catch (err) {\r\n            console.warn('Could not save editor content to localStorage:', err);\r\n        }\r\n\r\n        this.syncSaveButtonState();\r\n    },\r\n\r\n    /**\r\n     * Handle file selection\r\n     */\r\n    handleFileSelect(event: Event): void {\r\n        const input = event.target as HTMLInputElement | null;\r\n        const file = input?.files?.[0];\r\n        if (!file) return;\r\n\r\n        const reader = new FileReader();\r\n        reader.onload = (e: ProgressEvent<FileReader>) => {\r\n            const content = e.target?.result;\r\n            if (typeof content === 'string' && this.editor) {\r\n                this.editor.value = content;\r\n                this.updateWordCount();\r\n                this.updateCursorPosition();\r\n            }\r\n            this.currentRemoteFile = { fileName: file.name, content: '' };\r\n            this.updateDocumentTitle();\r\n            this.setStatusPlain(file.name);\r\n            this.syncSaveButtonState();\r\n            this.focusEditor();\r\n        };\r\n        reader.readAsText(file);\r\n\r\n        // Reset input for future opens\r\n        if (input) {\r\n            input.value = '';\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Load saved content from localStorage\r\n     */\r\n    loadSavedContent(): void {\r\n        if (!this.editor) return;\r\n\r\n        try {\r\n            const saved = getString('textEditorContent');\r\n            if (saved) {\r\n                this.editor.value = saved;\r\n                this.updateWordCount();\r\n                this.updateCursorPosition();\r\n            }\r\n        } catch (err) {\r\n            console.warn('Could not load saved content:', err);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sync save button state\r\n     */\r\n    syncSaveButtonState(): void {\r\n        if (!this.saveButton || !this.editor) return;\r\n\r\n        this.saveButton.disabled = this.editor.value.length === 0;\r\n    },\r\n\r\n    /**\r\n     * Focus editor\r\n     */\r\n    focusEditor(): void {\r\n        if (this.editor) {\r\n            this.editor.focus();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Clear editor\r\n     */\r\n    clearEditor(): void {\r\n        if (!this.editor) return;\r\n\r\n        this.editor.value = '';\r\n        this.updateWordCount();\r\n        this.updateCursorPosition();\r\n        remove('textEditorContent');\r\n        this.currentRemoteFile = null;\r\n        this.updateDocumentTitle();\r\n        this.clearStatus();\r\n        this.syncSaveButtonState();\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Open file picker\r\n     */\r\n    openFile(): void {\r\n        if (this.fileInput) {\r\n            this.fileInput.click();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Save file\r\n     */\r\n    saveFile(): void {\r\n        if (!this.editor) return;\r\n\r\n        const content = this.editor.value;\r\n        const blob = new Blob([content], {\r\n            type: 'text/plain;charset=utf-8',\r\n        });\r\n        const url = URL.createObjectURL(blob);\r\n        const a = document.createElement('a');\r\n        a.href = url;\r\n\r\n        const firstLine = content.split('\\n')[0] || 'text';\r\n        const sanitized =\r\n            firstLine\r\n                .trim()\r\n                .substring(0, 20)\r\n                .replace(/[^a-zA-Z0-9-_]/g, '') || 'text';\r\n        a.download = `${sanitized}.txt`;\r\n\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n        URL.revokeObjectURL(url);\r\n    },\r\n\r\n    /**\r\n     * Execute document command\r\n     * @param {string} command - Command to execute\r\n     */\r\n    execCommand(command: string): void {\r\n        this.focusEditor();\r\n        try {\r\n            if (!document.execCommand(command)) {\r\n                this.setStatusPlain(`Command ${command} not available`);\r\n            }\r\n        } catch (err) {\r\n            console.warn(`Command ${command} failed:`, err);\r\n            this.setStatusPlain(`Command ${command} failed`);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handle paste operation\r\n     */\r\n    handlePaste(e?: Event): void {\r\n        this.focusEditor();\r\n\r\n        if (navigator.clipboard && typeof navigator.clipboard.readText === 'function') {\r\n            navigator.clipboard\r\n                .readText()\r\n                .then(text => {\r\n                    if (text && this.editor) {\r\n                        this.insertTextAtCursor(text);\r\n                    }\r\n                })\r\n                .catch(() => {\r\n                    this.execCommand('paste');\r\n                });\r\n        } else {\r\n            this.execCommand('paste');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Select all text\r\n     */\r\n    selectAll(): void {\r\n        this.focusEditor();\r\n        if (this.editor) {\r\n            this.editor.select();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Insert text at cursor position\r\n     * @param {string} text - Text to insert\r\n     */\r\n    insertTextAtCursor(text: string): void {\r\n        if (!this.editor || typeof text !== 'string') return;\r\n\r\n        const start =\r\n            typeof this.editor.selectionStart === 'number'\r\n                ? this.editor.selectionStart\r\n                : this.editor.value.length;\r\n        const end = typeof this.editor.selectionEnd === 'number' ? this.editor.selectionEnd : start;\r\n\r\n        this.editor.setRangeText(text, start, end, 'end');\r\n        this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n    },\r\n\r\n    /**\r\n     * Update document title\r\n     */\r\n    updateDocumentTitle(): void {\r\n        const titleKey =\r\n            this.currentRemoteFile && this.currentRemoteFile.fileName\r\n                ? 'textEditor.documentTitleWithFile'\r\n                : 'textEditor.documentTitle';\r\n\r\n        const params =\r\n            this.currentRemoteFile && this.currentRemoteFile.fileName\r\n                ? { fileName: this.currentRemoteFile.fileName }\r\n                : undefined;\r\n\r\n        const { text } = this.resolveTranslation(titleKey, params);\r\n        document.title = text;\r\n    },\r\n\r\n    /**\r\n     * Format file label for display\r\n     * @param {Object} meta - File metadata\r\n     * @returns {string} Formatted label\r\n     */\r\n    formatFileLabel(meta: FileMeta = {}): string {\r\n        const parts = [];\r\n        if (meta.repo) parts.push(meta.repo);\r\n        if (meta.path) {\r\n            parts.push(meta.path);\r\n        } else if (meta.fileName) {\r\n            parts.push(meta.fileName);\r\n        }\r\n        return parts.join(' / ');\r\n    },\r\n\r\n    /**\r\n     * Set plain text status\r\n     * @param {string} text - Status text\r\n     */\r\n    setStatusPlain(text: string | null | undefined): void {\r\n        if (!text) {\r\n            this.clearStatus();\r\n            return;\r\n        }\r\n        this.statusState = { type: 'plain', text };\r\n        this.applyStatusState();\r\n    },\r\n\r\n    /**\r\n     * Set localized status\r\n     * @param {string} key - Translation key\r\n     * @param {Object} params - Translation parameters\r\n     */\r\n    setStatusLocalized(key: string, params?: Record<string, unknown>): void {\r\n        this.statusState = {\r\n            type: 'i18n',\r\n            key,\r\n            params: params || undefined,\r\n        };\r\n        this.applyStatusState();\r\n    },\r\n\r\n    /**\r\n     * Clear status\r\n     */\r\n    clearStatus(): void {\r\n        this.statusState = null;\r\n        this.applyStatusState();\r\n    },\r\n\r\n    /**\r\n     * Apply status state to UI\r\n     */\r\n    applyStatusState(): void {\r\n        if (!this.statusBar) return;\r\n\r\n        if (!this.statusState) {\r\n            this.statusBar.textContent = '';\r\n            this.statusBar.style.display = 'none';\r\n            this.statusBar.removeAttribute('data-i18n');\r\n            this.statusBar.removeAttribute('data-i18n-params');\r\n            return;\r\n        }\r\n\r\n        if (this.statusState.type === 'i18n') {\r\n            const { text, translated } = this.resolveTranslation(\r\n                this.statusState.key,\r\n                this.statusState.params\r\n            );\r\n            this.statusBar.textContent = text;\r\n\r\n            if (translated) {\r\n                this.statusBar.setAttribute('data-i18n', this.statusState.key);\r\n                if (this.statusState.params) {\r\n                    this.statusBar.setAttribute(\r\n                        'data-i18n-params',\r\n                        JSON.stringify(this.statusState.params)\r\n                    );\r\n                } else {\r\n                    this.statusBar.removeAttribute('data-i18n-params');\r\n                }\r\n\r\n                if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\r\n                    window.appI18n.applyTranslations();\r\n                }\r\n            } else {\r\n                this.statusBar.removeAttribute('data-i18n');\r\n                this.statusBar.removeAttribute('data-i18n-params');\r\n            }\r\n        } else {\r\n            this.statusBar.removeAttribute('data-i18n');\r\n            this.statusBar.removeAttribute('data-i18n-params');\r\n            this.statusBar.textContent = this.statusState.text;\r\n        }\r\n\r\n        this.statusBar.style.display = 'block';\r\n    },\r\n\r\n    /**\r\n     * Resolve translation\r\n     * @param {string} key - Translation key\r\n     * @param {Object} params - Translation parameters\r\n     * @returns {Object} Resolved translation\r\n     */\r\n    resolveTranslation(\r\n        key: string,\r\n        params?: Record<string, unknown>\r\n    ): { text: string; translated: boolean } {\r\n        if (!key) return { text: '', translated: false };\r\n\r\n        const fallbackMessages = {\r\n            'textEditor.documentTitle': () => 'Texteditor',\r\n            'textEditor.documentTitleWithFile': (p: unknown) => {\r\n                const fileName = p && (p as any).fileName ? (p as any).fileName : '';\r\n                return fileName ? `Texteditor – ${fileName}` : 'Texteditor';\r\n            },\r\n            'textEditor.status.loading': () => 'Lade Datei …',\r\n            'textEditor.status.loadingWithLabel': (p: unknown) => {\r\n                const label = p && (p as any).label ? (p as any).label : '';\r\n                return label ? `${label} (lädt …)` : 'Lade Datei …';\r\n            },\r\n            'textEditor.status.loadError': () => 'Datei konnte nicht geladen werden.',\r\n            'textEditor.status.rateLimit': () =>\r\n                'GitHub Rate Limit erreicht. Bitte versuche es später erneut.',\r\n            'textEditor.status.wordCount': (p: unknown) => {\r\n                const words = p && typeof (p as any).words === 'number' ? (p as any).words : 0;\r\n                const chars = p && typeof (p as any).chars === 'number' ? (p as any).chars : 0;\r\n                return `Words: ${words} | Characters: ${chars}`;\r\n            },\r\n            'textEditor.status.position': (p: unknown) => {\r\n                const line = p && typeof (p as any).line === 'number' ? (p as any).line : 1;\r\n                const col = p && typeof (p as any).col === 'number' ? (p as any).col : 1;\r\n                return `Line ${line}, Col ${col}`;\r\n            },\r\n            'textEditor.findReplace.noMatch': () => 'No match found',\r\n            'textEditor.findReplace.replacedCount': (p: unknown) => {\r\n                const count = p && typeof (p as any).count === 'number' ? (p as any).count : 0;\r\n                return `Replaced ${count} occurrence(s)`;\r\n            },\r\n        } as Record<string, ((...args: unknown[]) => string) | (() => string)>;\r\n\r\n        try {\r\n            if (window.appI18n && typeof window.appI18n.translate === 'function') {\r\n                const translated = window.appI18n.translate(key);\r\n                if (translated && translated !== key) {\r\n                    return { text: translated, translated: true };\r\n                }\r\n            }\r\n        } catch (err) {\r\n            console.warn('Translation failed, falling back:', err);\r\n        }\r\n\r\n        const fallbackFn = fallbackMessages[key];\r\n        if (typeof fallbackFn === 'function') {\r\n            return { text: fallbackFn(params || {}), translated: false };\r\n        }\r\n\r\n        return { text: key, translated: false };\r\n    },\r\n\r\n    // ==================== Public API for Finder Integration ====================\r\n\r\n    /**\r\n     * Load remote file into editor\r\n     * @param {Object} payload - File payload\r\n     * @param {string} payload.content - File content\r\n     * @param {string} [payload.fileName] - File name\r\n     * @param {string} [payload.repo] - Repository name\r\n     * @param {string} [payload.path] - File path\r\n     */\r\n    loadRemoteFile(payload: Partial<RemoteFilePayload>): void {\r\n        if (typeof payload.content !== 'string') {\r\n            console.warn('Invalid payload for loadRemoteFile:', payload);\r\n            return;\r\n        }\r\n\r\n        const remotePayload: RemoteFilePayload = {\r\n            content: payload.content,\r\n            fileName: payload.fileName,\r\n            repo: payload.repo,\r\n            path: payload.path,\r\n        };\r\n\r\n        if (this.editor) {\r\n            this.editor.value = remotePayload.content;\r\n            this.updateWordCount();\r\n            this.updateCursorPosition();\r\n        }\r\n\r\n        this.currentRemoteFile = remotePayload;\r\n        const label = this.formatFileLabel(remotePayload);\r\n        this.updateDocumentTitle();\r\n        this.setStatusPlain(label);\r\n\r\n        try {\r\n            setString('textEditorContent', remotePayload.content);\r\n        } catch (err) {\r\n            console.warn('Could not save to localStorage:', err);\r\n        }\r\n\r\n        this.syncSaveButtonState();\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Show loading state\r\n     * @param {Object} payload - Loading payload\r\n     * @param {string} [payload.fileName] - File name\r\n     * @param {string} [payload.repo] - Repository name\r\n     * @param {string} [payload.path] - File path\r\n     */\r\n    showLoading(payload: FileMeta = {}): void {\r\n        const label = this.formatFileLabel(payload);\r\n        if (label) {\r\n            this.setStatusLocalized('textEditor.status.loadingWithLabel', {\r\n                label,\r\n            });\r\n        } else {\r\n            this.setStatusLocalized('textEditor.status.loading');\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show load error\r\n     * @param {Object} payload - Error payload\r\n     * @param {string} [payload.message] - Error message\r\n     * @param {string} [payload.fileName] - File name\r\n     * @param {string} [payload.repo] - Repository name\r\n     * @param {string} [payload.path] - File path\r\n     */\r\n    showLoadError(payload: LoadErrorPayload = {}): void {\r\n        const label = this.formatFileLabel(payload);\r\n        const fallback = this.resolveTranslation('textEditor.status.loadError');\r\n        const message = payload && payload.message ? payload.message : fallback.text;\r\n\r\n        if (label) {\r\n            this.setStatusPlain(`${label} — ${message}`);\r\n        } else {\r\n            this.setStatusPlain(message);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handle menu action\r\n     * @param {string} action - Action name\r\n     */\r\n    handleMenuAction(action: string): void {\r\n        if (!action) return;\r\n\r\n        const actionMap: Record<string, string> = {\r\n            'file:new': 'textEditor:clear',\r\n            'file:open': 'textEditor:open',\r\n            'file:save': 'textEditor:save',\r\n            'edit:undo': 'textEditor:undo',\r\n            'edit:redo': 'textEditor:redo',\r\n            'edit:cut': 'textEditor:cut',\r\n            'edit:copy': 'textEditor:copy',\r\n            'edit:paste': 'textEditor:paste',\r\n            'edit:selectAll': 'textEditor:selectAll',\r\n            'view:toggleWrap': 'textEditor:toggleWrap',\r\n        };\r\n\r\n        const mappedAction = actionMap[action];\r\n        if (mappedAction && window.ActionBus) {\r\n            window.ActionBus.execute(mappedAction);\r\n        } else {\r\n            console.warn('Unknown menu action:', action);\r\n        }\r\n    },\r\n\r\n    // ==================== New Formatting Methods ====================\r\n\r\n    /**\r\n     * Wrap selected text with prefix and suffix\r\n     * @param {string} prefix - Text to insert before selection\r\n     * @param {string} suffix - Text to insert after selection\r\n     */\r\n    wrapSelection(prefix: string, suffix: string): void {\r\n        if (!this.editor) return;\r\n\r\n        const start = this.editor.selectionStart;\r\n        const end = this.editor.selectionEnd;\r\n        const selectedText = this.editor.value.substring(start, end);\r\n        const wrappedText = prefix + selectedText + suffix;\r\n\r\n        this.editor.setRangeText(wrappedText, start, end, 'select');\r\n        this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Insert heading at current line\r\n     * @param {number} level - Heading level (1-3)\r\n     */\r\n    insertHeading(level: number): void {\r\n        if (!this.editor) return;\r\n\r\n        const start = this.editor.selectionStart;\r\n        const text = this.editor.value;\r\n\r\n        // Find the start of the current line\r\n        const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\r\n        let lineEnd = text.indexOf('\\n', start);\r\n        if (lineEnd === -1) lineEnd = text.length;\r\n\r\n        const currentLine = text.substring(lineStart, lineEnd);\r\n        const prefix = '#'.repeat(level) + ' ';\r\n\r\n        // Check if line already starts with heading markers\r\n        const headingMatch = currentLine.match(/^#+\\s/);\r\n        let newLine;\r\n\r\n        if (headingMatch) {\r\n            // Replace existing heading\r\n            newLine = prefix + currentLine.substring(headingMatch[0].length);\r\n        } else {\r\n            // Add new heading\r\n            newLine = prefix + currentLine;\r\n        }\r\n\r\n        this.editor.setRangeText(newLine, lineStart, lineEnd, 'end');\r\n        this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Insert list at current line or for selected lines\r\n     * @param {string} type - List type ('ordered' or 'unordered')\r\n     */\r\n    insertList(type: 'ordered' | 'unordered'): void {\r\n        if (!this.editor) return;\r\n\r\n        const start = this.editor.selectionStart;\r\n        const end = this.editor.selectionEnd;\r\n        const text = this.editor.value;\r\n\r\n        // Find the start and end of affected lines\r\n        const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\r\n        let lineEnd = text.indexOf('\\n', end);\r\n        if (lineEnd === -1) lineEnd = text.length;\r\n\r\n        const selectedLines = text.substring(lineStart, lineEnd).split('\\n');\r\n        const prefix = type === 'ordered' ? null : '- ';\r\n\r\n        const newLines = selectedLines.map((line, index) => {\r\n            // Remove existing list markers\r\n            const cleanLine = line.replace(/^(?:\\d+\\.\\s|-\\s|\\*\\s)/, '');\r\n\r\n            if (type === 'ordered') {\r\n                return `${index + 1}. ${cleanLine}`;\r\n            }\r\n            // use prefix for unordered lists\r\n            return `${prefix}${cleanLine}`;\r\n        });\r\n\r\n        const newText = newLines.join('\\n');\r\n        this.editor.setRangeText(newText, lineStart, lineEnd, 'end');\r\n        this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Align text (add HTML alignment tags)\r\n     * @param {string} alignment - Alignment type ('left', 'center', 'right')\r\n     */\r\n    alignText(alignment: 'left' | 'center' | 'right'): void {\r\n        if (!this.editor) return;\r\n\r\n        const start = this.editor.selectionStart;\r\n        const end = this.editor.selectionEnd;\r\n        const text = this.editor.value;\r\n\r\n        // Find the start and end of affected lines\r\n        const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\r\n        let lineEnd = text.indexOf('\\n', end);\r\n        if (lineEnd === -1) lineEnd = text.length;\r\n\r\n        const selectedText = text.substring(lineStart, lineEnd);\r\n        const alignedText = `<div style=\"text-align: ${alignment};\">\\n${selectedText}\\n</div>`;\r\n\r\n        this.editor.setRangeText(alignedText, lineStart, lineEnd, 'end');\r\n        this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Insert link at cursor or wrap selection\r\n     */\r\n    insertLink(): void {\r\n        if (!this.editor) return;\r\n\r\n        const start = this.editor.selectionStart;\r\n        const end = this.editor.selectionEnd;\r\n        const selectedText = this.editor.value.substring(start, end);\r\n\r\n        const urlLabel =\r\n            this.resolveTranslation('textEditor.insertLink.enterUrl').text || 'Enter URL:';\r\n        this.showInputModal(urlLabel, 'https://example.com', 'https://').then(\r\n            (url: string | null) => {\r\n                if (!url) return;\r\n\r\n                const linkText = selectedText || 'link text';\r\n                const markdown = `[${linkText}](${url})`;\r\n\r\n                this.editor?.setRangeText(markdown, start, end, 'end');\r\n                this.editor?.dispatchEvent(new Event('input', { bubbles: true }));\r\n                this.focusEditor();\r\n            }\r\n        );\r\n    },\r\n\r\n    /**\r\n     * Update word and character count\r\n     */\r\n    updateWordCount(): void {\r\n        if (!this.editor || !this.wordCountDisplay) return;\r\n\r\n        const text = this.editor.value;\r\n        const chars = text.length;\r\n        const trimmedText = text.trim();\r\n        const words = trimmedText === '' ? 0 : trimmedText.split(/\\s+/).length;\r\n\r\n        // Use internal resolver (handles fallback + params)\r\n        const wc = this.resolveTranslation('textEditor.status.wordCount', { words, chars });\r\n        if (wc.translated) {\r\n            this.wordCountDisplay.textContent = wc.text;\r\n            return;\r\n        }\r\n\r\n        // Fallback to English\r\n        this.wordCountDisplay.textContent = `Words: ${words} | Characters: ${chars}`;\r\n    },\r\n\r\n    /**\r\n     * Update cursor position display\r\n     */\r\n    updateCursorPosition(): void {\r\n        if (!this.editor || !this.lineColDisplay) return;\r\n\r\n        const text = this.editor.value;\r\n        const pos = this.editor.selectionStart;\r\n\r\n        const textBeforeCursor = text.substring(0, pos);\r\n        const lines = textBeforeCursor.split('\\n');\r\n        const line = lines.length;\r\n        const lastLine = lines[lines.length - 1] || '';\r\n        const col = lastLine.length + 1;\r\n\r\n        // Use internal resolver (handles fallback + params)\r\n        const posMsg = this.resolveTranslation('textEditor.status.position', { line, col });\r\n        if (posMsg.translated) {\r\n            this.lineColDisplay.textContent = posMsg.text;\r\n            return;\r\n        }\r\n\r\n        // Fallback to English\r\n        this.lineColDisplay.textContent = `Line ${line}, Col ${col}`;\r\n    },\r\n\r\n    /**\r\n     * Toggle find and replace panel\r\n     */\r\n    toggleFindReplace(): void {\r\n        if (!this.findReplacePanel) return;\r\n\r\n        if (this.findReplacePanel.style.display === 'none') {\r\n            this.findReplacePanel.style.display = 'flex';\r\n            if (this.findInput) {\r\n                this.findInput.focus();\r\n            }\r\n        } else {\r\n            this.findReplacePanel.style.display = 'none';\r\n            this.focusEditor();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Close find and replace panel\r\n     */\r\n    closeFindReplace(): void {\r\n        if (!this.findReplacePanel) return;\r\n        this.findReplacePanel.style.display = 'none';\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Find next occurrence\r\n     */\r\n    findNext(): void {\r\n        if (!this.editor || !this.findInput) return;\r\n\r\n        const searchText = this.findInput.value;\r\n        if (!searchText) return;\r\n\r\n        const text = this.editor.value;\r\n        const start = this.editor.selectionEnd;\r\n        const index = text.indexOf(searchText, start);\r\n\r\n        if (index !== -1) {\r\n            this.editor.setSelectionRange(index, index + searchText.length);\r\n            this.editor.focus();\r\n        } else {\r\n            // Wrap around to beginning\r\n            const firstIndex = text.indexOf(searchText);\r\n            if (firstIndex !== -1) {\r\n                this.editor.setSelectionRange(firstIndex, firstIndex + searchText.length);\r\n                this.editor.focus();\r\n            } else {\r\n                const message =\r\n                    this.resolveTranslation('textEditor.findReplace.noMatch').text ||\r\n                    'No match found';\r\n                this.showToast(message, 'info');\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Replace one occurrence\r\n     */\r\n    replaceOne(): void {\r\n        if (!this.editor || !this.findInput || !this.replaceInput) return;\r\n\r\n        const searchText = this.findInput.value;\r\n        const replaceText = this.replaceInput.value;\r\n\r\n        if (!searchText) return;\r\n\r\n        const start = this.editor.selectionStart;\r\n        const end = this.editor.selectionEnd;\r\n        const selectedText = this.editor.value.substring(start, end);\r\n\r\n        if (selectedText === searchText) {\r\n            this.editor.setRangeText(replaceText, start, end, 'end');\r\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n            this.findNext(); // Find next occurrence\r\n        } else {\r\n            this.findNext(); // Find first occurrence\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Replace all occurrences\r\n     */\r\n    replaceAll(): void {\r\n        if (!this.editor || !this.findInput || !this.replaceInput) return;\r\n\r\n        const searchText = this.findInput.value;\r\n        const replaceText = this.replaceInput.value;\r\n\r\n        if (!searchText) return;\r\n\r\n        const text = this.editor.value;\r\n        const parts = text.split(searchText);\r\n        const count = parts.length - 1;\r\n\r\n        if (count > 0) {\r\n            const newText = parts.join(replaceText);\r\n            this.editor.value = newText;\r\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n\r\n            const message =\r\n                this.resolveTranslation('textEditor.findReplace.replacedCount', { count }).text ||\r\n                `Replaced ${count} occurrence(s)`;\r\n            this.showToast(message, 'success');\r\n        } else {\r\n            const message =\r\n                this.resolveTranslation('textEditor.findReplace.noMatch').text || 'No match found';\r\n            this.showToast(message, 'info');\r\n        }\r\n\r\n        this.focusEditor();\r\n    },\r\n\r\n    /**\r\n     * Show toast notification\r\n     * @param {string} message - Message to display\r\n     * @param {string} type - Toast type: 'info', 'success', 'error'\r\n     * @param {number} duration - Display duration in ms (default: 3000)\r\n     */\r\n    showToast(message: string, type: 'info' | 'success' | 'error' = 'info', duration = 3000): void {\r\n        if (!this.container) return;\r\n\r\n        const toast = document.createElement('div');\r\n        toast.className = `text-editor-toast text-editor-toast-${type}`;\r\n        toast.textContent = message;\r\n\r\n        // Add to container\r\n        if (!this.toastContainer) {\r\n            this.toastContainer = document.createElement('div');\r\n            this.toastContainer.className = 'text-editor-toast-container';\r\n            this.container.appendChild(this.toastContainer);\r\n        }\r\n\r\n        this.toastContainer.appendChild(toast);\r\n\r\n        // Trigger animation\r\n        setTimeout(() => toast.classList.add('show'), 10);\r\n\r\n        // Auto-remove\r\n        setTimeout(() => {\r\n            toast.classList.remove('show');\r\n            setTimeout(() => toast.remove(), 300);\r\n        }, duration);\r\n    },\r\n\r\n    /**\r\n     * Show input modal dialog\r\n     * @param {string} title - Modal title\r\n     * @param {string} placeholder - Input placeholder\r\n     * @param {string} defaultValue - Default input value\r\n     * @returns {Promise<string|null>} Resolves with input value or null if cancelled\r\n     */\r\n    showInputModal(title: string, defaultValue = '', placeholder = ''): Promise<string | null> {\r\n        return new Promise(resolve => {\r\n            const modal = document.createElement('div');\r\n            modal.className = 'text-editor-modal-overlay';\r\n\r\n            modal.innerHTML = `\r\n                    <div class=\"text-editor-modal\">\r\n                        <div class=\"text-editor-modal-header\">\r\n                            <h3>${title}</h3>\r\n                        </div>\r\n                        <div class=\"text-editor-modal-body\">\r\n                            <input type=\"text\" class=\"text-editor-modal-input\" placeholder=\"${placeholder}\" value=\"${defaultValue}\">\r\n                        </div>\r\n                        <div class=\"text-editor-modal-footer\">\r\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-cancel\">Cancel</button>\r\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-confirm\">OK</button>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n\r\n            document.body.appendChild(modal);\r\n\r\n            const input = modal.querySelector(\r\n                '.text-editor-modal-input'\r\n            ) as HTMLInputElement | null;\r\n            const cancelBtn = modal.querySelector(\r\n                '.text-editor-modal-btn-cancel'\r\n            ) as HTMLButtonElement | null;\r\n            const confirmBtn = modal.querySelector(\r\n                '.text-editor-modal-btn-confirm'\r\n            ) as HTMLButtonElement | null;\r\n\r\n            if (!input || !cancelBtn || !confirmBtn) {\r\n                modal.remove();\r\n                resolve(null);\r\n                return;\r\n            }\r\n\r\n            // Focus input and select text\r\n            setTimeout(() => {\r\n                input?.focus();\r\n                input?.select();\r\n            }, 50);\r\n\r\n            const cleanup = () => {\r\n                modal.classList.add('closing');\r\n                setTimeout(() => modal.remove(), 200);\r\n            };\r\n\r\n            const handleConfirm = () => {\r\n                const value = input?.value.trim();\r\n                cleanup();\r\n                resolve(((value || '') as string) || null);\r\n            };\r\n\r\n            const handleCancel = () => {\r\n                cleanup();\r\n                resolve(null);\r\n            };\r\n\r\n            // Event listeners\r\n            confirmBtn.addEventListener('click', handleConfirm);\r\n            cancelBtn.addEventListener('click', handleCancel);\r\n            input.addEventListener('keydown', (e: KeyboardEvent) => {\r\n                if (e.key === 'Enter') {\r\n                    e.preventDefault();\r\n                    handleConfirm();\r\n                } else if (e.key === 'Escape') {\r\n                    e.preventDefault();\r\n                    handleCancel();\r\n                }\r\n            });\r\n\r\n            // Click outside to close\r\n            modal.addEventListener('click', (e: MouseEvent) => {\r\n                if (e.target === modal) {\r\n                    handleCancel();\r\n                }\r\n            });\r\n\r\n            // Trigger animation\r\n            setTimeout(() => modal.classList.add('show'), 10);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Destroy text editor\r\n     */\r\n    destroy(): void {\r\n        if (this.container) {\r\n            this.container.innerHTML = '';\r\n            this.container = null;\r\n        }\r\n        this.editor = null;\r\n        this.statusBar = null;\r\n        this.saveButton = null;\r\n        this.fileInput = null;\r\n        this.wordCountDisplay = null;\r\n        this.lineColDisplay = null;\r\n        this.findReplacePanel = null;\r\n        this.findInput = null;\r\n        this.replaceInput = null;\r\n        this.toastContainer = null;\r\n    },\r\n};\r\n\r\n// Export to global scope\r\nwindow.TextEditorSystem = TextEditorSystem;\r\n\r\n// Auto-init if container exists on load\r\nif (document.readyState === 'loading') {\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        const container = document.getElementById('text-editor-container');\r\n        if (container) {\r\n            TextEditorSystem.init(container);\r\n        }\r\n    });\r\n} else {\r\n    const container = document.getElementById('text-editor-container');\r\n    if (container) {\r\n        TextEditorSystem.init(container);\r\n    }\r\n}\r\n// End of TextEditorSystem module\r\n"]}