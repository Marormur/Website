{"version":3,"file":"text-editor.js","sourceRoot":"","sources":["../src/ts/text-editor.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Text Editor Module\n * Replaces text.html iframe with inline text editor\n */\n\ntype WrapMode = 'soft' | 'off';\n\ninterface FileMeta {\n    fileName?: string;\n    repo?: string;\n    path?: string;\n}\n\ninterface RemoteFilePayload extends FileMeta {\n    content: string;\n}\n\ninterface LoadErrorPayload extends FileMeta {\n    message?: string;\n}\n\ntype StatusState =\n    | { type: 'plain'; text: string }\n    | { type: 'i18n'; key: string; params?: Record<string, unknown> };\n\ninterface TextEditorSystemInternal extends TextEditorSystemAPI {\n    container: HTMLElement | null;\n    editor: HTMLTextAreaElement | null;\n    statusBar: HTMLElement | null;\n    saveButton: HTMLButtonElement | null;\n    fileInput: HTMLInputElement | null;\n    wrapMode: WrapMode;\n    currentRemoteFile: RemoteFilePayload | null;\n    statusState: StatusState | null;\n    wordCountDisplay: HTMLElement | null;\n    lineColDisplay: HTMLElement | null;\n    findReplacePanel: HTMLElement | null;\n    findInput: HTMLInputElement | null;\n    replaceInput: HTMLInputElement | null;\n    toastContainer: HTMLElement | null;\n    \n    // Internal methods\n    init(containerOrId: HTMLElement | string): void;\n        render(): void;\n        cacheElements(): void;\n        loadWrapPreference(): void;\n        attachListeners(): void;\n        loadSavedContent(): void;\n        syncSaveButtonState(): void;\n        registerActions(): void;\n        updateCSSVariables(): void;\n        applyWrapMode(mode?: string): void;\n        setStatusPlain(msg: string): void;\n        focusEditor(): void;\n        handleEditorInput(): void;\n        updateWordCount(): void;\n        updateCursorPosition(): void;\n        handleFileSelect(event: Event): void;\n        updateDocumentTitle(): void;\n        clearStatus(): void;\n        toggleWrapMode(): void;\n        execCommand(cmd: string): void;\n            handlePaste(e?: Event): void;\n        selectAll(): void;\n        wrapSelection(before: string, after: string): void;\n        insertHeading(level: number): void;\n        insertList(type: string): void;\n        alignText(align: string): void;\n        insertLink(): void;\n        toggleFindReplace(): void;\n        findNext(): void;\n        replaceOne(): void;\n        replaceAll(): void;\n        closeFindReplace(): void;\n            formatFileLabel(meta?: unknown): string;\n        setStatusLocalized(key: string, params?: unknown): void;\n            resolveTranslation(key: string, params?: unknown): { text: string; translated: boolean };\n        showToast(msg: string, type?: string): void;\n        insertTextAtCursor(text: string): void;\n        showInputModal(title: string, defaultValue?: string, placeholder?: string): Promise<string | null>;\n            applyStatusState(state?: StatusState): void;\n            clearEditor(): void;\n            openFile(): void;\n            saveFile(): void;\n        loadRemoteFile(payload: Partial<RemoteFilePayload>): void;\n        showLoading(payload?: unknown): void;\n        showLoadError(payload?: unknown): void;\n        handleMenuAction(action: string): void;\n        destroy(): void;\n}\n\nconst TextEditorSystem: TextEditorSystemInternal = {\n    container: null,\n    editor: null,\n    statusBar: null,\n    saveButton: null,\n    fileInput: null,\n    wrapMode: 'off',\n    currentRemoteFile: null,\n    statusState: null,\n    wordCountDisplay: null,\n    lineColDisplay: null,\n    findReplacePanel: null,\n    findInput: null,\n    replaceInput: null,\n    toastContainer: null,\n\n        /**\n         * Initialize text editor in container\n         * @param {HTMLElement|string} containerOrId - Container element or ID\n         */\n        init(containerOrId: HTMLElement | string): void {\n            const container =\n                typeof containerOrId === 'string'\n                    ? document.getElementById(containerOrId)\n                    : containerOrId;\n\n            if (!container) {\n                console.error('Text editor container not found:', containerOrId);\n                return;\n            }\n\n            this.container = container;\n            this.render();\n            this.cacheElements();\n            this.loadWrapPreference();\n            this.attachListeners();\n            this.loadSavedContent();\n            this.syncSaveButtonState();\n\n            // Register text editor actions with ActionBus\n            if (window.ActionBus) {\n                this.registerActions();\n            }\n        },\n\n        /**\n         * Render text editor UI\n         */\n        render(): void {\n            if (!this.container) return;\n\n            this.container.innerHTML = `\n                <div class=\"dialog-content flex flex-col h-full\" style=\"background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827);\">\n                    <!-- File Operations Toolbar -->\n                    <div id=\"text-toolbar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: flex; gap: 8px; align-items: center; flex-wrap: wrap;\">\n                        <button type=\"button\" data-action=\"textEditor:clear\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.clear\" data-i18n-title=\"textEditor.toolbar.clear\">Neu</button>\n                        <button type=\"button\" data-action=\"textEditor:open\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.open\" data-i18n-title=\"textEditor.toolbar.open\">Öffnen</button>\n                        <button type=\"button\" data-action=\"textEditor:save\" class=\"text-editor-btn\" id=\"text-save-button\" data-i18n=\"textEditor.toolbar.save\" data-i18n-title=\"textEditor.toolbar.save\">Speichern</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:bold\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.bold\" style=\"font-weight: bold;\">B</button>\n                        <button type=\"button\" data-action=\"textEditor:italic\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.italic\" style=\"font-style: italic;\">I</button>\n                        <button type=\"button\" data-action=\"textEditor:underline\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.underline\" style=\"text-decoration: underline;\">U</button>\n                        <button type=\"button\" data-action=\"textEditor:strikethrough\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.strikeThrough\" style=\"text-decoration: line-through;\">S</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:heading1\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading1\">H1</button>\n                        <button type=\"button\" data-action=\"textEditor:heading2\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading2\">H2</button>\n                        <button type=\"button\" data-action=\"textEditor:heading3\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading3\">H3</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:unorderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.unorderedList\">• List</button>\n                        <button type=\"button\" data-action=\"textEditor:orderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.orderedList\">1. List</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:alignLeft\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignLeft\">⇤</button>\n                        <button type=\"button\" data-action=\"textEditor:alignCenter\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignCenter\">≡</button>\n                        <button type=\"button\" data-action=\"textEditor:alignRight\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignRight\">⇥</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:insertLink\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.insertLink\">🔗</button>\n                        <button type=\"button\" data-action=\"textEditor:findReplace\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.findReplace\">🔍</button>\n                        <input type=\"file\" id=\"text-file-input\"\n                            accept=\".txt,.md,.markdown,.html,.htm,.css,.scss,.js,.jsx,.ts,.tsx,.json,.yml,.yaml,.xml,.csv,.tsv,.ini,.cfg,.conf,.env,.gitignore,.log,.c,.h,.cpp,.hpp,.java,.kt,.swift,.cs,.py,.rb,.php,.rs,.go,.sh,.bash,.zsh,.fish,.ps1,.bat\"\n                            style=\"display:none\">\n                    </div>\n                    <!-- Find and Replace Panel (Hidden by default) -->\n                    <div id=\"find-replace-panel\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: none; gap: 8px; align-items: center; flex-wrap: wrap;\">\n                        <input type=\"text\" id=\"find-input\" data-i18n-placeholder=\"textEditor.findReplace.find\" placeholder=\"Find...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\n                        <input type=\"text\" id=\"replace-input\" data-i18n-placeholder=\"textEditor.findReplace.replace\" placeholder=\"Replace...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\n                        <button type=\"button\" data-action=\"textEditor:findNext\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.next\" data-i18n-title=\"textEditor.findReplace.next\" style=\"font-size: 12px;\">Next</button>\n                        <button type=\"button\" data-action=\"textEditor:replaceOne\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceOne\" data-i18n-title=\"textEditor.findReplace.replaceOne\" style=\"font-size: 12px;\">Replace</button>\n                        <button type=\"button\" data-action=\"textEditor:replaceAll\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceAll\" data-i18n-title=\"textEditor.findReplace.replaceAll\" style=\"font-size: 12px;\">Replace All</button>\n                        <button type=\"button\" data-action=\"textEditor:closeFindReplace\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.close\" data-i18n-title=\"textEditor.findReplace.close\" style=\"font-size: 12px;\">✕</button>\n                    </div>\n                    <div id=\"text-file-status\" class=\"flex-none\" style=\"padding: 8px 16px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827); font-size: 14px; opacity: 0.75; display: none;\"></div>\n                    <textarea id=\"text-editor-textarea\" spellcheck=\"false\" wrap=\"off\" class=\"flex-1 w-full resize-none p-4 border-0 outline-none\"\n                        style=\"background: var(--editor-surface-bg, #ffffff); color: inherit; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace; font-size: 14px; line-height: 1.6; tab-size: 4;\"\n                        title=\"textarea\"></textarea>\n                    <!-- Status Bar with Word Count -->\n                    <div id=\"word-count-bar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 6px 12px; border-top: 1px solid var(--editor-toolbar-border, #d1d5db); font-size: 12px; color: var(--editor-text, #111827); opacity: 0.75; display: flex; justify-content: space-between;\">\n                        <span id=\"word-count-display\" data-i18n=\"textEditor.status.wordCount\" data-i18n-params='{\"words\":0,\"chars\":0}'>Words: 0 | Characters: 0</span>\n                        <span id=\"line-col-display\" data-i18n=\"textEditor.status.position\" data-i18n-params='{\"line\":1,\"col\":1}'>Line 1, Col 1</span>\n                    </div>\n                </div>\n            `;\n\n            // Apply CSS variables for dark mode support\n            this.updateCSSVariables();\n\n            // Apply i18n translations\n            if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\n                window.appI18n.applyTranslations();\n            }\n        },\n\n        /**\n         * Update CSS variables for dark mode\n         */\n        updateCSSVariables(): void {\n            if (!this.container) return;\n\n            const isDark = document.documentElement.classList.contains('dark');\n\n            this.container.style.setProperty('--editor-body-bg', isDark ? '#0f172a' : '#fafafa');\n            this.container.style.setProperty('--editor-text', isDark ? '#e5e7eb' : '#111827');\n            this.container.style.setProperty('--editor-toolbar-bg', isDark ? '#1f2937' : '#f5f5f5');\n            this.container.style.setProperty(\n                '--editor-toolbar-border',\n                isDark ? '#374151' : '#d1d5db'\n            );\n            this.container.style.setProperty(\n                '--editor-toolbar-button-bg',\n                isDark ? '#111827' : '#ffffff'\n            );\n            this.container.style.setProperty(\n                '--editor-toolbar-button-hover',\n                isDark ? '#1f2937' : '#e5e7eb'\n            );\n            this.container.style.setProperty(\n                '--editor-toolbar-button-border',\n                isDark ? '#475569' : '#d1d5db'\n            );\n            this.container.style.setProperty('--editor-surface-bg', isDark ? '#111827' : '#ffffff');\n\n            // Apply button styles\n            const buttons = this.container.querySelectorAll<HTMLElement>('.text-editor-btn');\n            buttons.forEach(btn => {\n                btn.style.margin = '0';\n                btn.style.padding = '6px 12px';\n                btn.style.fontSize = '14px';\n                btn.style.border = `1px solid ${isDark ? '#475569' : '#d1d5db'}`;\n                btn.style.background = isDark ? '#111827' : '#ffffff';\n                btn.style.cursor = 'pointer';\n                btn.style.color = 'inherit';\n                btn.style.borderRadius = '6px';\n            });\n        },\n\n        /**\n         * Cache DOM elements\n         */\n        cacheElements(): void {\n            if (!this.container) return;\n\n            this.editor = this.container.querySelector<HTMLTextAreaElement>(\n                '#text-editor-textarea'\n            );\n            this.statusBar = this.container.querySelector<HTMLElement>('#text-file-status');\n            this.saveButton = this.container.querySelector<HTMLButtonElement>('#text-save-button');\n            this.fileInput = this.container.querySelector<HTMLInputElement>('#text-file-input');\n            this.wordCountDisplay = this.container.querySelector<HTMLElement>(\n                '#word-count-display'\n            );\n            this.lineColDisplay = this.container.querySelector<HTMLElement>('#line-col-display');\n            this.findReplacePanel = this.container.querySelector<HTMLElement>(\n                '#find-replace-panel'\n            );\n            this.findInput = this.container.querySelector<HTMLInputElement>('#find-input');\n            this.replaceInput = this.container.querySelector<HTMLInputElement>('#replace-input');\n        },\n\n        /**\n         * Load wrap mode preference\n         */\n        loadWrapPreference(): void {\n            const storedWrapMode = localStorage.getItem('textEditorWrapMode');\n            this.wrapMode = storedWrapMode === 'soft' ? 'soft' : 'off';\n            this.applyWrapMode(this.wrapMode);\n        },\n\n        /**\n         * Apply wrap mode\n         * @param {string} mode - Wrap mode (soft|off)\n         */\n        applyWrapMode(mode?: string): void {\n            if (!this.editor) return;\n            const effective = mode ?? this.wrapMode;\n            const normalized = effective === 'soft' ? 'soft' : 'off';\n            this.wrapMode = normalized;\n            this.editor.wrap = normalized;\n            this.editor.style.whiteSpace = normalized === 'soft' ? 'pre-wrap' : 'pre';\n\n            try {\n                localStorage.setItem('textEditorWrapMode', normalized);\n            } catch (err) {\n                console.warn('Wrap preference could not be stored:', err);\n            }\n        },\n\n        /**\n         * Toggle wrap mode\n         */\n        toggleWrapMode(): void {\n            const next = this.wrapMode === 'soft' ? 'off' : 'soft';\n            this.applyWrapMode(next);\n            this.setStatusPlain(\n                next === 'soft' ? 'Zeilenumbruch aktiviert' : 'Zeilenumbruch deaktiviert'\n            );\n            this.focusEditor();\n        },\n\n        /**\n         * Attach event listeners\n         */\n        attachListeners(): void {\n            if (!this.editor || !this.fileInput) return;\n\n            // Editor input listener for auto-save and word count\n            this.editor.addEventListener('input', () => {\n                this.handleEditorInput();\n                this.updateWordCount();\n            });\n\n            // Editor selection and cursor listener\n            this.editor.addEventListener('click', () => {\n                this.updateCursorPosition();\n            });\n\n            this.editor.addEventListener('keyup', () => {\n                this.updateCursorPosition();\n            });\n\n            // File input change listener\n            this.fileInput.addEventListener('change', event => {\n                this.handleFileSelect(event);\n            });\n\n            // Listen for theme changes to update CSS variables\n            const themeObserver = new MutationObserver(() => {\n                this.updateCSSVariables();\n            });\n            themeObserver.observe(document.documentElement, {\n                attributes: true,\n                attributeFilter: ['class'],\n            });\n\n            // Listen for language changes\n            window.addEventListener('languagePreferenceChange', () => {\n                this.updateDocumentTitle();\n                this.applyStatusState();\n            });\n\n            // Initial word count and cursor position\n            this.updateWordCount();\n            this.updateCursorPosition();\n        },\n\n        /**\n         * Register actions with ActionBus\n         */\n        registerActions(): void {\n            if (!window.ActionBus) return;\n\n            window.ActionBus.registerAll({\n                'textEditor:clear': () => this.clearEditor(),\n                'textEditor:open': () => this.openFile(),\n                'textEditor:save': () => this.saveFile(),\n                'textEditor:toggleWrap': () => this.toggleWrapMode(),\n                'textEditor:undo': () => this.execCommand('undo'),\n                'textEditor:redo': () => this.execCommand('redo'),\n                'textEditor:cut': () => this.execCommand('cut'),\n                'textEditor:copy': () => this.execCommand('copy'),\n                'textEditor:paste': () => this.handlePaste(),\n                'textEditor:selectAll': () => this.selectAll(),\n                // New formatting actions\n                'textEditor:bold': () => this.wrapSelection('**', '**'),\n                'textEditor:italic': () => this.wrapSelection('*', '*'),\n                'textEditor:underline': () => this.wrapSelection('<u>', '</u>'),\n                'textEditor:strikethrough': () => this.wrapSelection('~~', '~~'),\n                'textEditor:heading1': () => this.insertHeading(1),\n                'textEditor:heading2': () => this.insertHeading(2),\n                'textEditor:heading3': () => this.insertHeading(3),\n                'textEditor:unorderedList': () => this.insertList('unordered'),\n                'textEditor:orderedList': () => this.insertList('ordered'),\n                'textEditor:alignLeft': () => this.alignText('left'),\n                'textEditor:alignCenter': () => this.alignText('center'),\n                'textEditor:alignRight': () => this.alignText('right'),\n                'textEditor:insertLink': () => this.insertLink(),\n                'textEditor:findReplace': () => this.toggleFindReplace(),\n                'textEditor:findNext': () => this.findNext(),\n                'textEditor:replaceOne': () => this.replaceOne(),\n                'textEditor:replaceAll': () => this.replaceAll(),\n                'textEditor:closeFindReplace': () => this.closeFindReplace(),\n            });\n        },\n\n        /**\n         * Handle editor input\n         */\n        handleEditorInput(): void {\n            if (!this.editor) return;\n\n            try {\n                localStorage.setItem('textEditorContent', this.editor.value);\n            } catch (err) {\n                console.warn('Could not save editor content to localStorage:', err);\n            }\n\n            this.syncSaveButtonState();\n        },\n\n        /**\n         * Handle file selection\n         */\n        handleFileSelect(event: Event): void {\n            const input = event.target as HTMLInputElement | null;\n            const file = input?.files?.[0];\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = (e: ProgressEvent<FileReader>) => {\n                const content = e.target?.result;\n                if (typeof content === 'string' && this.editor) {\n                    this.editor.value = content;\n                    this.updateWordCount();\n                    this.updateCursorPosition();\n                }\n                    this.currentRemoteFile = { fileName: file.name, content: '' };\n                this.updateDocumentTitle();\n                this.setStatusPlain(file.name);\n                this.syncSaveButtonState();\n                this.focusEditor();\n            };\n            reader.readAsText(file);\n\n            // Reset input for future opens\n            if (input) {\n                input.value = '';\n            }\n        },\n\n        /**\n         * Load saved content from localStorage\n         */\n        loadSavedContent(): void {\n            if (!this.editor) return;\n\n            try {\n                const saved = localStorage.getItem('textEditorContent');\n                if (saved) {\n                    this.editor.value = saved;\n                    this.updateWordCount();\n                    this.updateCursorPosition();\n                }\n            } catch (err) {\n                console.warn('Could not load saved content:', err);\n            }\n        },\n\n        /**\n         * Sync save button state\n         */\n        syncSaveButtonState(): void {\n            if (!this.saveButton || !this.editor) return;\n\n            this.saveButton.disabled = this.editor.value.length === 0;\n        },\n\n        /**\n         * Focus editor\n         */\n        focusEditor(): void {\n            if (this.editor) {\n                this.editor.focus();\n            }\n        },\n\n        /**\n         * Clear editor\n         */\n        clearEditor(): void {\n            if (!this.editor) return;\n\n            this.editor.value = '';\n            this.updateWordCount();\n            this.updateCursorPosition();\n            localStorage.removeItem('textEditorContent');\n            this.currentRemoteFile = null;\n            this.updateDocumentTitle();\n            this.clearStatus();\n            this.syncSaveButtonState();\n            this.focusEditor();\n        },\n\n        /**\n         * Open file picker\n         */\n        openFile(): void {\n            if (this.fileInput) {\n                this.fileInput.click();\n            }\n        },\n\n        /**\n         * Save file\n         */\n        saveFile(): void {\n            if (!this.editor) return;\n\n            const content = this.editor.value;\n            const blob = new Blob([content], {\n                type: 'text/plain;charset=utf-8',\n            });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n\n            const firstLine = content.split('\\n')[0] || 'text';\n            const sanitized =\n                firstLine\n                    .trim()\n                    .substring(0, 20)\n                    .replace(/[^a-zA-Z0-9-_]/g, '') || 'text';\n            a.download = `${sanitized}.txt`;\n\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n        },\n\n        /**\n         * Execute document command\n         * @param {string} command - Command to execute\n         */\n        execCommand(command: string): void {\n            this.focusEditor();\n            try {\n                if (!document.execCommand(command)) {\n                    this.setStatusPlain(`Command ${command} not available`);\n                }\n            } catch (err) {\n                console.warn(`Command ${command} failed:`, err);\n                this.setStatusPlain(`Command ${command} failed`);\n            }\n        },\n\n        /**\n         * Handle paste operation\n         */\n    handlePaste(e?: Event): void {\n            this.focusEditor();\n\n            if (navigator.clipboard && typeof navigator.clipboard.readText === 'function') {\n                navigator.clipboard\n                    .readText()\n                    .then(text => {\n                        if (text && this.editor) {\n                            this.insertTextAtCursor(text);\n                        }\n                    })\n                    .catch(() => {\n                        this.execCommand('paste');\n                    });\n            } else {\n                this.execCommand('paste');\n            }\n        },\n\n        /**\n         * Select all text\n         */\n        selectAll(): void {\n            this.focusEditor();\n            if (this.editor) {\n                this.editor.select();\n            }\n        },\n\n        /**\n         * Insert text at cursor position\n         * @param {string} text - Text to insert\n         */\n        insertTextAtCursor(text: string): void {\n            if (!this.editor || typeof text !== 'string') return;\n\n            const start =\n                typeof this.editor.selectionStart === 'number'\n                    ? this.editor.selectionStart\n                    : this.editor.value.length;\n            const end =\n                typeof this.editor.selectionEnd === 'number' ? this.editor.selectionEnd : start;\n\n            this.editor.setRangeText(text, start, end, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n        },\n\n        /**\n         * Update document title\n         */\n        updateDocumentTitle(): void {\n            const titleKey =\n                this.currentRemoteFile && this.currentRemoteFile.fileName\n                    ? 'textEditor.documentTitleWithFile'\n                    : 'textEditor.documentTitle';\n\n            const params =\n                this.currentRemoteFile && this.currentRemoteFile.fileName\n                    ? { fileName: this.currentRemoteFile.fileName }\n                    : undefined;\n\n            const { text } = this.resolveTranslation(titleKey, params);\n            document.title = text;\n        },\n\n        /**\n         * Format file label for display\n         * @param {Object} meta - File metadata\n         * @returns {string} Formatted label\n         */\n        formatFileLabel(meta: FileMeta = {}): string {\n            const parts = [];\n            if (meta.repo) parts.push(meta.repo);\n            if (meta.path) {\n                parts.push(meta.path);\n            } else if (meta.fileName) {\n                parts.push(meta.fileName);\n            }\n            return parts.join(' / ');\n        },\n\n        /**\n         * Set plain text status\n         * @param {string} text - Status text\n         */\n        setStatusPlain(text: string | null | undefined): void {\n            if (!text) {\n                this.clearStatus();\n                return;\n            }\n            this.statusState = { type: 'plain', text };\n            this.applyStatusState();\n        },\n\n        /**\n         * Set localized status\n         * @param {string} key - Translation key\n         * @param {Object} params - Translation parameters\n         */\n        setStatusLocalized(key: string, params?: Record<string, unknown>): void {\n            this.statusState = {\n                type: 'i18n',\n                key,\n                params: params || undefined,\n            };\n            this.applyStatusState();\n        },\n\n        /**\n         * Clear status\n         */\n        clearStatus(): void {\n            this.statusState = null;\n            this.applyStatusState();\n        },\n\n        /**\n         * Apply status state to UI\n         */\n        applyStatusState(): void {\n            if (!this.statusBar) return;\n\n            if (!this.statusState) {\n                this.statusBar.textContent = '';\n                this.statusBar.style.display = 'none';\n                this.statusBar.removeAttribute('data-i18n');\n                this.statusBar.removeAttribute('data-i18n-params');\n                return;\n            }\n\n            if (this.statusState.type === 'i18n') {\n                const { text, translated } = this.resolveTranslation(\n                    this.statusState.key,\n                    this.statusState.params\n                );\n                this.statusBar.textContent = text;\n\n                if (translated) {\n                    this.statusBar.setAttribute('data-i18n', this.statusState.key);\n                    if (this.statusState.params) {\n                        this.statusBar.setAttribute(\n                            'data-i18n-params',\n                            JSON.stringify(this.statusState.params)\n                        );\n                    } else {\n                        this.statusBar.removeAttribute('data-i18n-params');\n                    }\n\n                    if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\n                        window.appI18n.applyTranslations();\n                    }\n                } else {\n                    this.statusBar.removeAttribute('data-i18n');\n                    this.statusBar.removeAttribute('data-i18n-params');\n                }\n            } else {\n                this.statusBar.removeAttribute('data-i18n');\n                this.statusBar.removeAttribute('data-i18n-params');\n                this.statusBar.textContent = this.statusState.text;\n            }\n\n            this.statusBar.style.display = 'block';\n        },\n\n        /**\n         * Resolve translation\n         * @param {string} key - Translation key\n         * @param {Object} params - Translation parameters\n         * @returns {Object} Resolved translation\n         */\n        resolveTranslation(\n            key: string,\n            params?: Record<string, unknown>\n        ): { text: string; translated: boolean } {\n            if (!key) return { text: '', translated: false };\n\n            const fallbackMessages = {\n                'textEditor.documentTitle': () => 'Texteditor',\n                    'textEditor.documentTitleWithFile': (p: unknown) => {\n                        const fileName = p && (p as any).fileName ? (p as any).fileName : '';\n                    return fileName ? `Texteditor – ${fileName}` : 'Texteditor';\n                },\n                'textEditor.status.loading': () => 'Lade Datei …',\n                    'textEditor.status.loadingWithLabel': (p: unknown) => {\n                        const label = p && (p as any).label ? (p as any).label : '';\n                    return label ? `${label} (lädt …)` : 'Lade Datei …';\n                },\n                'textEditor.status.loadError': () => 'Datei konnte nicht geladen werden.',\n                'textEditor.status.rateLimit': () =>\n                    'GitHub Rate Limit erreicht. Bitte versuche es später erneut.',\n                    'textEditor.status.wordCount': (p: unknown) => {\n                        const words = p && typeof (p as any).words === 'number' ? (p as any).words : 0;\n                        const chars = p && typeof (p as any).chars === 'number' ? (p as any).chars : 0;\n                    return `Words: ${words} | Characters: ${chars}`;\n                },\n                    'textEditor.status.position': (p: unknown) => {\n                        const line = p && typeof (p as any).line === 'number' ? (p as any).line : 1;\n                        const col = p && typeof (p as any).col === 'number' ? (p as any).col : 1;\n                    return `Line ${line}, Col ${col}`;\n                },\n                'textEditor.findReplace.noMatch': () => 'No match found',\n                    'textEditor.findReplace.replacedCount': (p: unknown) => {\n                        const count = p && typeof (p as any).count === 'number' ? (p as any).count : 0;\n                    return `Replaced ${count} occurrence(s)`;\n                },\n                } as Record<string, ((...args: unknown[]) => string) | (() => string)>;\n\n            try {\n                if (window.appI18n && typeof window.appI18n.translate === 'function') {\n                    const translated = window.appI18n.translate(key);\n                    if (translated && translated !== key) {\n                        return { text: translated, translated: true };\n                    }\n                }\n            } catch (err) {\n                console.warn('Translation failed, falling back:', err);\n            }\n\n            const fallbackFn = fallbackMessages[key];\n            if (typeof fallbackFn === 'function') {\n                return { text: fallbackFn(params || {}), translated: false };\n            }\n\n            return { text: key, translated: false };\n        },\n\n        // ==================== Public API for Finder Integration ====================\n\n        /**\n         * Load remote file into editor\n         * @param {Object} payload - File payload\n         * @param {string} payload.content - File content\n         * @param {string} [payload.fileName] - File name\n         * @param {string} [payload.repo] - Repository name\n         * @param {string} [payload.path] - File path\n         */\n        loadRemoteFile(payload: Partial<RemoteFilePayload>): void {\n            if (typeof payload.content !== 'string') {\n                console.warn('Invalid payload for loadRemoteFile:', payload);\n                return;\n            }\n\n            const remotePayload: RemoteFilePayload = {\n                content: payload.content,\n                fileName: payload.fileName,\n                repo: payload.repo,\n                path: payload.path,\n            };\n\n            if (this.editor) {\n                this.editor.value = remotePayload.content;\n                this.updateWordCount();\n                this.updateCursorPosition();\n            }\n\n            this.currentRemoteFile = remotePayload;\n            const label = this.formatFileLabel(remotePayload);\n            this.updateDocumentTitle();\n            this.setStatusPlain(label);\n\n            try {\n                localStorage.setItem('textEditorContent', remotePayload.content);\n            } catch (err) {\n                console.warn('Could not save to localStorage:', err);\n            }\n\n            this.syncSaveButtonState();\n            this.focusEditor();\n        },\n\n        /**\n         * Show loading state\n         * @param {Object} payload - Loading payload\n         * @param {string} [payload.fileName] - File name\n         * @param {string} [payload.repo] - Repository name\n         * @param {string} [payload.path] - File path\n         */\n        showLoading(payload: FileMeta = {}): void {\n            const label = this.formatFileLabel(payload);\n            if (label) {\n                this.setStatusLocalized('textEditor.status.loadingWithLabel', {\n                    label,\n                });\n            } else {\n                this.setStatusLocalized('textEditor.status.loading');\n            }\n        },\n\n        /**\n         * Show load error\n         * @param {Object} payload - Error payload\n         * @param {string} [payload.message] - Error message\n         * @param {string} [payload.fileName] - File name\n         * @param {string} [payload.repo] - Repository name\n         * @param {string} [payload.path] - File path\n         */\n        showLoadError(payload: LoadErrorPayload = {}): void {\n            const label = this.formatFileLabel(payload);\n            const fallback = this.resolveTranslation('textEditor.status.loadError');\n            const message = payload && payload.message ? payload.message : fallback.text;\n\n            if (label) {\n                this.setStatusPlain(`${label} — ${message}`);\n            } else {\n                this.setStatusPlain(message);\n            }\n        },\n\n        /**\n         * Handle menu action\n         * @param {string} action - Action name\n         */\n        handleMenuAction(action: string): void {\n            if (!action) return;\n\n            const actionMap: Record<string, string> = {\n                'file:new': 'textEditor:clear',\n                'file:open': 'textEditor:open',\n                'file:save': 'textEditor:save',\n                'edit:undo': 'textEditor:undo',\n                'edit:redo': 'textEditor:redo',\n                'edit:cut': 'textEditor:cut',\n                'edit:copy': 'textEditor:copy',\n                'edit:paste': 'textEditor:paste',\n                'edit:selectAll': 'textEditor:selectAll',\n                'view:toggleWrap': 'textEditor:toggleWrap',\n            };\n\n            const mappedAction = actionMap[action];\n            if (mappedAction && window.ActionBus) {\n                window.ActionBus.execute(mappedAction);\n            } else {\n                console.warn('Unknown menu action:', action);\n            }\n        },\n\n        // ==================== New Formatting Methods ====================\n\n        /**\n         * Wrap selected text with prefix and suffix\n         * @param {string} prefix - Text to insert before selection\n         * @param {string} suffix - Text to insert after selection\n         */\n        wrapSelection(prefix: string, suffix: string): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const selectedText = this.editor.value.substring(start, end);\n            const wrappedText = prefix + selectedText + suffix;\n\n            this.editor.setRangeText(wrappedText, start, end, 'select');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Insert heading at current line\n         * @param {number} level - Heading level (1-3)\n         */\n        insertHeading(level: number): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const text = this.editor.value;\n\n            // Find the start of the current line\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\n            let lineEnd = text.indexOf('\\n', start);\n            if (lineEnd === -1) lineEnd = text.length;\n\n            const currentLine = text.substring(lineStart, lineEnd);\n            const prefix = '#'.repeat(level) + ' ';\n\n            // Check if line already starts with heading markers\n            const headingMatch = currentLine.match(/^#+\\s/);\n            let newLine;\n\n            if (headingMatch) {\n                // Replace existing heading\n                newLine = prefix + currentLine.substring(headingMatch[0].length);\n            } else {\n                // Add new heading\n                newLine = prefix + currentLine;\n            }\n\n            this.editor.setRangeText(newLine, lineStart, lineEnd, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Insert list at current line or for selected lines\n         * @param {string} type - List type ('ordered' or 'unordered')\n         */\n        insertList(type: 'ordered' | 'unordered'): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const text = this.editor.value;\n\n            // Find the start and end of affected lines\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\n            let lineEnd = text.indexOf('\\n', end);\n            if (lineEnd === -1) lineEnd = text.length;\n\n            const selectedLines = text.substring(lineStart, lineEnd).split('\\n');\n            const prefix = type === 'ordered' ? null : '- ';\n\n            const newLines = selectedLines.map((line, index) => {\n                // Remove existing list markers\n                const cleanLine = line.replace(/^(?:\\d+\\.\\s|-\\s|\\*\\s)/, '');\n\n                if (type === 'ordered') {\n                    return `${index + 1}. ${cleanLine}`;\n                }\n                // use prefix for unordered lists\n                return `${prefix}${cleanLine}`;\n            });\n\n            const newText = newLines.join('\\n');\n            this.editor.setRangeText(newText, lineStart, lineEnd, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Align text (add HTML alignment tags)\n         * @param {string} alignment - Alignment type ('left', 'center', 'right')\n         */\n        alignText(alignment: 'left' | 'center' | 'right'): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const text = this.editor.value;\n\n            // Find the start and end of affected lines\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\n            let lineEnd = text.indexOf('\\n', end);\n            if (lineEnd === -1) lineEnd = text.length;\n\n            const selectedText = text.substring(lineStart, lineEnd);\n            const alignedText = `<div style=\"text-align: ${alignment};\">\\n${selectedText}\\n</div>`;\n\n            this.editor.setRangeText(alignedText, lineStart, lineEnd, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Insert link at cursor or wrap selection\n         */\n        insertLink(): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const selectedText = this.editor.value.substring(start, end);\n\n            const urlLabel =\n                this.resolveTranslation('textEditor.insertLink.enterUrl').text || 'Enter URL:';\n            this.showInputModal(urlLabel, 'https://example.com', 'https://').then((url: string | null) => {\n                if (!url) return;\n\n                const linkText = selectedText || 'link text';\n                const markdown = `[${linkText}](${url})`;\n\n                this.editor?.setRangeText(markdown, start, end, 'end');\n                this.editor?.dispatchEvent(new Event('input', { bubbles: true }));\n                this.focusEditor();\n            });\n        },\n\n        /**\n         * Update word and character count\n         */\n        updateWordCount(): void {\n            if (!this.editor || !this.wordCountDisplay) return;\n\n            const text = this.editor.value;\n            const chars = text.length;\n            const trimmedText = text.trim();\n            const words = trimmedText === '' ? 0 : trimmedText.split(/\\s+/).length;\n\n            // Use internal resolver (handles fallback + params)\n            const wc = this.resolveTranslation('textEditor.status.wordCount', { words, chars });\n            if (wc.translated) {\n                this.wordCountDisplay.textContent = wc.text;\n                return;\n            }\n\n            // Fallback to English\n            this.wordCountDisplay.textContent = `Words: ${words} | Characters: ${chars}`;\n        },\n\n        /**\n         * Update cursor position display\n         */\n        updateCursorPosition(): void {\n            if (!this.editor || !this.lineColDisplay) return;\n\n            const text = this.editor.value;\n            const pos = this.editor.selectionStart;\n\n            const textBeforeCursor = text.substring(0, pos);\n            const lines = textBeforeCursor.split('\\n');\n            const line = lines.length;\n            const lastLine = lines[lines.length - 1] || '';\n            const col = lastLine.length + 1;\n\n            // Use internal resolver (handles fallback + params)\n            const posMsg = this.resolveTranslation('textEditor.status.position', { line, col });\n            if (posMsg.translated) {\n                this.lineColDisplay.textContent = posMsg.text;\n                return;\n            }\n\n            // Fallback to English\n            this.lineColDisplay.textContent = `Line ${line}, Col ${col}`;\n        },\n\n        /**\n         * Toggle find and replace panel\n         */\n        toggleFindReplace(): void {\n            if (!this.findReplacePanel) return;\n\n            if (this.findReplacePanel.style.display === 'none') {\n                this.findReplacePanel.style.display = 'flex';\n                if (this.findInput) {\n                    this.findInput.focus();\n                }\n            } else {\n                this.findReplacePanel.style.display = 'none';\n                this.focusEditor();\n            }\n        },\n\n        /**\n         * Close find and replace panel\n         */\n        closeFindReplace(): void {\n            if (!this.findReplacePanel) return;\n            this.findReplacePanel.style.display = 'none';\n            this.focusEditor();\n        },\n\n        /**\n         * Find next occurrence\n         */\n        findNext(): void {\n            if (!this.editor || !this.findInput) return;\n\n            const searchText = this.findInput.value;\n            if (!searchText) return;\n\n            const text = this.editor.value;\n            const start = this.editor.selectionEnd;\n            const index = text.indexOf(searchText, start);\n\n            if (index !== -1) {\n                this.editor.setSelectionRange(index, index + searchText.length);\n                this.editor.focus();\n            } else {\n                // Wrap around to beginning\n                const firstIndex = text.indexOf(searchText);\n                if (firstIndex !== -1) {\n                    this.editor.setSelectionRange(firstIndex, firstIndex + searchText.length);\n                    this.editor.focus();\n                } else {\n                    const message =\n                        this.resolveTranslation('textEditor.findReplace.noMatch').text ||\n                        'No match found';\n                    this.showToast(message, 'info');\n                }\n            }\n        },\n\n        /**\n         * Replace one occurrence\n         */\n        replaceOne(): void {\n            if (!this.editor || !this.findInput || !this.replaceInput) return;\n\n            const searchText = this.findInput.value;\n            const replaceText = this.replaceInput.value;\n\n            if (!searchText) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const selectedText = this.editor.value.substring(start, end);\n\n            if (selectedText === searchText) {\n                this.editor.setRangeText(replaceText, start, end, 'end');\n                this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n                this.findNext(); // Find next occurrence\n            } else {\n                this.findNext(); // Find first occurrence\n            }\n        },\n\n        /**\n         * Replace all occurrences\n         */\n        replaceAll(): void {\n            if (!this.editor || !this.findInput || !this.replaceInput) return;\n\n            const searchText = this.findInput.value;\n            const replaceText = this.replaceInput.value;\n\n            if (!searchText) return;\n\n            const text = this.editor.value;\n            const parts = text.split(searchText);\n            const count = parts.length - 1;\n\n            if (count > 0) {\n                const newText = parts.join(replaceText);\n                this.editor.value = newText;\n                this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n\n                const message =\n                    this.resolveTranslation('textEditor.findReplace.replacedCount', { count })\n                        .text || `Replaced ${count} occurrence(s)`;\n                this.showToast(message, 'success');\n            } else {\n                const message =\n                    this.resolveTranslation('textEditor.findReplace.noMatch').text ||\n                    'No match found';\n                this.showToast(message, 'info');\n            }\n\n            this.focusEditor();\n        },\n\n        /**\n         * Show toast notification\n         * @param {string} message - Message to display\n         * @param {string} type - Toast type: 'info', 'success', 'error'\n         * @param {number} duration - Display duration in ms (default: 3000)\n         */\n        showToast(\n            message: string,\n            type: 'info' | 'success' | 'error' = 'info',\n            duration = 3000\n        ): void {\n            if (!this.container) return;\n\n            const toast = document.createElement('div');\n            toast.className = `text-editor-toast text-editor-toast-${type}`;\n            toast.textContent = message;\n\n            // Add to container\n            if (!this.toastContainer) {\n                this.toastContainer = document.createElement('div');\n                this.toastContainer.className = 'text-editor-toast-container';\n                this.container.appendChild(this.toastContainer);\n            }\n\n            this.toastContainer.appendChild(toast);\n\n            // Trigger animation\n            setTimeout(() => toast.classList.add('show'), 10);\n\n            // Auto-remove\n            setTimeout(() => {\n                toast.classList.remove('show');\n                setTimeout(() => toast.remove(), 300);\n            }, duration);\n        },\n\n        /**\n         * Show input modal dialog\n         * @param {string} title - Modal title\n         * @param {string} placeholder - Input placeholder\n         * @param {string} defaultValue - Default input value\n         * @returns {Promise<string|null>} Resolves with input value or null if cancelled\n         */\n        showInputModal(\n            title: string,\n            defaultValue = '',\n            placeholder = ''\n        ): Promise<string | null> {\n            return new Promise(resolve => {\n                const modal = document.createElement('div');\n                modal.className = 'text-editor-modal-overlay';\n\n                modal.innerHTML = `\n                    <div class=\"text-editor-modal\">\n                        <div class=\"text-editor-modal-header\">\n                            <h3>${title}</h3>\n                        </div>\n                        <div class=\"text-editor-modal-body\">\n                            <input type=\"text\" class=\"text-editor-modal-input\" placeholder=\"${placeholder}\" value=\"${defaultValue}\">\n                        </div>\n                        <div class=\"text-editor-modal-footer\">\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-cancel\">Cancel</button>\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-confirm\">OK</button>\n                        </div>\n                    </div>\n                `;\n\n                document.body.appendChild(modal);\n\n                const input = modal.querySelector('.text-editor-modal-input') as HTMLInputElement | null;\n                const cancelBtn = modal.querySelector('.text-editor-modal-btn-cancel') as HTMLButtonElement | null;\n                const confirmBtn = modal.querySelector('.text-editor-modal-btn-confirm') as HTMLButtonElement | null;\n\n                if (!input || !cancelBtn || !confirmBtn) {\n                    modal.remove();\n                    resolve(null);\n                    return;\n                }\n\n                // Focus input and select text\n                setTimeout(() => {\n                    input?.focus();\n                    input?.select();\n                }, 50);\n\n                const cleanup = () => {\n                    modal.classList.add('closing');\n                    setTimeout(() => modal.remove(), 200);\n                };\n\n                const handleConfirm = () => {\n                    const value = input?.value.trim();\n                    cleanup();\n                    resolve((value || '') as string || null);\n                };\n\n                const handleCancel = () => {\n                    cleanup();\n                    resolve(null);\n                };\n\n                // Event listeners\n                confirmBtn.addEventListener('click', handleConfirm);\n                cancelBtn.addEventListener('click', handleCancel);\n                input.addEventListener('keydown', (e: KeyboardEvent) => {\n                    if (e.key === 'Enter') {\n                        e.preventDefault();\n                        handleConfirm();\n                    } else if (e.key === 'Escape') {\n                        e.preventDefault();\n                        handleCancel();\n                    }\n                });\n\n                // Click outside to close\n                modal.addEventListener('click', (e: MouseEvent) => {\n                    if (e.target === modal) {\n                        handleCancel();\n                    }\n                });\n\n                // Trigger animation\n                setTimeout(() => modal.classList.add('show'), 10);\n            });\n        },\n\n        /**\n         * Destroy text editor\n         */\n        destroy(): void {\n            if (this.container) {\n                this.container.innerHTML = '';\n                this.container = null;\n            }\n            this.editor = null;\n            this.statusBar = null;\n            this.saveButton = null;\n            this.fileInput = null;\n            this.wordCountDisplay = null;\n            this.lineColDisplay = null;\n            this.findReplacePanel = null;\n            this.findInput = null;\n            this.replaceInput = null;\n            this.toastContainer = null;\n        },\n    };\n\n    // Export to global scope\n    window.TextEditorSystem = TextEditorSystem;\n\n    // Auto-init if container exists on load\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n            const container = document.getElementById('text-editor-container');\n            if (container) {\n                TextEditorSystem.init(container);\n            }\n        });\n    } else {\n        const container = document.getElementById('text-editor-container');\n        if (container) {\n            TextEditorSystem.init(container);\n        }\n    }\n// End of TextEditorSystem module\n"]}