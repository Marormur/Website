{"version":3,"file":"window-manager.js","sourceRoot":"","sources":["../src/ts/window-manager.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * WindowManager - Central registry for windows/modals with z-index and program metadata (TypeScript).\r\n * Mirrors js/window-manager.js behavior while adding types and preserving global API.\r\n */\r\n\r\n(() => {\r\n  'use strict';\r\n\r\n  type WindowType = 'persistent' | 'transient';\r\n\r\n  type DialogLike = {\r\n    open?: () => void;\r\n    close?: () => void;\r\n    bringToFront?: () => void;\r\n  } | null;\r\n\r\n  type WindowConfigOptions = {\r\n    id: string;\r\n    type?: WindowType;\r\n    programKey?: string;\r\n    icon?: string;\r\n    closeButtonId?: string | null;\r\n    metadata?: Record<string, unknown>;\r\n  };\r\n\r\n  type ProgramInfo = {\r\n    modalId: string | null;\r\n    programLabel: string;\r\n    infoLabel: string;\r\n    fallbackInfoModalId: string;\r\n    icon: string;\r\n    about: Record<string, string>;\r\n  };\r\n\r\n  class WindowConfig {\r\n    id: string;\r\n    type: WindowType;\r\n    programKey: string;\r\n    icon: string;\r\n    closeButtonId: string | null;\r\n    dialogInstance: DialogLike;\r\n    metadata: Record<string, unknown>;\r\n\r\n    constructor(options: WindowConfigOptions) {\r\n      this.id = options.id;\r\n      this.type = options.type || 'persistent';\r\n      this.programKey = options.programKey || 'programs.default';\r\n      this.icon = options.icon || './img/sucher.png';\r\n      this.closeButtonId = options.closeButtonId ?? null;\r\n      this.dialogInstance = null;\r\n      this.metadata = options.metadata || {};\r\n    }\r\n\r\n    isTransient(): boolean {\r\n      return this.type === 'transient';\r\n    }\r\n\r\n    getProgramInfo(): ProgramInfo {\r\n      const w = window as unknown as Record<string, unknown>;\r\n      const i18n = (w['appI18n'] as { translate?: (k: string) => string } | undefined) || undefined;\r\n      const translate = i18n?.translate || ((key: string) => key);\r\n\r\n      const aboutFields = ['name', 'tagline', 'version', 'copyright'];\r\n      const info: ProgramInfo = {\r\n        modalId: this.id,\r\n        programLabel: translate(`${this.programKey}.label`),\r\n        infoLabel: translate(`${this.programKey}.infoLabel`),\r\n        fallbackInfoModalId: (this.metadata.fallbackInfoModalId as string) || 'program-info-modal',\r\n        icon: this.icon,\r\n        about: {},\r\n      };\r\n      aboutFields.forEach((field) => {\r\n        info.about[field] = translate(`${this.programKey}.about.${field}`);\r\n      });\r\n      return info;\r\n    }\r\n  }\r\n\r\n  const windowRegistry = new Map<string, WindowConfig>();\r\n  const baseZIndex = 1000;\r\n  let topZIndex = 1000;\r\n\r\n  const WindowManager = {\r\n    register(config: WindowConfigOptions): WindowConfig {\r\n      const windowConfig = new WindowConfig(config);\r\n      windowRegistry.set(config.id, windowConfig);\r\n      return windowConfig;\r\n    },\r\n\r\n    registerAll(configs: WindowConfigOptions[]): void {\r\n      configs.forEach((c) => this.register(c));\r\n    },\r\n\r\n    getConfig(windowId: string): WindowConfig | null {\r\n      return windowRegistry.get(windowId) || null;\r\n    },\r\n\r\n    getAllWindowIds(): string[] {\r\n      return Array.from(windowRegistry.keys());\r\n    },\r\n\r\n    getPersistentWindowIds(): string[] {\r\n      return this.getAllWindowIds().filter((id) => {\r\n        const config = this.getConfig(id);\r\n        return !!config && !config.isTransient();\r\n      });\r\n    },\r\n\r\n    getTransientWindowIds(): string[] {\r\n      return this.getAllWindowIds().filter((id) => {\r\n        const config = this.getConfig(id);\r\n        return !!config && config.isTransient();\r\n      });\r\n    },\r\n\r\n    setDialogInstance(windowId: string, instance: DialogLike): void {\r\n      const config = this.getConfig(windowId);\r\n      if (config) {\r\n        config.dialogInstance = instance;\r\n      }\r\n    },\r\n\r\n    getDialogInstance(windowId: string): DialogLike {\r\n      const config = this.getConfig(windowId);\r\n      return (config && config.dialogInstance) || null;\r\n    },\r\n\r\n    getAllDialogInstances(): Record<string, DialogLike> {\r\n      const dialogs: Record<string, DialogLike> = {};\r\n      windowRegistry.forEach((config, id) => {\r\n        if (config.dialogInstance) {\r\n          dialogs[id] = config.dialogInstance;\r\n        }\r\n      });\r\n      return dialogs;\r\n    },\r\n\r\n    getTopWindow(): HTMLElement | null {\r\n      let topModal: HTMLElement | null = null;\r\n      let highestZ = 0;\r\n      this.getAllWindowIds().forEach((id) => {\r\n        const modal = document.getElementById(id);\r\n        if (modal && !modal.classList.contains('hidden')) {\r\n          const zIndex = parseInt(getComputedStyle(modal).zIndex, 10) || 0;\r\n          if (zIndex > highestZ) {\r\n            highestZ = zIndex;\r\n            topModal = modal;\r\n          }\r\n        }\r\n      });\r\n      return topModal;\r\n    },\r\n\r\n    bringToFront(windowId: string): void {\r\n      const instance = this.getDialogInstance(windowId);\r\n      if (instance && typeof instance.bringToFront === 'function') {\r\n        instance.bringToFront();\r\n      } else {\r\n        console.warn(`Keine Dialog-Instanz für ${windowId} gefunden.`);\r\n      }\r\n    },\r\n\r\n    open(windowId: string): void {\r\n      const config = this.getConfig(windowId);\r\n      if (config && config.metadata && typeof (config.metadata as Record<string, unknown>).initHandler === 'function') {\r\n        try {\r\n          const md = config.metadata as Record<string, unknown> & { __initialized?: boolean; initHandler?: () => void };\r\n          if (!md.__initialized) {\r\n            if (typeof md.initHandler === 'function') {\r\n              md.initHandler();\r\n            }\r\n            md.__initialized = true;\r\n          }\r\n        } catch (e) {\r\n          console.warn(`Init handler for ${windowId} threw:`, e);\r\n        }\r\n      }\r\n      const instance = this.getDialogInstance(windowId);\r\n      if (instance && typeof instance.open === 'function') {\r\n        instance.open();\r\n      } else {\r\n        const modal = document.getElementById(windowId);\r\n        if (modal) {\r\n          modal.classList.remove('hidden');\r\n          this.bringToFront(windowId);\r\n        }\r\n      }\r\n    },\r\n\r\n    close(windowId: string): void {\r\n      const instance = this.getDialogInstance(windowId);\r\n      if (instance && typeof instance.close === 'function') {\r\n        instance.close();\r\n      } else {\r\n        const modal = document.getElementById(windowId);\r\n        if (modal) modal.classList.add('hidden');\r\n      }\r\n    },\r\n\r\n    getNextZIndex(): number {\r\n      topZIndex++;\r\n      return topZIndex;\r\n    },\r\n\r\n    syncZIndexWithDOM(): number {\r\n      let maxZ = baseZIndex;\r\n      this.getAllWindowIds().forEach((id) => {\r\n        const modal = document.getElementById(id);\r\n        if (!modal) return;\r\n        const modalZ = parseInt(window.getComputedStyle(modal).zIndex, 10);\r\n        if (!Number.isNaN(modalZ)) maxZ = Math.max(maxZ, modalZ);\r\n        const windowEl = this.getDialogWindowElement(modal);\r\n        if (windowEl) {\r\n          const contentZ = parseInt(window.getComputedStyle(windowEl).zIndex, 10);\r\n          if (!Number.isNaN(contentZ)) maxZ = Math.max(maxZ, contentZ);\r\n        }\r\n      });\r\n      topZIndex = maxZ;\r\n      return maxZ;\r\n    },\r\n\r\n    getDialogWindowElement(modal: HTMLElement | null): HTMLElement | null {\r\n      if (!modal) return null;\r\n      return (modal.querySelector('.autopointer') as HTMLElement | null) || modal;\r\n    },\r\n\r\n    getProgramInfo(windowId: string): ProgramInfo {\r\n      const config = this.getConfig(windowId);\r\n      if (config) return config.getProgramInfo();\r\n      return this.getDefaultProgramInfo();\r\n    },\r\n\r\n    getDefaultProgramInfo(): ProgramInfo {\r\n      const w = window as unknown as Record<string, unknown>;\r\n      const i18n = (w['appI18n'] as { translate?: (k: string) => string } | undefined) || undefined;\r\n      const translate = i18n?.translate || ((key: string) => key);\r\n      const programKey = 'programs.default';\r\n      return {\r\n        modalId: null,\r\n        programLabel: translate(`${programKey}.label`),\r\n        infoLabel: translate(`${programKey}.infoLabel`),\r\n        fallbackInfoModalId: 'program-info-modal',\r\n        icon: './img/sucher.png',\r\n        about: {\r\n          name: translate(`${programKey}.about.name`),\r\n          tagline: translate(`${programKey}.about.tagline`),\r\n          version: translate(`${programKey}.about.version`),\r\n          copyright: translate(`${programKey}.about.copyright`),\r\n        },\r\n      };\r\n    },\r\n\r\n    get topZIndex(): number {\r\n      return topZIndex;\r\n    },\r\n    set topZIndex(value: number) {\r\n      topZIndex = value;\r\n    },\r\n    get baseZIndex(): number {\r\n      return baseZIndex;\r\n    },\r\n  };\r\n\r\n  (window as unknown as { WindowManager: typeof WindowManager }).WindowManager = WindowManager;\r\n\r\n  Object.defineProperty(window, 'topZIndex', {\r\n    get: () => WindowManager.topZIndex,\r\n    set: (value: number) => {\r\n      WindowManager.topZIndex = value;\r\n    },\r\n  });\r\n})();\r\n"]}