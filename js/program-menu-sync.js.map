{"version":3,"file":"program-menu-sync.js","sourceRoot":"","sources":["../src/ts/program-menu-sync.ts"],"names":[],"mappings":"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","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    type ProgramInfo = {\r\n        modalId: string | null;\r\n        programLabel: string;\r\n        infoLabel: string;\r\n        fallbackInfoModalId?: string;\r\n        icon?: string;\r\n        about?: { name?: string; tagline?: string; version?: string; copyright?: string };\r\n    };\r\n\r\n    // Resolve Program Info via WindowManager or fallback\r\n    function resolveProgramInfo(modalId: string | null): ProgramInfo {\r\n        const wm = (window as unknown as { WindowManager?: { getProgramInfo: (id: string | null) => ProgramInfo } }).WindowManager;\r\n        if (wm && typeof wm.getProgramInfo === 'function') {\r\n            return wm.getProgramInfo(modalId);\r\n        }\r\n        const translate = (window as unknown as { translate?: (k: string, fb?: string) => string }).translate;\r\n        const t = (k: string, fb?: string) => (translate ? translate(k, fb) : fb || k);\r\n        return {\r\n            modalId: modalId || null,\r\n            programLabel: t('programs.default.label'),\r\n            infoLabel: t('programs.default.infoLabel'),\r\n            fallbackInfoModalId: 'program-info-modal',\r\n            icon: './img/sucher.png',\r\n            about: {},\r\n        };\r\n    }\r\n\r\n    function updateProgramLabel(newLabel: string): void {\r\n        const programLabel = document.getElementById('program-label');\r\n        if (programLabel) programLabel.textContent = newLabel;\r\n    }\r\n\r\n    function getTopModal(): HTMLElement | null {\r\n        const wm = (window as unknown as { WindowManager?: { getTopWindow: () => HTMLElement | null } }).WindowManager;\r\n        if (wm && typeof wm.getTopWindow === 'function') {\r\n            return wm.getTopWindow();\r\n        }\r\n        let top: HTMLElement | null = null;\r\n        let highest = 0;\r\n        document.querySelectorAll<HTMLElement>('.modal:not(.hidden)').forEach((modal) => {\r\n            const z = parseInt(getComputedStyle(modal).zIndex, 10) || 0;\r\n            if (z > highest) {\r\n                highest = z;\r\n                top = modal;\r\n            }\r\n        });\r\n        return top;\r\n    }\r\n\r\n    function updateProgramInfoMenu(info: ProgramInfo): void {\r\n        const infoLink = document.getElementById('about-program');\r\n        if (!infoLink) return;\r\n        const fallbackInfo = resolveProgramInfo(null);\r\n        infoLink.textContent = info.infoLabel || fallbackInfo.infoLabel;\r\n        const el = infoLink as HTMLElement & { dataset: { fallbackInfoModalId?: string } };\r\n        if (info.fallbackInfoModalId) {\r\n            el.dataset.fallbackInfoModalId = info.fallbackInfoModalId;\r\n        } else if (el.dataset) {\r\n            delete el.dataset.fallbackInfoModalId;\r\n        }\r\n    }\r\n\r\n    function renderProgramInfo(info: ProgramInfo): void {\r\n        const modal = document.getElementById('program-info-modal');\r\n        if (!modal) return;\r\n        (modal as HTMLElement & { dataset: { infoTarget?: string } }).dataset.infoTarget = info.modalId || '';\r\n        const fallbackInfo = resolveProgramInfo(null);\r\n        const about = info.about || fallbackInfo.about || {};\r\n        const iconEl = modal.querySelector('#program-info-icon') as HTMLImageElement | null;\r\n        if (iconEl) {\r\n            if (info.icon) {\r\n                iconEl.src = info.icon;\r\n                iconEl.alt = about.name || info.programLabel || 'Programm';\r\n                iconEl.classList.remove('hidden');\r\n            } else {\r\n                iconEl.classList.add('hidden');\r\n            }\r\n        }\r\n        const nameEl = modal.querySelector('#program-info-name');\r\n        if (nameEl) {\r\n            nameEl.textContent = about.name || info.programLabel || fallbackInfo.programLabel;\r\n        }\r\n        const taglineEl = modal.querySelector('#program-info-tagline');\r\n        if (taglineEl) {\r\n            const tagline = about.tagline || '';\r\n            taglineEl.textContent = tagline;\r\n            taglineEl.classList.toggle('hidden', !tagline);\r\n        }\r\n        const versionEl = modal.querySelector('#program-info-version');\r\n        if (versionEl) {\r\n            const version = about.version || '';\r\n            versionEl.textContent = version;\r\n            versionEl.classList.toggle('hidden', !version);\r\n        }\r\n        const copyrightEl = modal.querySelector('#program-info-copyright');\r\n        if (copyrightEl) {\r\n            const copyright = about.copyright || '';\r\n            copyrightEl.textContent = copyright;\r\n            copyrightEl.classList.toggle('hidden', !copyright);\r\n        }\r\n    }\r\n\r\n    function renderApplicationMenu(modalId: string | null): void {\r\n        const MenuSystem = (window as unknown as { MenuSystem?: { renderApplicationMenu?: (id: string | null) => void } }).MenuSystem;\r\n        if (MenuSystem && typeof MenuSystem.renderApplicationMenu === 'function') {\r\n            MenuSystem.renderApplicationMenu(modalId);\r\n        }\r\n    }\r\n\r\n    function getProgramInfo(modalId: string | null): ProgramInfo {\r\n        return resolveProgramInfo(modalId);\r\n    }\r\n\r\n    function openProgramInfoDialog(event: Event | null, infoOverride?: ProgramInfo): void {\r\n        if (event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        const hideMenus = (window as unknown as { hideMenuDropdowns?: () => void }).hideMenuDropdowns;\r\n        if (hideMenus) hideMenus();\r\n        const info = infoOverride || currentProgramInfo || getProgramInfo(null);\r\n        currentProgramInfo = info;\r\n        const infoEvent = new CustomEvent('programInfoRequested', {\r\n            detail: { modalId: info.modalId, info },\r\n            cancelable: true,\r\n        });\r\n        const dispatchResult = window.dispatchEvent(infoEvent);\r\n        if (!dispatchResult) return;\r\n        const fallbackId = info.fallbackInfoModalId;\r\n        if (!fallbackId) return;\r\n        if (fallbackId === 'program-info-modal') {\r\n            renderProgramInfo(info);\r\n        }\r\n        const dialogs = (window as unknown as { dialogs?: Record<string, { open?: () => void }> }).dialogs;\r\n        const dialogInstance = dialogs && dialogs[fallbackId];\r\n        if (dialogInstance && typeof dialogInstance.open === 'function') {\r\n            dialogInstance.open();\r\n        } else {\r\n            const modalElement = document.getElementById(fallbackId);\r\n            if (modalElement) {\r\n                modalElement.classList.remove('hidden');\r\n                const bringToFront = (window as unknown as { dialogs?: Record<string, { bringToFront?: () => void }> }).dialogs?.[fallbackId]?.bringToFront;\r\n                if (bringToFront) bringToFront();\r\n                updateProgramLabelByTopModal();\r\n            }\r\n        }\r\n    }\r\n\r\n    function openProgramInfoFromMenu(targetModalId?: string | null): void {\r\n        const info = resolveProgramInfo(targetModalId || null);\r\n        openProgramInfoDialog(null, info);\r\n    }\r\n\r\n    let currentProgramInfo: ProgramInfo = resolveProgramInfo(null);\r\n\r\n    function updateProgramLabelByTopModal(): ProgramInfo {\r\n        const topModal = getTopModal();\r\n        const wm = (window as unknown as { WindowManager?: { getConfig: (id: string) => { metadata?: { skipMenubarUpdate?: boolean } } | null } }).WindowManager;\r\n        if (topModal && wm) {\r\n            const config = wm.getConfig(topModal.id);\r\n            if (config && config.metadata && config.metadata.skipMenubarUpdate) {\r\n                const all = Array.from(document.querySelectorAll<HTMLElement>('.modal:not(.hidden)'));\r\n                const sorted = all.sort((a, b) => (parseInt(getComputedStyle(b).zIndex, 10) || 0) - (parseInt(getComputedStyle(a).zIndex, 10) || 0));\r\n                let next: HTMLElement | null = null;\r\n                for (const m of sorted) {\r\n                    const mc = wm.getConfig(m.id);\r\n                    if (!mc || !mc.metadata || !mc.metadata.skipMenubarUpdate) {\r\n                        next = m;\r\n                        break;\r\n                    }\r\n                }\r\n                if (next) {\r\n                    const info = getProgramInfo(next.id);\r\n                    currentProgramInfo = info;\r\n                    updateProgramLabel(info.programLabel);\r\n                    updateProgramInfoMenu(info);\r\n                    renderApplicationMenu(next.id);\r\n                    return info;\r\n                }\r\n            }\r\n        }\r\n        let info: ProgramInfo;\r\n        if (topModal && topModal.id === 'program-info-modal' && currentProgramInfo && currentProgramInfo.modalId) {\r\n            info = resolveProgramInfo(currentProgramInfo.modalId);\r\n            currentProgramInfo = info;\r\n        } else {\r\n            info = getProgramInfo(topModal ? topModal.id : null);\r\n            currentProgramInfo = info;\r\n        }\r\n        updateProgramLabel(info.programLabel);\r\n        updateProgramInfoMenu(info);\r\n        renderApplicationMenu(topModal ? topModal.id : null);\r\n        return info;\r\n    }\r\n\r\n    // React to language/theme changes similar to legacy\r\n    // Avoid double-binding if legacy already wired these listeners\r\n    const alreadyWired = (window as unknown as { __programMenuSyncWired?: boolean }).__programMenuSyncWired;\r\n    if (!alreadyWired) {\r\n        (window as unknown as { __programMenuSyncWired?: boolean }).__programMenuSyncWired = true;\r\n    }\r\n\r\n    if (!alreadyWired) window.addEventListener('languagePreferenceChange', () => {\r\n        const info = updateProgramLabelByTopModal();\r\n        const programInfoModal = document.getElementById('program-info-modal') as HTMLElement | null;\r\n        if (programInfoModal && !programInfoModal.classList.contains('hidden')) {\r\n            const ds: DOMStringMap = programInfoModal.dataset;\r\n            const targetId = ds['infoTarget'] || (info ? info.modalId : null) || null;\r\n            const infoForDialog = resolveProgramInfo(targetId);\r\n            renderProgramInfo(infoForDialog);\r\n            if (info && info.modalId === infoForDialog.modalId) {\r\n                currentProgramInfo = infoForDialog;\r\n            }\r\n        }\r\n        const updateAllSystemStatusUI = (window as unknown as { updateAllSystemStatusUI?: () => void }).updateAllSystemStatusUI;\r\n        if (updateAllSystemStatusUI) updateAllSystemStatusUI();\r\n    });\r\n    if (!alreadyWired) window.addEventListener('themePreferenceChange', () => {\r\n        const updateAllSystemStatusUI = (window as unknown as { updateAllSystemStatusUI?: () => void }).updateAllSystemStatusUI;\r\n        if (updateAllSystemStatusUI) updateAllSystemStatusUI();\r\n    });\r\n\r\n    // Export legacy globals for compatibility\r\n    (window as unknown as { updateProgramLabelByTopModal: typeof updateProgramLabelByTopModal }).updateProgramLabelByTopModal = updateProgramLabelByTopModal;\r\n    (window as unknown as { openProgramInfoFromMenu: typeof openProgramInfoFromMenu }).openProgramInfoFromMenu = openProgramInfoFromMenu;\r\n})();\r\n"]}