{"version":3,"file":"multi-instance-demo.js","sourceRoot":"","sources":["../src/ts/multi-instance-demo.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Multi-Instance Demo (TypeScript port)\r\n * Mirrors the convenience demo helpers from `js/multi-instance-demo.js`.\r\n * It uses runtime guards and local casts to avoid strict-type errors.\r\n */\r\nexport {};\r\n\r\ndeclare global {\r\n    interface Window {\r\n        // Demo helpers\r\n        demoCreateTerminals?: () => any;\r\n        demoCreateEditors?: () => any;\r\n        demoSaveTerminals?: () => void;\r\n        demoRestoreTerminals?: () => void;\r\n        // Keep other demos as optional\r\n    }\r\n}\r\n\r\n// Helper to safely access window managers with casts\r\nconst W = window as any;\r\n\r\nW.demoCreateTerminals = function demoCreateTerminals() {\r\n    if (!W.TerminalInstanceManager) return null;\r\n    console.group('Creating Terminals...');\r\n    const term1 = W.TerminalInstanceManager.createInstance?.({ title: 'Terminal 1 - Main' });\r\n    const term2 = W.TerminalInstanceManager.createInstance?.({ title: 'Terminal 2 - Dev' });\r\n    const term3 = W.TerminalInstanceManager.createInstance?.({ title: 'Terminal 3 - Logs' });\r\n    try {\r\n        console.log('Total terminals:', W.TerminalInstanceManager.getInstanceCount?.());\r\n    } catch {\r\n        // ignore\r\n    }\r\n    console.groupEnd();\r\n    return { term1, term2, term3 };\r\n};\r\n\r\nW.demoCreateEditors = function demoCreateEditors() {\r\n    if (!W.TextEditorInstanceManager) return null;\r\n    console.group('Creating Text Editors...');\r\n    const editor1 = W.TextEditorInstanceManager.createInstance?.({\r\n        title: 'README.md',\r\n        initialState: { content: '# My Project\\n', filename: 'README.md' },\r\n    });\r\n    const editor2 = W.TextEditorInstanceManager.createInstance?.({\r\n        title: 'notes.txt',\r\n        initialState: { content: 'Notes', filename: 'notes.txt' },\r\n    });\r\n    const editor3 = W.TextEditorInstanceManager.createInstance?.({ title: 'Untitled' });\r\n    try {\r\n        console.log('Total editors:', W.TextEditorInstanceManager.getInstanceCount?.());\r\n    } catch {\r\n        // ignore\r\n    }\r\n    console.groupEnd();\r\n    return { editor1, editor2, editor3 };\r\n};\r\n\r\nW.demoSaveTerminals = function demoSaveTerminals() {\r\n    if (!W.TerminalInstanceManager) return;\r\n    console.group('Save Terminal State...');\r\n    const terminals = W.demoCreateTerminals?.();\r\n    if (terminals && terminals.term1) {\r\n        terminals.term1.currentPath = '/home';\r\n        terminals.term1.commandHistory = ['ls', 'pwd', 'cd documents'];\r\n    }\r\n    const savedState = W.TerminalInstanceManager.serializeAll?.() || [];\r\n    try {\r\n        localStorage.setItem('demo_terminals', JSON.stringify(savedState));\r\n        console.log('Saved state:', savedState);\r\n    } catch {\r\n        // ignore\r\n    }\r\n    console.groupEnd();\r\n};\r\n\r\nW.demoRestoreTerminals = function demoRestoreTerminals() {\r\n    if (!W.TerminalInstanceManager) return;\r\n    console.group('Restore Terminal State...');\r\n    try {\r\n        W.TerminalInstanceManager.destroyAllInstances?.();\r\n        const savedState = JSON.parse(localStorage.getItem('demo_terminals') || '[]');\r\n        W.TerminalInstanceManager.deserializeAll?.(savedState);\r\n        const restored = W.TerminalInstanceManager.getAllInstances?.() || [];\r\n        console.log(`Restored ${restored.length} terminals`);\r\n    } catch (e) {\r\n        console.warn('Restore failed', e);\r\n    }\r\n    console.groupEnd();\r\n};\r\n\r\n// other helpers can be added similarly, keeping runtime guards\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/*\r\n * Multi-Instance Demo Helpers (TypeScript)\r\n * Ported from js/multi-instance-demo.js — kept as runtime demo helpers exposed on window.\r\n * NOTE: This is a non-critical convenience module; it mirrors the legacy JS implementation.\r\n */\r\n\r\nexport {};\r\n\r\n// Note: rely on central type declarations in /types rather than redeclaring Window properties here.\r\n// This file intentionally avoids augmenting `Window` to prevent conflicts during migration.\r\n\r\ntype TerminalInstance = {\r\n    instanceId?: string;\r\n    currentPath?: string;\r\n    commandHistory?: string[];\r\n    on?: (event: string, cb: (...args: unknown[]) => void) => void;\r\n    updateState?: (u: Record<string, unknown>) => void;\r\n    focus?: () => void;\r\n    blur?: () => void;\r\n    state?: Record<string, unknown>;\r\n};\r\n\r\ntype TerminalManager = {\r\n    createInstance: (cfg?: Record<string, unknown>) => TerminalInstance | null | undefined;\r\n    getInstanceCount?: () => number;\r\n    serializeAll?: () => unknown;\r\n    destroyAllInstances?: () => void;\r\n    deserializeAll?: (data: unknown) => void;\r\n    getAllInstances?: () => TerminalInstance[];\r\n    getActiveInstance?: () => TerminalInstance | null | undefined;\r\n    setActiveInstance?: (id: string) => void;\r\n};\r\n\r\n// EditorInstance shape intentionally omitted during migration to keep demo lightweight.\r\n\r\n// EditorManager and demo helper return types are intentionally omitted to reduce churn during migration.\r\n\r\nfunction logDemo(title: string, description: string): void {\r\n    console.log(`%c${title}`, 'color: #00aaff; font-weight: bold; font-size: 14px');\r\n\r\n    console.log(`%c${description}`, 'color: #888; font-size: 12px');\r\n}\r\n\r\n// Attach demo helpers to window\r\n(() => {\r\n    // Terminal demos\r\n    logDemo('📟 Terminal Instances', 'Erstelle mehrere Terminal-Instanzen');\r\n\r\n    window.demoCreateTerminals = function () {\r\n        console.group('Creating Terminals...');\r\n        const manager = window.TerminalInstanceManager as any;\r\n        const term1 = manager.createInstance({ title: 'Terminal 1 - Main' });\r\n        console.log('✓ Terminal 1:', term1?.instanceId);\r\n        const term2 = manager.createInstance({ title: 'Terminal 2 - Dev' });\r\n        console.log('✓ Terminal 2:', term2?.instanceId);\r\n        const term3 = manager.createInstance({ title: 'Terminal 3 - Logs' });\r\n        console.log('✓ Terminal 3:', term3?.instanceId);\r\n        console.log(`Total terminals: ${manager.getInstanceCount()}`);\r\n        console.groupEnd();\r\n        return { term1, term2, term3 } as Record<string, any>;\r\n    };\r\n\r\n    window.demoTerminalIsolation = function () {\r\n        console.group('Terminal Isolation Demo...');\r\n        const terminals = window.demoCreateTerminals?.();\r\n        if (!terminals) return;\r\n        if (terminals.term1) {\r\n            terminals.term1.currentPath = '/home/user';\r\n            terminals.term1.commandHistory = terminals.term1.commandHistory || [];\r\n            terminals.term1.commandHistory.push('ls', 'pwd');\r\n        }\r\n        if (terminals.term2) {\r\n            terminals.term2.currentPath = '/var/log';\r\n            terminals.term2.commandHistory = terminals.term2.commandHistory || [];\r\n            terminals.term2.commandHistory.push('tail -f server.log');\r\n        }\r\n        if (terminals.term3) {\r\n            terminals.term3.currentPath = '/etc';\r\n            terminals.term3.commandHistory = terminals.term3.commandHistory || [];\r\n            terminals.term3.commandHistory.push('cat config.yaml');\r\n        }\r\n        console.log('Terminal 1 path:', terminals.term1?.currentPath);\r\n        console.log('Terminal 1 history:', terminals.term1?.commandHistory);\r\n        console.log('Terminal 2 path:', terminals.term2?.currentPath);\r\n        console.log('Terminal 2 history:', terminals.term2?.commandHistory);\r\n        console.log('Terminal 3 path:', terminals.term3?.currentPath);\r\n        console.log('Terminal 3 history:', terminals.term3?.commandHistory);\r\n        console.log('%c✓ Alle Terminals haben isolierten State!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    // Editor demos\r\n    logDemo('📝 Text Editor Instances', 'Erstelle mehrere Editor-Instanzen');\r\n\r\n    window.demoCreateEditors = function () {\r\n        console.group('Creating Text Editors...');\r\n        const mgr = window.TextEditorInstanceManager as any;\r\n        const editor1 = mgr.createInstance({\r\n            title: 'README.md',\r\n            initialState: {\r\n                content: '# My Project\\n\\nThis is a test document.',\r\n                filename: 'README.md',\r\n            },\r\n        });\r\n        console.log('✓ Editor 1:', editor1?.instanceId);\r\n        const editor2 = mgr.createInstance({\r\n            title: 'notes.txt',\r\n            initialState: {\r\n                content: 'Meeting notes:\\n- Point 1\\n- Point 2',\r\n                filename: 'notes.txt',\r\n            },\r\n        });\r\n        console.log('✓ Editor 2:', editor2?.instanceId);\r\n        const editor3 = mgr.createInstance({ title: 'Untitled' });\r\n        console.log('✓ Editor 3:', editor3?.instanceId);\r\n        console.log('Total editors:', mgr.getInstanceCount());\r\n        console.groupEnd();\r\n        return { editor1, editor2, editor3 } as Record<string, any>;\r\n    };\r\n\r\n    window.demoEditorContent = function () {\r\n        console.group('Editor Content Demo...');\r\n        const editors = window.demoCreateEditors?.();\r\n        if (!editors) return;\r\n        console.log('Editor 1 content:', editors.editor1?.state?.content);\r\n        console.log('Editor 2 content:', editors.editor2?.state?.content);\r\n        console.log('Editor 3 content:', editors.editor3?.state?.content);\r\n        console.log('%c✓ Jeder Editor hat eigenen Content!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    // State persistence demos\r\n    logDemo('💾 State Persistence', 'Speichern und Wiederherstellen von Instanzen');\r\n\r\n    window.demoSaveTerminals = function () {\r\n        console.group('Save Terminal State...');\r\n        const terminals = window.demoCreateTerminals?.();\r\n        if (!terminals) return;\r\n        if (terminals.term1) {\r\n            terminals.term1.currentPath = '/home';\r\n            terminals.term1.commandHistory = ['ls', 'pwd', 'cd documents'];\r\n        }\r\n        const mgr = window.TerminalInstanceManager as TerminalManager | undefined;\r\n        const savedState = mgr?.serializeAll ? mgr.serializeAll() : undefined;\r\n        if (typeof savedState !== 'undefined') {\r\n            localStorage.setItem('demo_terminals', JSON.stringify(savedState));\r\n        }\r\n        console.log('Saved state:', savedState);\r\n        console.log('%c✓ Terminals gespeichert in localStorage!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    window.demoRestoreTerminals = function () {\r\n        console.group('Restore Terminal State...');\r\n        const mgr = window.TerminalInstanceManager as TerminalManager | undefined;\r\n        mgr?.destroyAllInstances?.();\r\n        console.log('All instances destroyed');\r\n        const savedState = JSON.parse(localStorage.getItem('demo_terminals') || '[]');\r\n        mgr?.deserializeAll?.(savedState);\r\n        const restored = mgr?.getAllInstances ? mgr.getAllInstances() : [];\r\n        console.log(`Restored ${restored.length} terminals`);\r\n        console.log('First terminal path:', restored[0]?.currentPath);\r\n        console.log('First terminal history:', restored[0]?.commandHistory);\r\n        console.log('%c✓ Terminals wiederhergestellt!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    // WindowChrome demo\r\n    logDemo('🎨 WindowChrome Components', 'Wiederverwendbare UI-Komponenten');\r\n\r\n    window.demoWindowChrome = function () {\r\n        console.group('WindowChrome Demo...');\r\n        const titlebar = window.WindowChrome?.createTitlebar?.({\r\n            title: 'My Window',\r\n            icon: '💻',\r\n            showClose: true,\r\n            onClose: () => console.log('Close clicked!'),\r\n        });\r\n        console.log('Titlebar:', titlebar);\r\n        const toolbar = window.WindowChrome?.createToolbar?.([\r\n            { label: 'New', action: 'new' },\r\n            { type: 'separator' },\r\n            { label: 'Save', action: 'save' },\r\n            { label: 'Open', action: 'open' },\r\n        ]);\r\n        console.log('Toolbar:', toolbar);\r\n        const statusBar = window.WindowChrome?.createStatusBar?.({\r\n            leftContent: 'Ready',\r\n            rightContent: 'Line 1, Col 1',\r\n        });\r\n        console.log('StatusBar:', statusBar);\r\n        const frame = window.WindowChrome?.createWindowFrame?.({\r\n            title: 'Complete Window',\r\n            icon: '📝',\r\n            showClose: true,\r\n            showStatusBar: true,\r\n            toolbar: [\r\n                { label: 'File', action: 'file' },\r\n                { label: 'Edit', action: 'edit' },\r\n            ],\r\n        });\r\n        console.log('Complete Frame:', frame);\r\n        console.log('%c✓ WindowChrome Komponenten erstellt!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    // Instance manager demos\r\n    logDemo('⚙️ Instance Manager Features', 'Erweiterte Manager-Funktionen');\r\n\r\n    window.demoMaxInstances = function () {\r\n        console.group('Max Instances Demo...');\r\n        const limitedManager = window.InstanceManager\r\n            ? new window.InstanceManager({\r\n                  type: 'demo',\r\n                  instanceClass: window.BaseWindowInstance,\r\n                  maxInstances: 2,\r\n              })\r\n            : null;\r\n        if (!limitedManager) {\r\n            console.warn('InstanceManager not available in demo environment');\r\n            return;\r\n        }\r\n        const instance1 = limitedManager.createInstance({ title: 'Instance 1' });\r\n        console.log('Created:', instance1?.instanceId);\r\n        const instance2 = limitedManager.createInstance({ title: 'Instance 2' });\r\n        console.log('Created:', instance2?.instanceId);\r\n        const instance3 = limitedManager.createInstance({ title: 'Instance 3' });\r\n        console.log('Created:', instance3?.instanceId, '(should be null)');\r\n        console.log(`Total: ${limitedManager.getInstanceCount()} / 2`);\r\n        console.log('%c✓ Max instances Limit funktioniert!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    window.demoActiveInstance = function () {\r\n        console.group('Active Instance Tracking...');\r\n        const terminals = window.demoCreateTerminals?.();\r\n        console.log(\r\n            'Active instance:',\r\n            window.TerminalInstanceManager?.getActiveInstance?.()?.instanceId\r\n        );\r\n        if (terminals?.term1)\r\n            window.TerminalInstanceManager?.setActiveInstance?.(\r\n                terminals.term1.instanceId as string\r\n            );\r\n        console.log(\r\n            'Switched to:',\r\n            window.TerminalInstanceManager?.getActiveInstance?.()?.instanceId\r\n        );\r\n        if (terminals?.term2)\r\n            window.TerminalInstanceManager?.setActiveInstance?.(\r\n                terminals.term2.instanceId as string\r\n            );\r\n        console.log(\r\n            'Switched to:',\r\n            window.TerminalInstanceManager?.getActiveInstance?.()?.instanceId\r\n        );\r\n        console.log('%c✓ Active instance tracking funktioniert!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    // Event system demo\r\n    logDemo('📡 Event System', 'Instance Event Handling');\r\n\r\n    window.demoEvents = function () {\r\n        console.group('Event System Demo...');\r\n        const terminal = window.TerminalInstanceManager?.createInstance?.({\r\n            title: 'Event Demo Terminal',\r\n        });\r\n        if (!terminal) return;\r\n        terminal.on('stateChanged', (data: any) => {\r\n            console.log('State changed:', data.newState);\r\n        });\r\n        terminal.on('focused', () => {\r\n            console.log('Terminal focused!');\r\n        });\r\n        terminal.on('blurred', () => {\r\n            console.log('Terminal blurred!');\r\n        });\r\n        terminal.updateState({ foo: 'bar' });\r\n        terminal.focus();\r\n        terminal.blur();\r\n        console.log('%c✓ Event System funktioniert!', 'color: #00ff00');\r\n        console.groupEnd();\r\n    };\r\n\r\n    // Tab system demo\r\n    logDemo('🗂️ Tab System Demo', 'Test the new tab management features');\r\n\r\n    window.demoTabs = function () {\r\n        console.group('Tab System Demo...');\r\n        console.log('Creating 3 terminal instances...');\r\n        window.TerminalInstanceManager?.createInstance?.({ title: 'Terminal 1' });\r\n        window.TerminalInstanceManager?.createInstance?.({ title: 'Terminal 2' });\r\n        window.TerminalInstanceManager?.createInstance?.({ title: 'Terminal 3' });\r\n        console.log('✓ Terminals created');\r\n        console.groupEnd();\r\n    };\r\n\r\n    window.demoSessionSave = function () {\r\n        console.group('Session Save Demo...');\r\n        window.TerminalInstanceManager?.createInstance?.({ title: 'Dev Terminal' });\r\n        window.TerminalInstanceManager?.createInstance?.({ title: 'Test Terminal' });\r\n        window.TextEditorInstanceManager?.createInstance?.({ title: 'notes.txt' });\r\n        console.log('Saving session...');\r\n        window.SessionManager.saveAllSessions();\r\n        const info = window.SessionManager.getStorageInfo();\r\n        console.log('✓ Session saved:', info);\r\n        console.groupEnd();\r\n    };\r\n\r\n    window.demoSessionExport = function () {\r\n        console.group('Session Export Demo...');\r\n        if ((window.TerminalInstanceManager?.getInstanceCount?.() || 0) === 0) {\r\n            window.TerminalInstanceManager?.createInstance?.({ title: 'Terminal 1' });\r\n            window.TerminalInstanceManager?.createInstance?.({ title: 'Terminal 2' });\r\n        }\r\n        const sessionJson = window.SessionManager?.exportSession?.();\r\n        console.log('Exported session:', sessionJson);\r\n        console.groupEnd();\r\n        return sessionJson;\r\n    };\r\n\r\n    window.demoKeyboardShortcuts = function () {\r\n        console.group('Keyboard Shortcuts Demo...');\r\n        const shortcuts = window.KeyboardShortcuts.getAllShortcuts();\r\n        console.log(`Registered shortcuts: ${shortcuts.length}`);\r\n        shortcuts.forEach((s: any) => {\r\n            if (s.description) {\r\n                const display = window.KeyboardShortcuts.getShortcutDisplay(s);\r\n                console.log(`  ${display}: ${s.description}`);\r\n            }\r\n        });\r\n        console.groupEnd();\r\n    };\r\n\r\n    // Quick start message\r\n\r\n    console.log('\\n%c📖 Quick Start:', 'color: #ffaa00; font-weight: bold; font-size: 16px');\r\n})();\r\n"]}