{"version":3,"file":"finder.js","sourceRoot":"","sources":["../src/ts/finder.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * finder.ts\r\n * Finder System - Vollwertiger Dateimanager\r\n *\r\n * Features:\r\n * - Virtuelle Ordnerstruktur (Computer, Downloads, Dokumente, etc.)\r\n * - Integration mit GitHub-Projekten\r\n * - Favoriten und zuletzt geöffnete Dateien\r\n * - File Upload & Download\r\n * - Dateiverwaltung (Ordner erstellen, umbenennen, löschen)\r\n */\r\n\r\nconsole.log('Finder.js loaded');\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    // ============================================================================\r\n    // Types\r\n    // ============================================================================\r\n\r\n    interface VirtualFileSystemFile {\r\n        type: 'file';\r\n        icon: string;\r\n        content: string;\r\n        size: number;\r\n        modified?: string;\r\n    }\r\n\r\n    interface VirtualFileSystemFolder {\r\n        type: 'folder';\r\n        icon: string;\r\n        children: Record<string, VirtualFileSystemFile | VirtualFileSystemFolder>;\r\n    }\r\n\r\n    type VirtualFileSystemItem = VirtualFileSystemFile | VirtualFileSystemFolder;\r\n\r\n    interface GitHubRepo {\r\n        name: string;\r\n        updated_at?: string;\r\n        pushed_at?: string;\r\n        created_at?: string;\r\n        html_url?: string;\r\n    }\r\n\r\n    interface GitHubContentItem {\r\n        name: string;\r\n        type: string;\r\n        size?: number;\r\n        url?: string;\r\n        html_url?: string;\r\n        download_url?: string;\r\n    }\r\n\r\n    interface FinderItem {\r\n        name: string;\r\n        type: string;\r\n        icon: string;\r\n        size?: number;\r\n        modified?: string;\r\n        path?: string;\r\n        html_url?: string;\r\n        url?: string;\r\n        download_url?: string;\r\n        action?: () => void;\r\n    }\r\n\r\n    interface RecentFile {\r\n        name: string;\r\n        path: string;\r\n        icon: string;\r\n        modified: string;\r\n    }\r\n\r\n    type ViewMode = 'list' | 'grid' | 'columns';\r\n    type SortBy = 'name' | 'date' | 'size' | 'type';\r\n    type SortOrder = 'asc' | 'desc';\r\n    type CurrentView = 'computer' | 'github' | 'favorites' | 'recent';\r\n\r\n    interface FinderState {\r\n        currentPath: string[];\r\n        currentView: CurrentView;\r\n        selectedItems: Set<string>;\r\n        viewMode: ViewMode;\r\n        sortBy: SortBy;\r\n        sortOrder: SortOrder;\r\n        githubRepos: GitHubRepo[];\r\n        githubLoading: boolean;\r\n        githubError: boolean;\r\n        favorites: Set<string>;\r\n        recentFiles: RecentFile[];\r\n    }\r\n\r\n    interface DomRefs {\r\n        sidebarComputer: HTMLElement | null;\r\n        sidebarGithub: HTMLElement | null;\r\n        sidebarFavorites: HTMLElement | null;\r\n        sidebarRecent: HTMLElement | null;\r\n        breadcrumbs: HTMLElement | null;\r\n        contentArea: HTMLElement | null;\r\n        toolbar: HTMLElement | null;\r\n        searchInput: HTMLInputElement | null;\r\n    }\r\n\r\n    interface FinderSystemType {\r\n        init(): void;\r\n        navigateTo(path: string[] | string, view?: CurrentView | null): void;\r\n        navigateUp(): void;\r\n        navigateToFolder(folderName: string): void;\r\n        openItem(name: string, type: string): void;\r\n        setSortBy(field: SortBy): void;\r\n        setViewMode(mode: ViewMode): void;\r\n        toggleFavorite(path: string): void;\r\n        getState(): FinderState;\r\n        openFinder(): void;\r\n        closeFinder(): void;\r\n    }\r\n\r\n    interface CachePayload {\r\n        t: number;\r\n        d: unknown;\r\n    }\r\n\r\n    interface GitHubAPIWindow {\r\n        GitHubAPI?: {\r\n            getHeaders(): Record<string, string>;\r\n            writeCache(kind: string, repo: string, subPath: string, data: unknown): void;\r\n            readCache(kind: string, repo: string, subPath: string): unknown[] | null;\r\n            fetchUserRepos(\r\n                username: string,\r\n                options: { per_page: number; sort: string }\r\n            ): Promise<GitHubRepo[]>;\r\n            fetchRepoContents(\r\n                username: string,\r\n                repo: string,\r\n                subPath?: string\r\n            ): Promise<GitHubContentItem[]>;\r\n            fetchJSON(url: string): Promise<unknown>;\r\n        };\r\n        APP_CONSTANTS?: {\r\n            GITHUB_CACHE_DURATION: number;\r\n        };\r\n        dialogs?: Record<string, { open(): void; bringToFront?(): void }>;\r\n        showTab?(tab: string): void;\r\n        translate?(key: string): string;\r\n        appI18n?: {\r\n            applyTranslations(el: HTMLElement): void;\r\n        };\r\n        API?: {\r\n            textEditor?: {\r\n                showLoading(payload: { fileName: string; size?: number }): void;\r\n                loadRemoteFile(payload: { fileName: string; size?: number; content: string }): void;\r\n                showLoadError(payload: { fileName: string; size?: number; message: string }): void;\r\n            };\r\n        };\r\n        TextEditorSystem?: {\r\n            showLoading(payload: { fileName: string; size?: number }): void;\r\n            loadRemoteFile(payload: { fileName: string; size?: number; content: string }): void;\r\n            showLoadError(payload: { fileName: string; size?: number; message: string }): void;\r\n        };\r\n    }\r\n\r\n    // ============================================================================\r\n    // Virtuelle Dateistruktur\r\n    // ============================================================================\r\n\r\n    const virtualFileSystem: Record<string, VirtualFileSystemFolder> = {\r\n        Computer: {\r\n            type: 'folder',\r\n            icon: '💻',\r\n            children: {\r\n                Documents: {\r\n                    type: 'folder',\r\n                    icon: '📄',\r\n                    children: {\r\n                        'README.md': {\r\n                            type: 'file',\r\n                            icon: '📝',\r\n                            content:\r\n                                '# Willkommen im Finder\\n\\nDies ist ein virtuelles Dateisystem.',\r\n                            size: 1024,\r\n                        },\r\n                    },\r\n                },\r\n                Downloads: {\r\n                    type: 'folder',\r\n                    icon: '⬇️',\r\n                    children: {},\r\n                },\r\n                Pictures: {\r\n                    type: 'folder',\r\n                    icon: '🖼️',\r\n                    children: {},\r\n                },\r\n                Music: {\r\n                    type: 'folder',\r\n                    icon: '🎵',\r\n                    children: {},\r\n                },\r\n                Videos: {\r\n                    type: 'folder',\r\n                    icon: '🎬',\r\n                    children: {},\r\n                },\r\n            },\r\n        },\r\n    };\r\n\r\n    // ============================================================================\r\n    // Finder State\r\n    // ============================================================================\r\n\r\n    const finderState: FinderState = {\r\n        currentPath: [],\r\n        currentView: 'computer',\r\n        selectedItems: new Set(),\r\n        viewMode: 'list',\r\n        sortBy: 'name',\r\n        sortOrder: 'asc',\r\n        githubRepos: [],\r\n        githubLoading: false,\r\n        githubError: false,\r\n        favorites: new Set(),\r\n        recentFiles: [],\r\n    };\r\n\r\n    // GitHub Integration (lightweight, embedded in Finder)\r\n    const GITHUB_USERNAME = 'Marormur';\r\n    const githubContentCache = new Map<string, FinderItem[]>();\r\n    const GITHUB_CACHE_NS = 'finderGithubCacheV1:';\r\n\r\n    const global = window as Window & GitHubAPIWindow;\r\n\r\n    function getGithubHeaders(): Record<string, string> {\r\n        if (global.GitHubAPI && typeof global.GitHubAPI.getHeaders === 'function') {\r\n            return global.GitHubAPI.getHeaders();\r\n        }\r\n        const headers: Record<string, string> = { Accept: 'application/vnd.github.v3+json' };\r\n        try {\r\n            const token = localStorage.getItem('githubToken');\r\n            if (token && token.trim()) {\r\n                headers['Authorization'] = `token ${token.trim()}`;\r\n            }\r\n        } catch {\r\n            /* ignore */\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function getCacheTtl(): number {\r\n        const dflt = 5 * 60 * 1000;\r\n        try {\r\n            const constants = global.APP_CONSTANTS;\r\n            if (constants && typeof constants.GITHUB_CACHE_DURATION === 'number') {\r\n                return constants.GITHUB_CACHE_DURATION;\r\n            }\r\n            return dflt;\r\n        } catch {\r\n            return dflt;\r\n        }\r\n    }\r\n\r\n    function makeCacheKey(kind: string, repo = '', subPath = ''): string {\r\n        if (kind === 'repos') return GITHUB_CACHE_NS + 'repos';\r\n        return `${GITHUB_CACHE_NS}contents:${repo}:${subPath}`;\r\n    }\r\n\r\n    function writeCache(kind: string, repo: string, subPath: string, data: unknown): void {\r\n        if (global.GitHubAPI && typeof global.GitHubAPI.writeCache === 'function') {\r\n            global.GitHubAPI.writeCache(kind, repo, subPath, data);\r\n            return;\r\n        }\r\n        const key = makeCacheKey(kind, repo, subPath);\r\n        try {\r\n            const payload: CachePayload = { t: Date.now(), d: data };\r\n            localStorage.setItem(key, JSON.stringify(payload));\r\n        } catch {\r\n            /* ignore */\r\n        }\r\n    }\r\n\r\n    function readCache(kind: string, repo = '', subPath = ''): unknown[] | null {\r\n        if (global.GitHubAPI && typeof global.GitHubAPI.readCache === 'function') {\r\n            const result = global.GitHubAPI.readCache(kind, repo, subPath);\r\n            return Array.isArray(result) ? result : null;\r\n        }\r\n        const key = makeCacheKey(kind, repo, subPath);\r\n        try {\r\n            const raw = localStorage.getItem(key);\r\n            if (!raw) return null;\r\n            const parsed = JSON.parse(raw) as CachePayload;\r\n            if (!parsed || typeof parsed !== 'object') return null;\r\n            const ttl = getCacheTtl();\r\n            if (typeof parsed.t !== 'number' || Date.now() - parsed.t > ttl) return null;\r\n            return Array.isArray(parsed.d) ? (parsed.d as unknown[]) : null;\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // DOM References\r\n    // ============================================================================\r\n\r\n    let domRefs: DomRefs | null = null;\r\n\r\n    function initDomRefs(): DomRefs | null {\r\n        if (domRefs) return domRefs;\r\n\r\n        domRefs = {\r\n            sidebarComputer: document.getElementById('finder-sidebar-computer'),\r\n            sidebarGithub: document.getElementById('finder-sidebar-github'),\r\n            sidebarFavorites: document.getElementById('finder-sidebar-favorites'),\r\n            sidebarRecent: document.getElementById('finder-sidebar-recent'),\r\n            breadcrumbs: document.getElementById('finder-path-breadcrumbs'),\r\n            contentArea: document.getElementById('finder-content-area'),\r\n            toolbar: document.getElementById('finder-toolbar'),\r\n            searchInput: document.getElementById(\r\n                'finder-search-input'\r\n            ) as HTMLInputElement | null,\r\n        };\r\n\r\n        return domRefs;\r\n    }\r\n\r\n    // ============================================================================\r\n    // Navigation\r\n    // ============================================================================\r\n\r\n    function navigateTo(path: string[] | string, view: CurrentView | null = null): void {\r\n        if (view !== null) {\r\n            finderState.currentView = view;\r\n        }\r\n\r\n        if (typeof path === 'string') {\r\n            finderState.currentPath = path === '' ? [] : path.split('/');\r\n        } else if (Array.isArray(path)) {\r\n            finderState.currentPath = [...path];\r\n        }\r\n\r\n        updateSidebarSelection();\r\n        renderBreadcrumbs();\r\n        renderContent();\r\n        saveFinderState();\r\n    }\r\n\r\n    function navigateUp(): void {\r\n        if (finderState.currentPath.length > 0) {\r\n            finderState.currentPath.pop();\r\n            navigateTo(finderState.currentPath);\r\n        }\r\n    }\r\n\r\n    function navigateToFolder(folderName: string): void {\r\n        finderState.currentPath.push(folderName);\r\n        navigateTo(finderState.currentPath);\r\n    }\r\n\r\n    // ============================================================================\r\n    // Sidebar\r\n    // ============================================================================\r\n\r\n    function updateSidebarSelection(): void {\r\n        const refs = initDomRefs();\r\n        if (!refs) return;\r\n\r\n        // Entferne alle aktiven Markierungen\r\n        [refs.sidebarComputer, refs.sidebarGithub, refs.sidebarFavorites, refs.sidebarRecent].forEach(\r\n            (el) => {\r\n                if (el) el.classList.remove('finder-sidebar-active');\r\n            }\r\n        );\r\n\r\n        // Markiere aktuelle Ansicht\r\n        switch (finderState.currentView) {\r\n            case 'computer':\r\n                if (refs.sidebarComputer)\r\n                    refs.sidebarComputer.classList.add('finder-sidebar-active');\r\n                break;\r\n            case 'github':\r\n                if (refs.sidebarGithub) refs.sidebarGithub.classList.add('finder-sidebar-active');\r\n                break;\r\n            case 'favorites':\r\n                if (refs.sidebarFavorites)\r\n                    refs.sidebarFavorites.classList.add('finder-sidebar-active');\r\n                break;\r\n            case 'recent':\r\n                if (refs.sidebarRecent) refs.sidebarRecent.classList.add('finder-sidebar-active');\r\n                break;\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // Breadcrumbs\r\n    // ============================================================================\r\n\r\n    function renderBreadcrumbs(): void {\r\n        const refs = initDomRefs();\r\n        if (!refs || !refs.breadcrumbs) return;\r\n\r\n        const parts: string[] = [];\r\n\r\n        // Ansichtsname\r\n        let viewLabel = '';\r\n        switch (finderState.currentView) {\r\n            case 'computer':\r\n                viewLabel = 'Computer';\r\n                break;\r\n            case 'github':\r\n                viewLabel = 'GitHub Projekte';\r\n                break;\r\n            case 'favorites':\r\n                viewLabel = 'Favoriten';\r\n                break;\r\n            case 'recent':\r\n                viewLabel = 'Zuletzt geöffnet';\r\n                break;\r\n        }\r\n\r\n        parts.push(\r\n            `<button class=\"finder-breadcrumb-item\" data-action=\"finder:goRoot\">${viewLabel}</button>`\r\n        );\r\n\r\n        // Pfad-Teile (überspringe ersten Teil wenn er gleich dem View-Label ist)\r\n        finderState.currentPath.forEach((part, index) => {\r\n            // Überspringe \"Computer\" wenn wir in der Computer-Ansicht sind und es der erste Pfad-Teil ist\r\n            if (index === 0 && finderState.currentView === 'computer' && part === 'Computer') {\r\n                return; // Überspringe diesen Teil\r\n            }\r\n\r\n            const pathUpToHere = finderState.currentPath.slice(0, index + 1);\r\n            parts.push('<span class=\"finder-breadcrumb-separator\">›</span>');\r\n            parts.push(\r\n                `<button class=\"finder-breadcrumb-item\" data-action=\"finder:navigateToPath\" data-path=\"${pathUpToHere.join('/')}\">${part}</button>`\r\n            );\r\n        });\r\n\r\n        refs.breadcrumbs.innerHTML = parts.join('');\r\n    }\r\n\r\n    // ============================================================================\r\n    // Content Rendering\r\n    // ============================================================================\r\n\r\n    function getCurrentItems(): FinderItem[] {\r\n        switch (finderState.currentView) {\r\n            case 'computer':\r\n                return getComputerItems();\r\n            case 'github':\r\n                return getGithubItems();\r\n            case 'favorites':\r\n                return getFavoriteItems();\r\n            case 'recent':\r\n                return getRecentItems();\r\n            default:\r\n                return [];\r\n        }\r\n    }\r\n\r\n    function getComputerItems(): FinderItem[] {\r\n        let current: Record<string, VirtualFileSystemItem> = virtualFileSystem;\r\n\r\n        for (const pathPart of finderState.currentPath) {\r\n            const item = current[pathPart];\r\n            if (item && item.type === 'folder') {\r\n                current = item.children;\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return Object.entries(current).map(([name, item]) => ({\r\n            name,\r\n            type: item.type,\r\n            icon: item.icon || (item.type === 'folder' ? '📁' : '📄'),\r\n            size: 'size' in item ? item.size : 0,\r\n            modified: 'modified' in item ? item.modified : new Date().toISOString(),\r\n        }));\r\n    }\r\n\r\n    function getGithubItems(): FinderItem[] {\r\n        // Root der GitHub-Ansicht: Repos anzeigen\r\n        if (finderState.currentPath.length === 0) {\r\n            // Versuche, Cache direkt zu nutzen\r\n            if (!finderState.githubRepos.length) {\r\n                const cachedRepos = readCache('repos');\r\n                if (Array.isArray(cachedRepos) && cachedRepos.length) {\r\n                    // cachedRepos sind bereits in gemapptem Format\r\n                    return cachedRepos as FinderItem[];\r\n                }\r\n            }\r\n            if (\r\n                !finderState.githubRepos.length &&\r\n                !finderState.githubLoading &&\r\n                !finderState.githubError\r\n            ) {\r\n                finderState.githubLoading = true;\r\n                (global.GitHubAPI && global.GitHubAPI.fetchUserRepos\r\n                    ? global.GitHubAPI.fetchUserRepos(GITHUB_USERNAME, {\r\n                          per_page: 100,\r\n                          sort: 'updated',\r\n                      })\r\n                    : fetch(\r\n                          `https://api.github.com/users/${GITHUB_USERNAME}/repos?per_page=100&sort=updated`,\r\n                          {\r\n                              headers: getGithubHeaders(),\r\n                          }\r\n                      ).then((r) => (r.ok ? r.json() : Promise.reject(r)))\r\n                )\r\n                    .then((repos: GitHubRepo[]) => {\r\n                        const list = (Array.isArray(repos) ? repos : []).map((r) => ({\r\n                            name:\r\n                                r.name ||\r\n                                (global.translate\r\n                                    ? global.translate('finder.repoUnnamed')\r\n                                    : 'Unbenanntes Repository'),\r\n                            type: 'folder',\r\n                            icon: '📂',\r\n                            size: 0,\r\n                            modified:\r\n                                r.updated_at ||\r\n                                r.pushed_at ||\r\n                                r.created_at ||\r\n                                new Date().toISOString(),\r\n                            html_url: r.html_url,\r\n                        }));\r\n                        finderState.githubRepos = repos || [];\r\n                        writeCache('repos', '', '', list);\r\n                        finderState.githubError = false;\r\n                    })\r\n                    .catch((err: { status?: number }) => {\r\n                        if (err && err.status === 403) {\r\n                            finderState.githubError = true;\r\n                        }\r\n                        finderState.githubError = true;\r\n                    })\r\n                    .finally(() => {\r\n                        finderState.githubLoading = false;\r\n                        renderContent();\r\n                    });\r\n            }\r\n            if (finderState.githubLoading) {\r\n                return [\r\n                    {\r\n                        name: global.translate\r\n                            ? global.translate('finder.loadingFiles')\r\n                            : 'Lade Dateien …',\r\n                        type: 'info',\r\n                        icon: '⏳',\r\n                        size: 0,\r\n                    },\r\n                ];\r\n            }\r\n            if (finderState.githubError) {\r\n                // Fallback auf Cache, falls verfügbar\r\n                const cachedRepos = readCache('repos');\r\n                if (Array.isArray(cachedRepos) && cachedRepos.length) {\r\n                    return cachedRepos as FinderItem[];\r\n                }\r\n                return [\r\n                    {\r\n                        name: global.translate\r\n                            ? global.translate('finder.rateLimit')\r\n                            : 'GitHub Rate Limit erreicht. Bitte versuche es später erneut.',\r\n                        type: 'info',\r\n                        icon: '⚠️',\r\n                        size: 0,\r\n                    },\r\n                ];\r\n            }\r\n            if (!finderState.githubRepos.length) {\r\n                return [\r\n                    {\r\n                        name: global.translate\r\n                            ? global.translate('finder.noRepositories')\r\n                            : 'Keine öffentlichen Repositories gefunden.',\r\n                        type: 'info',\r\n                        icon: 'ℹ️',\r\n                        size: 0,\r\n                    },\r\n                ];\r\n            }\r\n            return finderState.githubRepos.map((r) => ({\r\n                name:\r\n                    r.name ||\r\n                    (global.translate\r\n                        ? global.translate('finder.repoUnnamed')\r\n                        : 'Unbenanntes Repository'),\r\n                type: 'folder',\r\n                icon: '📂',\r\n                size: 0,\r\n                modified: r.updated_at || r.pushed_at || r.created_at || new Date().toISOString(),\r\n                html_url: r.html_url,\r\n            }));\r\n        }\r\n\r\n        // Innerhalb eines Repos: Dateien/Ordner des Pfads anzeigen\r\n        const repo = finderState.currentPath[0];\r\n        if (!repo) {\r\n            return [];\r\n        }\r\n        const subPath = finderState.currentPath.slice(1).join('/');\r\n        const cacheKey = `${repo}:${subPath}`;\r\n        let cached = githubContentCache.get(cacheKey);\r\n        if (!cached) {\r\n            const fromStorage = readCache('contents', repo, subPath);\r\n            if (Array.isArray(fromStorage) && fromStorage.length) {\r\n                cached = fromStorage as FinderItem[];\r\n                githubContentCache.set(cacheKey, cached);\r\n            }\r\n        }\r\n        if (!cached && !finderState.githubLoading && !finderState.githubError) {\r\n            finderState.githubLoading = true;\r\n            const pathPart = subPath ? `/${encodeURIComponent(subPath).replace(/%2F/g, '/')}` : '';\r\n            (global.GitHubAPI && global.GitHubAPI.fetchRepoContents\r\n                ? global.GitHubAPI.fetchRepoContents(GITHUB_USERNAME, repo, subPath || '')\r\n                : fetch(\r\n                      `https://api.github.com/repos/${GITHUB_USERNAME}/${encodeURIComponent(\r\n                          repo\r\n                      )}/contents${pathPart}`,\r\n                      {\r\n                          headers: getGithubHeaders(),\r\n                      }\r\n                  ).then((r) => (r.ok ? r.json() : Promise.reject(r)))\r\n            )\r\n                .then((items: GitHubContentItem | GitHubContentItem[]) => {\r\n                    const mapped = (Array.isArray(items) ? items : [items]).map((it) => {\r\n                        const isDir = it.type === 'dir';\r\n                        return {\r\n                            name: it.name,\r\n                            type: isDir ? 'folder' : 'file',\r\n                            icon: isDir ? '📁' : '📄',\r\n                            size: it.size || 0,\r\n                            modified: '',\r\n                            url: it.url,\r\n                            html_url: it.html_url,\r\n                            download_url: it.download_url,\r\n                        };\r\n                    });\r\n                    githubContentCache.set(cacheKey, mapped);\r\n                    writeCache('contents', repo, subPath || '', mapped);\r\n                    finderState.githubError = false;\r\n                })\r\n                .catch((err: { status?: number }) => {\r\n                    if (err && err.status === 403) {\r\n                        finderState.githubError = true;\r\n                    }\r\n                    // Auf Cache zurückfallen, falls vorhanden\r\n                    const fallback = (readCache('contents', repo, subPath) as FinderItem[]) || [];\r\n                    githubContentCache.set(cacheKey, fallback);\r\n                    finderState.githubError = true;\r\n                })\r\n                .finally(() => {\r\n                    finderState.githubLoading = false;\r\n                    renderContent();\r\n                });\r\n        }\r\n        if (finderState.githubLoading && !cached) {\r\n            return [\r\n                {\r\n                    name: global.translate\r\n                        ? global.translate('finder.loadingFiles')\r\n                        : 'Lade Dateien …',\r\n                    type: 'info',\r\n                    icon: '⏳',\r\n                    size: 0,\r\n                },\r\n            ];\r\n        }\r\n        if (finderState.githubError && !cached) {\r\n            const fallback = readCache('contents', repo, subPath);\r\n            if (Array.isArray(fallback) && fallback.length) {\r\n                return fallback as FinderItem[];\r\n            }\r\n            return [\r\n                {\r\n                    name: global.translate\r\n                        ? global.translate('finder.rateLimit')\r\n                        : 'GitHub Rate Limit erreicht. Bitte versuche es später erneut.',\r\n                    type: 'info',\r\n                    icon: '⚠️',\r\n                    size: 0,\r\n                },\r\n            ];\r\n        }\r\n        const list = Array.isArray(cached) ? cached : [];\r\n        if (!list.length) {\r\n            return [\r\n                {\r\n                    name: global.translate\r\n                        ? global.translate('finder.emptyDirectory')\r\n                        : 'Keine Dateien in diesem Verzeichnis gefunden.',\r\n                    type: 'info',\r\n                    icon: '📁',\r\n                    size: 0,\r\n                },\r\n            ];\r\n        }\r\n        return list;\r\n    }\r\n\r\n    function getFavoriteItems(): FinderItem[] {\r\n        return Array.from(finderState.favorites).map((path) => ({\r\n            name: path.split('/').pop() || '',\r\n            type: 'favorite',\r\n            icon: '⭐',\r\n            path,\r\n        }));\r\n    }\r\n\r\n    function getRecentItems(): FinderItem[] {\r\n        return finderState.recentFiles.map((file) => ({\r\n            name: file.name,\r\n            type: 'recent',\r\n            icon: file.icon || '📄',\r\n            path: file.path,\r\n            modified: file.modified,\r\n        }));\r\n    }\r\n\r\n    function renderContent(): void {\r\n        const refs = initDomRefs();\r\n        if (!refs || !refs.contentArea) return;\r\n\r\n        const items = getCurrentItems();\r\n\r\n        if (items.length === 0) {\r\n            refs.contentArea.innerHTML = `\r\n                <div class=\"finder-empty-state\">\r\n                    <div class=\"text-6xl mb-4\">📂</div>\r\n                    <div class=\"text-gray-500 dark:text-gray-400\">Dieser Ordner ist leer</div>\r\n                </div>\r\n            `;\r\n            return;\r\n        }\r\n\r\n        // Sortiere Items\r\n        const sortedItems = sortItems(items);\r\n\r\n        // Render basierend auf viewMode\r\n        switch (finderState.viewMode) {\r\n            case 'list':\r\n                renderListView(sortedItems);\r\n                break;\r\n            case 'grid':\r\n                renderGridView(sortedItems);\r\n                break;\r\n            case 'columns':\r\n                renderColumnsView(sortedItems);\r\n                break;\r\n        }\r\n    }\r\n\r\n    function sortItems(items: FinderItem[]): FinderItem[] {\r\n        const sorted = [...items];\r\n\r\n        // Ordner zuerst\r\n        sorted.sort((a, b) => {\r\n            if (a.type === 'folder' && b.type !== 'folder') return -1;\r\n            if (a.type !== 'folder' && b.type === 'folder') return 1;\r\n\r\n            // Dann nach sortBy\r\n            let comparison = 0;\r\n            switch (finderState.sortBy) {\r\n                case 'name':\r\n                    comparison = a.name.localeCompare(b.name);\r\n                    break;\r\n                case 'size':\r\n                    comparison = (a.size || 0) - (b.size || 0);\r\n                    break;\r\n                case 'date':\r\n                    comparison =\r\n                        new Date(b.modified || 0).getTime() -\r\n                        new Date(a.modified || 0).getTime();\r\n                    break;\r\n                case 'type':\r\n                    comparison = (a.type || '').localeCompare(b.type || '');\r\n                    break;\r\n            }\r\n\r\n            return finderState.sortOrder === 'asc' ? comparison : -comparison;\r\n        });\r\n\r\n        return sorted;\r\n    }\r\n\r\n    function renderListView(items: FinderItem[]): void {\r\n        const refs = initDomRefs();\r\n        if (!refs || !refs.contentArea) return;\r\n\r\n        const html = `\r\n            <table class=\"finder-list-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th data-action=\"finder:setSortBy\" data-sort-by=\"name\">Name</th>\r\n                        <th data-action=\"finder:setSortBy\" data-sort-by=\"size\">Größe</th>\r\n                        <th data-action=\"finder:setSortBy\" data-sort-by=\"date\">Geändert</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    ${items\r\n                        .map(\r\n                            (item) => `\r\n                        <tr class=\"finder-list-item\" data-action-dblclick=\"finder:openItem\" data-item-name=\"${item.name}\" data-item-type=\"${item.type}\">\r\n                            <td>\r\n                                <span class=\"finder-item-icon\">${item.icon}</span>\r\n                                <span class=\"finder-item-name\">${item.name}</span>\r\n                            </td>\r\n                            <td>${formatSize(item.size)}</td>\r\n                            <td>${formatDate(item.modified)}</td>\r\n                        </tr>\r\n                    `\r\n                        )\r\n                        .join('')}\r\n                </tbody>\r\n            </table>\r\n        `;\r\n\r\n        refs.contentArea.innerHTML = html;\r\n    }\r\n\r\n    function renderGridView(items: FinderItem[]): void {\r\n        const refs = initDomRefs();\r\n        if (!refs || !refs.contentArea) return;\r\n\r\n        const html = `\r\n            <div class=\"finder-grid-container\">\r\n                ${items\r\n                    .map(\r\n                        (item) => `\r\n                    <div class=\"finder-grid-item\" data-action-dblclick=\"finder:openItem\" data-item-name=\"${item.name}\" data-item-type=\"${item.type}\">\r\n                        <div class=\"finder-grid-icon\">${item.icon}</div>\r\n                        <div class=\"finder-grid-name\">${item.name}</div>\r\n                    </div>\r\n                `\r\n                    )\r\n                    .join('')}\r\n            </div>\r\n        `;\r\n\r\n        refs.contentArea.innerHTML = html;\r\n    }\r\n\r\n    function renderColumnsView(items: FinderItem[]): void {\r\n        // Column view für später\r\n        renderListView(items);\r\n    }\r\n\r\n    // ============================================================================\r\n    // Item Actions\r\n    // ============================================================================\r\n\r\n    function openItem(name: string, type: string): void {\r\n        if (type === 'folder') {\r\n            navigateToFolder(name);\r\n        } else if (type === 'action') {\r\n            const items = getCurrentItems();\r\n            const item = items.find((i) => i.name === name);\r\n            if (item && item.action) {\r\n                item.action();\r\n            }\r\n        } else if (type === 'file') {\r\n            openFile(name);\r\n        }\r\n    }\r\n\r\n    function openFile(name: string): void {\r\n        // Füge zu zuletzt geöffnet hinzu\r\n        addToRecent(name);\r\n\r\n        // GitHub-spezifische Datei-Öffnung (inline)\r\n        if (finderState.currentView === 'github') {\r\n            const items = getCurrentItems();\r\n            const entry = items.find((i) => i && i.name === name);\r\n            const isImage = isImageFile(name);\r\n            const isText = isProbablyTextFile(name);\r\n            if (entry && (isImage || isText)) {\r\n                if (isImage) {\r\n                    openGithubImage(entry);\r\n                    return;\r\n                }\r\n                if (isText) {\r\n                    openGithubText(entry);\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Fallback: Öffne Editor/Viewer ohne GitHub-Content-Load\r\n        const ext = name.split('.').pop()?.toLowerCase();\r\n        if (ext && ['txt', 'md', 'js', 'json', 'html', 'css'].includes(ext)) {\r\n            if (global.dialogs && global.dialogs['text-modal']) {\r\n                global.dialogs['text-modal'].open();\r\n            }\r\n        } else if (ext && ['png', 'jpg', 'jpeg', 'gif', 'webp'].includes(ext)) {\r\n            if (global.dialogs && global.dialogs['image-modal']) {\r\n                global.dialogs['image-modal'].open();\r\n            }\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // Utilities\r\n    // ============================================================================\r\n\r\n    // Dateityp-Erkennung analog zu app.js\r\n    const textFileExtensions = [\r\n        '.txt',\r\n        '.md',\r\n        '.markdown',\r\n        '.mdx',\r\n        '.json',\r\n        '.jsonc',\r\n        '.csv',\r\n        '.tsv',\r\n        '.yaml',\r\n        '.yml',\r\n        '.xml',\r\n        '.html',\r\n        '.htm',\r\n        '.css',\r\n        '.scss',\r\n        '.sass',\r\n        '.less',\r\n        '.js',\r\n        '.mjs',\r\n        '.cjs',\r\n        '.ts',\r\n        '.tsx',\r\n        '.jsx',\r\n        '.vue',\r\n        '.c',\r\n        '.h',\r\n        '.cpp',\r\n        '.hpp',\r\n        '.cc',\r\n        '.cxx',\r\n        '.hh',\r\n        '.ino',\r\n        '.java',\r\n        '.kt',\r\n        '.kts',\r\n        '.swift',\r\n        '.cs',\r\n        '.py',\r\n        '.rb',\r\n        '.php',\r\n        '.rs',\r\n        '.go',\r\n        '.sh',\r\n        '.bash',\r\n        '.zsh',\r\n        '.fish',\r\n        '.ps1',\r\n        '.bat',\r\n        '.cmd',\r\n        '.ini',\r\n        '.cfg',\r\n        '.conf',\r\n        '.config',\r\n        '.env',\r\n        '.gitignore',\r\n        '.gitattributes',\r\n        '.log',\r\n        '.sql',\r\n    ];\r\n\r\n    const imageFileExtensions = [\r\n        '.png',\r\n        '.jpg',\r\n        '.jpeg',\r\n        '.gif',\r\n        '.webp',\r\n        '.bmp',\r\n        '.ico',\r\n        '.svg',\r\n        '.tiff',\r\n        '.tif',\r\n        '.heic',\r\n        '.heif',\r\n        '.avif',\r\n    ];\r\n\r\n    function isProbablyTextFile(filename: string): boolean {\r\n        if (!filename) return false;\r\n        const lower = String(filename).toLowerCase();\r\n        return textFileExtensions.some((ext) => lower.endsWith(ext));\r\n    }\r\n\r\n    function isImageFile(filename: string): boolean {\r\n        if (!filename) return false;\r\n        const lower = String(filename).toLowerCase();\r\n        return imageFileExtensions.some((ext) => lower.endsWith(ext));\r\n    }\r\n\r\n    function ensureImageViewerOpen(): { open(): void; bringToFront?(): void } | null {\r\n        const dlg = global.dialogs && global.dialogs['image-modal'];\r\n        if (dlg && typeof dlg.open === 'function') {\r\n            dlg.open();\r\n            return dlg;\r\n        }\r\n        if (typeof global.showTab === 'function') {\r\n            global.showTab('image');\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function ensureTextEditorOpen(): { open(): void; bringToFront?(): void } | null {\r\n        const dlg = global.dialogs && global.dialogs['text-modal'];\r\n        if (dlg && typeof dlg.open === 'function') {\r\n            dlg.open();\r\n            return dlg;\r\n        }\r\n        if (typeof global.showTab === 'function') {\r\n            global.showTab('text');\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function openGithubImage(entry: FinderItem): void {\r\n        const dlg = ensureImageViewerOpen();\r\n        const img = document.getElementById('image-viewer') as HTMLImageElement | null;\r\n        const placeholder = document.getElementById('image-placeholder');\r\n        if (img) {\r\n            img.src = '';\r\n            img.classList.add('hidden');\r\n        }\r\n        if (placeholder) {\r\n            placeholder.classList.remove('hidden');\r\n        }\r\n        const finalize = (src: string) => {\r\n            if (!img) return;\r\n            img.onload = () => {\r\n                if (placeholder) placeholder.classList.add('hidden');\r\n                img.classList.remove('hidden');\r\n                if (dlg && typeof dlg.bringToFront === 'function') dlg.bringToFront();\r\n            };\r\n            img.onerror = () => {\r\n                if (placeholder) placeholder.classList.remove('hidden');\r\n                img.classList.add('hidden');\r\n            };\r\n            img.src = src;\r\n        };\r\n        if (entry.download_url) {\r\n            finalize(entry.download_url);\r\n            return;\r\n        }\r\n        if (entry.url) {\r\n            const p =\r\n                global.GitHubAPI && global.GitHubAPI.fetchJSON\r\n                    ? global.GitHubAPI.fetchJSON(entry.url)\r\n                    : fetch(entry.url, {\r\n                          headers: { Accept: 'application/vnd.github.v3+json' },\r\n                      }).then((r) => (r.ok ? r.json() : Promise.reject(r)));\r\n            p.then((data: { download_url?: string }) => {\r\n                if (data && typeof data.download_url === 'string') {\r\n                    finalize(data.download_url);\r\n                }\r\n            }).catch(() => {\r\n                /* silently ignore */\r\n            });\r\n        }\r\n    }\r\n\r\n    function openGithubText(entry: FinderItem): void {\r\n        const dlg = ensureTextEditorOpen();\r\n        const payloadBase = { fileName: entry.name, size: entry.size };\r\n\r\n        // Show loading state via direct API call\r\n        if (global.API && global.API.textEditor) {\r\n            global.API.textEditor.showLoading(payloadBase);\r\n        } else if (global.TextEditorSystem) {\r\n            global.TextEditorSystem.showLoading(payloadBase);\r\n        }\r\n\r\n        const fetchText = (): Promise<string> => {\r\n            if (entry.download_url) {\r\n                return fetch(entry.download_url).then((r) => {\r\n                    if (!r.ok) throw new Error('Download failed');\r\n                    return r.text();\r\n                });\r\n            }\r\n            if (entry.url) {\r\n                const p =\r\n                    global.GitHubAPI && global.GitHubAPI.fetchJSON\r\n                        ? global.GitHubAPI.fetchJSON(entry.url)\r\n                        : fetch(entry.url, {\r\n                              headers: { Accept: 'application/vnd.github.v3+json' },\r\n                          }).then((r) => (r.ok ? r.json() : Promise.reject(r)));\r\n                return p.then((data: { download_url?: string; encoding?: string; content?: string }) => {\r\n                    if (data && typeof data.download_url === 'string') {\r\n                        return fetch(data.download_url).then((r) => {\r\n                            if (!r.ok) throw new Error('Download failed');\r\n                            return r.text();\r\n                        });\r\n                    }\r\n                    if (data && data.encoding === 'base64' && typeof data.content === 'string') {\r\n                        try {\r\n                            return atob(data.content.replace(/\\s/g, ''));\r\n                        } catch {\r\n                            throw new Error('Decode error');\r\n                        }\r\n                    }\r\n                    throw new Error('No content');\r\n                });\r\n            }\r\n            return Promise.reject(new Error('No source'));\r\n        };\r\n        fetchText()\r\n            .then((content) => {\r\n                // Load remote file via direct API call\r\n                if (global.API && global.API.textEditor) {\r\n                    global.API.textEditor.loadRemoteFile(\r\n                        Object.assign({}, payloadBase, { content })\r\n                    );\r\n                } else if (global.TextEditorSystem) {\r\n                    global.TextEditorSystem.loadRemoteFile(\r\n                        Object.assign({}, payloadBase, { content })\r\n                    );\r\n                }\r\n                if (dlg && typeof dlg.bringToFront === 'function') dlg.bringToFront();\r\n            })\r\n            .catch(() => {\r\n                // Show error via direct API call\r\n                if (global.API && global.API.textEditor) {\r\n                    global.API.textEditor.showLoadError(\r\n                        Object.assign({}, payloadBase, {\r\n                            message: 'Fehler beim Laden',\r\n                        })\r\n                    );\r\n                } else if (global.TextEditorSystem) {\r\n                    global.TextEditorSystem.showLoadError(\r\n                        Object.assign({}, payloadBase, {\r\n                            message: 'Fehler beim Laden',\r\n                        })\r\n                    );\r\n                }\r\n            });\r\n    }\r\n\r\n    function formatSize(bytes: number | undefined): string {\r\n        if (!bytes || bytes === 0) return '-';\r\n        if (bytes < 1024) return bytes + ' B';\r\n        if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';\r\n        return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\r\n    }\r\n\r\n    function formatDate(dateStr: string | undefined): string {\r\n        if (!dateStr) return '-';\r\n        const date = new Date(dateStr);\r\n        return date.toLocaleDateString('de-DE', {\r\n            day: '2-digit',\r\n            month: '2-digit',\r\n            year: 'numeric',\r\n        });\r\n    }\r\n\r\n    function setSortBy(field: SortBy): void {\r\n        if (finderState.sortBy === field) {\r\n            finderState.sortOrder = finderState.sortOrder === 'asc' ? 'desc' : 'asc';\r\n        } else {\r\n            finderState.sortBy = field;\r\n            finderState.sortOrder = 'asc';\r\n        }\r\n        renderContent();\r\n    }\r\n\r\n    function setViewMode(mode: ViewMode): void {\r\n        finderState.viewMode = mode;\r\n        renderContent();\r\n        saveFinderState();\r\n    }\r\n\r\n    function addToRecent(name: string): void {\r\n        const fullPath = [...finderState.currentPath, name].join('/');\r\n        finderState.recentFiles.unshift({\r\n            name,\r\n            path: fullPath,\r\n            icon: '📄',\r\n            modified: new Date().toISOString(),\r\n        });\r\n\r\n        // Limit auf 20 Items\r\n        finderState.recentFiles = finderState.recentFiles.slice(0, 20);\r\n        saveFinderState();\r\n    }\r\n\r\n    function toggleFavorite(path: string): void {\r\n        if (finderState.favorites.has(path)) {\r\n            finderState.favorites.delete(path);\r\n        } else {\r\n            finderState.favorites.add(path);\r\n        }\r\n        saveFinderState();\r\n    }\r\n\r\n    // ============================================================================\r\n    // Persistence\r\n    // ============================================================================\r\n\r\n    interface SavedFinderState {\r\n        currentPath: string[];\r\n        currentView: CurrentView;\r\n        viewMode: ViewMode;\r\n        sortBy: SortBy;\r\n        sortOrder: SortOrder;\r\n        favorites: string[];\r\n        recentFiles: RecentFile[];\r\n    }\r\n\r\n    function saveFinderState(): void {\r\n        try {\r\n            const state: SavedFinderState = {\r\n                currentPath: finderState.currentPath,\r\n                currentView: finderState.currentView,\r\n                viewMode: finderState.viewMode,\r\n                sortBy: finderState.sortBy,\r\n                sortOrder: finderState.sortOrder,\r\n                favorites: Array.from(finderState.favorites),\r\n                recentFiles: finderState.recentFiles,\r\n            };\r\n            localStorage.setItem('finderAdvancedState', JSON.stringify(state));\r\n        } catch (e) {\r\n            console.warn('Could not save finder state:', e);\r\n        }\r\n    }\r\n\r\n    function loadFinderState(): void {\r\n        try {\r\n            const saved = localStorage.getItem('finderAdvancedState');\r\n            if (saved) {\r\n                const state = JSON.parse(saved) as Partial<SavedFinderState>;\r\n                finderState.currentPath = state.currentPath || [];\r\n                finderState.currentView = state.currentView || 'computer';\r\n                finderState.viewMode = state.viewMode || 'list';\r\n                finderState.sortBy = state.sortBy || 'name';\r\n                finderState.sortOrder = state.sortOrder || 'asc';\r\n                finderState.favorites = new Set(state.favorites || []);\r\n                finderState.recentFiles = state.recentFiles || [];\r\n            }\r\n        } catch (e) {\r\n            console.warn('Could not load finder state:', e);\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // Initialization\r\n    // ============================================================================\r\n\r\n    function init(): void {\r\n        loadFinderState();\r\n        initDomRefs();\r\n        navigateTo(finderState.currentPath, finderState.currentView);\r\n\r\n        // i18n-Übersetzungen anwenden\r\n        if (global.appI18n && typeof global.appI18n.applyTranslations === 'function') {\r\n            const finderModal = document.getElementById('finder-modal');\r\n            if (finderModal) {\r\n                global.appI18n.applyTranslations(finderModal);\r\n            }\r\n        }\r\n    }\r\n\r\n    // ============================================================================\r\n    // Public API\r\n    // ============================================================================\r\n\r\n    const FinderSystemInstance: FinderSystemType = {\r\n        init,\r\n        navigateTo,\r\n        navigateUp,\r\n        navigateToFolder,\r\n        openItem,\r\n        setSortBy,\r\n        setViewMode,\r\n        toggleFavorite,\r\n        getState: () => finderState,\r\n        // Stub methods for compatibility with global FinderSystemAPI\r\n        openFinder: () => {\r\n            const finderModal = global.dialogs?.['finder-modal'];\r\n            if (finderModal && typeof finderModal.open === 'function') {\r\n                finderModal.open();\r\n            }\r\n        },\r\n        closeFinder: () => {\r\n            const finderModal = global.dialogs?.['finder-modal'];\r\n            if (finderModal && 'close' in finderModal && typeof finderModal.close === 'function') {\r\n                (finderModal as { close(): void }).close();\r\n            }\r\n        },\r\n    };\r\n\r\n    (global as Window & { FinderSystem: FinderSystemType }).FinderSystem = FinderSystemInstance;\r\n\r\n    // Init wird von app.js nach Dialog-Initialisierung aufgerufen\r\n    // Keine automatische Initialisierung hier\r\n})();\r\n\r\nexport {};\r\n"]}