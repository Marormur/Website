{"version":3,"file":"snap-utils.js","sourceRoot":"","sources":["../src/ts/snap-utils.ts"],"names":[],"mappings":"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","sourcesContent":["(function () {\n    'use strict';\n\n    // ============================================================================\n    // Snap & Window Utilities\n    // ============================================================================\n\n    /**\n     * Get the bottom position of the menu bar (header element).\n     * @returns The bottom edge of the menu bar in pixels.\n     */\n    function getMenuBarBottom(): number {\n        const header = document.querySelector('body > header');\n        if (!header) {\n            return 0;\n        }\n        const rect = header.getBoundingClientRect();\n        return rect.bottom;\n    }\n\n    /**\n     * Clamp a window element so it doesn't overlap the menu bar.\n     * @param target - The element to clamp (e.g., a modal or dialog window).\n     */\n    function clampWindowToMenuBar(target: HTMLElement | null): void {\n        if (!target) return;\n        const minTop = getMenuBarBottom();\n        if (minTop <= 0) return;\n        const computed = window.getComputedStyle(target);\n        if (computed.position === 'static') {\n            target.style.position = 'fixed';\n        }\n        const currentTop = parseFloat(target.style.top);\n        const numericTop = Number.isNaN(currentTop)\n            ? parseFloat(computed.top)\n            : currentTop;\n        if (!Number.isNaN(numericTop) && numericTop < minTop) {\n            target.style.top = `${minTop}px`;\n        } else if (Number.isNaN(numericTop)) {\n            const rect = target.getBoundingClientRect();\n            if (rect.top < minTop) {\n                if (!target.style.left) {\n                    target.style.left = `${rect.left}px`;\n                }\n                target.style.top = `${minTop}px`;\n            }\n        }\n    }\n\n    /**\n     * Compute snap metrics for window snapping (left or right side).\n     * @param side - The side to snap to ('left' or 'right').\n     * @returns Snap metrics (left, top, width, height) or null if invalid.\n     */\n    function computeSnapMetrics(\n        side: 'left' | 'right'\n    ): { left: number; top: number; width: number; height: number } | null {\n        if (side !== 'left' && side !== 'right') return null;\n        const minTop = Math.round(getMenuBarBottom());\n        const viewportWidth = Math.max(window.innerWidth || 0, 0);\n        const viewportHeight = Math.max(window.innerHeight || 0, 0);\n        if (viewportWidth <= 0 || viewportHeight <= 0) return null;\n        const minWidth = Math.min(320, viewportWidth);\n        const halfWidth = Math.round(viewportWidth / 2);\n        const width = Math.max(Math.min(halfWidth, viewportWidth), minWidth);\n        const left = side === 'left' ? 0 : Math.max(0, viewportWidth - width);\n        const top = minTop;\n\n        // Fetch dock reserved bottom height\n        const getDockReservedBottom =\n            (window as unknown as { getDockReservedBottom?: () => number }).getDockReservedBottom;\n        const dockReserve = typeof getDockReservedBottom === 'function' ? getDockReservedBottom() : 0;\n\n        const height = Math.max(0, viewportHeight - top - dockReserve);\n        return { left, top, width, height };\n    }\n\n    let snapPreviewElement: HTMLElement | null = null;\n\n    /**\n     * Ensure the snap preview overlay element exists in the DOM.\n     * @returns The snap preview element or null if DOM is unavailable.\n     */\n    function ensureSnapPreviewElement(): HTMLElement | null {\n        if (snapPreviewElement && snapPreviewElement.isConnected) {\n            return snapPreviewElement;\n        }\n        if (!document || !document.body) {\n            return null;\n        }\n        snapPreviewElement = document.getElementById('snap-preview-overlay');\n        if (!snapPreviewElement) {\n            snapPreviewElement = document.createElement('div');\n            snapPreviewElement.id = 'snap-preview-overlay';\n            snapPreviewElement.setAttribute('aria-hidden', 'true');\n            document.body.appendChild(snapPreviewElement);\n        }\n        return snapPreviewElement;\n    }\n\n    /**\n     * Show a snap preview overlay on the specified side.\n     * @param side - The side to preview snapping ('left' or 'right').\n     */\n    function showSnapPreview(side: 'left' | 'right'): void {\n        const metrics = computeSnapMetrics(side);\n        if (!metrics) {\n            hideSnapPreview();\n            return;\n        }\n        const el = ensureSnapPreviewElement();\n        if (!el) return;\n        el.style.left = `${metrics.left}px`;\n        el.style.top = `${metrics.top}px`;\n        el.style.width = `${metrics.width}px`;\n        el.style.height = `${metrics.height}px`;\n        el.setAttribute('data-side', side);\n        el.classList.add('snap-preview-visible');\n    }\n\n    /**\n     * Hide the snap preview overlay.\n     */\n    function hideSnapPreview(): void {\n        if (!snapPreviewElement || !snapPreviewElement.isConnected) {\n            return;\n        }\n        snapPreviewElement.classList.remove('snap-preview-visible');\n        snapPreviewElement.removeAttribute('data-side');\n    }\n\n    // ============================================================================\n    // Expose globally (guarded to avoid redeclare)\n    // ============================================================================\n\n    type GlobalWindow = typeof window & {\n        getMenuBarBottom?: typeof getMenuBarBottom;\n        clampWindowToMenuBar?: typeof clampWindowToMenuBar;\n        computeSnapMetrics?: typeof computeSnapMetrics;\n        showSnapPreview?: typeof showSnapPreview;\n        hideSnapPreview?: typeof hideSnapPreview;\n    };\n\n    const g = window as GlobalWindow;\n\n    if (typeof g.getMenuBarBottom !== 'function') {\n        g.getMenuBarBottom = getMenuBarBottom;\n    }\n    if (typeof g.clampWindowToMenuBar !== 'function') {\n        g.clampWindowToMenuBar = clampWindowToMenuBar;\n    }\n    if (typeof g.computeSnapMetrics !== 'function') {\n        g.computeSnapMetrics = computeSnapMetrics;\n    }\n    if (typeof g.showSnapPreview !== 'function') {\n        g.showSnapPreview = showSnapPreview;\n    }\n    if (typeof g.hideSnapPreview !== 'function') {\n        g.hideSnapPreview = hideSnapPreview;\n    }\n})();\n"]}