{"version":3,"file":"desktop.js","sourceRoot":"","sources":["../src/ts/desktop.ts"],"names":[],"mappings":";;;AA+BA,wDAuBC;AAED,gEAKC;AA7DD,gDAAgD;AAChD,+DAA+D;AAC/D,iCAAmC;AAMnC,MAAM,GAAG,GAAG,CAAE,MAAmC,CAAC,GAAG,CAAC,CAAC;AAW1C,QAAA,iBAAiB,GAAsB;AAChD,sCAAsC;AACtC,WAAW;AACX,IAAI;AACJ,qBAAqB;AACrB,iCAAiC;AACjC,mCAAmC;AACnC,gCAAgC;AAChC,uDAAuD;AACvD,KAAK;CACR,CAAC;AAEF,SAAgB,sBAAsB,CAAC,SAAsB;IACzD,SAAS,CAAC,SAAS,GAAG,EAAE,CAAC;IACzB,yBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;QACjC,MAAM,EAAE,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC5C,EAAE,CAAC,SAAS,GAAG,kBAAkB,CAAC;QAClC,EAAE,CAAC,YAAY,CAAC,aAAa,EAAE,iBAAiB,CAAC,CAAC;QAClD,EAAE,CAAC,YAAY,CAAC,cAAc,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7C,EAAE,CAAC,YAAY,CAAC,YAAY,EAAE,IAAA,gBAAS,EAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;QACpF,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;YAChB,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC1C,GAAG,CAAC,GAAG,GAAG,QAAQ,CAAC,IAAI,CAAC;YACxB,GAAG,CAAC,GAAG,GAAG,IAAA,gBAAS,EAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;YAC/D,GAAG,CAAC,SAAS,GAAG,uBAAuB,CAAC;YACxC,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;QACxB,CAAC;aAAM,IAAI,QAAQ,CAAC,KAAK,EAAE,CAAC;YACxB,EAAE,CAAC,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC;QACpC,CAAC;QACD,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC7C,KAAK,CAAC,SAAS,GAAG,wBAAwB,CAAC;QAC3C,KAAK,CAAC,WAAW,GAAG,IAAA,gBAAS,EAAC,QAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;QACzE,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACtB,SAAS,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC9B,CAAC,CAAC,CAAC;AACP,CAAC;AAED,SAAgB,0BAA0B,CAAC,EAAU;IACjD,MAAM,QAAQ,GAAG,yBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;IAC1D,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,EAAE,CAAC;QAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC;IACtB,CAAC;AACL,CAAC","sourcesContent":["// Desktop icon system for macOS-style portfolio\r\n// TypeScript version. Use this file for new desktop shortcuts.\r\nimport { translate } from './i18n';\r\n\r\n// Access the global API exposed on window (no module export)\r\ntype WindowWithAPI = { API?: {\r\n    window: { open: (id: unknown) => unknown }\r\n} };\r\nconst API = ((window as unknown as WindowWithAPI).API);\r\n\r\nexport interface DesktopShortcut {\r\n    id: string;\r\n    icon?: string;\r\n    emoji?: string;\r\n    labelKey: string;\r\n    fallbackLabel: string;\r\n    onOpen?: () => void;\r\n}\r\n\r\nexport const DESKTOP_SHORTCUTS: DesktopShortcut[] = [\r\n    // Desktop shortcuts can be added here\r\n    // Example:\r\n    // {\r\n    //     id: 'example',\r\n    //     icon: './img/example.svg',\r\n    //     labelKey: 'desktop.example',\r\n    //     fallbackLabel: 'Example',\r\n    //     onOpen: () => API?.window.open('example-modal'),\r\n    // },\r\n];\r\n\r\nexport function renderDesktopShortcuts(container: HTMLElement) {\r\n    container.innerHTML = '';\r\n    DESKTOP_SHORTCUTS.forEach(shortcut => {\r\n        const el = document.createElement('button');\r\n        el.className = 'desktop-shortcut';\r\n        el.setAttribute('data-action', 'openDesktopItem');\r\n        el.setAttribute('data-item-id', shortcut.id);\r\n        el.setAttribute('aria-label', translate(shortcut.labelKey, shortcut.fallbackLabel));\r\n        if (shortcut.icon) {\r\n            const img = document.createElement('img');\r\n            img.src = shortcut.icon;\r\n            img.alt = translate(shortcut.labelKey, shortcut.fallbackLabel);\r\n            img.className = 'desktop-shortcut-icon';\r\n            el.appendChild(img);\r\n        } else if (shortcut.emoji) {\r\n            el.textContent = shortcut.emoji;\r\n        }\r\n        const label = document.createElement('span');\r\n        label.className = 'desktop-shortcut-label';\r\n        label.textContent = translate(shortcut.labelKey, shortcut.fallbackLabel);\r\n        el.appendChild(label);\r\n        container.appendChild(el);\r\n    });\r\n}\r\n\r\nexport function handleDesktopShortcutClick(id: string) {\r\n    const shortcut = DESKTOP_SHORTCUTS.find(s => s.id === id);\r\n    if (shortcut && shortcut.onOpen) {\r\n        shortcut.onOpen();\r\n    }\r\n}\r\n"]}