{"version":3,"file":"program-actions.js","sourceRoot":"","sources":["../src/ts/program-actions.ts"],"names":[],"mappings":"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","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    type EditorMessage = { type: string; command?: string; payload?: unknown };\r\n    type GlobalWindow = {\r\n        dialogs?: Record<string, { modal?: HTMLElement | null } | undefined>;\r\n        postToTextEditor?: (msg: EditorMessage) => void;\r\n        getImageViewerState?: () => { hasImage: boolean; src: string };\r\n        openActiveImageInNewTab?: () => void;\r\n        downloadActiveImage?: () => void;\r\n        sendTextEditorMenuAction?: (command: string) => void;\r\n    } & Window;\r\n\r\n    const gw = (window as unknown as GlobalWindow);\r\n\r\n    // --- Text Editor Menu Action Bridge ---\r\n    function getTextEditorIframe(): HTMLIFrameElement | null {\r\n        const dialogs = gw.dialogs;\r\n        const dialog = dialogs ? dialogs['text-modal'] : null;\r\n        if (!dialog || !dialog.modal) return null;\r\n        return dialog.modal.querySelector('iframe');\r\n    }\r\n\r\n    function postToTextEditor(message: EditorMessage, attempt = 0): void {\r\n        if (!message || typeof message !== 'object') return;\r\n        // Prefer legacy global if available\r\n        const legacy = gw.postToTextEditor;\r\n        if (typeof legacy === 'function') {\r\n            legacy(message);\r\n            return;\r\n        }\r\n        const iframe = getTextEditorIframe();\r\n        if (iframe && iframe.contentWindow) {\r\n            let targetOrigin = '*';\r\n            if (\r\n                window.location &&\r\n                typeof window.location.origin === 'string' &&\r\n                window.location.origin !== 'null'\r\n            ) {\r\n                targetOrigin = window.location.origin;\r\n            }\r\n            iframe.contentWindow.postMessage(message, targetOrigin);\r\n            return;\r\n        }\r\n        if (attempt < 10) {\r\n            setTimeout(() => postToTextEditor(message, attempt + 1), 120);\r\n        } else {\r\n            console.warn('Texteditor iframe nicht verf√ºgbar, Nachricht verworfen.', message);\r\n        }\r\n    }\r\n\r\n    function sendTextEditorMenuAction(command: string): void {\r\n        if (!command) return;\r\n        postToTextEditor({ type: 'textEditor:menuAction', command });\r\n    }\r\n\r\n    // --- Image Viewer Helpers ---\r\n    function getImageViewerState(): { hasImage: boolean; src: string } {\r\n        const viewer = document.getElementById('image-viewer') as HTMLImageElement | null;\r\n        if (!viewer) return { hasImage: false, src: '' };\r\n        const hidden = viewer.classList.contains('hidden');\r\n        const src = viewer.getAttribute('src') || viewer.src || '';\r\n        const hasImage = Boolean(src && src.trim() && !hidden);\r\n        return { hasImage, src };\r\n    }\r\n\r\n    function openActiveImageInNewTab(): void {\r\n        const state = getImageViewerState();\r\n        if (!state.hasImage || !state.src) return;\r\n        window.open(state.src, '_blank', 'noopener');\r\n    }\r\n\r\n    function downloadActiveImage(): void {\r\n        const state = getImageViewerState();\r\n        if (!state.hasImage || !state.src) return;\r\n        const link = document.createElement('a');\r\n        link.href = state.src;\r\n        let fileName = 'bild';\r\n        try {\r\n            const url = new URL(state.src, window.location.href);\r\n            fileName = url.pathname.split('/').pop() || fileName;\r\n        } catch {\r\n            fileName = 'bild';\r\n        }\r\n        link.download = fileName || 'bild';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n    // Export globals (do not override if already present)\r\n    if (typeof gw.getImageViewerState !== 'function') gw.getImageViewerState = getImageViewerState;\r\n    if (typeof gw.openActiveImageInNewTab !== 'function') gw.openActiveImageInNewTab = openActiveImageInNewTab;\r\n    if (typeof gw.downloadActiveImage !== 'function') gw.downloadActiveImage = downloadActiveImage;\r\n    if (typeof gw.sendTextEditorMenuAction !== 'function') gw.sendTextEditorMenuAction = sendTextEditorMenuAction;\r\n})();\r\n"]}