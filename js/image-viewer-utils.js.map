{"version":3,"file":"image-viewer-utils.js","sourceRoot":"","sources":["../src/ts/image-viewer-utils.ts"],"names":[],"mappings":"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","sourcesContent":["(function () {\n    'use strict';\n\n    type PlaceholderState = { key: string; params?: Record<string, unknown> } | null;\n\n    function getEl(id: string): HTMLElement | null {\n        return document.getElementById(id);\n    }\n\n    function applyTranslations(el: HTMLElement | null): void {\n        const w = window as unknown as { appI18n?: { applyTranslations: (n?: Element) => void } };\n        if (el && w.appI18n && typeof w.appI18n.applyTranslations === 'function') {\n            w.appI18n.applyTranslations(el);\n        }\n    }\n\n    function setPlaceholder(messageKey: string, params?: Record<string, unknown>): void {\n        const placeholder = getEl('image-placeholder');\n        if (!placeholder) return;\n        if (typeof messageKey !== 'string' || messageKey.length === 0) {\n            placeholder.removeAttribute('data-i18n');\n            placeholder.removeAttribute('data-i18n-params');\n            placeholder.textContent = '';\n            placeholder.classList.add('hidden');\n            state.placeholder = null;\n            return;\n        }\n        placeholder.setAttribute('data-i18n', messageKey);\n        if (params && Object.keys(params).length > 0) {\n            placeholder.setAttribute('data-i18n-params', JSON.stringify(params));\n        } else {\n            placeholder.removeAttribute('data-i18n-params');\n        }\n        state.placeholder = { key: messageKey, params };\n        applyTranslations(placeholder);\n        placeholder.classList.remove('hidden');\n    }\n\n    function updateInfo(opts: { repo?: string; path?: string; dimensions?: string; size?: number }): void {\n        const infoEl = getEl('image-info');\n        if (!infoEl) return;\n        const parts: string[] = [];\n        if (opts.repo) parts.push(opts.repo);\n        if (opts.path) parts.push(opts.path);\n        const meta: string[] = [];\n        if (opts.dimensions) meta.push(opts.dimensions);\n        if (typeof opts.size === 'number' && opts.size > 0) {\n            const kb = (opts.size / 1024).toFixed(1);\n            meta.push(`${kb} KB`);\n        }\n        const info = [parts.join(' / '), meta.join(' • ')].filter(Boolean).join(' — ');\n        if (info) {\n            infoEl.textContent = info;\n            infoEl.classList.remove('hidden');\n        } else {\n            infoEl.textContent = '';\n            infoEl.classList.add('hidden');\n        }\n    }\n\n    const state: { placeholder: PlaceholderState } = { placeholder: null };\n\n    // Re-apply placeholder on language change\n    const gw = window as unknown as Window & { __imageViewerUtilsWired?: boolean };\n    if (!gw.__imageViewerUtilsWired) {\n        gw.__imageViewerUtilsWired = true;\n        window.addEventListener('languagePreferenceChange', () => {\n            if (state.placeholder) {\n                setPlaceholder(state.placeholder.key, state.placeholder.params);\n            }\n        });\n    }\n\n    // Export as globals (namespaced + legacy aliases if free)\n    type ImageViewerGlobal = Window & {\n        ImageViewerUtils?: { setPlaceholder?: typeof setPlaceholder; updateInfo?: typeof updateInfo };\n        setImagePlaceholder?: typeof setPlaceholder;\n        updateImageInfo?: typeof updateInfo;\n    };\n    const w = window as unknown as ImageViewerGlobal;\n    w.ImageViewerUtils = w.ImageViewerUtils || {};\n    w.ImageViewerUtils.setPlaceholder = setPlaceholder;\n    w.ImageViewerUtils.updateInfo = updateInfo;\n    if (typeof w.setImagePlaceholder !== 'function') w.setImagePlaceholder = setPlaceholder;\n    if (typeof w.updateImageInfo !== 'function') w.updateImageInfo = updateInfo;\n})();\n"]}