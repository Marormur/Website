{"version":3,"file":"base-window-instance.js","sourceRoot":"","sources":["../src/ts/base-window-instance.ts"],"names":[],"mappings":"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","sourcesContent":["console.log('BaseWindowInstance loaded');\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  type InstanceConfig = {\r\n    id?: string;\r\n    type?: string;\r\n    title?: string;\r\n    initialState?: Record<string, unknown>;\r\n    metadata?: Record<string, unknown>;\r\n  };\r\n\r\n  type StateChangeEvent = {\r\n    oldState: Record<string, unknown>;\r\n    newState: Record<string, unknown>;\r\n  };\r\n\r\n  type SerializedInstance = {\r\n    instanceId: string;\r\n    type: string;\r\n    title: string;\r\n    state: Record<string, unknown>;\r\n    metadata: Record<string, unknown>;\r\n  };\r\n\r\n  type EventCallback = (data?: unknown) => void;\r\n\r\n  class BaseWindowInstance {\r\n    instanceId: string;\r\n    type: string;\r\n    title: string;\r\n    container: HTMLElement | null;\r\n    windowElement: HTMLElement | null;\r\n    state: Record<string, unknown>;\r\n    eventListeners: Map<string, EventCallback[]>;\r\n    isInitialized: boolean;\r\n    isVisible: boolean;\r\n    metadata: Record<string, unknown>;\r\n\r\n    constructor(config: InstanceConfig) {\r\n      this.instanceId = config.id || this._generateId();\r\n      this.type = config.type || 'unknown';\r\n      this.title = config.title || 'Untitled';\r\n      this.container = null;\r\n      this.windowElement = null;\r\n      this.state = this._initializeState(config.initialState || {});\r\n      this.eventListeners = new Map();\r\n      this.isInitialized = false;\r\n      this.isVisible = false;\r\n      this.metadata = config.metadata || {};\r\n    }\r\n\r\n    protected _generateId(): string {\r\n      return `${this.type}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    protected _initializeState(initialState: Record<string, unknown>): Record<string, unknown> {\r\n      return {\r\n        ...initialState,\r\n        created: Date.now(),\r\n        modified: Date.now(),\r\n      };\r\n    }\r\n\r\n    init(container: HTMLElement): void {\r\n      if (this.isInitialized) {\r\n        console.warn(`Instance ${this.instanceId} already initialized`);\r\n        return;\r\n      }\r\n\r\n      this.container = container;\r\n      this.render();\r\n      this.attachEventListeners();\r\n      this.isInitialized = true;\r\n      this.emit('initialized');\r\n    }\r\n\r\n    protected render(): void {\r\n      throw new Error('render() must be implemented by subclass');\r\n    }\r\n\r\n    protected attachEventListeners(): void {\r\n      // To be implemented by subclasses\r\n    }\r\n\r\n    show(): void {\r\n      if (this.container) {\r\n        this.container.classList.remove('hidden');\r\n        this.isVisible = true;\r\n        this.emit('shown');\r\n      }\r\n    }\r\n\r\n    hide(): void {\r\n      if (this.container) {\r\n        this.container.classList.add('hidden');\r\n        this.isVisible = false;\r\n        this.emit('hidden');\r\n      }\r\n    }\r\n\r\n    destroy(): void {\r\n      this.emit('beforeDestroy');\r\n      this.removeAllEventListeners();\r\n\r\n      if (this.container) {\r\n        this.container.innerHTML = '';\r\n        this.container = null;\r\n      }\r\n\r\n      this.windowElement = null;\r\n      this.isInitialized = false;\r\n      this.emit('destroyed');\r\n    }\r\n\r\n    updateState(updates: Record<string, unknown>): void {\r\n      const oldState = { ...this.state };\r\n      this.state = {\r\n        ...this.state,\r\n        ...updates,\r\n        modified: Date.now(),\r\n      };\r\n      this.emit('stateChanged', { oldState, newState: this.state } as StateChangeEvent);\r\n    }\r\n\r\n    getState(): Record<string, unknown> {\r\n      return { ...this.state };\r\n    }\r\n\r\n    serialize(): SerializedInstance {\r\n      return {\r\n        instanceId: this.instanceId,\r\n        type: this.type,\r\n        title: this.title,\r\n        state: this.getState(),\r\n        metadata: this.metadata,\r\n      };\r\n    }\r\n\r\n    deserialize(data: Partial<SerializedInstance>): void {\r\n      if (data.state) {\r\n        this.state = data.state;\r\n      }\r\n      if (data.title) {\r\n        this.title = data.title;\r\n      }\r\n      if (data.metadata) {\r\n        this.metadata = { ...this.metadata, ...data.metadata };\r\n      }\r\n      this.emit('deserialized');\r\n    }\r\n\r\n    emit(eventName: string, data?: unknown): void {\r\n      const listeners = this.eventListeners.get(eventName) || [];\r\n      listeners.forEach((callback) => {\r\n        try {\r\n          callback.call(this, data);\r\n        } catch (error) {\r\n          console.error(`Error in event listener for ${eventName}:`, error);\r\n        }\r\n      });\r\n    }\r\n\r\n    on(eventName: string, callback: EventCallback): void {\r\n      if (!this.eventListeners.has(eventName)) {\r\n        this.eventListeners.set(eventName, []);\r\n      }\r\n      this.eventListeners.get(eventName)!.push(callback);\r\n    }\r\n\r\n    off(eventName: string, callback: EventCallback): void {\r\n      if (!this.eventListeners.has(eventName)) return;\r\n\r\n      const listeners = this.eventListeners.get(eventName)!;\r\n      const index = listeners.indexOf(callback);\r\n      if (index > -1) {\r\n        listeners.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    removeAllEventListeners(): void {\r\n      this.eventListeners.clear();\r\n    }\r\n\r\n    focus(): void {\r\n      if (this.container && this.isVisible) {\r\n        this.emit('focused');\r\n      }\r\n    }\r\n\r\n    blur(): void {\r\n      this.emit('blurred');\r\n    }\r\n  }\r\n\r\n  (window as unknown as { BaseWindowInstance: typeof BaseWindowInstance }).BaseWindowInstance =\r\n    BaseWindowInstance;\r\n})();\r\n"]}