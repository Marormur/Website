{"version":3,"file":"error-handler.js","sourceRoot":"","sources":["../src/ts/error-handler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * error-handler.ts\r\n * Global error handler with logging and export capabilities\r\n */\r\n\r\nconsole.log('ErrorHandler loaded');\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    const STORAGE_KEY = 'app.errorLogs';\r\n    const MAX_LOGS = 100;\r\n\r\n    // ===== Types =====\r\n\r\n    interface PlainError {\r\n        name: string;\r\n        message: string;\r\n        stack?: string;\r\n    }\r\n\r\n    interface ErrorLogEntry {\r\n        type: 'error' | 'unhandledrejection';\r\n        time: string;\r\n        message?: string;\r\n        source?: string;\r\n        line?: number | null;\r\n        column?: number | null;\r\n        reason?: string;\r\n        error: PlainError;\r\n    }\r\n\r\n    interface ErrorHandlerInstance {\r\n        enabled: boolean;\r\n        enable(): void;\r\n        disable(): void;\r\n        getLogs(): ErrorLogEntry[];\r\n        clearLogs(): void;\r\n        exportLogs(): void;\r\n        _record(entry: ErrorLogEntry): void;\r\n    }\r\n\r\n    // ===== Helper Functions =====\r\n\r\n    function nowISO(): string {\r\n        try {\r\n            return new Date().toISOString();\r\n        } catch (_e) {\r\n            void _e;\r\n            return String(Date.now());\r\n        }\r\n    }\r\n\r\n    function safeStringify(obj: unknown): string {\r\n        try {\r\n            return JSON.stringify(obj);\r\n        } catch (_e) {\r\n            void _e;\r\n            return String(obj);\r\n        }\r\n    }\r\n\r\n    function readLogs(): ErrorLogEntry[] {\r\n        try {\r\n            const raw = localStorage.getItem(STORAGE_KEY);\r\n            return raw ? (JSON.parse(raw) as ErrorLogEntry[]) : [];\r\n        } catch (_e) {\r\n            void _e;\r\n            return [];\r\n        }\r\n    }\r\n\r\n    function writeLogs(logs: ErrorLogEntry[]): void {\r\n        try {\r\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(logs.slice(-MAX_LOGS)));\r\n        } catch (_e) {\r\n            void _e;\r\n            // ignore storage errors (quota, private mode, etc.)\r\n        }\r\n    }\r\n\r\n    function toPlainError(err: unknown): PlainError {\r\n        if (!err) return { name: 'Error', message: 'Unknown error' };\r\n        const error = err as Partial<Error>;\r\n        const plain: PlainError = {\r\n            name: error.name || 'Error',\r\n            message: error.message || String(err),\r\n            stack: error.stack,\r\n        };\r\n        return plain;\r\n    }\r\n\r\n    // ===== ErrorHandler Instance =====\r\n\r\n    const ErrorHandler: ErrorHandlerInstance = {\r\n        enabled: true,\r\n\r\n        enable() {\r\n            if (this.enabled) return;\r\n            this.enabled = true;\r\n        },\r\n\r\n        disable() {\r\n            if (!this.enabled) return;\r\n            this.enabled = false;\r\n        },\r\n\r\n        getLogs() {\r\n            return readLogs();\r\n        },\r\n\r\n        clearLogs() {\r\n            writeLogs([]);\r\n        },\r\n\r\n        exportLogs() {\r\n            try {\r\n                const logs = readLogs();\r\n                const blob = new Blob([safeStringify(logs)], { type: 'application/json' });\r\n                const url = URL.createObjectURL(blob);\r\n                const a = document.createElement('a');\r\n                a.href = url;\r\n                a.download = `error-logs-${Date.now()}.json`;\r\n                document.body.appendChild(a);\r\n                a.click();\r\n                document.body.removeChild(a);\r\n                URL.revokeObjectURL(url);\r\n            } catch (_e) {\r\n                void _e;\r\n                const logger = (window as typeof window & { Logger?: Console }).Logger || console;\r\n                logger.error('ErrorHandler', 'Failed to export logs');\r\n            }\r\n        },\r\n\r\n        _record(entry: ErrorLogEntry) {\r\n            const logs = readLogs();\r\n            logs.push(entry);\r\n            writeLogs(logs);\r\n        },\r\n    };\r\n\r\n    // ===== Error Handlers =====\r\n\r\n    function handleWindowError(\r\n        message: string | Event,\r\n        source?: string,\r\n        lineno?: number,\r\n        colno?: number,\r\n        error?: Error\r\n    ): boolean {\r\n        if (!ErrorHandler.enabled) return false;\r\n        const plain = toPlainError(error || { message });\r\n        const entry: ErrorLogEntry = {\r\n            type: 'error',\r\n            time: nowISO(),\r\n            message: String(message),\r\n            source: String(source || ''),\r\n            line: lineno || null,\r\n            column: colno || null,\r\n            error: plain,\r\n        };\r\n        const logger = (window as typeof window & { Logger?: Console }).Logger || console;\r\n        logger.error('ErrorHandler', 'Unhandled error', entry);\r\n        ErrorHandler._record(entry);\r\n        // Let the browser continue its default handling\r\n        return false;\r\n    }\r\n\r\n    function handleUnhandledRejection(event: PromiseRejectionEvent): void {\r\n        if (!ErrorHandler.enabled) return;\r\n        const reason = event?.reason;\r\n        const plain = toPlainError(\r\n            reason instanceof Error ? reason : { message: safeStringify(reason) }\r\n        );\r\n        const entry: ErrorLogEntry = {\r\n            type: 'unhandledrejection',\r\n            time: nowISO(),\r\n            reason: safeStringify(reason),\r\n            error: plain,\r\n        };\r\n        const logger = (window as typeof window & { Logger?: Console }).Logger || console;\r\n        logger.error('ErrorHandler', 'Unhandled promise rejection', entry);\r\n        ErrorHandler._record(entry);\r\n    }\r\n\r\n    // ===== Initialize =====\r\n\r\n    // Auto-enable in development; in production keep enabled to capture issues\r\n    ErrorHandler.enabled = true;\r\n\r\n    // Register global listeners\r\n    window.addEventListener('error', function (e: ErrorEvent) {\r\n        // Some browsers pass ErrorEvent, others invoke window.onerror\r\n        if (e?.error) {\r\n            handleWindowError(e.message, e.filename, e.lineno, e.colno, e.error);\r\n        }\r\n    });\r\n    window.onerror = handleWindowError;\r\n    window.addEventListener('unhandledrejection', handleUnhandledRejection);\r\n\r\n    // ===== Global Export =====\r\n\r\n    if (typeof window !== 'undefined') {\r\n        (window as typeof window & { ErrorHandler: ErrorHandlerInstance }).ErrorHandler =\r\n            ErrorHandler;\r\n    }\r\n})();\r\n\r\nexport {};\r\n"]}