{"version":3,"file":"error-handler.js","sourceRoot":"","sources":["../src/ts/error-handler.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * error-handler.ts\n * Global error handler with logging and export capabilities\n */\n\nconsole.log('ErrorHandler loaded');\n\n(() => {\n    'use strict';\n\n    const STORAGE_KEY = 'app.errorLogs';\n    const MAX_LOGS = 100;\n\n    // ===== Types =====\n\n    interface PlainError {\n        name: string;\n        message: string;\n        stack?: string;\n    }\n\n    interface ErrorLogEntry {\n        type: 'error' | 'unhandledrejection';\n        time: string;\n        message?: string;\n        source?: string;\n        line?: number | null;\n        column?: number | null;\n        reason?: string;\n        error: PlainError;\n    }\n\n    interface ErrorHandlerInstance {\n        enabled: boolean;\n        enable(): void;\n        disable(): void;\n        getLogs(): ErrorLogEntry[];\n        clearLogs(): void;\n        exportLogs(): void;\n        _record(entry: ErrorLogEntry): void;\n    }\n\n    // ===== Helper Functions =====\n\n    function nowISO(): string {\n        try {\n            return new Date().toISOString();\n        } catch (_e) {\n            void _e;\n            return String(Date.now());\n        }\n    }\n\n    function safeStringify(obj: unknown): string {\n        try {\n            return JSON.stringify(obj);\n        } catch (_e) {\n            void _e;\n            return String(obj);\n        }\n    }\n\n    function readLogs(): ErrorLogEntry[] {\n        try {\n            const raw = localStorage.getItem(STORAGE_KEY);\n            return raw ? (JSON.parse(raw) as ErrorLogEntry[]) : [];\n        } catch (_e) {\n            void _e;\n            return [];\n        }\n    }\n\n    function writeLogs(logs: ErrorLogEntry[]): void {\n        try {\n            localStorage.setItem(STORAGE_KEY, JSON.stringify(logs.slice(-MAX_LOGS)));\n        } catch (_e) {\n            void _e;\n            // ignore storage errors (quota, private mode, etc.)\n        }\n    }\n\n    function toPlainError(err: unknown): PlainError {\n        if (!err) return { name: 'Error', message: 'Unknown error' };\n        const error = err as Partial<Error>;\n        const plain: PlainError = {\n            name: error.name || 'Error',\n            message: error.message || String(err),\n            stack: error.stack,\n        };\n        return plain;\n    }\n\n    // ===== ErrorHandler Instance =====\n\n    const ErrorHandler: ErrorHandlerInstance = {\n        enabled: true,\n\n        enable() {\n            if (this.enabled) return;\n            this.enabled = true;\n        },\n\n        disable() {\n            if (!this.enabled) return;\n            this.enabled = false;\n        },\n\n        getLogs() {\n            return readLogs();\n        },\n\n        clearLogs() {\n            writeLogs([]);\n        },\n\n        exportLogs() {\n            try {\n                const logs = readLogs();\n                const blob = new Blob([safeStringify(logs)], { type: 'application/json' });\n                const url = URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.href = url;\n                a.download = `error-logs-${Date.now()}.json`;\n                document.body.appendChild(a);\n                a.click();\n                document.body.removeChild(a);\n                URL.revokeObjectURL(url);\n            } catch (_e) {\n                void _e;\n                const logger = (window as typeof window & { Logger?: Console }).Logger || console;\n                logger.error('ErrorHandler', 'Failed to export logs');\n            }\n        },\n\n        _record(entry: ErrorLogEntry) {\n            const logs = readLogs();\n            logs.push(entry);\n            writeLogs(logs);\n        },\n    };\n\n    // ===== Error Handlers =====\n\n    function handleWindowError(\n        message: string | Event,\n        source?: string,\n        lineno?: number,\n        colno?: number,\n        error?: Error\n    ): boolean {\n        if (!ErrorHandler.enabled) return false;\n        const plain = toPlainError(error || { message });\n        const entry: ErrorLogEntry = {\n            type: 'error',\n            time: nowISO(),\n            message: String(message),\n            source: String(source || ''),\n            line: lineno || null,\n            column: colno || null,\n            error: plain,\n        };\n        const logger = (window as typeof window & { Logger?: Console }).Logger || console;\n        logger.error('ErrorHandler', 'Unhandled error', entry);\n        ErrorHandler._record(entry);\n        // Let the browser continue its default handling\n        return false;\n    }\n\n    function handleUnhandledRejection(event: PromiseRejectionEvent): void {\n        if (!ErrorHandler.enabled) return;\n        const reason = event?.reason;\n        const plain = toPlainError(\n            reason instanceof Error ? reason : { message: safeStringify(reason) }\n        );\n        const entry: ErrorLogEntry = {\n            type: 'unhandledrejection',\n            time: nowISO(),\n            reason: safeStringify(reason),\n            error: plain,\n        };\n        const logger = (window as typeof window & { Logger?: Console }).Logger || console;\n        logger.error('ErrorHandler', 'Unhandled promise rejection', entry);\n        ErrorHandler._record(entry);\n    }\n\n    // ===== Initialize =====\n\n    // Auto-enable in development; in production keep enabled to capture issues\n    ErrorHandler.enabled = true;\n\n    // Register global listeners\n    window.addEventListener('error', function (e: ErrorEvent) {\n        // Some browsers pass ErrorEvent, others invoke window.onerror\n        if (e?.error) {\n            handleWindowError(e.message, e.filename, e.lineno, e.colno, e.error);\n        }\n    });\n    window.onerror = handleWindowError;\n    window.addEventListener('unhandledrejection', handleUnhandledRejection);\n\n    // ===== Global Export =====\n\n    if (typeof window !== 'undefined') {\n        (window as typeof window & { ErrorHandler: ErrorHandlerInstance }).ErrorHandler =\n            ErrorHandler;\n    }\n})();\n\nexport {};\n"]}