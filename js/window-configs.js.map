{"version":3,"file":"window-configs.js","sourceRoot":"","sources":["../src/ts/window-configs.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * src/ts/window-configs.ts\r\n * Single source of truth for all window/modal definitions.\r\n * Replaces legacy src/ts/legacy/window-configs.js\r\n */\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\ntype WindowType = 'persistent' | 'transient';\r\n\r\nexport interface WindowConfiguration {\r\n    id: string;\r\n    type: WindowType;\r\n    programKey: string; // i18n key root for program label\r\n    icon: string;\r\n    closeButtonId: string;\r\n    // Use a broad shape to align with WindowManager expectations\r\n    metadata?: Record<string, unknown>;\r\n}\r\n\r\ndeclare global {\r\n    interface Window {\r\n        windowConfigurations?: WindowConfiguration[];\r\n    }\r\n}\r\n\r\n// Build the configurations list. Keep order stable; WindowManager load order matters.\r\nexport const windowConfigurations: WindowConfiguration[] = [\r\n    {\r\n        id: 'finder-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.finder',\r\n        icon: './img/sucher.png',\r\n        closeButtonId: 'close-finder-modal',\r\n        metadata: {\r\n            initHandler: function () {\r\n                // Do NOT auto-create Finder instances on init; just refresh UI if available\r\n                try {\r\n                    const integ = window.MultiInstanceIntegration?.getIntegration?.('finder');\r\n                    integ?.tabManager?.controller?.refresh?.();\r\n                } catch (e) {\r\n                    console.warn('Finder init refresh failed:', e);\r\n                }\r\n            },\r\n            openHandler: function () {\r\n                // Do NOT auto-create Finder instances on open; only ensure active is shown\r\n                try {\r\n                    const activeId =\r\n                        window.FinderInstanceManager?.getActiveInstance?.()?.instanceId;\r\n                    if (activeId && window.MultiInstanceIntegration) {\r\n                        window.MultiInstanceIntegration.showInstance?.('finder', activeId);\r\n                        const integ = window.MultiInstanceIntegration.getIntegration?.('finder');\r\n                        // Force tab UI refresh to ensure tab visibility\r\n                        integ?.tabManager?.controller?.refresh?.();\r\n                    }\r\n                } catch (e) {\r\n                    console.warn('Finder open refresh failed:', e);\r\n                }\r\n            },\r\n        },\r\n    },\r\n    {\r\n        id: 'launchpad-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.launchpad',\r\n        icon: './img/launchpad.png',\r\n        closeButtonId: 'close-launchpad-modal',\r\n        metadata: {\r\n            skipMenubarUpdate: true,\r\n            initHandler: function () {\r\n                // Initialize Launchpad module if not already\r\n                if (window.LaunchpadSystem && !(window as any).LaunchpadSystem?.container) {\r\n                    const container = document.getElementById('launchpad-container');\r\n                    if (container) window.LaunchpadSystem.init(container);\r\n                }\r\n                // Refresh apps when opening\r\n                if (window.LaunchpadSystem?.refresh) window.LaunchpadSystem.refresh();\r\n            },\r\n        },\r\n    },\r\n    {\r\n        id: 'projects-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.projects',\r\n        icon: './img/sucher.png',\r\n        closeButtonId: 'close-projects-modal',\r\n    },\r\n    {\r\n        id: 'about-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.about',\r\n        icon: './img/profil.jpg',\r\n        closeButtonId: 'close-about-modal',\r\n    },\r\n    {\r\n        id: 'settings-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.settings',\r\n        icon: './img/settings.png',\r\n        closeButtonId: 'close-settings-modal',\r\n        metadata: {\r\n            initHandler: function () {\r\n                if (window.SettingsSystem && !(window as any).SettingsSystem?.container) {\r\n                    const container = document.getElementById('settings-container');\r\n                    if (container) window.SettingsSystem.init(container);\r\n                }\r\n            },\r\n        },\r\n    },\r\n    {\r\n        id: 'text-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.text',\r\n        icon: './img/notepad.png',\r\n        closeButtonId: 'close-text-modal',\r\n        metadata: {\r\n            initHandler: function () {\r\n                // Do NOT auto-create instances when multi-instance manager is available\r\n                // Fallback legacy editor init only\r\n                if (\r\n                    !window.TextEditorInstanceManager &&\r\n                    window.TextEditorSystem &&\r\n                    !(window as any).TextEditorSystem?.container\r\n                ) {\r\n                    const container = document.getElementById('text-editor-container');\r\n                    if (container) window.TextEditorSystem.init(container);\r\n                }\r\n            },\r\n        },\r\n    },\r\n    {\r\n        id: 'image-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.photos',\r\n        icon: './img/photos-app-icon.svg',\r\n        closeButtonId: 'close-image-modal',\r\n        metadata: {\r\n            initHandler: function () {\r\n                if (window.PhotosApp?.init) window.PhotosApp.init();\r\n            },\r\n        },\r\n    },\r\n    {\r\n        id: 'program-info-modal',\r\n        type: 'transient',\r\n        programKey: 'programs.default',\r\n        icon: './img/sucher.png',\r\n        closeButtonId: 'close-program-info-modal',\r\n    },\r\n    {\r\n        id: 'terminal-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.terminal',\r\n        icon: './img/terminal.png',\r\n        closeButtonId: 'close-terminal-modal',\r\n        metadata: {\r\n            initHandler: function () {\r\n                // Do NOT auto-create instances when multi-instance manager is available\r\n                // Fallback legacy terminal init only\r\n                if (\r\n                    !window.TerminalInstanceManager &&\r\n                    window.TerminalSystem &&\r\n                    !(window as any).TerminalSystem?.container\r\n                ) {\r\n                    const container = document.getElementById('terminal-container');\r\n                    if (container) window.TerminalSystem.init(container);\r\n                }\r\n            },\r\n        },\r\n    },\r\n];\r\n\r\n// Auto-register with WindowManager when available (module load time)\r\nif (window.WindowManager) {\r\n    window.WindowManager.registerAll(windowConfigurations);\r\n    console.log(`[WindowConfigs] Registered ${windowConfigurations.length} windows`);\r\n} else {\r\n    // Fallback: register after DOMContentLoaded if WindowManager loads later\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        if (window.WindowManager) {\r\n            window.WindowManager.registerAll(windowConfigurations);\r\n            console.log(\r\n                `[WindowConfigs] Registered ${windowConfigurations.length} windows (delayed)`\r\n            );\r\n        }\r\n    });\r\n}\r\n\r\n// Expose configs for diagnostics and external tools\r\nwindow.windowConfigurations = windowConfigurations;\r\n\r\nexport default windowConfigurations;\r\n"]}