{"version":3,"file":"window-configs.js","sourceRoot":"","sources":["../src/ts/window-configs.ts"],"names":[],"mappings":";AAAA,oBAAoB;AACpB,qCAAqC;;;AAExB,QAAA,aAAa,GAAG;IACzB,2BAA2B;IAC3B;QACI,EAAE,EAAE,eAAe;QACnB,IAAI,EAAE,YAAY;QAClB,UAAU,EAAE,kBAAkB;QAC9B,IAAI,EAAE,mBAAmB;QACzB,aAAa,EAAE,qBAAqB;QACpC,QAAQ,EAAE;YACN,WAAW,EAAE;gBACT,8BAA8B;YAClC,CAAC;SACJ;KACJ;IACD;QACI,EAAE,EAAE,eAAe;QACnB,IAAI,EAAE,YAAY;QAClB,UAAU,EAAE,iBAAiB;QAC7B,IAAI,EAAE,iBAAiB;QACvB,aAAa,EAAE,qBAAqB;QACpC,QAAQ,EAAE;YACN,eAAe,EAAE,IAAI;YACrB,WAAW,EAAE;gBACT,IAAI,OAAO,MAAM,CAAC,SAAS,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,SAAS,CAAC,IAAI,KAAK,UAAU,EAAE,CAAC;oBACzF,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;gBAC5B,CAAC;YACL,CAAC;SACJ;KACJ;CACJ,CAAC;AAEF,0CAA0C;AAC1C,IAAI,OAAO,MAAM,KAAK,WAAW,EAAE,CAAC;IAEhC,MAAM,CAAC,GAAG,MAAiC,CAAC;IAC5C,IAAI,CAAC,CAAC,aAAa,EAAE,WAAW,EAAE,CAAC;QAC/B,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,qBAAa,CAAC,CAAC;IAC/C,CAAC;AACL,CAAC","sourcesContent":["// window-configs.ts\r\n// Registrierung aller Fenster/Modals\r\n\r\nexport const windowConfigs = [\r\n    // ...bestehende Fenster...\r\n    {\r\n        id: 'preview-modal',\r\n        type: 'persistent',\r\n        programKey: 'programs.preview',\r\n        icon: './img/preview.png',\r\n        closeButtonId: 'close-preview-modal',\r\n        metadata: {\r\n            initHandler: function () {\r\n                // Wird beim Öffnen ausgeführt\r\n            }\r\n        }\r\n    },\r\n    {\r\n        id: 'photos-window',\r\n        type: 'persistent',\r\n        programKey: 'programs.photos',\r\n        icon: './img/fotos.png',\r\n        closeButtonId: 'close-photos-window',\r\n        metadata: {\r\n            useWindowChrome: true,\r\n            initHandler: function () {\r\n                if (typeof window.PhotosApp !== 'undefined' && typeof window.PhotosApp.init === 'function') {\r\n                    window.PhotosApp.init();\r\n                }\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\n// Registrierung im WindowManager (global)\r\nif (typeof window !== 'undefined') {\r\n    type WindowWithWM = { WindowManager?: { registerAll?: (configs: unknown) => void } };\r\n    const w = window as unknown as WindowWithWM;\r\n    if (w.WindowManager?.registerAll) {\r\n        w.WindowManager.registerAll(windowConfigs);\r\n    }\r\n}\r\n"]}