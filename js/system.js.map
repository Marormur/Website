{"version":3,"file":"system.js","sourceRoot":"","sources":["../src/ts/system.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * system.ts\r\n * System Status UI Module\r\n * \r\n * Manages:\r\n * - WiFi, Bluetooth, Focus, Dark Mode, Battery status\r\n * - Volume, Brightness sliders\r\n * - Audio device selection\r\n * - Network and Bluetooth device selection\r\n * - Icon updates and UI state synchronization\r\n */\r\n\r\nconsole.log('✅ SystemUI loaded');\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    // ===== Types =====\r\n\r\n    interface I18nSystem {\r\n        translate(key: string): string;\r\n        applyTranslations(): void;\r\n        getActiveLanguage(): string;\r\n    }\r\n\r\n    interface IconSystemType {\r\n        SYSTEM_ICONS?: Record<string, string>;\r\n        ensureSvgNamespace?(svg: string): string;\r\n        renderIconIntoElement?(el: HTMLElement | null, markup: string, fallbackKey: string): void;\r\n    }\r\n\r\n    interface ThemeSystemType {\r\n        setThemePreference?(mode: string): void;\r\n    }\r\n\r\n    interface SystemStatus {\r\n        wifi: boolean;\r\n        bluetooth: boolean;\r\n        focus: boolean;\r\n        darkMode: boolean;\r\n        brightness: number;\r\n        volume: number;\r\n        audioDevice: string;\r\n        network: string;\r\n        battery: number;\r\n        connectedBluetoothDevice: string;\r\n    }\r\n\r\n    interface DeviceOptions {\r\n        silent?: boolean;\r\n        syncAudio?: boolean;\r\n    }\r\n\r\n    interface SystemUI {\r\n        initSystemStatusControls(): void;\r\n        updateAllSystemStatusUI(): void;\r\n        handleSystemToggle(toggleKey: string): void;\r\n        handleSystemAction(actionKey: string): void;\r\n        handleSystemSliderInput(type: string, value: number): void;\r\n        setConnectedNetwork(network: string, options?: DeviceOptions): void;\r\n        setBluetoothDevice(deviceName: string, options?: DeviceOptions): void;\r\n        setAudioDevice(deviceKey: string, options?: DeviceOptions): void;\r\n        getSystemStatus(): SystemStatus;\r\n    }\r\n\r\n    // ===== Module Dependencies =====\r\n    const appI18n: I18nSystem = window.appI18n || {\r\n        translate: key => key,\r\n        applyTranslations: () => {},\r\n        getActiveLanguage: () => 'en',\r\n    };\r\n\r\n    const IconSystem = window.IconSystem || {};\r\n    const SYSTEM_ICONS = IconSystem.SYSTEM_ICONS || {};\r\n    const ensureSvgNamespace = IconSystem.ensureSvgNamespace || ((svg: string) => svg);\r\n    const renderIconIntoElement = IconSystem.renderIconIntoElement || (() => {});\r\n\r\n    const ThemeSystem = window.ThemeSystem || {};\r\n    const setThemePreference = ThemeSystem.setThemePreference || (() => {});\r\n\r\n    // Helper to hide all menu dropdowns\r\n    const hideMenuDropdowns =\r\n        window.hideMenuDropdowns ||\r\n        (() => {\r\n            document.querySelectorAll('.menu-dropdown').forEach(dropdown => {\r\n                if (!dropdown.classList.contains('hidden')) {\r\n                    dropdown.classList.add('hidden');\r\n                }\r\n            });\r\n            document.querySelectorAll('[data-menubar-trigger-button=\"true\"]').forEach(button => {\r\n                button.setAttribute('aria-expanded', 'false');\r\n            });\r\n            document.querySelectorAll('[data-system-menu-trigger]').forEach(button => {\r\n                button.setAttribute('aria-expanded', 'false');\r\n            });\r\n        });\r\n\r\n    // ===== System State =====\r\n    const systemStatus: SystemStatus = {\r\n        wifi: true,\r\n        bluetooth: true,\r\n        focus: false,\r\n        darkMode: document.documentElement.classList.contains('dark'),\r\n        brightness: 80,\r\n        volume: 65,\r\n        audioDevice: 'speakers',\r\n        network: 'HomeLAN',\r\n        battery: 100,\r\n        connectedBluetoothDevice: 'AirPods',\r\n    };\r\n\r\n    // ===== UI Helper Functions =====\r\n\r\n    function applySystemIcon(iconToken: string, iconKey: string): void {\r\n        const svg = SYSTEM_ICONS[iconKey];\r\n        const markup = svg ? ensureSvgNamespace(svg) : '';\r\n        document.querySelectorAll(`[data-icon=\"${iconToken}\"]`).forEach(el => {\r\n            renderIconIntoElement(el as HTMLElement, markup, iconToken);\r\n        });\r\n    }\r\n\r\n    function updateSystemStateText(stateKey: string, text: string | number | null | undefined): void {\r\n        document.querySelectorAll(`[data-state=\"${stateKey}\"]`).forEach(el => {\r\n            el.textContent = text !== null && text !== undefined ? String(text) : '';\r\n        });\r\n    }\r\n\r\n    function updateSystemToggleState(toggleKey: string, active: boolean): void {\r\n        const toggle = document.querySelector(`[data-system-toggle=\"${toggleKey}\"]`);\r\n        if (toggle) {\r\n            toggle.classList.toggle('is-active', !!active);\r\n            toggle.setAttribute('aria-pressed', active ? 'true' : 'false');\r\n        }\r\n    }\r\n\r\n    function updateSystemMenuCheckbox(actionKey: string, checked: boolean): void {\r\n        const checkbox = document.querySelector(`[data-system-action=\"${actionKey}\"]`);\r\n        if (checkbox) {\r\n            checkbox.setAttribute('aria-pressed', checked ? 'true' : 'false');\r\n            checkbox.classList.toggle('is-active', !!checked);\r\n        }\r\n    }\r\n\r\n    function updateSystemSliderValue(type: string, value: number): void {\r\n        document.querySelectorAll<HTMLInputElement>(`[data-system-slider=\"${type}\"]`).forEach(slider => {\r\n            if (Number(slider.value) !== value) {\r\n                slider.value = String(value);\r\n            }\r\n        });\r\n        document.querySelectorAll(`[data-state=\"${type}\"]`).forEach(label => {\r\n            label.textContent = `${value}%`;\r\n        });\r\n    }\r\n\r\n    // ===== Status Update Functions =====\r\n\r\n    function updateWifiUI(): void {\r\n        const iconKey = systemStatus.wifi ? 'wifiOn' : 'wifiOff';\r\n        applySystemIcon('wifi', iconKey);\r\n        updateSystemStateText(\r\n            'wifi',\r\n            appI18n.translate(systemStatus.wifi ? 'menubar.state.on' : 'menubar.state.off')\r\n        );\r\n        updateSystemToggleState('wifi', systemStatus.wifi);\r\n        updateSystemMenuCheckbox('toggle-wifi', systemStatus.wifi);\r\n        document.querySelectorAll('#wifi-menu [data-network]').forEach(btn => {\r\n            const disabled = !systemStatus.wifi;\r\n            if (disabled) {\r\n                btn.setAttribute('aria-disabled', 'true');\r\n            } else {\r\n                btn.removeAttribute('aria-disabled');\r\n            }\r\n        });\r\n        setConnectedNetwork(systemStatus.network, { silent: true });\r\n    }\r\n\r\n    function updateBluetoothUI(): void {\r\n        const iconKey = systemStatus.bluetooth ? 'bluetoothOn' : 'bluetoothOff';\r\n        applySystemIcon('bluetooth', iconKey);\r\n        updateSystemStateText(\r\n            'bluetooth',\r\n            appI18n.translate(systemStatus.bluetooth ? 'menubar.state.on' : 'menubar.state.off')\r\n        );\r\n        updateSystemToggleState('bluetooth', systemStatus.bluetooth);\r\n        updateSystemMenuCheckbox('toggle-bluetooth', systemStatus.bluetooth);\r\n        const devices = document.querySelectorAll('#bluetooth-menu [data-device]');\r\n        devices.forEach(btn => {\r\n            const indicator = btn.querySelector('.system-network-indicator');\r\n            if (indicator && !indicator.getAttribute('data-default')) {\r\n                indicator.setAttribute('data-default', indicator.textContent || '');\r\n            }\r\n            const disabled = !systemStatus.bluetooth;\r\n            if (disabled) {\r\n                btn.setAttribute('aria-disabled', 'true');\r\n            } else {\r\n                btn.removeAttribute('aria-disabled');\r\n            }\r\n        });\r\n        setBluetoothDevice(systemStatus.connectedBluetoothDevice, {\r\n            silent: true,\r\n            syncAudio: false,\r\n        });\r\n    }\r\n\r\n    function updateFocusUI(): void {\r\n        updateSystemToggleState('focus', systemStatus.focus);\r\n        updateSystemStateText(\r\n            'focus',\r\n            appI18n.translate(systemStatus.focus ? 'menubar.state.active' : 'menubar.state.off')\r\n        );\r\n    }\r\n\r\n    function updateDarkModeUI(): void {\r\n        const isDark = systemStatus.darkMode;\r\n        updateSystemToggleState('dark-mode', isDark);\r\n        updateSystemStateText(\r\n            'dark-mode',\r\n            appI18n.translate(isDark ? 'menubar.state.active' : 'menubar.state.off')\r\n        );\r\n        applySystemIcon('appearance', isDark ? 'appearanceDark' : 'appearanceLight');\r\n    }\r\n\r\n    function updateVolumeUI(): void {\r\n        const value = Math.max(0, Math.min(100, Number(systemStatus.volume) || 0));\r\n        systemStatus.volume = value;\r\n        let iconKey = 'volumeMute';\r\n        if (value === 0) {\r\n            iconKey = 'volumeMute';\r\n        } else if (value <= 33) {\r\n            iconKey = 'volumeLow';\r\n        } else if (value <= 66) {\r\n            iconKey = 'volumeMedium';\r\n        } else {\r\n            iconKey = 'volumeHigh';\r\n        }\r\n        applySystemIcon('volume', iconKey);\r\n        updateSystemSliderValue('volume', value);\r\n    }\r\n\r\n    function updateBrightnessUI(): void {\r\n        const value = Math.max(0, Math.min(100, Number(systemStatus.brightness) || 0));\r\n        systemStatus.brightness = value;\r\n        updateSystemSliderValue('brightness', value);\r\n    }\r\n\r\n    function updateBatteryUI(): void {\r\n        applySystemIcon('battery', 'batteryFull');\r\n        updateSystemStateText('battery', `${systemStatus.battery}%`);\r\n    }\r\n\r\n    function updateAudioDeviceUI(): void {\r\n        const active = systemStatus.audioDevice;\r\n        document.querySelectorAll('[data-audio-device]').forEach(btn => {\r\n            const isActive = btn.getAttribute('data-audio-device') === active;\r\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\r\n            btn.classList.toggle('is-active', isActive);\r\n        });\r\n    }\r\n\r\n    // ===== Device Selection Functions =====\r\n\r\n    function setConnectedNetwork(network: string, options: DeviceOptions = {}): void {\r\n        if (network) {\r\n            systemStatus.network = network;\r\n        }\r\n        const activeNetwork = systemStatus.network;\r\n        document.querySelectorAll('#wifi-menu [data-network]').forEach(btn => {\r\n            const indicator = btn.querySelector('.system-network-indicator');\r\n            if (indicator && !indicator.getAttribute('data-default')) {\r\n                indicator.setAttribute('data-default', indicator.textContent || '');\r\n            }\r\n            const isActive =\r\n                !btn.hasAttribute('aria-disabled') &&\r\n                btn.getAttribute('data-network') === activeNetwork &&\r\n                systemStatus.wifi;\r\n            btn.classList.toggle('is-active', isActive);\r\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\r\n            if (indicator) {\r\n                if (!systemStatus.wifi) {\r\n                    indicator.textContent = indicator.getAttribute('data-default') || '';\r\n                } else if (isActive) {\r\n                    indicator.textContent = appI18n.translate('menubar.state.connected');\r\n                } else {\r\n                    indicator.textContent = indicator.getAttribute('data-default') || '';\r\n                }\r\n            }\r\n        });\r\n        if (!options.silent) {\r\n            hideMenuDropdowns();\r\n        }\r\n    }\r\n\r\n    function setBluetoothDevice(deviceName: string, options: DeviceOptions = {}): void {\r\n        const syncAudio = options.syncAudio !== false;\r\n        if (deviceName) {\r\n            systemStatus.connectedBluetoothDevice = deviceName;\r\n            if (syncAudio && deviceName === 'AirPods') {\r\n                systemStatus.audioDevice = 'airpods';\r\n            }\r\n        }\r\n        const activeDevice = systemStatus.connectedBluetoothDevice;\r\n        document.querySelectorAll('#bluetooth-menu [data-device]').forEach(btn => {\r\n            const indicator = btn.querySelector('.system-network-indicator');\r\n            if (indicator && !indicator.getAttribute('data-default')) {\r\n                indicator.setAttribute('data-default', indicator.textContent || '');\r\n            }\r\n            const isActive = systemStatus.bluetooth && btn.getAttribute('data-device') === activeDevice;\r\n            btn.classList.toggle('is-active', isActive);\r\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\r\n            if (indicator) {\r\n                if (!systemStatus.bluetooth) {\r\n                    indicator.textContent = indicator.getAttribute('data-default') || '';\r\n                } else if (isActive) {\r\n                    indicator.textContent = appI18n.translate('menubar.state.connected');\r\n                } else {\r\n                    indicator.textContent = indicator.getAttribute('data-default') || '';\r\n                }\r\n            }\r\n        });\r\n        updateAudioDeviceUI();\r\n        if (!options.silent) {\r\n            hideMenuDropdowns();\r\n        }\r\n    }\r\n\r\n    function setAudioDevice(deviceKey: string, options: DeviceOptions = {}): void {\r\n        if (!deviceKey) return;\r\n        systemStatus.audioDevice = deviceKey;\r\n        if (deviceKey === 'airpods') {\r\n            systemStatus.connectedBluetoothDevice = 'AirPods';\r\n        }\r\n        updateAudioDeviceUI();\r\n        updateBluetoothUI();\r\n        if (!options.silent) {\r\n            hideMenuDropdowns();\r\n        }\r\n    }\r\n\r\n    // ===== Toggle and Action Handlers =====\r\n\r\n    function handleSystemToggle(toggleKey: string): void {\r\n        switch (toggleKey) {\r\n            case 'wifi':\r\n                systemStatus.wifi = !systemStatus.wifi;\r\n                updateWifiUI();\r\n                break;\r\n            case 'bluetooth':\r\n                systemStatus.bluetooth = !systemStatus.bluetooth;\r\n                updateBluetoothUI();\r\n                break;\r\n            case 'focus':\r\n                systemStatus.focus = !systemStatus.focus;\r\n                updateFocusUI();\r\n                break;\r\n            case 'dark-mode': {\r\n                const next = !document.documentElement.classList.contains('dark');\r\n                systemStatus.darkMode = next;\r\n                if (typeof setThemePreference === 'function') {\r\n                    setThemePreference(next ? 'dark' : 'light');\r\n                } else {\r\n                    document.documentElement.classList.toggle('dark', next);\r\n                }\r\n                updateDarkModeUI();\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleSystemAction(actionKey: string): void {\r\n        switch (actionKey) {\r\n            case 'toggle-wifi':\r\n                handleSystemToggle('wifi');\r\n                break;\r\n            case 'toggle-bluetooth':\r\n                handleSystemToggle('bluetooth');\r\n                break;\r\n            case 'open-network':\r\n            case 'open-bluetooth':\r\n            case 'open-sound':\r\n                {\r\n                    const dialogs = (window as Window & { dialogs?: Record<string, { open(): void }> }).dialogs;\r\n                    if (dialogs?.['settings-modal']) {\r\n                        dialogs['settings-modal'].open();\r\n                    } else {\r\n                        console.info(`Aktion \"${actionKey}\" würde Einstellungen öffnen.`);\r\n                    }\r\n                    hideMenuDropdowns();\r\n                }\r\n                break;\r\n            case 'open-spotlight':\r\n            case 'open-siri':\r\n                console.info(`Aktion \"${actionKey}\" ausgelöst.`);\r\n                hideMenuDropdowns();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleSystemSliderInput(type: string, value: number): void {\r\n        if (!Number.isFinite(value)) return;\r\n        if (type === 'volume') {\r\n            systemStatus.volume = value;\r\n            updateVolumeUI();\r\n        } else if (type === 'brightness') {\r\n            systemStatus.brightness = value;\r\n            updateBrightnessUI();\r\n        }\r\n    }\r\n\r\n    // ===== Main Update Function =====\r\n\r\n    function updateAllSystemStatusUI(): void {\r\n        applySystemIcon('sun', 'sun');\r\n        applySystemIcon('moon', 'moon');\r\n        updateWifiUI();\r\n        updateBluetoothUI();\r\n        updateFocusUI();\r\n        updateDarkModeUI();\r\n        updateVolumeUI();\r\n        updateBrightnessUI();\r\n        updateBatteryUI();\r\n        updateAudioDeviceUI();\r\n    }\r\n\r\n    // ===== Initialization =====\r\n\r\n    function initSystemStatusControls(): void {\r\n        document.querySelectorAll('.system-network-indicator').forEach(indicator => {\r\n            indicator.setAttribute('data-default', indicator.textContent || '');\r\n        });\r\n\r\n        document.querySelectorAll('[data-system-menu-trigger]').forEach(trigger => {\r\n            // bindDropdownTrigger is expected in app.js or global scope\r\n            const bindFunc = (window as Window & { bindDropdownTrigger?: (el: Element, opts: Record<string, unknown>) => void }).bindDropdownTrigger;\r\n            if (typeof bindFunc === 'function') {\r\n                bindFunc(trigger, {\r\n                    hoverRequiresOpen: true,\r\n                });\r\n            }\r\n        });\r\n\r\n        // Route toggles through ActionBus\r\n        document.querySelectorAll('[data-system-toggle]').forEach(toggle => {\r\n            toggle.setAttribute('data-action', 'system:toggle');\r\n            // ActionBus will stop propagation and execute\r\n        });\r\n\r\n        document.querySelectorAll('[data-system-slider]').forEach(slider => {\r\n            ['pointerdown', 'mousedown', 'touchstart'].forEach(evt => {\r\n                slider.addEventListener(evt, (e: Event) => e.stopPropagation());\r\n            });\r\n            slider.addEventListener('input', (event: Event) => {\r\n                event.stopPropagation();\r\n                const target = event.target as HTMLInputElement;\r\n                const value = Number(target.value);\r\n                const type = target.getAttribute('data-system-slider');\r\n                if (type) {\r\n                    handleSystemSliderInput(type, value);\r\n                }\r\n            });\r\n        });\r\n\r\n        document.querySelectorAll('[data-system-action]').forEach(btn => {\r\n            btn.setAttribute('data-action', 'system:action');\r\n        });\r\n\r\n        document.querySelectorAll('[data-audio-device]').forEach(btn => {\r\n            btn.setAttribute('data-action', 'system:setAudioDevice');\r\n        });\r\n\r\n        document.querySelectorAll('[data-network]').forEach(btn => {\r\n            btn.setAttribute('data-action', 'system:setNetwork');\r\n        });\r\n\r\n        document.querySelectorAll('[data-device]').forEach(btn => {\r\n            btn.setAttribute('data-action', 'system:setBluetoothDevice');\r\n        });\r\n\r\n        updateAllSystemStatusUI();\r\n    }\r\n\r\n    // ===== Public API =====\r\n\r\n    const SystemUIInstance: SystemUI = {\r\n        initSystemStatusControls,\r\n        updateAllSystemStatusUI,\r\n        handleSystemToggle,\r\n        handleSystemAction,\r\n        handleSystemSliderInput,\r\n        setConnectedNetwork,\r\n        setBluetoothDevice,\r\n        setAudioDevice,\r\n        getSystemStatus: () => Object.assign({}, systemStatus),\r\n    };\r\n\r\n    (window as unknown as Window & { SystemUI: SystemUI }).SystemUI = SystemUIInstance;\r\n})();\r\n\r\nexport {};\r\n"]}