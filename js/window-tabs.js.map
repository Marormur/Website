{"version":3,"file":"window-tabs.js","sourceRoot":"","sources":["../src/ts/window-tabs.ts"],"names":[],"mappings":"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","sourcesContent":["(function () {\r\n  'use strict';\r\n\r\n  // Minimal structural types to avoid runtime coupling\r\n  type Instance = {\r\n    instanceId: string;\r\n    title: string;\r\n    focus?: () => void;\r\n    blur?: () => void;\r\n    destroy?: () => void;\r\n    show?: () => void;\r\n    hide?: () => void;\r\n  };\r\n\r\n  type InstanceConfig = {\r\n    id?: string;\r\n    type?: string;\r\n    title?: string;\r\n    initialState?: unknown;\r\n    metadata?: Record<string, unknown>;\r\n  };\r\n\r\n  type Manager = {\r\n    getAllInstances(): Instance[];\r\n    getActiveInstance(): Instance | null;\r\n    getAllInstanceIds(): string[];\r\n    getInstance(id: string): Instance | null;\r\n    setActiveInstance(id: string): void;\r\n    createInstance(config?: Partial<InstanceConfig>): Instance | null;\r\n    destroyInstance(id: string): void;\r\n    getInstanceCount?: () => number;\r\n    reorderInstances?: (newOrder: string[]) => void;\r\n  };\r\n\r\n  interface WindowTabsOptions {\r\n    addButton?: boolean;\r\n    onCreateInstanceTitle?: () => string | undefined;\r\n  }\r\n\r\n  interface WindowTabsController {\r\n    el: HTMLElement;\r\n    refresh(): void;\r\n    destroy(): void;\r\n    setTitle(instanceId: string, title: string): void;\r\n  }\r\n\r\n  // (reserved) helper could be added later to skip shortcuts in inputs\r\n\r\n  // Drag state for tab reordering\r\n  let draggedTab: HTMLElement | null = null;\r\n  let draggedInstanceId: string | null = null;\r\n\r\n  function createTabEl(instance: Instance, isActive: boolean): HTMLElement {\r\n    const tab = document.createElement('button');\r\n    tab.type = 'button';\r\n    tab.className = [\r\n      'wt-tab',\r\n      'px-3 py-1 text-sm rounded-t-md border border-b-0',\r\n      'transition-colors whitespace-nowrap flex items-center gap-2',\r\n      isActive\r\n        ? 'bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-gray-700'\r\n        : 'bg-gray-200/70 dark:bg-gray-800/70 text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-800'\r\n    ].join(' ');\r\n    tab.dataset.instanceId = instance.instanceId;\r\n    tab.draggable = true;\r\n\r\n    const title = document.createElement('span');\r\n    title.className = 'wt-tab-title';\r\n    title.textContent = instance.title || instance.instanceId;\r\n    tab.appendChild(title);\r\n\r\n    const close = document.createElement('span');\r\n    close.className = 'wt-tab-close ml-1 text-xs opacity-70 hover:opacity-100';\r\n    close.textContent = '×';\r\n    close.setAttribute('aria-label', 'Tab schließen');\r\n    close.title = 'Tab schließen';\r\n    tab.appendChild(close);\r\n\r\n    return tab;\r\n  }\r\n\r\n  function renderTabs(\r\n    container: HTMLElement,\r\n    manager: Manager,\r\n    options: WindowTabsOptions,\r\n    onSelect: (id: string) => void,\r\n    onClose: (id: string) => void,\r\n    onNew?: () => void\r\n  ): void {\r\n    container.innerHTML = '';\r\n\r\n    const bar = document.createElement('div');\r\n    bar.className = 'window-tabs flex items-center gap-1 px-2 pt-2 select-none';\r\n\r\n    const instances = manager.getAllInstances();\r\n    const active = manager.getActiveInstance();\r\n    const activeId = active?.instanceId ?? null;\r\n\r\n    instances.forEach((inst: Instance) => {\r\n      const tab = createTabEl(inst, inst.instanceId === activeId);\r\n      \r\n      // Click handlers\r\n      tab.addEventListener('click', (e) => {\r\n        const target = e.target as HTMLElement;\r\n        if (target.closest('.wt-tab-close')) {\r\n          onClose(inst.instanceId);\r\n        } else {\r\n          onSelect(inst.instanceId);\r\n        }\r\n      });\r\n      \r\n      // Middle-click closes on supported devices\r\n      tab.addEventListener('auxclick', (e: MouseEvent) => {\r\n        if (e.button === 1) {\r\n          onClose(inst.instanceId);\r\n        }\r\n      });\r\n\r\n      // Drag and drop handlers for tab reordering\r\n      tab.addEventListener('dragstart', (e: DragEvent) => {\r\n        draggedTab = tab;\r\n        draggedInstanceId = inst.instanceId;\r\n        if (e.dataTransfer) {\r\n          e.dataTransfer.effectAllowed = 'move';\r\n          e.dataTransfer.setData('text/plain', inst.instanceId);\r\n        }\r\n        tab.style.opacity = '0.5';\r\n      });\r\n\r\n      tab.addEventListener('dragend', () => {\r\n        tab.style.opacity = '1';\r\n        draggedTab = null;\r\n        draggedInstanceId = null;\r\n        // Remove any drop indicators\r\n        const allTabs = bar.querySelectorAll('.wt-tab');\r\n        allTabs.forEach(t => {\r\n          (t as HTMLElement).classList.remove('border-l-4', 'border-l-blue-500');\r\n        });\r\n      });\r\n\r\n      tab.addEventListener('dragover', (e: DragEvent) => {\r\n        e.preventDefault();\r\n        if (e.dataTransfer) {\r\n          e.dataTransfer.dropEffect = 'move';\r\n        }\r\n        \r\n        // Don't show indicator on the dragged tab itself\r\n        if (tab === draggedTab) {\r\n          return;\r\n        }\r\n\r\n        // Show visual indicator\r\n        const allTabs = bar.querySelectorAll('.wt-tab');\r\n        allTabs.forEach(t => {\r\n          (t as HTMLElement).classList.remove('border-l-4', 'border-l-blue-500');\r\n        });\r\n        tab.classList.add('border-l-4', 'border-l-blue-500');\r\n      });\r\n\r\n      tab.addEventListener('dragleave', () => {\r\n        tab.classList.remove('border-l-4', 'border-l-blue-500');\r\n      });\r\n\r\n      tab.addEventListener('drop', (e: DragEvent) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        \r\n        // Remove visual indicators\r\n        tab.classList.remove('border-l-4', 'border-l-blue-500');\r\n\r\n        if (!draggedInstanceId || draggedInstanceId === inst.instanceId) {\r\n          return;\r\n        }\r\n\r\n        // Get current order\r\n        const currentOrder = manager.getAllInstanceIds();\r\n        const draggedIdx = currentOrder.indexOf(draggedInstanceId);\r\n        const targetIdx = currentOrder.indexOf(inst.instanceId);\r\n\r\n        if (draggedIdx === -1 || targetIdx === -1) {\r\n          return;\r\n        }\r\n\r\n        // Create new order by moving dragged item before target\r\n        const newOrder = [...currentOrder];\r\n        newOrder.splice(draggedIdx, 1);\r\n        const newTargetIdx = newOrder.indexOf(inst.instanceId);\r\n        newOrder.splice(newTargetIdx, 0, draggedInstanceId);\r\n\r\n        // Update instance order if manager supports it\r\n        if (manager.reorderInstances) {\r\n          manager.reorderInstances(newOrder);\r\n          // Re-render tabs to reflect new order\r\n          renderTabs(container, manager, options, onSelect, onClose, onNew);\r\n        }\r\n      });\r\n\r\n      bar.appendChild(tab);\r\n    });\r\n\r\n    if (options.addButton !== false) {\r\n      const addBtn = document.createElement('button');\r\n      addBtn.type = 'button';\r\n      addBtn.className = 'wt-add px-2 py-1 text-sm rounded-md border bg-gray-100 dark:bg-gray-800 border-gray-300 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-700';\r\n      addBtn.textContent = '+';\r\n      addBtn.title = 'Neue Instanz';\r\n      addBtn.addEventListener('click', () => {\r\n        if (onNew) {\r\n          onNew();\r\n        } else {\r\n          const title = options.onCreateInstanceTitle?.();\r\n          manager.createInstance({ title });\r\n        }\r\n        // refresh will be triggered by wrapper\r\n      });\r\n      bar.appendChild(addBtn);\r\n    }\r\n\r\n    container.appendChild(bar);\r\n\r\n    // Bottom border under tabs\r\n    const underline = document.createElement('div');\r\n    underline.className = 'h-px bg-gray-300 dark:bg-gray-700';\r\n    container.appendChild(underline);\r\n  }\r\n\r\n  function wrapManager(manager: Manager, onChange: () => void): Manager {\r\n    const createOrig = manager.createInstance.bind(manager);\r\n    const destroyOrig = manager.destroyInstance.bind(manager);\r\n    const setActiveOrig = manager.setActiveInstance.bind(manager);\r\n\r\n    type MutableManager = Manager & { [key: string]: unknown };\r\n    (manager as MutableManager).createInstance = (cfg?: Partial<InstanceConfig>) => {\r\n      const inst = createOrig(cfg);\r\n      onChange();\r\n      return inst;\r\n    };\r\n    (manager as MutableManager).destroyInstance = (id: string) => {\r\n      destroyOrig(id);\r\n      onChange();\r\n    };\r\n    (manager as MutableManager).setActiveInstance = (id: string) => {\r\n      setActiveOrig(id);\r\n      onChange();\r\n    };\r\n    return manager;\r\n  }\r\n\r\n  function createController(manager: Manager, mountEl: HTMLElement, options: WindowTabsOptions = {}): WindowTabsController {\r\n    const wrapped = wrapManager(manager, () => controller.refresh());\r\n\r\n    const controller: WindowTabsController = {\r\n      el: mountEl,\r\n      refresh() {\r\n        renderTabs(mountEl, wrapped, options,\r\n          (id) => wrapped.setActiveInstance(id),\r\n          (id) => wrapped.destroyInstance(id)\r\n        );\r\n      },\r\n      destroy() {\r\n        mountEl.innerHTML = '';\r\n      },\r\n      setTitle(instanceId: string, title: string) {\r\n        const inst = wrapped.getInstance(instanceId);\r\n        if (inst) {\r\n          inst.title = title;\r\n          this.refresh();\r\n        }\r\n      }\r\n    };\r\n\r\n    controller.refresh();\r\n    return controller;\r\n  }\r\n\r\n  const WindowTabs = {\r\n    /**\r\n     * Create a window tabs bar bound to a specific InstanceManager.\r\n     */\r\n    create(manager: Manager, mountEl: HTMLElement, options?: WindowTabsOptions): WindowTabsController {\r\n      return createController(manager, mountEl, options);\r\n    }\r\n  };\r\n\r\n  // Adapter expected by legacy integration code: WindowTabManager\r\n  class WindowTabManager {\r\n    private manager: Manager;\r\n    private controller: WindowTabsController | null = null;\r\n    private opts: {\r\n      containerId: string;\r\n      onTabSwitch?: (id: string) => void;\r\n      onTabClose?: (id: string) => void;\r\n      onNewTab?: () => void;\r\n      onAllTabsClosed?: () => void;\r\n    };\r\n\r\n    constructor(config: { containerId: string; instanceManager: Manager; onTabSwitch?: (id: string) => void; onTabClose?: (id: string) => void; onNewTab?: () => void; onAllTabsClosed?: () => void; }) {\r\n      this.manager = config.instanceManager;\r\n      this.opts = {\r\n        containerId: config.containerId,\r\n        onTabSwitch: config.onTabSwitch,\r\n        onTabClose: config.onTabClose,\r\n        onNewTab: config.onNewTab,\r\n        onAllTabsClosed: config.onAllTabsClosed,\r\n      };\r\n      const mount = document.getElementById(config.containerId);\r\n      if (mount) {\r\n        // Build controller with custom handlers\r\n        const refreshWithHooks = () => {\r\n          renderTabs(\r\n            mount,\r\n            this.manager,\r\n            { addButton: true },\r\n            (id) => {\r\n              this.manager.setActiveInstance(id);\r\n              this.opts.onTabSwitch?.(id);\r\n            },\r\n            (id) => {\r\n              this.opts.onTabClose?.(id);\r\n              this.manager.destroyInstance(id);\r\n              \r\n              // After destroying, get the new active instance and trigger onTabSwitch\r\n              // to ensure its content is visible (fixes ghost tab / hidden content issue)\r\n              const remaining = this.manager.getAllInstances();\r\n              if (remaining.length === 0) {\r\n                this.opts.onAllTabsClosed?.();\r\n              } else {\r\n                const newActive = this.manager.getActiveInstance();\r\n                if (newActive) {\r\n                  this.opts.onTabSwitch?.(newActive.instanceId);\r\n                }\r\n              }\r\n            },\r\n            () => {\r\n              if (this.opts.onNewTab) {\r\n                this.opts.onNewTab();\r\n              } else {\r\n                const next = (this.manager.getInstanceCount?.() || this.manager.getAllInstances().length) + 1;\r\n                this.manager.createInstance({ title: `Instance ${next}` });\r\n              }\r\n            }\r\n          );\r\n        };\r\n\r\n        this.controller = {\r\n          el: mount,\r\n          refresh: refreshWithHooks,\r\n          destroy() { mount.innerHTML = ''; },\r\n          setTitle: (instanceId: string, title: string) => {\r\n            const inst = this.manager.getInstance(instanceId);\r\n            if (inst) { inst.title = title; }\r\n            refreshWithHooks();\r\n          }\r\n        } as unknown as WindowTabsController;\r\n\r\n        // initial render\r\n        this.controller.refresh();\r\n      }\r\n    }\r\n\r\n    addTab(_instance: Instance): void {\r\n      // Our rendering reflects manager state; just refresh\r\n      this.controller?.refresh();\r\n    }\r\n\r\n    closeTab(instanceId: string): void {\r\n      this.opts.onTabClose?.(instanceId);\r\n      this.manager.destroyInstance(instanceId);\r\n      \r\n      // After destroying, get the new active instance and trigger onTabSwitch\r\n      // to ensure its content is visible (fixes ghost tab / hidden content issue)\r\n      const remaining = this.manager.getAllInstances();\r\n      if (remaining.length === 0) {\r\n        this.opts.onAllTabsClosed?.();\r\n      } else {\r\n        const newActive = this.manager.getActiveInstance();\r\n        if (newActive) {\r\n          this.opts.onTabSwitch?.(newActive.instanceId);\r\n        }\r\n      }\r\n      \r\n      this.controller?.refresh();\r\n    }\r\n  }\r\n\r\n  (window as unknown as { [k: string]: unknown }).WindowTabs = WindowTabs;\r\n  (window as unknown as { [k: string]: unknown }).WindowTabManager = WindowTabManager;\r\n})();\r\n"]}