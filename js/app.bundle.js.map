{
  "version": 3,
  "sources": ["../src/ts/dom-utils.ts", "../src/ts/constants.ts", "../src/ts/api.ts", "../src/ts/window-manager.ts", "../src/ts/action-bus.ts", "../src/ts/dialog-utils.ts", "../src/ts/snap-utils.ts", "../src/ts/program-actions.ts", "../src/ts/program-menu-sync.ts", "../src/ts/menu.ts", "../src/ts/dock.ts", "../src/ts/dialog.ts", "../src/ts/menubar-utils.ts", "../src/ts/context-menu.ts", "../src/ts/storage.ts", "../src/ts/session-manager.ts", "../src/ts/theme.ts", "../src/ts/base-window-instance.ts", "../src/ts/instance-manager.ts", "../src/ts/window-chrome.ts", "../src/ts/window-tabs.ts", "../src/ts/terminal-instance.ts", "../src/ts/text-editor-instance.ts", "../src/ts/text-editor.ts", "../src/ts/image-viewer-utils.ts", "../src/ts/logger.ts", "../src/ts/keyboard-shortcuts.ts", "../src/ts/github-api.ts", "../src/ts/photos-app.ts", "../src/ts/legacy/window-configs.js", "../src/ts/legacy/finder-instance.js", "../src/ts/legacy/launchpad.js", "../src/ts/multi-instance-integration.ts", "../src/ts/legacy/desktop.js", "../src/ts/legacy/system.js", "../src/ts/app-init.ts", "../src/ts/compat/expose-globals.ts"],
  "sourcesContent": ["/**\r\n * DOM Utility Functions\r\n * Centralized helpers for common DOM manipulations\r\n *\r\n * @module dom-utils\r\n */\r\n\r\n/**\r\n * Show an element by removing the 'hidden' class\r\n * @param element - The element to show (null-safe)\r\n */\r\nexport function show(element: HTMLElement | null): void {\r\n    if (!element) return;\r\n    element.classList.remove('hidden');\r\n}\r\n\r\n/**\r\n * Hide an element by adding the 'hidden' class\r\n * @param element - The element to hide (null-safe)\r\n */\r\nexport function hide(element: HTMLElement | null): void {\r\n    if (!element) return;\r\n    element.classList.add('hidden');\r\n}\r\n\r\n/**\r\n * Toggle element visibility\r\n * @param element - The element to toggle (null-safe)\r\n * @param visible - Optional boolean to force visible (true) or hidden (false)\r\n */\r\nexport function toggle(element: HTMLElement | null, visible?: boolean): void {\r\n    if (!element) return;\r\n    if (visible === undefined) {\r\n        element.classList.toggle('hidden');\r\n    } else {\r\n        element.classList.toggle('hidden', !visible);\r\n    }\r\n}\r\n\r\n/**\r\n * Check if an element is currently visible\r\n * @param element - The element to check (null-safe)\r\n * @returns true if element exists and does not have 'hidden' class\r\n */\r\nexport function isVisible(element: HTMLElement | null): boolean {\r\n    if (!element) return false;\r\n    return !element.classList.contains('hidden');\r\n}\r\n\r\n/**\r\n * Set element visibility explicitly\r\n * @param element - The element to update (null-safe)\r\n * @param visible - true to show, false to hide\r\n */\r\nexport function setVisibility(element: HTMLElement | null, visible: boolean): void {\r\n    if (!element) return;\r\n    element.classList.toggle('hidden', !visible);\r\n}\r\n\r\n/**\r\n * Show multiple elements at once\r\n * @param elements - Array of elements to show\r\n */\r\nexport function showAll(elements: (HTMLElement | null)[]): void {\r\n    elements.forEach(show);\r\n}\r\n\r\n/**\r\n * Hide multiple elements at once\r\n * @param elements - Array of elements to hide\r\n */\r\nexport function hideAll(elements: (HTMLElement | null)[]): void {\r\n    elements.forEach(hide);\r\n}\r\n\r\n/**\r\n * Get element by ID with type safety\r\n * @param id - Element ID\r\n * @returns The element or null if not found\r\n */\r\nexport function getById(id: string): HTMLElement | null {\r\n    return document.getElementById(id);\r\n}\r\n\r\n/**\r\n * Query selector with type assertion\r\n * @param selector - CSS selector\r\n * @param parent - Optional parent element (defaults to document)\r\n * @returns The first matching element or null\r\n */\r\nexport function query<T extends HTMLElement = HTMLElement>(\r\n    selector: string,\r\n    parent: ParentNode = document\r\n): T | null {\r\n    return parent.querySelector<T>(selector);\r\n}\r\n\r\n/**\r\n * Query selector all with type assertion\r\n * @param selector - CSS selector\r\n * @param parent - Optional parent element (defaults to document)\r\n * @returns NodeList of matching elements\r\n */\r\nexport function queryAll<T extends HTMLElement = HTMLElement>(\r\n    selector: string,\r\n    parent: ParentNode = document\r\n): NodeListOf<T> {\r\n    return parent.querySelectorAll<T>(selector);\r\n}\r\n\r\n// Attach to window for compatibility with legacy code\r\nif (typeof window !== 'undefined') {\r\n    (window as Window & { DOMUtils?: typeof import('./dom-utils') }).DOMUtils = {\r\n        show,\r\n        hide,\r\n        toggle,\r\n        isVisible,\r\n        setVisibility,\r\n        showAll,\r\n        hideAll,\r\n        getById,\r\n        query,\r\n        queryAll,\r\n    };\r\n}\r\n\r\nconsole.log('\u2705 DOMUtils loaded');\r\n\r\n", "/**\r\n * src/ts/constants.ts\r\n * Typed constants for the macOS-style portfolio site.\r\n *\r\n * This file is a migration target for the legacy `js/constants.js`.\r\n */\r\n\r\nexport interface AppConstants {\r\n    THEME_PREFERENCE_KEY: string;\r\n    VALID_THEME_PREFERENCES: string[];\r\n    FINDER_STATE_STORAGE_KEY: string;\r\n    OPEN_WINDOWS_KEY: string;\r\n    WINDOW_POSITIONS_KEY: string;\r\n    MODAL_IDS: string[];\r\n    TRANSIENT_MODAL_IDS: Set<string>;\r\n    BASE_Z_INDEX: number;\r\n    MENUBAR_Z_INDEX: number;\r\n    DOCK_Z_INDEX: number;\r\n    MIN_WINDOW_WIDTH: number;\r\n    MIN_WINDOW_HEIGHT: number;\r\n    DEFAULT_WINDOW_WIDTH: number;\r\n    DEFAULT_WINDOW_HEIGHT: number;\r\n    DOCK_MIN_HEIGHT: number;\r\n    DOCK_MAX_HEIGHT: number;\r\n    DOCK_MAGNIFICATION_SCALE: number;\r\n    DOCK_MAGNIFICATION_RANGE: number;\r\n    DESKTOP_ICON_SIZE: number;\r\n    DESKTOP_ICON_SPACING: number;\r\n    RUBBERBAND_MIN_DISTANCE: number;\r\n    WINDOW_ANIMATION_DURATION: number;\r\n    DOCK_ANIMATION_DURATION: number;\r\n    MENU_ANIMATION_DURATION: number;\r\n    GITHUB_CACHE_DURATION: number;\r\n    GITHUB_API_BASE: string;\r\n    SNAP_THRESHOLD: number;\r\n    SNAP_SIDES: string[];\r\n}\r\n\r\nexport const THEME_PREFERENCE_KEY = 'themePreference';\r\nexport const VALID_THEME_PREFERENCES = ['system', 'light', 'dark'];\r\n\r\nexport const FINDER_STATE_STORAGE_KEY = 'finderState';\r\nexport const OPEN_WINDOWS_KEY = 'openWindows';\r\nexport const WINDOW_POSITIONS_KEY = 'windowPositions';\r\n\r\nexport const MODAL_IDS = [\r\n    'finder-modal',\r\n    'projects-modal',\r\n    'about-modal',\r\n    'settings-modal',\r\n    'text-modal',\r\n    'terminal-modal',\r\n    'image-modal',\r\n    'program-info-modal',\r\n];\r\n\r\nexport const TRANSIENT_MODAL_IDS = new Set<string>(['program-info-modal']);\r\n\r\nexport const BASE_Z_INDEX = 1000;\r\nexport const MENUBAR_Z_INDEX = 10000;\r\nexport const DOCK_Z_INDEX = 10000;\r\n\r\nexport const MIN_WINDOW_WIDTH = 240;\r\nexport const MIN_WINDOW_HEIGHT = 160;\r\nexport const DEFAULT_WINDOW_WIDTH = 600;\r\nexport const DEFAULT_WINDOW_HEIGHT = 400;\r\n\r\nexport const DOCK_MIN_HEIGHT = 48;\r\nexport const DOCK_MAX_HEIGHT = 96;\r\nexport const DOCK_MAGNIFICATION_SCALE = 1.5;\r\nexport const DOCK_MAGNIFICATION_RANGE = 100; // px\r\n\r\nexport const DESKTOP_ICON_SIZE = 64;\r\nexport const DESKTOP_ICON_SPACING = 24;\r\nexport const RUBBERBAND_MIN_DISTANCE = 10; // px\r\n\r\nexport const WINDOW_ANIMATION_DURATION = 200; // ms\r\nexport const DOCK_ANIMATION_DURATION = 150; // ms\r\nexport const MENU_ANIMATION_DURATION = 100; // ms\r\n\r\nexport const GITHUB_CACHE_DURATION = 5 * 60 * 1000; // 5 minutes in ms\r\nexport const GITHUB_API_BASE = 'https://api.github.com';\r\n\r\nexport const SNAP_THRESHOLD = 100; // px\r\nexport const SNAP_SIDES = ['left', 'right'];\r\n\r\nexport const APP_CONSTANTS: AppConstants = {\r\n    THEME_PREFERENCE_KEY,\r\n    VALID_THEME_PREFERENCES,\r\n    FINDER_STATE_STORAGE_KEY,\r\n    OPEN_WINDOWS_KEY,\r\n    WINDOW_POSITIONS_KEY,\r\n    MODAL_IDS,\r\n    TRANSIENT_MODAL_IDS,\r\n    BASE_Z_INDEX,\r\n    MENUBAR_Z_INDEX,\r\n    DOCK_Z_INDEX,\r\n    MIN_WINDOW_WIDTH,\r\n    MIN_WINDOW_HEIGHT,\r\n    DEFAULT_WINDOW_WIDTH,\r\n    DEFAULT_WINDOW_HEIGHT,\r\n    DOCK_MIN_HEIGHT,\r\n    DOCK_MAX_HEIGHT,\r\n    DOCK_MAGNIFICATION_SCALE,\r\n    DOCK_MAGNIFICATION_RANGE,\r\n    DESKTOP_ICON_SIZE,\r\n    DESKTOP_ICON_SPACING,\r\n    RUBBERBAND_MIN_DISTANCE,\r\n    WINDOW_ANIMATION_DURATION,\r\n    DOCK_ANIMATION_DURATION,\r\n    MENU_ANIMATION_DURATION,\r\n    GITHUB_CACHE_DURATION,\r\n    GITHUB_API_BASE,\r\n    SNAP_THRESHOLD,\r\n    SNAP_SIDES,\r\n};\r\n\r\n// Attach to window for legacy JS compatibility\r\ndeclare global {\r\n    interface Window {\r\n        APP_CONSTANTS?: AppConstants;\r\n    }\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n    window.APP_CONSTANTS = APP_CONSTANTS;\r\n}\r\n\r\nexport default APP_CONSTANTS;\r\n", "console.log('API loaded');\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  type ModuleMethod = (...args: unknown[]) => unknown;\r\n\r\n  type ModuleProxy<T extends string[]> = {\r\n    [K in T[number]]: ModuleMethod;\r\n  };\r\n\r\n  // Helper to safely access window properties\r\n  function getWindowProp(propName: string): unknown {\r\n    return (window as unknown as Record<string, unknown>)[propName];\r\n  }\r\n\r\n  // Helper to call a method on a window property\r\n  function callWindowMethod(objName: string, methodName: string, ...args: unknown[]): unknown {\r\n    const obj = getWindowProp(objName);\r\n    if (obj && typeof (obj as Record<string, unknown>)[methodName] === 'function') {\r\n      return ((obj as Record<string, unknown>)[methodName] as ModuleMethod)(...args);\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  function createModuleProxy<T extends string[]>(\r\n    moduleName: string,\r\n    methods: T,\r\n  ): ModuleProxy<T> {\r\n    const proxy = {} as ModuleProxy<T>;\r\n\r\n    methods.forEach((method) => {\r\n      (proxy as Record<string, ModuleMethod>)[method] = function (...args: unknown[]): unknown {\r\n        const module = getWindowProp(moduleName);\r\n        if (module && typeof (module as Record<string, unknown>)[method] === 'function') {\r\n          return ((module as Record<string, unknown>)[method] as ModuleMethod)(...args);\r\n        }\r\n        console.warn(`${moduleName}.${method} ist nicht verf\u00FCgbar`);\r\n        return undefined;\r\n      };\r\n    });\r\n\r\n    return proxy;\r\n  }\r\n\r\n  const API = {\r\n    error: createModuleProxy('ErrorHandler', [\r\n      'enable',\r\n      'disable',\r\n      'getLogs',\r\n      'clearLogs',\r\n      'exportLogs',\r\n    ] as const),\r\n\r\n    performance: createModuleProxy('PerfMonitor', [\r\n      'enable',\r\n      'disable',\r\n      'toggle',\r\n      'mark',\r\n      'measure',\r\n      'report',\r\n    ] as const),\r\n\r\n    theme: createModuleProxy('ThemeSystem', [\r\n      'setThemePreference',\r\n      'getThemePreference',\r\n      'applyTheme',\r\n      'initTheme',\r\n    ] as const),\r\n\r\n    icon: createModuleProxy('IconSystem', [\r\n      'ensureSvgNamespace',\r\n      'getMenuIconSvg',\r\n      'renderIconIntoElement',\r\n    ] as const),\r\n\r\n    dock: createModuleProxy('DockSystem', [\r\n      'getDockReservedBottom',\r\n      'initDockMagnification',\r\n      'updateDockIndicators',\r\n    ] as const),\r\n\r\n    menu: createModuleProxy('MenuSystem', [\r\n      'renderApplicationMenu',\r\n      'handleMenuActionActivation',\r\n      'registerMenuAction',\r\n      'hideMenuDropdowns',\r\n      'toggleMenuDropdown',\r\n      'isAnyDropdownOpen',\r\n    ] as const),\r\n\r\n    desktop: createModuleProxy('DesktopSystem', [\r\n      'initDesktop',\r\n      'openDesktopItemById',\r\n    ] as const),\r\n\r\n    system: createModuleProxy('SystemUI', [\r\n      'initSystemStatusControls',\r\n      'updateAllSystemStatusUI',\r\n      'handleSystemToggle',\r\n      'setConnectedNetwork',\r\n      'setBluetoothDevice',\r\n      'setAudioDevice',\r\n    ] as const),\r\n\r\n    storage: createModuleProxy('StorageSystem', [\r\n      'readFinderState',\r\n      'writeFinderState',\r\n      'clearFinderState',\r\n      'saveOpenModals',\r\n      'restoreOpenModals',\r\n      'saveWindowPositions',\r\n      'restoreWindowPositions',\r\n      'resetWindowLayout',\r\n      'getDialogWindowElement',\r\n    ] as const),\r\n\r\n    finder: createModuleProxy('FinderSystem', ['init', 'openFinder', 'closeFinder'] as const),\r\n\r\n    textEditor: {\r\n      init: (container: unknown) => callWindowMethod('TextEditorSystem', 'init', container),\r\n      loadRemoteFile: (payload: unknown) => callWindowMethod('TextEditorSystem', 'loadRemoteFile', payload),\r\n      showLoading: (payload: unknown) => callWindowMethod('TextEditorSystem', 'showLoading', payload),\r\n      showLoadError: (payload: unknown) => callWindowMethod('TextEditorSystem', 'showLoadError', payload),\r\n      clearEditor: () => callWindowMethod('TextEditorSystem', 'clearEditor'),\r\n      saveFile: () => callWindowMethod('TextEditorSystem', 'saveFile'),\r\n      openFile: () => callWindowMethod('TextEditorSystem', 'openFile'),\r\n      handleMenuAction: (action: unknown) => callWindowMethod('TextEditorSystem', 'handleMenuAction', action),\r\n    },\r\n\r\n    settings: {\r\n      init: (container: unknown) => callWindowMethod('SettingsSystem', 'init', container),\r\n      showSection: (section: unknown) => callWindowMethod('SettingsSystem', 'showSection', section),\r\n      syncThemePreference: () => callWindowMethod('SettingsSystem', 'syncThemePreference'),\r\n      syncLanguagePreference: () => callWindowMethod('SettingsSystem', 'syncLanguagePreference'),\r\n    },\r\n\r\n    window: {\r\n      register: (config: unknown) => callWindowMethod('WindowManager', 'register', config),\r\n      registerAll: (configs: unknown) => callWindowMethod('WindowManager', 'registerAll', configs),\r\n      getConfig: (id: unknown) => callWindowMethod('WindowManager', 'getConfig', id),\r\n      open: (id: unknown) => callWindowMethod('WindowManager', 'open', id),\r\n      close: (id: unknown) => callWindowMethod('WindowManager', 'close', id),\r\n      bringToFront: (id: unknown) => callWindowMethod('WindowManager', 'bringToFront', id),\r\n      getTopWindow: () => callWindowMethod('WindowManager', 'getTopWindow'),\r\n      getProgramInfo: (id: unknown) => callWindowMethod('WindowManager', 'getProgramInfo', id),\r\n      getAllWindowIds: (): string[] => (callWindowMethod('WindowManager', 'getAllWindowIds') as string[]) || [],\r\n      getPersistentWindowIds: (): string[] =>\r\n        (callWindowMethod('WindowManager', 'getPersistentWindowIds') as string[]) || [],\r\n      getDialogInstance: (id: unknown) => callWindowMethod('WindowManager', 'getDialogInstance', id),\r\n      syncZIndexWithDOM: () => callWindowMethod('WindowManager', 'syncZIndexWithDOM'),\r\n    },\r\n\r\n    action: {\r\n      register: (name: unknown, handler: unknown) => callWindowMethod('ActionBus', 'register', name, handler),\r\n      registerAll: (actions: unknown) => callWindowMethod('ActionBus', 'registerAll', actions),\r\n      execute: (name: unknown, params: unknown, element: unknown) =>\r\n        callWindowMethod('ActionBus', 'execute', name, params, element),\r\n    },\r\n\r\n    i18n: {\r\n      translate: (key: string, fallback?: string): string => {\r\n        const appI18n = getWindowProp('appI18n');\r\n        if (appI18n && typeof (appI18n as Record<string, unknown>)['translate'] === 'function') {\r\n          const result = ((appI18n as Record<string, unknown>)['translate'] as (k: string) => string)(key);\r\n          return result === key && fallback ? fallback : result;\r\n        }\r\n        return fallback || key;\r\n      },\r\n      setLanguagePreference: (lang: unknown) => callWindowMethod('appI18n', 'setLanguagePreference', lang),\r\n      getLanguagePreference: (): string => (callWindowMethod('appI18n', 'getLanguagePreference') as string) || 'system',\r\n      getActiveLanguage: (): string => (callWindowMethod('appI18n', 'getActiveLanguage') as string) || 'en',\r\n      applyTranslations: () => callWindowMethod('appI18n', 'applyTranslations'),\r\n    },\r\n\r\n    session: createModuleProxy('SessionManager', [\r\n      'init',\r\n      'saveAll',\r\n      'saveInstanceType',\r\n      'restoreSession',\r\n      'clear',\r\n      'setDebounceDelay',\r\n      'getDebounceDelay',\r\n      'getStats',\r\n    ] as const),\r\n\r\n    helpers: {\r\n      getMenuBarBottom: (): number => {\r\n        const header = document.querySelector('body > header');\r\n        if (!header) return 0;\r\n        return header.getBoundingClientRect().bottom;\r\n      },\r\n\r\n      clampWindowToMenuBar: (target: unknown): unknown => {\r\n        const fn = getWindowProp('clampWindowToMenuBar');\r\n        if (typeof fn === 'function') {\r\n          return (fn as (t: unknown) => unknown)(target);\r\n        }\r\n        return undefined;\r\n      },\r\n\r\n      computeSnapMetrics: (side: unknown): unknown => {\r\n        const fn = getWindowProp('computeSnapMetrics');\r\n        if (typeof fn === 'function') {\r\n          return (fn as (s: unknown) => unknown)(side);\r\n        }\r\n        return undefined;\r\n      },\r\n\r\n      showSnapPreview: (side: unknown): void => {\r\n        const fn = getWindowProp('showSnapPreview');\r\n        if (typeof fn === 'function') {\r\n          (fn as (s: unknown) => void)(side);\r\n        }\r\n      },\r\n\r\n      hideSnapPreview: (): void => {\r\n        const fn = getWindowProp('hideSnapPreview');\r\n        if (typeof fn === 'function') {\r\n          (fn as () => void)();\r\n        }\r\n      },\r\n    },\r\n  } as const;\r\n\r\n  (window as unknown as { API: typeof API }).API = API;\r\n\r\n  // Legacy compatibility wrappers\r\n  const createLegacyWrapper = (apiPath: string): ((...args: unknown[]) => unknown) => {\r\n    return function (...args: unknown[]): unknown {\r\n      const parts = apiPath.split('.');\r\n      let fn: unknown = API;\r\n      for (const part of parts) {\r\n        fn = (fn as Record<string, unknown>)[part];\r\n        if (!fn) {\r\n          console.warn(`Legacy wrapper: ${apiPath} nicht gefunden`);\r\n          return undefined;\r\n        }\r\n      }\r\n      if (typeof fn === 'function') {\r\n        return (fn as (...a: unknown[]) => unknown)(...args);\r\n      }\r\n      return fn;\r\n    };\r\n  };\r\n\r\n  const w = window as unknown as Record<string, unknown>;\r\n\r\n  // Theme\r\n  w.setThemePreference = createLegacyWrapper('theme.setThemePreference');\r\n  w.getThemePreference = createLegacyWrapper('theme.getThemePreference');\r\n\r\n  // Icon\r\n  w.ensureSvgNamespace = createLegacyWrapper('icon.ensureSvgNamespace');\r\n  w.getMenuIconSvg = createLegacyWrapper('icon.getMenuIconSvg');\r\n  w.renderIconIntoElement = createLegacyWrapper('icon.renderIconIntoElement');\r\n\r\n  // Dock\r\n  w.getDockReservedBottom = createLegacyWrapper('dock.getDockReservedBottom');\r\n  w.initDockMagnification = createLegacyWrapper('dock.initDockMagnification');\r\n\r\n  // Menu\r\n  w.renderApplicationMenu = createLegacyWrapper('menu.renderApplicationMenu');\r\n  w.handleMenuActionActivation = createLegacyWrapper('menu.handleMenuActionActivation');\r\n\r\n  // Desktop\r\n  w.initDesktop = createLegacyWrapper('desktop.initDesktop');\r\n  w.openDesktopItemById = createLegacyWrapper('desktop.openDesktopItemById');\r\n\r\n  // System\r\n  w.initSystemStatusControls = createLegacyWrapper('system.initSystemStatusControls');\r\n  w.updateAllSystemStatusUI = createLegacyWrapper('system.updateAllSystemStatusUI');\r\n  w.handleSystemToggle = createLegacyWrapper('system.handleSystemToggle');\r\n  w.setConnectedNetwork = createLegacyWrapper('system.setConnectedNetwork');\r\n  w.setBluetoothDevice = createLegacyWrapper('system.setBluetoothDevice');\r\n  w.setAudioDevice = createLegacyWrapper('system.setAudioDevice');\r\n\r\n  // Storage\r\n  w.readFinderState = createLegacyWrapper('storage.readFinderState');\r\n  w.writeFinderState = createLegacyWrapper('storage.writeFinderState');\r\n  w.clearFinderState = createLegacyWrapper('storage.clearFinderState');\r\n  w.saveOpenModals = createLegacyWrapper('storage.saveOpenModals');\r\n  w.restoreOpenModals = createLegacyWrapper('storage.restoreOpenModals');\r\n  w.saveWindowPositions = createLegacyWrapper('storage.saveWindowPositions');\r\n  w.restoreWindowPositions = createLegacyWrapper('storage.restoreWindowPositions');\r\n  w.resetWindowLayout = createLegacyWrapper('storage.resetWindowLayout');\r\n})();\r\n", "/**\r\n * WindowManager - Central registry for windows/modals with z-index and program metadata (TypeScript).\r\n * Mirrors js/window-manager.js behavior while adding types and preserving global API.\r\n */\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    type WindowType = 'persistent' | 'transient';\r\n\r\n    type DialogLike = {\r\n        open?: () => void;\r\n        close?: () => void;\r\n        bringToFront?: () => void;\r\n    } | null;\r\n\r\n    type WindowConfigOptions = {\r\n        id: string;\r\n        type?: WindowType;\r\n        programKey?: string;\r\n        icon?: string;\r\n        closeButtonId?: string | null;\r\n        metadata?: Record<string, unknown>;\r\n    };\r\n\r\n    type ProgramInfo = {\r\n        modalId: string | null;\r\n        programLabel: string;\r\n        infoLabel: string;\r\n        fallbackInfoModalId: string;\r\n        icon: string;\r\n        about: Record<string, string>;\r\n    };\r\n\r\n    class WindowConfig {\r\n        id: string;\r\n        type: WindowType;\r\n        programKey: string;\r\n        icon: string;\r\n        closeButtonId: string | null;\r\n        dialogInstance: DialogLike;\r\n        metadata: Record<string, unknown>;\r\n\r\n        constructor(options: WindowConfigOptions) {\r\n            this.id = options.id;\r\n            this.type = options.type || 'persistent';\r\n            this.programKey = options.programKey || 'programs.default';\r\n            this.icon = options.icon || './img/sucher.png';\r\n            this.closeButtonId = options.closeButtonId ?? null;\r\n            this.dialogInstance = null;\r\n            this.metadata = options.metadata || {};\r\n        }\r\n\r\n        isTransient(): boolean {\r\n            return this.type === 'transient';\r\n        }\r\n\r\n        getProgramInfo(): ProgramInfo {\r\n            const w = window as unknown as Record<string, unknown>;\r\n            const i18n =\r\n                (w['appI18n'] as { translate?: (k: string) => string } | undefined) || undefined;\r\n            const translate = i18n?.translate || ((key: string) => key);\r\n\r\n            const aboutFields = ['name', 'tagline', 'version', 'copyright'];\r\n            const info: ProgramInfo = {\r\n                modalId: this.id,\r\n                programLabel: translate(`${this.programKey}.label`),\r\n                infoLabel: translate(`${this.programKey}.infoLabel`),\r\n                fallbackInfoModalId:\r\n                    (this.metadata.fallbackInfoModalId as string) || 'program-info-modal',\r\n                icon: this.icon,\r\n                about: {},\r\n            };\r\n            aboutFields.forEach(field => {\r\n                info.about[field] = translate(`${this.programKey}.about.${field}`);\r\n            });\r\n            return info;\r\n        }\r\n    }\r\n\r\n    const windowRegistry = new Map<string, WindowConfig>();\r\n    const baseZIndex = 1000;\r\n    let topZIndex = 1000;\r\n\r\n    const WindowManager = {\r\n        register(config: WindowConfigOptions): WindowConfig {\r\n            const windowConfig = new WindowConfig(config);\r\n            windowRegistry.set(config.id, windowConfig);\r\n            return windowConfig;\r\n        },\r\n\r\n        registerAll(configs: WindowConfigOptions[]): void {\r\n            configs.forEach(c => this.register(c));\r\n        },\r\n\r\n        getConfig(windowId: string): WindowConfig | null {\r\n            return windowRegistry.get(windowId) || null;\r\n        },\r\n\r\n        getAllWindowIds(): string[] {\r\n            return Array.from(windowRegistry.keys());\r\n        },\r\n\r\n        getPersistentWindowIds(): string[] {\r\n            return this.getAllWindowIds().filter(id => {\r\n                const config = this.getConfig(id);\r\n                return !!config && !config.isTransient();\r\n            });\r\n        },\r\n\r\n        getTransientWindowIds(): string[] {\r\n            return this.getAllWindowIds().filter(id => {\r\n                const config = this.getConfig(id);\r\n                return !!config && config.isTransient();\r\n            });\r\n        },\r\n\r\n        setDialogInstance(windowId: string, instance: DialogLike): void {\r\n            const config = this.getConfig(windowId);\r\n            if (config) {\r\n                config.dialogInstance = instance;\r\n            }\r\n        },\r\n\r\n        getDialogInstance(windowId: string): DialogLike {\r\n            const config = this.getConfig(windowId);\r\n            return (config && config.dialogInstance) || null;\r\n        },\r\n\r\n        getAllDialogInstances(): Record<string, DialogLike> {\r\n            const dialogs: Record<string, DialogLike> = {};\r\n            windowRegistry.forEach((config, id) => {\r\n                if (config.dialogInstance) {\r\n                    dialogs[id] = config.dialogInstance;\r\n                }\r\n            });\r\n            return dialogs;\r\n        },\r\n\r\n        getTopWindow(): HTMLElement | null {\r\n            let topModal: HTMLElement | null = null;\r\n            let highestZ = 0;\r\n            this.getAllWindowIds().forEach(id => {\r\n                const modal = document.getElementById(id);\r\n                if (modal && !modal.classList.contains('hidden')) {\r\n                    const zIndex = parseInt(getComputedStyle(modal).zIndex, 10) || 0;\r\n                    if (zIndex > highestZ) {\r\n                        highestZ = zIndex;\r\n                        topModal = modal;\r\n                    }\r\n                }\r\n            });\r\n            return topModal;\r\n        },\r\n\r\n        bringToFront(windowId: string): void {\r\n            const instance = this.getDialogInstance(windowId);\r\n            if (instance && typeof instance.bringToFront === 'function') {\r\n                instance.bringToFront();\r\n            } else {\r\n                console.warn(`Keine Dialog-Instanz f\u00FCr ${windowId} gefunden.`);\r\n            }\r\n        },\r\n\r\n        open(windowId: string): void {\r\n            const config = this.getConfig(windowId);\r\n            // Run the configured initHandler on every open. Some windows rely on\r\n            // per-open initialization (e.g., Finder multi-instance recreation).\r\n            if (\r\n                config &&\r\n                config.metadata &&\r\n                typeof (config.metadata as Record<string, unknown>).initHandler === 'function'\r\n            ) {\r\n                try {\r\n                    const md = config.metadata as Record<string, unknown> & {\r\n                        initHandler?: () => void;\r\n                    };\r\n                    if (typeof md.initHandler === 'function') md.initHandler();\r\n                } catch (e) {\r\n                    console.warn(`Init handler for ${windowId} threw:`, e);\r\n                }\r\n            }\r\n            const instance = this.getDialogInstance(windowId);\r\n            if (instance && typeof instance.open === 'function') {\r\n                instance.open();\r\n            } else {\r\n                const modal = document.getElementById(windowId);\r\n                if (modal) {\r\n                    const domUtils = (window as any).DOMUtils;\r\n                    if (domUtils && typeof domUtils.show === 'function') {\r\n                        domUtils.show(modal);\r\n                    } else {\r\n                        modal.classList.remove('hidden');\r\n                    }\r\n                    this.bringToFront(windowId);\r\n                }\r\n            }\r\n        },\r\n\r\n        close(windowId: string): void {\r\n            const instance = this.getDialogInstance(windowId);\r\n            if (instance && typeof instance.close === 'function') {\r\n                instance.close();\r\n            } else {\r\n                const modal = document.getElementById(windowId);\r\n                if (modal) {\r\n                    const domUtils = (window as any).DOMUtils;\r\n                    if (domUtils && typeof domUtils.hide === 'function') {\r\n                        domUtils.hide(modal);\r\n                    } else {\r\n                        modal.classList.add('hidden');\r\n                    }\r\n                }\r\n            }\r\n        },\r\n\r\n        getNextZIndex(): number {\r\n            topZIndex++;\r\n            return topZIndex;\r\n        },\r\n\r\n        syncZIndexWithDOM(): number {\r\n            let maxZ = baseZIndex;\r\n            this.getAllWindowIds().forEach(id => {\r\n                const modal = document.getElementById(id);\r\n                if (!modal) return;\r\n                const modalZ = parseInt(window.getComputedStyle(modal).zIndex, 10);\r\n                if (!Number.isNaN(modalZ)) maxZ = Math.max(maxZ, modalZ);\r\n                const windowEl = this.getDialogWindowElement(modal);\r\n                if (windowEl) {\r\n                    const contentZ = parseInt(window.getComputedStyle(windowEl).zIndex, 10);\r\n                    if (!Number.isNaN(contentZ)) maxZ = Math.max(maxZ, contentZ);\r\n                }\r\n            });\r\n            topZIndex = maxZ;\r\n            return maxZ;\r\n        },\r\n\r\n        getDialogWindowElement(modal: HTMLElement | null): HTMLElement | null {\r\n            if (!modal) return null;\r\n            return (modal.querySelector('.autopointer') as HTMLElement | null) || modal;\r\n        },\r\n\r\n        getProgramInfo(windowId: string): ProgramInfo {\r\n            const config = this.getConfig(windowId);\r\n            if (config) return config.getProgramInfo();\r\n            return this.getDefaultProgramInfo();\r\n        },\r\n\r\n        getDefaultProgramInfo(): ProgramInfo {\r\n            const w = window as unknown as Record<string, unknown>;\r\n            const i18n =\r\n                (w['appI18n'] as { translate?: (k: string) => string } | undefined) || undefined;\r\n            const translate = i18n?.translate || ((key: string) => key);\r\n            const programKey = 'programs.default';\r\n            return {\r\n                modalId: null,\r\n                programLabel: translate(`${programKey}.label`),\r\n                infoLabel: translate(`${programKey}.infoLabel`),\r\n                fallbackInfoModalId: 'program-info-modal',\r\n                icon: './img/sucher.png',\r\n                about: {\r\n                    name: translate(`${programKey}.about.name`),\r\n                    tagline: translate(`${programKey}.about.tagline`),\r\n                    version: translate(`${programKey}.about.version`),\r\n                    copyright: translate(`${programKey}.about.copyright`),\r\n                },\r\n            };\r\n        },\r\n\r\n        get topZIndex(): number {\r\n            return topZIndex;\r\n        },\r\n        set topZIndex(value: number) {\r\n            topZIndex = value;\r\n        },\r\n        get baseZIndex(): number {\r\n            return baseZIndex;\r\n        },\r\n    };\r\n\r\n    (window as unknown as { WindowManager: typeof WindowManager }).WindowManager = WindowManager;\r\n\r\n    Object.defineProperty(window, 'topZIndex', {\r\n        get: () => WindowManager.topZIndex,\r\n        set: (value: number) => {\r\n            WindowManager.topZIndex = value;\r\n        },\r\n    });\r\n})();\r\n\r\n", "/**\r\n * ActionBus - Declarative event system to wire UI actions via data-action attributes.\r\n *\r\n * Example:\r\n *   <button data-action=\"closeWindow\" data-window-id=\"finder-modal\">Close</button>\r\n *   ActionBus.register('closeWindow', (params, el) => { ... })\r\n */\r\nconsole.log('ActionBus loaded');\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  type Params = Record<string, string | undefined>;\r\n  type Handler = (params: Params, element: HTMLElement | null) => void;\r\n\r\n  // Narrowly typed window surface we rely on\r\n  type GlobalExtras = {\r\n    dialogs?: Record<string, { open?: () => void; close?: () => void }>;\r\n    hideMenuDropdowns?: () => void;\r\n    resetWindowLayout?: () => void;\r\n    openProgramInfoDialog?: (arg: unknown) => void;\r\n    updateProgramLabelByTopModal?: () => void;\r\n    saveOpenModals?: () => void;\r\n    updateDockIndicators?: () => void;\r\n    openDesktopItemById?: (id: string) => void;\r\n  };\r\n\r\n  // Helper type to access the subset of FinderSystem APIs we call here\r\n  type FinderSystemLite = {\r\n    navigateUp?: () => void;\r\n    getState?: () => { currentView: string };\r\n    navigateTo?: (parts: string[], view?: string) => void;\r\n    setViewMode?: (mode: string) => void;\r\n    setSortBy?: (field: string) => void;\r\n    openItem?: (name: string, type: string) => void;\r\n  };\r\n  type WF = Window & { FinderSystem?: FinderSystemLite };\r\n\r\n  const actionHandlers = new Map<string, Handler>();\r\n  const eventDelegates: Array<{ eventType: string; delegate: (e: Event) => void }> = [];\r\n\r\n  const ActionBus = {\r\n    /**\r\n     * Registriert einen Action-Handler\r\n     * @param {string} actionName - Name der Action\r\n     * @param {Function} handler - Handler-Funktion (params, element) => void\r\n     */\r\n    register(actionName: string, handler: Handler) {\r\n      if (!actionName || typeof handler !== 'function') {\r\n        console.error('Invalid action registration:', actionName);\r\n        return;\r\n      }\r\n      actionHandlers.set(actionName, handler);\r\n    },\r\n\r\n    /**\r\n     * Registriert mehrere Actions auf einmal\r\n     * @param {Object} actions - Object mit actionName: handler Paaren\r\n     */\r\n    registerAll(actions: Record<string, Handler>) {\r\n      Object.entries(actions).forEach(([name, handler]) => {\r\n        this.register(name, handler);\r\n      });\r\n    },\r\n\r\n    /**\r\n     * F\u00FChrt eine Action aus\r\n     * @param {string} actionName - Name der Action\r\n     * @param {Object} params - Parameter f\u00FCr die Action\r\n     * @param {HTMLElement|null} element - Element das die Action ausgel\u00F6st hat\r\n     */\r\n    execute(actionName: string, params: Params = {}, element: HTMLElement | null = null) {\r\n      const handler = actionHandlers.get(actionName);\r\n      if (!handler) {\r\n        console.warn(`No handler registered for action: ${actionName}`);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        handler(params, element);\r\n      } catch (error) {\r\n        console.error(`Error executing action ${actionName}:`, error);\r\n      }\r\n    },\r\n\r\n    /**\r\n     * Initialisiert das Event-Delegation System\r\n     * Sucht alle Elemente mit data-action und bindet sie\r\n     */\r\n    init() {\r\n      // Click-Events\r\n      this.delegateEvent('click', '[data-action]', (element, event) => {\r\n        const actionName = element.getAttribute('data-action') as string;\r\n        const params = this.extractParams(element);\r\n\r\n        // Prevent default for buttons and links\r\n        if (element.tagName === 'BUTTON' || element.tagName === 'A') {\r\n          event.preventDefault();\r\n        }\r\n        event.stopPropagation();\r\n\r\n        this.execute(actionName, params, element);\r\n      });\r\n\r\n      // Double-click support for data-action-dblclick\r\n      this.delegateEvent('dblclick', '[data-action-dblclick]', (element, event) => {\r\n        const actionName = element.getAttribute('data-action-dblclick') as string;\r\n        const params = this.extractParams(element);\r\n        if (element.tagName === 'BUTTON' || element.tagName === 'A') {\r\n          event.preventDefault();\r\n        }\r\n        event.stopPropagation();\r\n        this.execute(actionName, params, element);\r\n      });\r\n\r\n      // Support f\u00FCr data-action-hover\r\n      this.delegateEvent('mouseenter', '[data-action-hover]', (element) => {\r\n        const actionName = element.getAttribute('data-action-hover') as string;\r\n        const params = this.extractParams(element);\r\n        this.execute(actionName, params, element);\r\n      });\r\n\r\n      console.log('ActionBus initialized');\r\n    },\r\n\r\n    /**\r\n     * Event-Delegation Helper\r\n     */\r\n    delegateEvent(eventType: string, selector: string, handler: (element: HTMLElement, event: Event) => void) {\r\n      const delegate = (event: Event) => {\r\n        const target = event.target;\r\n        if (!(target instanceof Element)) return;\r\n\r\n        const element = target.closest(selector) as HTMLElement | null;\r\n        if (element) {\r\n          handler(element, event);\r\n        }\r\n      };\r\n\r\n      document.addEventListener(eventType, delegate as EventListener);\r\n      eventDelegates.push({ eventType, delegate });\r\n    },\r\n\r\n    /**\r\n     * Extrahiert Parameter aus data-* Attributen\r\n     */\r\n    extractParams(element: HTMLElement): Params {\r\n      const params: Params = {};\r\n      const dataset = element.dataset;\r\n\r\n      // Alle data-* Attribute durchgehen, au\u00DFer data-action selbst\r\n      for (const key in dataset) {\r\n        if (key !== 'action' && key !== 'actionHover') {\r\n          params[key] = dataset[key];\r\n        }\r\n      }\r\n\r\n      return params;\r\n    },\r\n\r\n    /**\r\n     * Cleanup - entfernt alle Event-Listener\r\n     */\r\n    destroy() {\r\n      eventDelegates.forEach(({ eventType, delegate }) => {\r\n        document.removeEventListener(eventType, delegate as EventListener);\r\n      });\r\n      eventDelegates.length = 0;\r\n      actionHandlers.clear();\r\n    },\r\n  } as const;\r\n\r\n  // Standard-Actions registrieren\r\n  ActionBus.registerAll({\r\n    // Preview: generischer \u00D6ffnen-Handler (unterst\u00FCtzt direkte URLs oder Delegation an Finder)\r\n    openWithPreview: (params: Params) => {\r\n      try {\r\n        // 1) Direkte URL-\u00DCbergabe (ein Bild)\r\n        const single = (params['url'] || params['src'] || params['imageUrl']) as string | undefined;\r\n        // 2) Liste als CSV\r\n        const csv = (params['urls'] || params['images']) as string | undefined;\r\n        // 3) Startindex\r\n        const idx = parseInt((params['index'] || '0') as string, 10) || 0;\r\n        // 4) Pfad (Anzeigezwecke)\r\n        const path = (params['path'] || params['imagePath']) as string | undefined;\r\n\r\n        const W = window as unknown as Window & { PreviewInstanceManager?: any; FinderSystem?: any };\r\n\r\n        if (single) {\r\n          const list = [single];\r\n          if (W.PreviewInstanceManager?.openImages) {\r\n            W.PreviewInstanceManager.openImages(list, 0, path);\r\n          }\r\n          return;\r\n        }\r\n        if (csv) {\r\n          const list = csv\r\n            .split(',')\r\n            .map(s => s.trim())\r\n            .filter(Boolean);\r\n          if (list.length && W.PreviewInstanceManager?.openImages) {\r\n            W.PreviewInstanceManager.openImages(list, Math.max(0, Math.min(idx, list.length - 1)), path);\r\n          }\r\n          return;\r\n        }\r\n\r\n        // Fallback: Falls aus Finder mit Item-Name aufgerufen\r\n        const itemName = (params['itemName'] || params['name']) as string | undefined;\r\n        if (itemName && W.FinderSystem?.openItem) {\r\n          W.FinderSystem.openItem(itemName, 'file');\r\n        }\r\n      } catch (e) {\r\n        console.warn('openWithPreview failed:', e);\r\n      }\r\n    },\r\n    // Fenster schlie\u00DFen\r\n    closeWindow: (params: Params) => {\r\n      const windowId = params.windowId;\r\n      if (!windowId) {\r\n        console.warn('closeWindow: missing windowId');\r\n        return;\r\n      }\r\n\r\n      const g = window as unknown as Window & GlobalExtras;\r\n      const wm = (window as Window & { WindowManager?: { close?: (id: string) => void } }).WindowManager;\r\n      if (wm && typeof wm.close === 'function') {\r\n        wm.close(windowId);\r\n      }\r\n\r\n      // Callbacks\r\n      g.saveOpenModals?.();\r\n      g.updateDockIndicators?.();\r\n      g.updateProgramLabelByTopModal?.();\r\n    },\r\n\r\n    // Fenster \u00F6ffnen\r\n    openWindow: (params: Params) => {\r\n      const windowId = params.windowId;\r\n      if (!windowId) {\r\n        console.warn('openWindow: missing windowId');\r\n        return;\r\n      }\r\n\r\n      // Close launchpad if it's open (clicking dock icon while launchpad is visible)\r\n      const launchpadModal = document.getElementById('launchpad-modal');\r\n      if (launchpadModal && !launchpadModal.classList.contains('hidden')) {\r\n        const g = window as unknown as Window & GlobalExtras;\r\n        g.dialogs?.['launchpad-modal']?.close?.();\r\n      }\r\n\r\n      (window as Window & { WindowManager?: { open?: (id: string) => void } }).WindowManager?.open?.(windowId);\r\n\r\n      // Callbacks\r\n      (window as unknown as Window & GlobalExtras).updateProgramLabelByTopModal?.();\r\n    },\r\n\r\n    // Aktuelles (oberstes) Fenster schlie\u00DFen\r\n    closeTopWindow: () => {\r\n      const g = window as unknown as Window & GlobalExtras & { WindowManager?: { getTopWindow?: () => unknown; close?: (id: string) => void } };\r\n      g.hideMenuDropdowns?.();\r\n\r\n      const maybeTop = g.WindowManager?.getTopWindow?.();\r\n      let topId: string | null = null;\r\n      if (typeof maybeTop === 'string') {\r\n        topId = maybeTop;\r\n      } else if (maybeTop && typeof maybeTop === 'object') {\r\n        const obj = maybeTop as Record<string, unknown>;\r\n        if (typeof obj.id === 'string') topId = obj.id;\r\n      }\r\n      if (!topId) return;\r\n\r\n      g.WindowManager?.close?.(topId);\r\n\r\n      g.saveOpenModals?.();\r\n      g.updateDockIndicators?.();\r\n      g.updateProgramLabelByTopModal?.();\r\n    },\r\n\r\n    // Window-Layout zur\u00FCcksetzen\r\n    resetWindowLayout: () => {\r\n      const g = window as unknown as Window & GlobalExtras;\r\n      g.hideMenuDropdowns?.();\r\n      g.resetWindowLayout?.();\r\n    },\r\n\r\n    // Program-Info Dialog \u00F6ffnen\r\n    openProgramInfo: (_params: Params, _element: HTMLElement | null) => {\r\n      const g = window as unknown as Window & GlobalExtras;\r\n      g.hideMenuDropdowns?.();\r\n      g.openProgramInfoDialog?.(null);\r\n    },\r\n\r\n    // \u00DCber-Dialog \u00F6ffnen (aus Apple-Men\u00FC)\r\n    openAbout: () => {\r\n      const g = window as unknown as Window & GlobalExtras;\r\n      g.hideMenuDropdowns?.();\r\n      g.dialogs?.['about-modal']?.open?.();\r\n      g.updateProgramLabelByTopModal?.();\r\n    },\r\n\r\n    // Settings \u00F6ffnen\r\n    openSettings: () => {\r\n      const g = window as unknown as Window & GlobalExtras;\r\n      g.hideMenuDropdowns?.();\r\n      g.dialogs?.['settings-modal']?.open?.();\r\n      g.updateProgramLabelByTopModal?.();\r\n    },\r\n\r\n    // Desktop-Item \u00F6ffnen (f\u00FCr Dock-Icons)\r\n    openDesktopItem: (params: Params) => {\r\n      const itemId = params.itemId;\r\n      if (!itemId) {\r\n        console.warn('openDesktopItem: missing itemId');\r\n        return;\r\n      }\r\n      const g = window as unknown as Window & GlobalExtras;\r\n      g.openDesktopItemById?.(itemId);\r\n    },\r\n\r\n    // Finder: eine Ebene nach oben\r\n    'finder:navigateUp': () => {\r\n      const wf = window as unknown as WF;\r\n      wf.FinderSystem?.navigateUp?.();\r\n    },\r\n\r\n    // Finder: zur Root der aktuellen Ansicht\r\n    'finder:goRoot': () => {\r\n      const wf = window as unknown as WF;\r\n      if (wf.FinderSystem?.navigateTo && wf.FinderSystem?.getState) {\r\n        const view = wf.FinderSystem.getState().currentView;\r\n        wf.FinderSystem.navigateTo([], view);\r\n      }\r\n    },\r\n\r\n    // Finder: Ansicht wechseln (computer/github/favorites/recent)\r\n    'finder:switchView': (params: Params) => {\r\n  const view = params['finderView'] || params.view;\r\n      if (!view) {\r\n        console.warn('finder:switchView: missing finderView');\r\n        return;\r\n      }\r\n      const wf = window as unknown as WF;\r\n      wf.FinderSystem?.navigateTo?.([], view as string);\r\n    },\r\n\r\n    // Finder: View-Mode setzen (list/grid/columns)\r\n    'finder:setViewMode': (params: Params) => {\r\n  const mode = params['viewMode'] || params['mode'];\r\n      if (!mode) {\r\n        console.warn('finder:setViewMode: missing viewMode');\r\n        return;\r\n      }\r\n      const wf = window as unknown as WF;\r\n      wf.FinderSystem?.setViewMode?.(mode as string);\r\n    },\r\n\r\n    // Finder: Sortierung setzen\r\n    'finder:setSortBy': (params: Params) => {\r\n  const field = params['sortBy'] || params['field'];\r\n      if (!field) {\r\n        console.warn('finder:setSortBy: missing sortBy');\r\n        return;\r\n      }\r\n      const wf = window as unknown as WF;\r\n      wf.FinderSystem?.setSortBy?.(field as string);\r\n    },\r\n\r\n    // Finder: In Pfad navigieren (data-path=\"A/B/C\")\r\n    'finder:navigateToPath': (params: Params) => {\r\n      const raw = params.path || '';\r\n      const parts = typeof raw === 'string' && raw.length ? raw.split('/') : [];\r\n      const wf = window as unknown as WF;\r\n      wf.FinderSystem?.navigateTo?.(parts);\r\n    },\r\n\r\n    // Finder: Item \u00F6ffnen (Datei oder Ordner)\r\n    'finder:openItem': (params: Params) => {\r\n  const name = params['itemName'] || params['name'];\r\n  const type = params['itemType'] || params['type'];\r\n      if (!name || !type) {\r\n        console.warn('finder:openItem: missing name/type');\r\n        return;\r\n      }\r\n      const wf = window as unknown as WF;\r\n      wf.FinderSystem?.openItem?.(name as string, type as string);\r\n    },\r\n  });\r\n\r\n  // Globaler Export\r\n  (window as unknown as { ActionBus: typeof ActionBus }).ActionBus = ActionBus;\r\n})();\r\n", "/**\n * Dialog Utilities Module\n * Provides window/dialog z-index management and focus control functions.\n *\n * This module centralizes dialog utility functions that were previously scattered\n * in app.js, providing typed interfaces for better maintainability.\n *\n * @module dialog-utils\n */\n\n// Export to make this a proper module for global augmentation\nexport {};\n\n/**\n * Global window interface extensions for dialog utilities\n * Note: APP_CONSTANTS and topZIndex are defined in types/index.d.ts\n */\ndeclare global {\n    interface Window {\n        dialogs?: {\n            [key: string]: {\n                modal?: HTMLElement;\n                bringToFront?: () => void;\n            };\n        };\n        syncTopZIndexWithDOM?: () => void;\n        bringDialogToFront?: (dialogId: string) => void;\n        bringAllWindowsToFront?: () => void;\n    }\n}\n\n/**\n * Type helper for WindowManager (defined in types/window-manager.d.ts)\n */\ninterface IWindowManager {\n    syncZIndexWithDOM?: () => void;\n    getAllWindowIds?: () => string[];\n}\n\n/**\n * Get all modal IDs from WindowManager or fallback to APP_CONSTANTS\n * @returns Array of modal element IDs\n */\nfunction getModalIds(): string[] {\n    const win = window as Window & { WindowManager?: IWindowManager };\n    if (win.WindowManager && typeof win.WindowManager.getAllWindowIds === 'function') {\n        return win.WindowManager.getAllWindowIds();\n    }\n    // Cast window to access APP_CONSTANTS (defined in types/index.d.ts)\n    const w = window as Window & { APP_CONSTANTS?: Record<string, unknown> };\n    const appConstants = w.APP_CONSTANTS as { MODAL_IDS?: string[] } | undefined;\n    return appConstants?.MODAL_IDS || [];\n}\n\n/**\n * Synchronize the global topZIndex counter with the actual DOM z-index values.\n * Scans all registered modals and updates the topZIndex to match the highest z-index found.\n *\n * Delegates to WindowManager.syncZIndexWithDOM if available, otherwise uses fallback implementation.\n */\nfunction syncTopZIndexWithDOM(): void {\n    const win = window as Window & { WindowManager?: IWindowManager };\n    if (\n        win.WindowManager &&\n        typeof win.WindowManager.syncZIndexWithDOM === 'function'\n    ) {\n        win.WindowManager.syncZIndexWithDOM();\n        return;\n    }\n\n    // Fallback implementation\n    let maxZ = 1000;\n    const modalIds = getModalIds();\n\n    modalIds.forEach((id) => {\n        const modal = document.getElementById(id);\n        if (!modal) return;\n        const modalZ = parseInt(window.getComputedStyle(modal).zIndex, 10);\n        if (!Number.isNaN(modalZ)) {\n            maxZ = Math.max(maxZ, modalZ);\n        }\n    });\n\n    // Cast window to access topZIndex (defined in types/index.d.ts)\n    // Note: topZIndex is required in the type definition, but may not exist at runtime\n    const w = window as unknown as Window & { topZIndex?: number };\n    if (w.topZIndex !== undefined) {\n        w.topZIndex = maxZ;\n    }\n}\n\n/**\n * Bring a specific dialog/window to front by calling its bringToFront method.\n * This is the recommended way to change window focus programmatically.\n *\n * @param dialogId - The ID of the dialog element to bring to front\n */\nfunction bringDialogToFront(dialogId: string): void {\n    if (window.dialogs?.[dialogId]) {\n        window.dialogs[dialogId].bringToFront?.();\n    } else {\n        console.error('Kein Dialog mit der ID ' + dialogId + ' gefunden.');\n    }\n}\n\n/**\n * Bring all currently visible (non-hidden) windows to front.\n * Used by menu system to refresh z-index stack of all open windows.\n * Iterates through all registered dialogs and calls bringToFront on visible ones.\n */\nfunction bringAllWindowsToFront(): void {\n    const modalIds = getModalIds();\n    if (!window.dialogs || !modalIds || !Array.isArray(modalIds)) return;\n\n    modalIds.forEach((id) => {\n        const dialog = window.dialogs?.[id];\n        if (\n            dialog &&\n            dialog.modal &&\n            !dialog.modal.classList.contains('hidden') &&\n            typeof dialog.bringToFront === 'function'\n        ) {\n            dialog.bringToFront();\n        }\n    });\n}\n\n// ============================================================================\n// IIFE Export Pattern - Expose functions globally with guard to prevent redeclaration\n// ============================================================================\n\n(() => {\n    if (typeof window.syncTopZIndexWithDOM !== 'function') {\n        window.syncTopZIndexWithDOM = syncTopZIndexWithDOM;\n    }\n    if (typeof window.bringDialogToFront !== 'function') {\n        window.bringDialogToFront = bringDialogToFront;\n    }\n    if (typeof window.bringAllWindowsToFront !== 'function') {\n        window.bringAllWindowsToFront = bringAllWindowsToFront;\n    }\n})();\n", "(function () {\n    'use strict';\n\n    // ============================================================================\n    // Snap & Window Utilities\n    // ============================================================================\n\n    /**\n     * Get the bottom position of the menu bar (header element).\n     * @returns The bottom edge of the menu bar in pixels.\n     */\n    function getMenuBarBottom(): number {\n        const header = document.querySelector('body > header');\n        if (!header) {\n            return 0;\n        }\n        const rect = header.getBoundingClientRect();\n        return rect.bottom;\n    }\n\n    /**\n     * Clamp a window element so it doesn't overlap the menu bar.\n     * @param target - The element to clamp (e.g., a modal or dialog window).\n     */\n    function clampWindowToMenuBar(target: HTMLElement | null): void {\n        if (!target) return;\n        const minTop = getMenuBarBottom();\n        if (minTop <= 0) return;\n        const computed = window.getComputedStyle(target);\n        if (computed.position === 'static') {\n            target.style.position = 'fixed';\n        }\n        const currentTop = parseFloat(target.style.top);\n        const numericTop = Number.isNaN(currentTop)\n            ? parseFloat(computed.top)\n            : currentTop;\n        if (!Number.isNaN(numericTop) && numericTop < minTop) {\n            target.style.top = `${minTop}px`;\n        } else if (Number.isNaN(numericTop)) {\n            const rect = target.getBoundingClientRect();\n            if (rect.top < minTop) {\n                if (!target.style.left) {\n                    target.style.left = `${rect.left}px`;\n                }\n                target.style.top = `${minTop}px`;\n            }\n        }\n    }\n\n    /**\n     * Compute snap metrics for window snapping (left or right side).\n     * @param side - The side to snap to ('left' or 'right').\n     * @returns Snap metrics (left, top, width, height) or null if invalid.\n     */\n    function computeSnapMetrics(\n        side: 'left' | 'right'\n    ): { left: number; top: number; width: number; height: number } | null {\n        if (side !== 'left' && side !== 'right') return null;\n        const minTop = Math.round(getMenuBarBottom());\n        const viewportWidth = Math.max(window.innerWidth || 0, 0);\n        const viewportHeight = Math.max(window.innerHeight || 0, 0);\n        if (viewportWidth <= 0 || viewportHeight <= 0) return null;\n        const minWidth = Math.min(320, viewportWidth);\n        const halfWidth = Math.round(viewportWidth / 2);\n        const width = Math.max(Math.min(halfWidth, viewportWidth), minWidth);\n        const left = side === 'left' ? 0 : Math.max(0, viewportWidth - width);\n        const top = minTop;\n\n        // Fetch dock reserved bottom height\n        const getDockReservedBottom =\n            (window as unknown as { getDockReservedBottom?: () => number }).getDockReservedBottom;\n        const dockReserve = typeof getDockReservedBottom === 'function' ? getDockReservedBottom() : 0;\n\n        const height = Math.max(0, viewportHeight - top - dockReserve);\n        return { left, top, width, height };\n    }\n\n    let snapPreviewElement: HTMLElement | null = null;\n\n    /**\n     * Ensure the snap preview overlay element exists in the DOM.\n     * @returns The snap preview element or null if DOM is unavailable.\n     */\n    function ensureSnapPreviewElement(): HTMLElement | null {\n        if (snapPreviewElement && snapPreviewElement.isConnected) {\n            return snapPreviewElement;\n        }\n        if (!document || !document.body) {\n            return null;\n        }\n        snapPreviewElement = document.getElementById('snap-preview-overlay');\n        if (!snapPreviewElement) {\n            snapPreviewElement = document.createElement('div');\n            snapPreviewElement.id = 'snap-preview-overlay';\n            snapPreviewElement.setAttribute('aria-hidden', 'true');\n            document.body.appendChild(snapPreviewElement);\n        }\n        return snapPreviewElement;\n    }\n\n    /**\n     * Show a snap preview overlay on the specified side.\n     * @param side - The side to preview snapping ('left' or 'right').\n     */\n    function showSnapPreview(side: 'left' | 'right'): void {\n        const metrics = computeSnapMetrics(side);\n        if (!metrics) {\n            hideSnapPreview();\n            return;\n        }\n        const el = ensureSnapPreviewElement();\n        if (!el) return;\n        el.style.left = `${metrics.left}px`;\n        el.style.top = `${metrics.top}px`;\n        el.style.width = `${metrics.width}px`;\n        el.style.height = `${metrics.height}px`;\n        el.setAttribute('data-side', side);\n        el.classList.add('snap-preview-visible');\n    }\n\n    /**\n     * Hide the snap preview overlay.\n     */\n    function hideSnapPreview(): void {\n        if (!snapPreviewElement || !snapPreviewElement.isConnected) {\n            return;\n        }\n        snapPreviewElement.classList.remove('snap-preview-visible');\n        snapPreviewElement.removeAttribute('data-side');\n    }\n\n    // ============================================================================\n    // Expose globally (guarded to avoid redeclare)\n    // ============================================================================\n\n    type GlobalWindow = typeof window & {\n        getMenuBarBottom?: typeof getMenuBarBottom;\n        clampWindowToMenuBar?: typeof clampWindowToMenuBar;\n        computeSnapMetrics?: typeof computeSnapMetrics;\n        showSnapPreview?: typeof showSnapPreview;\n        hideSnapPreview?: typeof hideSnapPreview;\n    };\n\n    const g = window as GlobalWindow;\n\n    if (typeof g.getMenuBarBottom !== 'function') {\n        g.getMenuBarBottom = getMenuBarBottom;\n    }\n    if (typeof g.clampWindowToMenuBar !== 'function') {\n        g.clampWindowToMenuBar = clampWindowToMenuBar;\n    }\n    if (typeof g.computeSnapMetrics !== 'function') {\n        g.computeSnapMetrics = computeSnapMetrics;\n    }\n    if (typeof g.showSnapPreview !== 'function') {\n        g.showSnapPreview = showSnapPreview;\n    }\n    if (typeof g.hideSnapPreview !== 'function') {\n        g.hideSnapPreview = hideSnapPreview;\n    }\n})();\n", "(function () {\n    'use strict';\n\n    type EditorMessage = { type: string; command?: string; payload?: unknown };\n    type GlobalWindow = {\n        dialogs?: Record<string, { modal?: HTMLElement | null } | undefined>;\n        postToTextEditor?: (msg: EditorMessage) => void;\n        getImageViewerState?: () => { hasImage: boolean; src: string };\n        openActiveImageInNewTab?: () => void;\n        downloadActiveImage?: () => void;\n        sendTextEditorMenuAction?: (command: string) => void;\n    } & Window;\n\n    const gw = (window as unknown as GlobalWindow);\n\n    // --- Text Editor Menu Action Bridge ---\n    function getTextEditorIframe(): HTMLIFrameElement | null {\n        const dialogs = gw.dialogs;\n        const dialog = dialogs ? dialogs['text-modal'] : null;\n        if (!dialog || !dialog.modal) return null;\n        return dialog.modal.querySelector('iframe');\n    }\n\n    function postToTextEditor(message: EditorMessage, attempt = 0): void {\n        if (!message || typeof message !== 'object') return;\n        // Prefer legacy global if available\n        const legacy = gw.postToTextEditor;\n        if (typeof legacy === 'function') {\n            legacy(message);\n            return;\n        }\n        const iframe = getTextEditorIframe();\n        if (iframe && iframe.contentWindow) {\n            let targetOrigin = '*';\n            if (\n                window.location &&\n                typeof window.location.origin === 'string' &&\n                window.location.origin !== 'null'\n            ) {\n                targetOrigin = window.location.origin;\n            }\n            iframe.contentWindow.postMessage(message, targetOrigin);\n            return;\n        }\n        if (attempt < 10) {\n            setTimeout(() => postToTextEditor(message, attempt + 1), 120);\n        } else {\n            console.warn('Texteditor iframe nicht verf\u00FCgbar, Nachricht verworfen.', message);\n        }\n    }\n\n    function sendTextEditorMenuAction(command: string): void {\n        if (!command) return;\n        postToTextEditor({ type: 'textEditor:menuAction', command });\n    }\n\n    // --- Image Viewer Helpers ---\n    function getImageViewerState(): { hasImage: boolean; src: string } {\n        const viewer = document.getElementById('image-viewer') as HTMLImageElement | null;\n        if (!viewer) return { hasImage: false, src: '' };\n        const hidden = viewer.classList.contains('hidden');\n        const src = viewer.getAttribute('src') || viewer.src || '';\n        const hasImage = Boolean(src && src.trim() && !hidden);\n        return { hasImage, src };\n    }\n\n    function openActiveImageInNewTab(): void {\n        const state = getImageViewerState();\n        if (!state.hasImage || !state.src) return;\n        window.open(state.src, '_blank', 'noopener');\n    }\n\n    function downloadActiveImage(): void {\n        const state = getImageViewerState();\n        if (!state.hasImage || !state.src) return;\n        const link = document.createElement('a');\n        link.href = state.src;\n        let fileName = 'bild';\n        try {\n            const url = new URL(state.src, window.location.href);\n            fileName = url.pathname.split('/').pop() || fileName;\n        } catch {\n            fileName = 'bild';\n        }\n        link.download = fileName || 'bild';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    // Export globals (do not override if already present)\n    if (typeof gw.getImageViewerState !== 'function') gw.getImageViewerState = getImageViewerState;\n    if (typeof gw.openActiveImageInNewTab !== 'function') gw.openActiveImageInNewTab = openActiveImageInNewTab;\n    if (typeof gw.downloadActiveImage !== 'function') gw.downloadActiveImage = downloadActiveImage;\n    if (typeof gw.sendTextEditorMenuAction !== 'function') gw.sendTextEditorMenuAction = sendTextEditorMenuAction;\n})();\n", "(function () {\n    'use strict';\n\n    type ProgramInfo = {\n        modalId: string | null;\n        programLabel: string;\n        infoLabel: string;\n        fallbackInfoModalId?: string;\n        icon?: string;\n        about?: { name?: string; tagline?: string; version?: string; copyright?: string };\n    };\n\n    // Resolve Program Info via WindowManager or fallback\n    function resolveProgramInfo(modalId: string | null): ProgramInfo {\n        const wm = (window as unknown as { WindowManager?: { getProgramInfo: (id: string | null) => ProgramInfo } }).WindowManager;\n        if (wm && typeof wm.getProgramInfo === 'function') {\n            return wm.getProgramInfo(modalId);\n        }\n        const translate = (window as unknown as { translate?: (k: string, fb?: string) => string }).translate;\n        const t = (k: string, fb?: string) => (translate ? translate(k, fb) : fb || k);\n        return {\n            modalId: modalId || null,\n            programLabel: t('programs.default.label'),\n            infoLabel: t('programs.default.infoLabel'),\n            fallbackInfoModalId: 'program-info-modal',\n            icon: './img/sucher.png',\n            about: {},\n        };\n    }\n\n    function updateProgramLabel(newLabel: string): void {\n        const programLabel = document.getElementById('program-label');\n        if (programLabel) programLabel.textContent = newLabel;\n    }\n\n    function getTopModal(): HTMLElement | null {\n        const wm = (window as unknown as { WindowManager?: { getTopWindow: () => HTMLElement | null } }).WindowManager;\n        if (wm && typeof wm.getTopWindow === 'function') {\n            return wm.getTopWindow();\n        }\n        let top: HTMLElement | null = null;\n        let highest = 0;\n        document.querySelectorAll<HTMLElement>('.modal:not(.hidden)').forEach((modal) => {\n            const z = parseInt(getComputedStyle(modal).zIndex, 10) || 0;\n            if (z > highest) {\n                highest = z;\n                top = modal;\n            }\n        });\n        return top;\n    }\n\n    function updateProgramInfoMenu(info: ProgramInfo): void {\n        const infoLink = document.getElementById('about-program');\n        if (!infoLink) return;\n        const fallbackInfo = resolveProgramInfo(null);\n        infoLink.textContent = info.infoLabel || fallbackInfo.infoLabel;\n        const el = infoLink as HTMLElement & { dataset: { fallbackInfoModalId?: string } };\n        if (info.fallbackInfoModalId) {\n            el.dataset.fallbackInfoModalId = info.fallbackInfoModalId;\n        } else if (el.dataset) {\n            delete el.dataset.fallbackInfoModalId;\n        }\n    }\n\n    function renderProgramInfo(info: ProgramInfo): void {\n        const modal = document.getElementById('program-info-modal');\n        if (!modal) return;\n        (modal as HTMLElement & { dataset: { infoTarget?: string } }).dataset.infoTarget = info.modalId || '';\n        const fallbackInfo = resolveProgramInfo(null);\n        const about = info.about || fallbackInfo.about || {};\n        const iconEl = modal.querySelector('#program-info-icon') as HTMLImageElement | null;\n        if (iconEl) {\n            if (info.icon) {\n                iconEl.src = info.icon;\n                iconEl.alt = about.name || info.programLabel || 'Programm';\n                iconEl.classList.remove('hidden');\n            } else {\n                iconEl.classList.add('hidden');\n            }\n        }\n        const nameEl = modal.querySelector('#program-info-name');\n        if (nameEl) {\n            nameEl.textContent = about.name || info.programLabel || fallbackInfo.programLabel;\n        }\n        const taglineEl = modal.querySelector('#program-info-tagline');\n        if (taglineEl) {\n            const tagline = about.tagline || '';\n            taglineEl.textContent = tagline;\n            taglineEl.classList.toggle('hidden', !tagline);\n        }\n        const versionEl = modal.querySelector('#program-info-version');\n        if (versionEl) {\n            const version = about.version || '';\n            versionEl.textContent = version;\n            versionEl.classList.toggle('hidden', !version);\n        }\n        const copyrightEl = modal.querySelector('#program-info-copyright');\n        if (copyrightEl) {\n            const copyright = about.copyright || '';\n            copyrightEl.textContent = copyright;\n            copyrightEl.classList.toggle('hidden', !copyright);\n        }\n    }\n\n    function renderApplicationMenu(modalId: string | null): void {\n        const MenuSystem = (window as unknown as { MenuSystem?: { renderApplicationMenu?: (id: string | null) => void } }).MenuSystem;\n        if (MenuSystem && typeof MenuSystem.renderApplicationMenu === 'function') {\n            MenuSystem.renderApplicationMenu(modalId);\n        }\n    }\n\n    function getProgramInfo(modalId: string | null): ProgramInfo {\n        return resolveProgramInfo(modalId);\n    }\n\n    function openProgramInfoDialog(event: Event | null, infoOverride?: ProgramInfo): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const hideMenus = (window as unknown as { hideMenuDropdowns?: () => void }).hideMenuDropdowns;\n        if (hideMenus) hideMenus();\n        const info = infoOverride || currentProgramInfo || getProgramInfo(null);\n        currentProgramInfo = info;\n        const infoEvent = new CustomEvent('programInfoRequested', {\n            detail: { modalId: info.modalId, info },\n            cancelable: true,\n        });\n        const dispatchResult = window.dispatchEvent(infoEvent);\n        if (!dispatchResult) return;\n        const fallbackId = info.fallbackInfoModalId;\n        if (!fallbackId) return;\n        if (fallbackId === 'program-info-modal') {\n            renderProgramInfo(info);\n        }\n        const dialogs = (window as unknown as { dialogs?: Record<string, { open?: () => void }> }).dialogs;\n        const dialogInstance = dialogs && dialogs[fallbackId];\n        if (dialogInstance && typeof dialogInstance.open === 'function') {\n            dialogInstance.open();\n        } else {\n            const modalElement = document.getElementById(fallbackId);\n            if (modalElement) {\n                modalElement.classList.remove('hidden');\n                const bringToFront = (window as unknown as { dialogs?: Record<string, { bringToFront?: () => void }> }).dialogs?.[fallbackId]?.bringToFront;\n                if (bringToFront) bringToFront();\n                updateProgramLabelByTopModal();\n            }\n        }\n    }\n\n    function openProgramInfoFromMenu(targetModalId?: string | null): void {\n        const info = resolveProgramInfo(targetModalId || null);\n        openProgramInfoDialog(null, info);\n    }\n\n    let currentProgramInfo: ProgramInfo = resolveProgramInfo(null);\n\n    function updateProgramLabelByTopModal(): ProgramInfo {\n        const topModal = getTopModal();\n        const wm = (window as unknown as { WindowManager?: { getConfig: (id: string) => { metadata?: { skipMenubarUpdate?: boolean } } | null } }).WindowManager;\n        if (topModal && wm) {\n            const config = wm.getConfig(topModal.id);\n            if (config && config.metadata && config.metadata.skipMenubarUpdate) {\n                const all = Array.from(document.querySelectorAll<HTMLElement>('.modal:not(.hidden)'));\n                const sorted = all.sort((a, b) => (parseInt(getComputedStyle(b).zIndex, 10) || 0) - (parseInt(getComputedStyle(a).zIndex, 10) || 0));\n                let next: HTMLElement | null = null;\n                for (const m of sorted) {\n                    const mc = wm.getConfig(m.id);\n                    if (!mc || !mc.metadata || !mc.metadata.skipMenubarUpdate) {\n                        next = m;\n                        break;\n                    }\n                }\n                if (next) {\n                    const info = getProgramInfo(next.id);\n                    currentProgramInfo = info;\n                    updateProgramLabel(info.programLabel);\n                    updateProgramInfoMenu(info);\n                    renderApplicationMenu(next.id);\n                    return info;\n                }\n            }\n        }\n        let info: ProgramInfo;\n        if (topModal && topModal.id === 'program-info-modal' && currentProgramInfo && currentProgramInfo.modalId) {\n            info = resolveProgramInfo(currentProgramInfo.modalId);\n            currentProgramInfo = info;\n        } else {\n            info = getProgramInfo(topModal ? topModal.id : null);\n            currentProgramInfo = info;\n        }\n        updateProgramLabel(info.programLabel);\n        updateProgramInfoMenu(info);\n        renderApplicationMenu(topModal ? topModal.id : null);\n        return info;\n    }\n\n    // React to language/theme changes similar to legacy\n    // Avoid double-binding if legacy already wired these listeners\n    const alreadyWired = (window as unknown as { __programMenuSyncWired?: boolean }).__programMenuSyncWired;\n    if (!alreadyWired) {\n        (window as unknown as { __programMenuSyncWired?: boolean }).__programMenuSyncWired = true;\n    }\n\n    if (!alreadyWired) window.addEventListener('languagePreferenceChange', () => {\n        const info = updateProgramLabelByTopModal();\n        const programInfoModal = document.getElementById('program-info-modal') as HTMLElement | null;\n        if (programInfoModal && !programInfoModal.classList.contains('hidden')) {\n            const ds: DOMStringMap = programInfoModal.dataset;\n            const targetId = ds['infoTarget'] || (info ? info.modalId : null) || null;\n            const infoForDialog = resolveProgramInfo(targetId);\n            renderProgramInfo(infoForDialog);\n            if (info && info.modalId === infoForDialog.modalId) {\n                currentProgramInfo = infoForDialog;\n            }\n        }\n        const updateAllSystemStatusUI = (window as unknown as { updateAllSystemStatusUI?: () => void }).updateAllSystemStatusUI;\n        if (updateAllSystemStatusUI) updateAllSystemStatusUI();\n    });\n    if (!alreadyWired) window.addEventListener('themePreferenceChange', () => {\n        const updateAllSystemStatusUI = (window as unknown as { updateAllSystemStatusUI?: () => void }).updateAllSystemStatusUI;\n        if (updateAllSystemStatusUI) updateAllSystemStatusUI();\n    });\n\n    // Export legacy globals for compatibility\n    (window as unknown as { updateProgramLabelByTopModal: typeof updateProgramLabelByTopModal }).updateProgramLabelByTopModal = updateProgramLabelByTopModal;\n    (window as unknown as { openProgramInfoFromMenu: typeof openProgramInfoFromMenu }).openProgramInfoFromMenu = openProgramInfoFromMenu;\n})();\n", "/*\r\n * src/ts/menu.ts\r\n * Typed port of js/menu.js\r\n */\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\n// Allow dynamic access on window via string keys for legacy globals\r\ndeclare global {\r\n    interface Window {\r\n        [key: string]: any;\r\n    }\r\n}\r\n\r\ntype MenuHandler = (...args: any[]) => unknown;\r\nconst menuActionHandlers = new Map<string, MenuHandler>();\r\nlet menuActionIdCounter = 0;\r\n\r\ntype MenuContext = {\r\n    modalId?: string;\r\n    dialog?: { close?: () => void; minimize?: () => void; toggleMaximize?: () => void } | null;\r\n} | null;\r\n\r\nexport function registerMenuAction(handler: MenuHandler) {\r\n    if (typeof handler !== 'function') return null;\r\n    const actionId = `menu-action-${++menuActionIdCounter}`;\r\n    menuActionHandlers.set(actionId, handler);\r\n    return actionId;\r\n}\r\n\r\nexport function normalizeMenuItems(items: unknown[], context: MenuContext) {\r\n    if (!Array.isArray(items)) return [];\r\n    const normalized: Record<string, unknown>[] = [];\r\n    let previousWasSeparator = true;\r\n    items.forEach(raw => {\r\n        const item = raw as any;\r\n        if (!item) return;\r\n        if (item.type === 'separator') {\r\n            if (previousWasSeparator) return;\r\n            normalized.push({ type: 'separator' });\r\n            previousWasSeparator = true;\r\n            return;\r\n        }\r\n        const clone = Object.assign({}, item) as Record<string, unknown>;\r\n        if (typeof item.disabled === 'function')\r\n            (clone.disabled as unknown) = (item.disabled as (ctx: MenuContext) => boolean)(context);\r\n        if (typeof item.label === 'function')\r\n            (clone.label as unknown) = (item.label as (ctx: MenuContext) => string)(context);\r\n        if (typeof item.shortcut === 'function')\r\n            (clone.shortcut as unknown) = (item.shortcut as (ctx: MenuContext) => string)(context);\r\n        normalized.push(clone);\r\n        previousWasSeparator = false;\r\n    });\r\n    while (normalized.length && normalized[normalized.length - 1]?.type === 'separator')\r\n        normalized.pop();\r\n    return normalized;\r\n}\r\n\r\n// --- Menu builders (ported functions simplified to reference window helpers) ---\r\nfunction buildDefaultMenuDefinition(context: MenuContext) {\r\n    return buildFinderMenuDefinition(context);\r\n}\r\n\r\nfunction buildFinderMenuDefinition(context: MenuContext) {\r\n    return [\r\n        {\r\n            id: 'file',\r\n            label: () => translate('menu.sections.file'),\r\n            items: [\r\n                {\r\n                    id: 'finder-new-window',\r\n                    label: () => translate('menu.finder.newWindow'),\r\n                    shortcut: '\u2318N',\r\n                    icon: 'new',\r\n                    action: () => {\r\n                        const mgr = window['FinderInstanceManager'];\r\n                        if (mgr && typeof mgr.createInstance === 'function') {\r\n                            const count = mgr.getInstanceCount\r\n                                ? mgr.getInstanceCount()\r\n                                : mgr.getAllInstances?.().length || 0;\r\n                            mgr.createInstance({ title: `Finder ${count + 1}` });\r\n                        }\r\n                    },\r\n                },\r\n                {\r\n                    id: 'finder-reload',\r\n                    label: () => translate('menu.finder.reload'),\r\n                    shortcut: '\u2318R',\r\n                    icon: 'reload',\r\n                    action: () => {\r\n                        if (\r\n                            window['FinderSystem'] &&\r\n                            typeof window['FinderSystem'].navigateTo === 'function'\r\n                        ) {\r\n                            try {\r\n                                const st =\r\n                                    window['FinderSystem'].getState &&\r\n                                    window['FinderSystem'].getState();\r\n                                if (st && Array.isArray(st.githubRepos)) st.githubRepos = [];\r\n                                window['FinderSystem'].navigateTo([], 'github');\r\n                            } catch (e) {\r\n                                console.warn('Finder reload failed', e);\r\n                            }\r\n                        }\r\n                    },\r\n                },\r\n                { type: 'separator' },\r\n                {\r\n                    id: 'finder-close',\r\n                    label: () => translate('menu.finder.close'),\r\n                    shortcut: '\u2318W',\r\n                    disabled: () => !(context && context.dialog),\r\n                    icon: 'close',\r\n                    action: () => closeContextWindow(context),\r\n                },\r\n            ],\r\n        },\r\n        createWindowMenuSection(context),\r\n        createHelpMenuSection(context, {\r\n            itemKey: 'menu.finder.help',\r\n            infoModalId: 'finder-modal',\r\n            itemIcon: 'help',\r\n        }),\r\n    ];\r\n}\r\n\r\nfunction buildSettingsMenuDefinition(context: MenuContext) {\r\n    return [\r\n        {\r\n            id: 'file',\r\n            label: () => translate('menu.sections.file'),\r\n            items: [\r\n                {\r\n                    id: 'settings-close',\r\n                    label: () => translate('menu.settings.close'),\r\n                    shortcut: '\u2318W',\r\n                    disabled: () => !(context && context.dialog),\r\n                    icon: 'close',\r\n                    action: () => closeContextWindow(context),\r\n                },\r\n            ],\r\n        },\r\n        createWindowMenuSection(context),\r\n        createHelpMenuSection(context, {\r\n            itemKey: 'menu.settings.help',\r\n            infoModalId: 'settings-modal',\r\n            itemIcon: 'help',\r\n        }),\r\n    ];\r\n}\r\n\r\nfunction buildTextEditorMenuDefinition(context: MenuContext) {\r\n    return [\r\n        {\r\n            id: 'file',\r\n            label: () => translate('menu.sections.file'),\r\n            items: [\r\n                {\r\n                    id: 'text-new',\r\n                    label: () => translate('menu.text.newFile'),\r\n                    shortcut: '\u2318N',\r\n                    icon: 'newFile',\r\n                    action: () => sendTextEditorMenuAction('file:new'),\r\n                },\r\n                {\r\n                    id: 'text-open',\r\n                    label: () => translate('menu.text.open'),\r\n                    shortcut: '\u2318O',\r\n                    icon: 'open',\r\n                    action: () => sendTextEditorMenuAction('file:open'),\r\n                },\r\n                {\r\n                    id: 'text-save',\r\n                    label: () => translate('menu.text.save'),\r\n                    shortcut: '\u2318S',\r\n                    icon: 'save',\r\n                    action: () => sendTextEditorMenuAction('file:save'),\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'edit',\r\n            label: () => translate('menu.sections.edit'),\r\n            items: [\r\n                {\r\n                    id: 'text-undo',\r\n                    label: () => translate('menu.text.undo'),\r\n                    shortcut: '\u2318Z',\r\n                    icon: 'undo',\r\n                    action: () => sendTextEditorMenuAction('edit:undo'),\r\n                },\r\n                {\r\n                    id: 'text-redo',\r\n                    label: () => translate('menu.text.redo'),\r\n                    shortcut: '\u21E7\u2318Z',\r\n                    icon: 'redo',\r\n                    action: () => sendTextEditorMenuAction('edit:redo'),\r\n                },\r\n                { type: 'separator' },\r\n                {\r\n                    id: 'text-cut',\r\n                    label: () => translate('menu.text.cut'),\r\n                    shortcut: '\u2318X',\r\n                    icon: 'cut',\r\n                    action: () => sendTextEditorMenuAction('edit:cut'),\r\n                },\r\n                {\r\n                    id: 'text-copy',\r\n                    label: () => translate('menu.text.copy'),\r\n                    shortcut: '\u2318C',\r\n                    icon: 'copy',\r\n                    action: () => sendTextEditorMenuAction('edit:copy'),\r\n                },\r\n                {\r\n                    id: 'text-paste',\r\n                    label: () => translate('menu.text.paste'),\r\n                    shortcut: '\u2318V',\r\n                    icon: 'paste',\r\n                    action: () => sendTextEditorMenuAction('edit:paste'),\r\n                },\r\n                { type: 'separator' },\r\n                {\r\n                    id: 'text-select-all',\r\n                    label: () => translate('menu.text.selectAll'),\r\n                    shortcut: '\u2318A',\r\n                    icon: 'selectAll',\r\n                    action: () => sendTextEditorMenuAction('edit:selectAll'),\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'view',\r\n            label: () => translate('menu.sections.view'),\r\n            items: [\r\n                {\r\n                    id: 'text-toggle-wrap',\r\n                    label: () => translate('menu.text.toggleWrap'),\r\n                    shortcut: '\u2325\u2318W',\r\n                    icon: 'wrap',\r\n                    action: () => sendTextEditorMenuAction('view:toggleWrap'),\r\n                },\r\n            ],\r\n        },\r\n        createWindowMenuSection(context),\r\n        createHelpMenuSection(context, {\r\n            itemKey: 'menu.text.help',\r\n            infoModalId: 'text-modal',\r\n            itemIcon: 'help',\r\n        }),\r\n    ];\r\n}\r\n\r\nfunction buildImageViewerMenuDefinition(context: MenuContext) {\r\n    const state = window['getImageViewerState']\r\n        ? window['getImageViewerState']()\r\n        : { hasImage: false };\r\n    return [\r\n        {\r\n            id: 'file',\r\n            label: () => translate('menu.sections.file'),\r\n            items: [\r\n                {\r\n                    id: 'image-open-tab',\r\n                    label: () => translate('menu.image.openInTab'),\r\n                    disabled: !state.hasImage,\r\n                    icon: 'imageOpen',\r\n                    action: () => {\r\n                        if (window['openActiveImageInNewTab']) window['openActiveImageInNewTab']();\r\n                    },\r\n                },\r\n                {\r\n                    id: 'image-download',\r\n                    label: () => translate('menu.image.saveImage'),\r\n                    disabled: !state.hasImage,\r\n                    icon: 'download',\r\n                    action: () => {\r\n                        if (window['downloadActiveImage']) window['downloadActiveImage']();\r\n                    },\r\n                },\r\n                { type: 'separator' },\r\n                {\r\n                    id: 'image-close',\r\n                    label: () => translate('menu.image.close'),\r\n                    shortcut: '\u2318W',\r\n                    disabled: () => !(context && context.dialog),\r\n                    icon: 'close',\r\n                    action: () => closeContextWindow(context),\r\n                },\r\n            ],\r\n        },\r\n        createWindowMenuSection(context),\r\n        createHelpMenuSection(context, {\r\n            itemKey: 'menu.image.help',\r\n            infoModalId: 'image-modal',\r\n            itemIcon: 'help',\r\n        }),\r\n    ];\r\n}\r\n\r\nfunction buildAboutMenuDefinition(context: MenuContext) {\r\n    return [\r\n        {\r\n            id: 'file',\r\n            label: () => translate('menu.sections.file'),\r\n            items: [\r\n                {\r\n                    id: 'about-close',\r\n                    label: () => translate('menu.about.close'),\r\n                    shortcut: '\u2318W',\r\n                    disabled: () => !(context && context.dialog),\r\n                    icon: 'close',\r\n                    action: () => closeContextWindow(context),\r\n                },\r\n            ],\r\n        },\r\n        createWindowMenuSection(context),\r\n        createHelpMenuSection(context, {\r\n            itemKey: 'menu.about.help',\r\n            infoModalId: 'about-modal',\r\n            itemIcon: 'info',\r\n        }),\r\n    ];\r\n}\r\n\r\nfunction buildProgramInfoMenuDefinition(context: MenuContext) {\r\n    return [\r\n        {\r\n            id: 'file',\r\n            label: () => translate('menu.sections.file'),\r\n            items: [\r\n                {\r\n                    id: 'program-info-close',\r\n                    label: () => translate('menu.programInfo.close'),\r\n                    shortcut: '\u2318W',\r\n                    disabled: () => !(context && context.dialog),\r\n                    icon: 'close',\r\n                    action: () => closeContextWindow(context),\r\n                },\r\n            ],\r\n        },\r\n        createWindowMenuSection(context),\r\n    ];\r\n}\r\n\r\nfunction buildTerminalMenuDefinition(context: any) {\r\n    return [\r\n        {\r\n            id: 'file',\r\n            label: () => translate('menu.sections.file'),\r\n            items: [\r\n                {\r\n                    id: 'terminal-new-window',\r\n                    label: () => translate('menu.terminal.newWindow'),\r\n                    shortcut: '\u2318N',\r\n                    icon: 'terminal',\r\n                    action: () => {\r\n                        if (\r\n                            window['TerminalInstanceManager'] &&\r\n                            typeof window['TerminalInstanceManager'].createInstance === 'function'\r\n                        )\r\n                            window['TerminalInstanceManager'].createInstance();\r\n                    },\r\n                },\r\n                { type: 'separator' },\r\n                {\r\n                    id: 'terminal-close',\r\n                    label: () => translate('menu.terminal.close'),\r\n                    shortcut: '\u2318W',\r\n                    disabled: () => !(context && context.dialog),\r\n                    icon: 'close',\r\n                    action: () => closeContextWindow(context),\r\n                },\r\n            ],\r\n        },\r\n        {\r\n            id: 'edit',\r\n            label: () => translate('menu.sections.edit'),\r\n            items: [\r\n                {\r\n                    id: 'terminal-clear',\r\n                    label: () => translate('menu.terminal.clear'),\r\n                    shortcut: '\u2318K',\r\n                    icon: 'clear',\r\n                    action: () => {\r\n                        if (context && context.instanceId && window['TerminalInstanceManager']) {\r\n                            const instance = window['TerminalInstanceManager'].getInstance(\r\n                                context.instanceId\r\n                            );\r\n                            if (instance && instance.clearOutput) instance.clearOutput();\r\n                        }\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n        createWindowMenuSection(context),\r\n        createHelpMenuSection(context, {\r\n            itemKey: 'menu.terminal.help',\r\n            infoModalId: 'terminal-modal',\r\n            itemIcon: 'help',\r\n        }),\r\n    ];\r\n}\r\n\r\nfunction createWindowMenuSection(context: MenuContext) {\r\n    return {\r\n        id: 'window',\r\n        label: () => translate('menu.sections.window'),\r\n        items: getWindowMenuItems(context),\r\n    };\r\n}\r\n\r\nfunction getWindowMenuItems(context: MenuContext) {\r\n    const dialog = context && (context.dialog as any);\r\n    const hasDialog = Boolean(dialog && typeof dialog.close === 'function');\r\n    const items: any[] = [\r\n        {\r\n            id: 'window-minimize',\r\n            label: () => translate('menu.window.minimize'),\r\n            shortcut: '\u2318M',\r\n            disabled: !hasDialog,\r\n            icon: 'windowMinimize',\r\n            action: () => {\r\n                if (dialog && typeof dialog.minimize === 'function') dialog.minimize();\r\n            },\r\n        },\r\n        {\r\n            id: 'window-zoom',\r\n            label: () => translate('menu.window.zoom'),\r\n            shortcut: '\u2303\u2318F',\r\n            disabled: !hasDialog,\r\n            icon: 'windowZoom',\r\n            action: () => {\r\n                if (dialog && typeof dialog.toggleMaximize === 'function') dialog.toggleMaximize();\r\n            },\r\n        },\r\n    ];\r\n    const multiInstanceItems = getMultiInstanceMenuItems(context);\r\n    if (multiInstanceItems.length > 0) {\r\n        items.push({ type: 'separator' });\r\n        items.push(...multiInstanceItems);\r\n    }\r\n    items.push(\r\n        { type: 'separator' },\r\n        {\r\n            id: 'window-all-front',\r\n            label: () => translate('menu.window.bringToFront'),\r\n            disabled: !hasAnyVisibleDialog(),\r\n            icon: 'windowFront',\r\n            action: () => {\r\n                if (window['bringAllWindowsToFront']) window['bringAllWindowsToFront']();\r\n            },\r\n        },\r\n        { type: 'separator' },\r\n        {\r\n            id: 'window-close',\r\n            label: () => translate('menu.window.close'),\r\n            shortcut: '\u2318W',\r\n            disabled: !hasDialog,\r\n            icon: 'close',\r\n            action: () => closeContextWindow(context),\r\n        }\r\n    );\r\n    return items;\r\n}\r\n\r\nfunction getMultiInstanceMenuItems(context: MenuContext) {\r\n    const items: any[] = [];\r\n    let manager: any = null;\r\n    let typeLabel: string | null = null;\r\n    let newInstanceKey: string | null = null;\r\n    const modalId = context?.modalId;\r\n    if (\r\n        (modalId === 'finder-modal' || modalId === 'projects-modal') &&\r\n        window['FinderInstanceManager']\r\n    ) {\r\n        manager = window['FinderInstanceManager'];\r\n        typeLabel = 'Finder';\r\n        newInstanceKey = 'menu.window.newFinder';\r\n    } else if (modalId === 'terminal-modal' && window['TerminalInstanceManager']) {\r\n        manager = window['TerminalInstanceManager'];\r\n        typeLabel = 'Terminal';\r\n        newInstanceKey = 'menu.window.newTerminal';\r\n    } else if (modalId === 'text-modal' && window['TextEditorInstanceManager']) {\r\n        manager = window['TextEditorInstanceManager'];\r\n        typeLabel = 'Editor';\r\n        newInstanceKey = 'menu.window.newEditor';\r\n    }\r\n    if (!manager) return items;\r\n    items.push({\r\n        id: 'window-new-instance',\r\n        label: () => translate(newInstanceKey || 'menu.window.newWindow'),\r\n        shortcut: '\u2318N',\r\n        icon: 'new',\r\n        action: () => {\r\n            const count = manager.getInstanceCount();\r\n            manager.createInstance({ title: `${typeLabel} ${count + 1}` } as any);\r\n        },\r\n    });\r\n    const instances = manager.getAllInstances();\r\n    if (instances.length > 1) {\r\n        items.push({ type: 'separator' });\r\n        instances.forEach((instance: any, index: number) => {\r\n            const isActive = manager.getActiveInstance()?.instanceId === instance.instanceId;\r\n            // Normalize label to always include index-based numbering for stable UI/test selection\r\n            const numberLabel = `${typeLabel} ${index + 1}`;\r\n            items.push({\r\n                id: `window-instance-${instance.instanceId}`,\r\n                label: () => `${isActive ? '\u2713 ' : ''}${numberLabel}`,\r\n                shortcut: index < 9 ? `\u2318${index + 1}` : undefined,\r\n                action: () => {\r\n                    manager.setActiveInstance(instance.instanceId);\r\n                    // Also update visibility via MultiInstanceIntegration\r\n                    const integration = (window as any).multiInstanceIntegration;\r\n                    if (integration && typeof integration.updateInstanceVisibility === 'function') {\r\n                        // Determine type based on manager\r\n                        let type: string | null = null;\r\n                        if (manager === (window as any).FinderInstanceManager) type = 'finder';\r\n                        else if (manager === (window as any).TerminalInstanceManager)\r\n                            type = 'terminal';\r\n                        else if (manager === (window as any).TextEditorInstanceManager)\r\n                            type = 'text-editor';\r\n\r\n                        if (type) {\r\n                            integration.updateInstanceVisibility(type);\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n        });\r\n        items.push(\r\n            { type: 'separator' },\r\n            {\r\n                id: 'window-close-all',\r\n                label: () => translate('menu.window.closeAll'),\r\n                icon: 'close',\r\n                action: () => {\r\n                    const base = translate('menu.window.closeAllConfirm');\r\n                    const confirmMsg =\r\n                        typeof base === 'string' && base !== 'menu.window.closeAllConfirm'\r\n                            ? base\r\n                            : `Close all ${typeLabel} (${instances.length})?`;\r\n                    if (confirm(confirmMsg)) {\r\n                        manager.destroyAllInstances();\r\n                        // If we closed all instances for a modal-backed window, also hide the modal\r\n                        const targetModal = (context as any)?.modalId;\r\n                        if (targetModal) {\r\n                            if (typeof window['API']?.window?.close === 'function') {\r\n                                window['API'].window.close(targetModal);\r\n                            } else {\r\n                                const el = document.getElementById(targetModal);\r\n                                if (el && !el.classList.contains('hidden')) {\r\n                                    const domUtils = (window as any).DOMUtils;\r\n                                    if (domUtils && typeof domUtils.hide === 'function') {\r\n                                        domUtils.hide(el);\r\n                                    } else {\r\n                                        el.classList.add('hidden');\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n            }\r\n        );\r\n    }\r\n    return items;\r\n}\r\n\r\nfunction createHelpMenuSection(context: any, overrides: any = {}) {\r\n    const sectionKey = overrides.sectionKey || 'menu.sections.help';\r\n    const itemKey = overrides.itemKey || 'menu.help.showHelp';\r\n    const infoModalId = overrides.infoModalId || context.modalId || null;\r\n    return {\r\n        id: overrides.id || 'help',\r\n        label: () => translate(sectionKey),\r\n        items: [\r\n            {\r\n                id: 'help-show-info',\r\n                label: () => translate(itemKey),\r\n                icon: overrides.itemIcon || 'help',\r\n                action: () => {\r\n                    if (window['openProgramInfoFromMenu'])\r\n                        window['openProgramInfoFromMenu'](infoModalId);\r\n                },\r\n            },\r\n        ],\r\n    };\r\n}\r\n\r\n// --- Rendering ---\r\nconst menuDefinitions: any = {\r\n    default: buildDefaultMenuDefinition,\r\n    'finder-modal': buildFinderMenuDefinition,\r\n    'projects-modal': buildFinderMenuDefinition,\r\n    'settings-modal': buildSettingsMenuDefinition,\r\n    'text-modal': buildTextEditorMenuDefinition,\r\n    'image-modal': buildImageViewerMenuDefinition,\r\n    'about-modal': buildAboutMenuDefinition,\r\n    'program-info-modal': buildProgramInfoMenuDefinition,\r\n    'terminal-modal': buildTerminalMenuDefinition,\r\n};\r\n\r\nlet currentMenuModalId: string | null = null;\r\n\r\nexport function renderApplicationMenu(activeModalId?: string | null) {\r\n    const container = document.getElementById('menubar-links');\r\n    if (!container) return;\r\n    const modalKey = activeModalId && menuDefinitions[activeModalId] ? activeModalId : 'default';\r\n    const builder = menuDefinitions[modalKey] || menuDefinitions.default;\r\n    const context = createMenuContext(activeModalId || null);\r\n    const sections =\r\n        typeof builder === 'function' ? builder(context) : Array.isArray(builder) ? builder : [];\r\n    container.innerHTML = '';\r\n    menuActionHandlers.clear();\r\n    menuActionIdCounter = 0;\r\n    currentMenuModalId = activeModalId || null;\r\n    if (!Array.isArray(sections) || sections.length === 0) return;\r\n    sections.forEach((section: any, sectionIndex: number) => {\r\n        if (!section) return;\r\n        const items = normalizeMenuItems(section.items, context);\r\n        if (!items.length) return;\r\n        const trigger = document.createElement('div');\r\n        trigger.className = 'menubar-trigger';\r\n        const button = document.createElement('button');\r\n        button.type = 'button';\r\n        button.className = 'menubar-item';\r\n        button.dataset.menubarTriggerButton = 'true';\r\n        const label = typeof section.label === 'function' ? section.label(context) : section.label;\r\n        button.textContent = label || '';\r\n        const sectionId = section.id || `section-${sectionIndex}`;\r\n        const buttonId = `menubar-menu-${sectionId}`;\r\n        const dropdownId = `menu-dropdown-${sectionId}`;\r\n        button.id = buttonId;\r\n        button.setAttribute('aria-haspopup', 'menu');\r\n        button.setAttribute('aria-expanded', 'false');\r\n        button.setAttribute('aria-controls', dropdownId);\r\n        const dropdown = document.createElement('ul');\r\n        dropdown.id = dropdownId;\r\n        dropdown.className = 'menu-dropdown hidden';\r\n        dropdown.setAttribute('role', 'menu');\r\n        dropdown.setAttribute('aria-labelledby', buttonId);\r\n        items.forEach(item => {\r\n            if (item.type === 'separator') {\r\n                const separator = document.createElement('li');\r\n                separator.className = 'menu-separator';\r\n                separator.setAttribute('role', 'separator');\r\n                separator.setAttribute('aria-hidden', 'true');\r\n                dropdown.appendChild(separator);\r\n                return;\r\n            }\r\n            const li = document.createElement('li');\r\n            li.setAttribute('role', 'none');\r\n            const tagName = item.href ? 'a' : 'button';\r\n            const actionEl = document.createElement(tagName) as any;\r\n            actionEl.className = 'menu-item';\r\n            if (tagName === 'button') actionEl.type = 'button';\r\n            else {\r\n                actionEl.href = item.href;\r\n                if (item.external) {\r\n                    actionEl.rel = 'noopener noreferrer';\r\n                    actionEl.target = '_blank';\r\n                }\r\n            }\r\n            const itemLabel =\r\n                item.label !== null\r\n                    ? typeof item.label === 'function'\r\n                        ? item.label(context)\r\n                        : item.label\r\n                    : '';\r\n            const labelSpan = document.createElement('span');\r\n            labelSpan.className = 'menu-item-label';\r\n            if (item.icon && (window as any).IconSystem) {\r\n                const iconSpan = document.createElement('span');\r\n                iconSpan.className = 'menu-item-icon';\r\n                const iconSvg = (window as any).IconSystem.getMenuIconSvg\r\n                    ? (window as any).IconSystem.getMenuIconSvg(item.icon)\r\n                    : '';\r\n                if ((window as any).IconSystem.renderIconIntoElement)\r\n                    (window as any).IconSystem.renderIconIntoElement(iconSpan, iconSvg, item.icon);\r\n                labelSpan.appendChild(iconSpan);\r\n            }\r\n            labelSpan.appendChild(document.createTextNode(itemLabel));\r\n            actionEl.appendChild(labelSpan);\r\n            if (item.shortcut) {\r\n                const shortcutSpan = document.createElement('span');\r\n                shortcutSpan.className = 'menu-item-shortcut';\r\n                shortcutSpan.textContent =\r\n                    typeof item.shortcut === 'function' ? item.shortcut() : item.shortcut;\r\n                actionEl.appendChild(shortcutSpan);\r\n            }\r\n            actionEl.setAttribute('role', 'menuitem');\r\n            if (item.title) actionEl.title = item.title;\r\n            const isDisabled = Boolean(item.disabled);\r\n            if (isDisabled) {\r\n                actionEl.setAttribute('aria-disabled', 'true');\r\n                if (tagName === 'button') actionEl.disabled = true;\r\n            } else if (typeof item.action === 'function') {\r\n                const actionId = registerMenuAction(item.action as MenuHandler);\r\n                if (actionId) actionEl.dataset.menuAction = actionId;\r\n            }\r\n            if (item.href && typeof item.onClick === 'function') {\r\n                actionEl.addEventListener('click', (event: Event) => {\r\n                    const result = (item.onClick as (e: Event) => boolean | void)(event);\r\n                    if (result === false) event.preventDefault();\r\n                });\r\n            }\r\n            li.appendChild(actionEl);\r\n            dropdown.appendChild(li);\r\n        });\r\n        if (!dropdown.childElementCount) return;\r\n        trigger.appendChild(button);\r\n        trigger.appendChild(dropdown);\r\n        container.appendChild(trigger);\r\n        if ((window as any).bindDropdownTrigger)\r\n            (window as any).bindDropdownTrigger(button, { hoverRequiresOpen: true });\r\n    });\r\n}\r\n\r\nexport function handleMenuActionActivation(event: Event) {\r\n    const target =\r\n        event.target instanceof Element\r\n            ? (event.target as Element).closest('[data-menu-action]')\r\n            : null;\r\n    if (!target) return;\r\n    const actionId = target.getAttribute('data-menu-action');\r\n    const handler = actionId ? menuActionHandlers.get(actionId) : null;\r\n    if (typeof handler !== 'function') return;\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if ((window as any).hideMenuDropdowns) (window as any).hideMenuDropdowns();\r\n    try {\r\n        handler();\r\n    } catch (err) {\r\n        console.error('Error executing menu action:', err);\r\n    }\r\n}\r\n\r\nfunction closeContextWindow(context: any) {\r\n    const dialog = context && context.dialog;\r\n    if (dialog && typeof dialog.close === 'function') dialog.close();\r\n}\r\n\r\nfunction hasAnyVisibleDialog() {\r\n    if (!window['dialogs']) return false;\r\n    return Object.values(window['dialogs']).some((d: any) =>\r\n        d && typeof d.isOpen === 'function' ? d.isOpen() : Boolean(d && d.isOpen)\r\n    );\r\n}\r\n\r\nfunction sendTextEditorMenuAction(actionType: string) {\r\n    if ((window as any).sendTextEditorMenuAction)\r\n        (window as any).sendTextEditorMenuAction(actionType);\r\n}\r\n\r\nfunction createMenuContext(modalId: string | null) {\r\n    const w = window as any;\r\n    // Allow external override but avoid self-recursion when this function is\r\n    // hoisted onto window as a global in non-module script context.\r\n    if (w.createMenuContext && w.createMenuContext !== (createMenuContext as any)) {\r\n        try {\r\n            return w.createMenuContext(modalId);\r\n        } catch (e) {\r\n            console.warn('[Menu] createMenuContext override threw; falling back', e);\r\n        }\r\n    }\r\n    return { modalId: modalId, dialog: null };\r\n}\r\n\r\nfunction translate(key: string, fallback?: string) {\r\n    if ((window as any).appI18n && typeof (window as any).appI18n.translate === 'function') {\r\n        const result = (window as any).appI18n.translate(key);\r\n        if (result === key && fallback) return fallback;\r\n        return result;\r\n    }\r\n    return fallback || key;\r\n}\r\n\r\nexport function refreshCurrentMenu() {\r\n    renderApplicationMenu(currentMenuModalId);\r\n}\r\n\r\nexport function setupInstanceManagerListeners() {\r\n    const managers = [\r\n        window['FinderInstanceManager'],\r\n        window['TerminalInstanceManager'],\r\n        window['TextEditorInstanceManager'],\r\n    ];\r\n    managers.forEach(manager => {\r\n        if (!manager || !manager.getAllInstances) return;\r\n        const originalCreate = manager.createInstance;\r\n        const originalDestroy = manager.destroyInstance;\r\n        const originalDestroyAll = manager.destroyAllInstances;\r\n        if (originalCreate)\r\n            manager.createInstance = function (...args: any[]) {\r\n                const result = originalCreate.apply(this, args);\r\n                if (result) setTimeout(refreshCurrentMenu, 50);\r\n                return result;\r\n            };\r\n        if (originalDestroy)\r\n            manager.destroyInstance = function (...args: any[]) {\r\n                const result = originalDestroy.apply(this, args);\r\n                setTimeout(refreshCurrentMenu, 50);\r\n                return result;\r\n            };\r\n        if (originalDestroyAll)\r\n            manager.destroyAllInstances = function (...args: any[]) {\r\n                const result = originalDestroyAll.apply(this, args);\r\n                setTimeout(refreshCurrentMenu, 50);\r\n                return result;\r\n            };\r\n    });\r\n}\r\n\r\nif (document.readyState === 'loading')\r\n    document.addEventListener('DOMContentLoaded', setupInstanceManagerListeners);\r\nelse setTimeout(setupInstanceManagerListeners, 100);\r\n\r\n// Export\r\ndeclare global {\r\n    interface Window {\r\n        MenuSystem?: any;\r\n    }\r\n}\r\n(window as any).MenuSystem = {\r\n    renderApplicationMenu,\r\n    handleMenuActionActivation,\r\n    menuDefinitions,\r\n    getCurrentMenuModalId: () => currentMenuModalId,\r\n};\r\nconsole.log('\u2705 MenuSystem loaded');\r\n\r\nexport default {};\r\n\r\n", "/*\r\n * src/ts/dock.ts\r\n * Typed port of js/dock.js\r\n */\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\n// getDockReservedBottom\r\nexport function getDockReservedBottom(): number {\r\n    try {\r\n        const dock = document.getElementById('dock');\r\n        if (!dock || dock.classList.contains('hidden')) return 0;\r\n        const rect = dock.getBoundingClientRect();\r\n        const vh = Math.max(window.innerHeight || 0, 0);\r\n        if (vh <= 0) return 0;\r\n        return Math.round(Math.max(0, vh - rect.top));\r\n    } catch {\r\n        return 0;\r\n    }\r\n}\r\n\r\n// Dock magnification\r\nexport function initDockMagnification(): void {\r\n    const dock = document.getElementById('dock');\r\n    if (!dock) return;\r\n\r\n    const icons = Array.from(dock.querySelectorAll<HTMLElement>('.dock-icon'));\r\n    if (!icons.length) return;\r\n\r\n    const items = icons.map(icon => {\r\n        const parent = icon.parentElement as HTMLElement | null;\r\n        const tooltip = parent\r\n            ? (parent.querySelector('.dock-tooltip') as HTMLElement | null)\r\n            : null;\r\n        return {\r\n            icon,\r\n            tooltip,\r\n            baseHeight: icon.offsetHeight || 0,\r\n        };\r\n    });\r\n\r\n    let rafId: number | null = null;\r\n    let pointerX: number | null = null;\r\n\r\n    const maxScale = 1.6;\r\n    const minScale = 1.0;\r\n    const radius = 120;\r\n    const sigma = radius / 3;\r\n\r\n    const apply = () => {\r\n        rafId = null;\r\n        if (pointerX === null) {\r\n            items.forEach(({ icon, tooltip }) => {\r\n                icon.style.transform = '';\r\n                icon.style.zIndex = '';\r\n                if (tooltip) {\r\n                    tooltip.style.transform = '';\r\n                    tooltip.style.zIndex = '';\r\n                }\r\n            });\r\n            return;\r\n        }\r\n\r\n        items.forEach(({ icon, tooltip, baseHeight }) => {\r\n            const rect = icon.getBoundingClientRect();\r\n            const centerX = rect.left + rect.width / 2;\r\n            const dx = Math.abs(pointerX! - centerX);\r\n            const influence = Math.exp(-(dx * dx) / (2 * sigma * sigma));\r\n            const scale = Math.max(\r\n                minScale,\r\n                Math.min(maxScale, minScale + (maxScale - minScale) * influence)\r\n            );\r\n\r\n            const base = baseHeight || icon.offsetHeight || 0;\r\n            const translateY = Math.max(0, (scale - 1) * base * 0.5);\r\n\r\n            icon.style.transform = `translateY(-${translateY.toFixed(1)}px) scale(${scale.toFixed(3)})`;\r\n            icon.style.zIndex = scale > 1.01 ? '300' : '';\r\n\r\n            if (tooltip) {\r\n                const lift = Math.max(0, base * (scale - 1) - translateY);\r\n                const gap = 12;\r\n                tooltip.style.transform = `translateY(-${(lift + gap).toFixed(1)}px)`;\r\n                tooltip.style.zIndex = '400';\r\n            }\r\n        });\r\n    };\r\n\r\n    const onMove = (e: MouseEvent) => {\r\n        pointerX = e.clientX;\r\n        if (!rafId) rafId = requestAnimationFrame(apply) as unknown as number;\r\n    };\r\n    const onLeave = () => {\r\n        pointerX = null;\r\n        if (!rafId) rafId = requestAnimationFrame(apply) as unknown as number;\r\n    };\r\n\r\n    dock.addEventListener('mousemove', onMove);\r\n    dock.addEventListener('mouseleave', onLeave);\r\n}\r\n\r\n// Dock drag & drop order persistence\r\nconst DOCK_ORDER_STORAGE_KEY = 'dock:order:v1';\r\n\r\nexport function loadDockOrder(): string[] | null {\r\n    try {\r\n        const raw = localStorage.getItem(DOCK_ORDER_STORAGE_KEY);\r\n        const parsed = raw ? JSON.parse(raw) : null;\r\n        return Array.isArray(parsed) ? parsed : null;\r\n    } catch {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport function saveDockOrder(order: string[] | null | undefined): void {\r\n    try {\r\n        localStorage.setItem(DOCK_ORDER_STORAGE_KEY, JSON.stringify(order || []));\r\n    } catch {\r\n        // ignore\r\n    }\r\n}\r\n\r\nexport function getDockItemId(item: Element | null): string | null {\r\n    if (!item) return null;\r\n    return (item.getAttribute('data-window-id') as string) || null;\r\n}\r\n\r\nexport function getCurrentDockOrder(): string[] {\r\n    const tray = document.querySelector('#dock .dock-tray');\r\n    if (!tray) return [];\r\n    return Array.from(tray.querySelectorAll('.dock-item'))\r\n        .map(it => getDockItemId(it))\r\n        .filter(Boolean) as string[];\r\n}\r\n\r\nexport function applyDockOrder(order: string[] | null | undefined): void {\r\n    if (!Array.isArray(order) || !order.length) return;\r\n    const tray = document.querySelector('#dock .dock-tray');\r\n    if (!tray) return;\r\n    const items = Array.from(tray.querySelectorAll<HTMLElement>('.dock-item'));\r\n    const map = new Map(items.map(it => [getDockItemId(it), it]));\r\n    const fragment = document.createDocumentFragment();\r\n    order.forEach(id => {\r\n        const el = map.get(id as unknown as string);\r\n        if (el) {\r\n            fragment.appendChild(el);\r\n            map.delete(id as unknown as string);\r\n        }\r\n    });\r\n    for (const [, el] of map) fragment.appendChild(el);\r\n    tray.appendChild(fragment);\r\n}\r\n\r\nexport function createPlaceholder(width?: number, height?: number): HTMLElement {\r\n    const ph = document.createElement('div');\r\n    ph.className = 'dock-placeholder';\r\n    ph.setAttribute('aria-hidden', 'true');\r\n    ph.style.width = Math.max(1, Math.round(width || 48)) + 'px';\r\n    ph.style.height = Math.max(1, Math.round(height || 48)) + 'px';\r\n    ph.style.opacity = '0';\r\n    ph.style.pointerEvents = 'none';\r\n    return ph;\r\n}\r\n\r\nexport function initDockDragDrop(): void {\r\n    const dock = document.getElementById('dock');\r\n    const tray = dock ? (dock.querySelector('.dock-tray') as HTMLElement | null) : null;\r\n    if (!dock || !tray) return;\r\n\r\n    const persisted = loadDockOrder();\r\n    if (persisted && persisted.length) applyDockOrder(persisted);\r\n\r\n    let draggedItem: HTMLElement | null = null;\r\n    let placeholder: HTMLElement | null = null;\r\n    let prevUserSelect = '';\r\n    let suppressClicksUntil = 0;\r\n\r\n    const updatePlaceholderSize = (ref: HTMLElement | null) => {\r\n        if (!placeholder || !ref) return;\r\n        try {\r\n            const r = ref.getBoundingClientRect();\r\n            placeholder.style.width = r.width + 'px';\r\n            placeholder.style.height = r.height + 'px';\r\n        } catch {\r\n            // ignore\r\n        }\r\n    };\r\n\r\n    const placeRelativeTo = (targetItem: HTMLElement, clientX: number) => {\r\n        if (!tray || !targetItem) return;\r\n        if (!placeholder) placeholder = createPlaceholder();\r\n        updatePlaceholderSize(draggedItem || targetItem);\r\n        const rect = targetItem.getBoundingClientRect();\r\n        const insertBefore = clientX < rect.left + rect.width / 2;\r\n        tray.insertBefore(placeholder, insertBefore ? targetItem : targetItem.nextSibling);\r\n    };\r\n\r\n    const handleTrayDragOver = (e: DragEvent) => {\r\n        if (!draggedItem) return;\r\n        e.preventDefault();\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'move';\r\n        const items = Array.from(tray.querySelectorAll<HTMLElement>('.dock-item')).filter(\r\n            it => it !== draggedItem\r\n        );\r\n        if (!placeholder) placeholder = createPlaceholder();\r\n        if (items.length === 0) {\r\n            tray.appendChild(placeholder);\r\n            return;\r\n        }\r\n        let target: HTMLElement | null = null;\r\n        for (const it of items) {\r\n            const r = it.getBoundingClientRect();\r\n            if (e.clientX < r.left + r.width / 2) {\r\n                target = it;\r\n                break;\r\n            }\r\n        }\r\n        updatePlaceholderSize(draggedItem || items[0]);\r\n        if (target) tray.insertBefore(placeholder, target);\r\n        else tray.appendChild(placeholder);\r\n    };\r\n\r\n    const onDragStart = function (this: HTMLElement, e: DragEvent) {\r\n        const item = (this as HTMLElement).closest('.dock-item') as HTMLElement | null;\r\n        if (!item) return;\r\n        draggedItem = item;\r\n        prevUserSelect = document.body.style.userSelect || '';\r\n        document.body.style.userSelect = 'none';\r\n        suppressClicksUntil = Date.now() + 250;\r\n        try {\r\n            const icon = (item.querySelector('.dock-icon') as HTMLElement) || item;\r\n            const r = icon.getBoundingClientRect();\r\n            if (e.dataTransfer) {\r\n                e.dataTransfer.setData('text/plain', getDockItemId(item) || '');\r\n                e.dataTransfer.effectAllowed = 'move';\r\n                e.dataTransfer.setDragImage(icon as Element, r.width / 2, r.height / 2);\r\n            }\r\n        } catch {\r\n            // ignore\r\n        }\r\n        const r = item.getBoundingClientRect();\r\n        placeholder = createPlaceholder(r.width, r.height);\r\n        tray.insertBefore(placeholder, item.nextSibling);\r\n    };\r\n\r\n    const onDragOver = (e: DragEvent) => {\r\n        if (!draggedItem) return;\r\n        e.preventDefault();\r\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'move';\r\n        const target = (e.target as Element).closest('.dock-item') as HTMLElement | null;\r\n        if (!target || target === draggedItem) {\r\n            handleTrayDragOver(e);\r\n            return;\r\n        }\r\n        placeRelativeTo(target, e.clientX);\r\n    };\r\n\r\n    const finalizeDrop = () => {\r\n        if (!draggedItem || !placeholder) return;\r\n        tray.insertBefore(draggedItem, placeholder);\r\n        placeholder.remove();\r\n        placeholder = null;\r\n        const order = getCurrentDockOrder();\r\n        saveDockOrder(order);\r\n    };\r\n\r\n    const onDrop = (e: DragEvent) => {\r\n        if (!draggedItem) return;\r\n        e.preventDefault();\r\n        const phDidNotMove =\r\n            placeholder &&\r\n            placeholder.isConnected &&\r\n            (placeholder.previousSibling === draggedItem ||\r\n                placeholder.nextSibling === draggedItem);\r\n        if (!placeholder || !placeholder.isConnected || phDidNotMove) {\r\n            const x = e.clientX;\r\n            const items = Array.from(tray.querySelectorAll<HTMLElement>('.dock-item')).filter(\r\n                it => it !== draggedItem\r\n            );\r\n            let inserted = false;\r\n            for (const it of items) {\r\n                const r = it.getBoundingClientRect();\r\n                if (x < r.left + r.width / 2) {\r\n                    tray.insertBefore(draggedItem, it);\r\n                    inserted = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!inserted) tray.appendChild(draggedItem);\r\n            const order = getCurrentDockOrder();\r\n            saveDockOrder(order);\r\n            cleanup();\r\n            return;\r\n        }\r\n        finalizeDrop();\r\n    };\r\n\r\n    const cleanup = () => {\r\n        if (placeholder && placeholder.isConnected) placeholder.remove();\r\n        placeholder = null;\r\n        draggedItem = null;\r\n        document.body.style.userSelect = prevUserSelect;\r\n    };\r\n\r\n    const onDragEnd = () => {\r\n        cleanup();\r\n    };\r\n\r\n    dock.addEventListener(\r\n        'click',\r\n        ev => {\r\n            if (Date.now() < suppressClicksUntil || draggedItem) {\r\n                ev.stopPropagation();\r\n                ev.preventDefault();\r\n            }\r\n        },\r\n        true\r\n    );\r\n\r\n    window.addEventListener('blur', cleanup);\r\n\r\n    const enableDraggable = () => {\r\n        tray.querySelectorAll<HTMLElement>('.dock-item').forEach(it => {\r\n            it.setAttribute('draggable', 'true');\r\n            it.addEventListener('dragstart', onDragStart);\r\n        });\r\n    };\r\n    enableDraggable();\r\n\r\n    tray.addEventListener('dragover', onDragOver as EventListener);\r\n    tray.addEventListener('drop', onDrop as EventListener);\r\n    tray.addEventListener('dragend', onDragEnd as EventListener);\r\n}\r\n\r\nexport function updateDockIndicators(): void {\r\n    const indicatorMappings = [\r\n        { modalId: 'finder-modal', indicatorId: 'finder-indicator' },\r\n        { modalId: 'projects-modal', indicatorId: 'projects-indicator' },\r\n        { modalId: 'settings-modal', indicatorId: 'settings-indicator' },\r\n        { modalId: 'text-modal', indicatorId: 'text-indicator' },\r\n    ];\r\n\r\n    indicatorMappings.forEach(mapping => {\r\n        const modal = document.getElementById(mapping.modalId);\r\n        const indicator = document.getElementById(mapping.indicatorId);\r\n        if (modal && indicator) {\r\n            const minimized = modal.dataset && modal.dataset.minimized === 'true';\r\n            const domUtils = (window as any).DOMUtils;\r\n            if (!modal.classList.contains('hidden') || minimized) {\r\n                if (domUtils && typeof domUtils.show === 'function') {\r\n                    domUtils.show(indicator);\r\n                } else {\r\n                    indicator.classList.remove('hidden');\r\n                }\r\n            } else {\r\n                if (domUtils && typeof domUtils.hide === 'function') {\r\n                    domUtils.hide(indicator);\r\n                } else {\r\n                    indicator.classList.add('hidden');\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// Global export for legacy compatibility\r\ndeclare global {\r\n    interface Window {\r\n        DockSystem?: any;\r\n        updateDockIndicators?: any;\r\n    }\r\n}\r\nif (typeof window !== 'undefined') {\r\n    (window as any).DockSystem = {\r\n        getDockReservedBottom,\r\n        initDockMagnification,\r\n        initDockDragDrop,\r\n        updateDockIndicators,\r\n        getCurrentDockOrder,\r\n        loadDockOrder,\r\n        saveDockOrder,\r\n        applyDockOrder,\r\n    };\r\n\r\n    if (typeof (window as any).updateDockIndicators !== 'function') {\r\n        (window as any).updateDockIndicators = updateDockIndicators;\r\n    }\r\n}\r\n\r\nexport default {};\r\n\r\n", "/*\r\n * src/ts/dialog.ts\r\n * Typed port of js/dialog.js\r\n */\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nexport class Dialog {\r\n    modal: HTMLElement;\r\n    windowEl: HTMLElement | null;\r\n    lastDragPointerX: number | null;\r\n\r\n    constructor(modalId: string) {\r\n        const el = document.getElementById(modalId);\r\n        if (!el) throw new Error(`No dialog with id ${modalId}`);\r\n        this.modal = el as HTMLElement;\r\n        // Legacy helper may provide an element wrapper\r\n        const helper = (window as any).StorageSystem?.getDialogWindowElement;\r\n        this.windowEl = helper\r\n            ? helper(this.modal)\r\n            : (this.modal.querySelector('.autopointer') as HTMLElement) || this.modal;\r\n        this.lastDragPointerX = null;\r\n        this.init();\r\n    }\r\n\r\n    init() {\r\n        this.makeDraggable();\r\n        this.makeResizable();\r\n        const closeButton = this.modal.querySelector(\r\n            '.draggable-header button[id^=\"close-\"]'\r\n        ) as HTMLElement | null;\r\n        if (closeButton) {\r\n            closeButton.style.cursor = 'pointer';\r\n            (closeButton as any).dataset.dialogAction = 'close';\r\n            if (!(closeButton as any).dataset.dialogBoundClose) {\r\n                (closeButton as any).dataset.dialogBoundClose = 'true';\r\n                closeButton.addEventListener('click', e => {\r\n                    e.preventDefault();\r\n                    e.stopPropagation();\r\n                    this.close();\r\n                });\r\n            }\r\n        }\r\n\r\n        const minimizeEl = this.modal.querySelector(\r\n            '.draggable-header .bg-yellow-500.rounded-full'\r\n        ) as HTMLElement | null;\r\n        const maximizeEl = this.modal.querySelector(\r\n            '.draggable-header .bg-green-500.rounded-full'\r\n        ) as HTMLElement | null;\r\n        if (minimizeEl) {\r\n            minimizeEl.style.cursor = 'pointer';\r\n            minimizeEl.title = minimizeEl.title || 'Minimieren';\r\n            (minimizeEl as any).dataset.dialogAction = 'minimize';\r\n            minimizeEl.addEventListener('click', e => {\r\n                e.stopPropagation();\r\n                this.minimize();\r\n            });\r\n        }\r\n        if (maximizeEl) {\r\n            maximizeEl.style.cursor = 'pointer';\r\n            maximizeEl.title = maximizeEl.title || 'Maximieren';\r\n            (maximizeEl as any).dataset.dialogAction = 'maximize';\r\n            maximizeEl.addEventListener('click', e => {\r\n                e.stopPropagation();\r\n                this.toggleMaximize();\r\n            });\r\n        }\r\n    }\r\n\r\n    open() {\r\n        if (!this.modal) {\r\n            console.error('Cannot open dialog: modal element is undefined');\r\n            return;\r\n        }\r\n        // preserve original behavior\r\n        (window as any).hideMenuDropdowns?.();\r\n\r\n        // Use DOMUtils if available, fallback to classList\r\n        const domUtils = (window as any).DOMUtils;\r\n        if (domUtils && typeof domUtils.show === 'function') {\r\n            domUtils.show(this.modal);\r\n        } else {\r\n            this.modal.classList.remove('hidden');\r\n        }\r\n\r\n        if (this.modal.dataset) delete (this.modal.dataset as any).minimized;\r\n        this.bringToFront();\r\n        this.enforceMenuBarBoundary();\r\n        (window as any).saveOpenModals?.();\r\n        (window as any).updateDockIndicators?.();\r\n        (window as any).updateProgramLabelByTopModal?.();\r\n    }\r\n\r\n    close() {\r\n        if (this.modal.classList.contains('hidden')) return;\r\n\r\n        // Use DOMUtils if available, fallback to classList\r\n        const domUtils = (window as any).DOMUtils;\r\n        if (domUtils && typeof domUtils.hide === 'function') {\r\n            domUtils.hide(this.modal);\r\n        } else {\r\n            this.modal.classList.add('hidden');\r\n        }\r\n\r\n        // Remove from z-index manager stack\r\n        const zIndexManager = (window as any).__zIndexManager;\r\n        if (zIndexManager && typeof zIndexManager.removeWindow === 'function') {\r\n            zIndexManager.removeWindow(this.modal.id);\r\n        }\r\n\r\n        (window as any).saveOpenModals?.();\r\n        (window as any).updateDockIndicators?.();\r\n        (window as any).updateProgramLabelByTopModal?.();\r\n    }\r\n\r\n    minimize() {\r\n        if (this.modal.dataset) (this.modal.dataset as any).minimized = 'true';\r\n\r\n        // Use DOMUtils if available, fallback to classList\r\n        const domUtils = (window as any).DOMUtils;\r\n        if (domUtils && typeof domUtils.hide === 'function') {\r\n            if (!this.modal.classList.contains('hidden')) {\r\n                domUtils.hide(this.modal);\r\n            }\r\n        } else {\r\n            if (!this.modal.classList.contains('hidden')) {\r\n                this.modal.classList.add('hidden');\r\n            }\r\n        }\r\n\r\n        (window as any).saveOpenModals?.();\r\n        (window as any).updateDockIndicators?.();\r\n        (window as any).updateProgramLabelByTopModal?.();\r\n    }\r\n\r\n    toggleMaximize() {\r\n        const target = this.windowEl || this.modal;\r\n        if (!target) return;\r\n        this.unsnap({ silent: true });\r\n        const ds = (this.modal.dataset as any) || {};\r\n        const isMax = ds.maximized === 'true';\r\n        if (isMax) {\r\n            if (ds.prevLeft !== undefined) target.style.left = ds.prevLeft;\r\n            if (ds.prevTop !== undefined) target.style.top = ds.prevTop;\r\n            if (ds.prevWidth !== undefined) target.style.width = ds.prevWidth;\r\n            if (ds.prevHeight !== undefined) target.style.height = ds.prevHeight;\r\n            if (ds.prevPosition !== undefined) target.style.position = ds.prevPosition;\r\n            delete ds.maximized;\r\n            delete ds.prevLeft;\r\n            delete ds.prevTop;\r\n            delete ds.prevWidth;\r\n            delete ds.prevHeight;\r\n            delete ds.prevPosition;\r\n            this.enforceMenuBarBoundary();\r\n            (window as any).saveWindowPositions?.();\r\n            return;\r\n        }\r\n        const computed = window.getComputedStyle(target);\r\n        (this.modal.dataset as any).prevLeft = target.style.left || computed.left || '';\r\n        (this.modal.dataset as any).prevTop = target.style.top || computed.top || '';\r\n        (this.modal.dataset as any).prevWidth = target.style.width || computed.width || '';\r\n        (this.modal.dataset as any).prevHeight = target.style.height || computed.height || '';\r\n        (this.modal.dataset as any).prevPosition = target.style.position || computed.position || '';\r\n        const minTop = Math.round((window as any).getMenuBarBottom?.() || 0);\r\n        target.style.position = 'fixed';\r\n        target.style.left = '0px';\r\n        target.style.top = `${minTop}px`;\r\n        target.style.width = '100vw';\r\n        target.style.height = `calc(100vh - ${minTop}px)`;\r\n        try {\r\n            const __dockReserve = (window as any).getDockReservedBottom?.() || 0;\r\n            const __maxHeight = Math.max(0, (window.innerHeight || 0) - minTop - __dockReserve);\r\n            target.style.height = `${__maxHeight}px`;\r\n        } catch {}\r\n        (this.modal.dataset as any).maximized = 'true';\r\n        this.bringToFront();\r\n        (window as any).saveWindowPositions?.();\r\n    }\r\n\r\n    snapTo(side: 'left' | 'right', options: any = {}) {\r\n        const target = this.windowEl || this.modal;\r\n        if (!target) return null;\r\n        if (side !== 'left' && side !== 'right') return null;\r\n        const { silent = false } = options;\r\n        const ds = (this.modal.dataset as any) || {};\r\n        const alreadySnapped = ds.snapped;\r\n        if (!alreadySnapped) {\r\n            const computed = window.getComputedStyle(target);\r\n            ds.prevSnapLeft = target.style.left || computed.left || '';\r\n            ds.prevSnapTop = target.style.top || computed.top || '';\r\n            ds.prevSnapWidth = target.style.width || computed.width || '';\r\n            ds.prevSnapHeight = target.style.height || computed.height || '';\r\n            ds.prevSnapPosition = target.style.position || computed.position || '';\r\n            ds.prevSnapRight = target.style.right || computed.right || '';\r\n            ds.prevSnapBottom = target.style.bottom || computed.bottom || '';\r\n        }\r\n        const metrics = (window as any).computeSnapMetrics?.(side);\r\n        if (!metrics) {\r\n            this.unsnap({ silent: true });\r\n            return null;\r\n        }\r\n        target.style.position = 'fixed';\r\n        target.style.top = `${metrics.top}px`;\r\n        target.style.left = `${metrics.left}px`;\r\n        target.style.width = `${metrics.width}px`;\r\n        target.style.height = `${metrics.height}px`;\r\n        target.style.right = '';\r\n        target.style.bottom = '';\r\n        (this.modal.dataset as any).snapped = side;\r\n        this.bringToFront();\r\n        (window as any).hideSnapPreview?.();\r\n        if (!silent) (window as any).saveWindowPositions?.();\r\n        return side;\r\n    }\r\n\r\n    unsnap(options: any = {}) {\r\n        const target = this.windowEl || this.modal;\r\n        if (!target) return false;\r\n        const { silent = false } = options;\r\n        const ds = (this.modal.dataset as any) || {};\r\n        if (!ds.snapped) return false;\r\n        const restore = (key: string, prop: string) => {\r\n            if (Object.prototype.hasOwnProperty.call(ds, key)) {\r\n                const value = ds[key];\r\n                if (value === '') target.style[prop as any] = '';\r\n                else target.style[prop as any] = value;\r\n                delete ds[key];\r\n            } else {\r\n                target.style[prop as any] = '';\r\n            }\r\n        };\r\n        restore('prevSnapLeft', 'left');\r\n        restore('prevSnapTop', 'top');\r\n        restore('prevSnapWidth', 'width');\r\n        restore('prevSnapHeight', 'height');\r\n        restore('prevSnapPosition', 'position');\r\n        restore('prevSnapRight', 'right');\r\n        restore('prevSnapBottom', 'bottom');\r\n        delete ds.snapped;\r\n        (window as any).hideSnapPreview?.();\r\n        this.enforceMenuBarBoundary();\r\n        if (!silent) (window as any).saveWindowPositions?.();\r\n        return true;\r\n    }\r\n\r\n    applySnapAfterDrag(target: HTMLElement | null, pointerX: number | null) {\r\n        if (!target) {\r\n            (window as any).hideSnapPreview?.();\r\n            return null;\r\n        }\r\n        const candidate = this.getSnapCandidate(target, pointerX);\r\n        if (candidate) {\r\n            this.snapTo(candidate, { silent: true });\r\n            (window as any).hideSnapPreview?.();\r\n            return candidate;\r\n        }\r\n        this.unsnap({ silent: true });\r\n        (window as any).hideSnapPreview?.();\r\n        return null;\r\n    }\r\n\r\n    getSnapCandidate(target: HTMLElement | null, pointerX: number | null) {\r\n        if (!target) return null;\r\n        const viewportWidth = Math.max(window.innerWidth || 0, 0);\r\n        if (viewportWidth <= 0) return null;\r\n        const threshold = Math.max(3, Math.min(14, viewportWidth * 0.0035));\r\n        const rect = target.getBoundingClientRect();\r\n        const pointerDistLeft =\r\n            typeof pointerX === 'number' ? Math.max(0, pointerX) : Math.abs(rect.left);\r\n        if (Math.abs(rect.left) <= threshold || pointerDistLeft <= threshold) return 'left';\r\n        const distRight = viewportWidth - rect.right;\r\n        const pointerDistRight =\r\n            typeof pointerX === 'number'\r\n                ? Math.max(0, viewportWidth - pointerX)\r\n                : Math.abs(distRight);\r\n        if (Math.abs(distRight) <= threshold || pointerDistRight <= threshold) return 'right';\r\n        return null;\r\n    }\r\n\r\n    bringToFront() {\r\n        // Use a robust z-index management system that maintains a sorted window stack\r\n        // and reassigns z-indexes to prevent reaching the maximum\r\n        const zIndexManager = (window as any).__zIndexManager || this.initZIndexManager();\r\n        zIndexManager.bringToFront(this.modal.id, this.modal, this.windowEl);\r\n    }\r\n\r\n    private initZIndexManager() {\r\n        // Initialize global z-index manager if not exists\r\n        if ((window as any).__zIndexManager) {\r\n            return (window as any).__zIndexManager;\r\n        }\r\n\r\n        const BASE_Z_INDEX = 1000;\r\n        const MAX_WINDOW_Z_INDEX = 2147483500; // Below Dock (2147483550) and Launchpad (2147483600)\r\n        const windowStack: string[] = []; // Ordered list of window IDs (bottom to top)\r\n\r\n        (window as any).__zIndexManager = {\r\n            bringToFront(windowId: string, _modal: HTMLElement, _windowEl?: HTMLElement | null) {\r\n                // Remove from current position if exists\r\n                const currentIndex = windowStack.indexOf(windowId);\r\n                if (currentIndex !== -1) {\r\n                    windowStack.splice(currentIndex, 1);\r\n                }\r\n\r\n                // Add to top of stack\r\n                windowStack.push(windowId);\r\n\r\n                // Reassign z-indexes to all windows in stack\r\n                // This prevents z-index from growing indefinitely\r\n                windowStack.forEach((id, index) => {\r\n                    const zIndex = BASE_Z_INDEX + index;\r\n                    const element = document.getElementById(id);\r\n\r\n                    if (element) {\r\n                        // Clamp to maximum to ensure critical UI elements stay on top\r\n                        const clampedZIndex = Math.min(zIndex, MAX_WINDOW_Z_INDEX);\r\n                        element.style.zIndex = clampedZIndex.toString();\r\n\r\n                        // Also update windowEl if it's a separate element\r\n                        const win = element.querySelector('.window-container') as HTMLElement;\r\n                        if (win) {\r\n                            win.style.zIndex = clampedZIndex.toString();\r\n                        }\r\n                    }\r\n                });\r\n\r\n                // Update legacy topZIndex for compatibility\r\n                (window as any).topZIndex = Math.min(\r\n                    BASE_Z_INDEX + windowStack.length,\r\n                    MAX_WINDOW_Z_INDEX\r\n                );\r\n            },\r\n\r\n            removeWindow(windowId: string) {\r\n                const index = windowStack.indexOf(windowId);\r\n                if (index !== -1) {\r\n                    windowStack.splice(index, 1);\r\n                }\r\n            },\r\n\r\n            getWindowStack() {\r\n                return [...windowStack];\r\n            },\r\n\r\n            reset() {\r\n                windowStack.length = 0;\r\n                (window as any).topZIndex = BASE_Z_INDEX;\r\n            },\r\n        };\r\n\r\n        return (window as any).__zIndexManager;\r\n    }\r\n\r\n    refocus() {\r\n        this.bringToFront();\r\n        (window as any).hideMenuDropdowns?.();\r\n        (window as any).saveOpenModals?.();\r\n        (window as any).updateProgramLabelByTopModal?.();\r\n    }\r\n\r\n    makeDraggable() {\r\n        const header = this.modal.querySelector('.draggable-header') as HTMLElement | null;\r\n        const target = this.windowEl || this.modal;\r\n        if (!header || !target) return;\r\n        header.style.cursor = 'move';\r\n        let offsetX = 0,\r\n            offsetY = 0;\r\n        header.addEventListener('mousedown', (e: MouseEvent) => {\r\n            this.refocus();\r\n            if (\r\n                (e.target as Element).closest &&\r\n                (e.target as Element).closest('button[id^=\"close-\"]')\r\n            )\r\n                return;\r\n            if (\r\n                (e.target as Element).closest &&\r\n                (e.target as Element).closest('[data-dialog-action]')\r\n            )\r\n                return;\r\n            if (this.modal.dataset && (this.modal.dataset as any).maximized === 'true') return;\r\n            const pointerX = e.clientX;\r\n            const pointerY = e.clientY;\r\n            const initialSnapSide = this.modal.dataset ? (this.modal.dataset as any).snapped : null;\r\n            let rect = target.getBoundingClientRect();\r\n            let localOffsetX = pointerX - rect.left;\r\n            let localOffsetY = pointerY - rect.top;\r\n            if (initialSnapSide) {\r\n                const preservedOffsetX = localOffsetX;\r\n                const preservedOffsetY = localOffsetY;\r\n                this.unsnap({ silent: true });\r\n                const minTopAfterUnsnap = (window as any).getMenuBarBottom?.() || 0;\r\n                target.style.position = 'fixed';\r\n                target.style.left = `${pointerX - preservedOffsetX}px`;\r\n                target.style.top = `${Math.max(minTopAfterUnsnap, pointerY - preservedOffsetY)}px`;\r\n                rect = target.getBoundingClientRect();\r\n                localOffsetX = pointerX - rect.left;\r\n                localOffsetY = pointerY - rect.top;\r\n            }\r\n            const computedPosition = window.getComputedStyle(target).position;\r\n            if (computedPosition === 'static' || computedPosition === 'relative') {\r\n                target.style.position = 'fixed';\r\n            } else if (!target.style.position) {\r\n                target.style.position = computedPosition;\r\n            }\r\n            const minTop = (window as any).getMenuBarBottom?.() || 0;\r\n            target.style.left = `${pointerX - localOffsetX}px`;\r\n            target.style.top = `${Math.max(minTop, pointerY - localOffsetY)}px`;\r\n            (window as any).clampWindowToMenuBar?.(target);\r\n            const adjustedRect = target.getBoundingClientRect();\r\n            offsetX = pointerX - adjustedRect.left;\r\n            offsetY = pointerY - adjustedRect.top;\r\n            this.lastDragPointerX = pointerX;\r\n            const overlay = document.createElement('div');\r\n            overlay.style.position = 'fixed';\r\n            overlay.style.top = '0';\r\n            overlay.style.left = '0';\r\n            overlay.style.width = '100%';\r\n            overlay.style.height = '100%';\r\n            overlay.style.zIndex = '9999';\r\n            overlay.style.cursor = 'move';\r\n            overlay.style.backgroundColor = 'transparent';\r\n            document.body.appendChild(overlay);\r\n            let isDragging = true;\r\n            let moved = false;\r\n            const cleanup = (shouldSave = true) => {\r\n                if (!isDragging) return;\r\n                isDragging = false;\r\n                overlay.remove();\r\n                overlay.removeEventListener('mousemove', mouseMoveHandler);\r\n                overlay.removeEventListener('mouseup', mouseUpHandler);\r\n                window.removeEventListener('mouseup', mouseUpHandler);\r\n                window.removeEventListener('blur', blurHandler);\r\n                window.removeEventListener('mousemove', mouseMoveHandler);\r\n                (window as any).hideSnapPreview?.();\r\n                if (shouldSave) {\r\n                    if (moved) {\r\n                        this.applySnapAfterDrag(target, this.lastDragPointerX);\r\n                    } else if (initialSnapSide) {\r\n                        this.snapTo(initialSnapSide, { silent: true });\r\n                    }\r\n                    (window as any).saveWindowPositions?.();\r\n                }\r\n                this.lastDragPointerX = null;\r\n            };\r\n            const mouseMoveHandler = (e2: MouseEvent) => {\r\n                moved = true;\r\n                window.requestAnimationFrame(() => {\r\n                    const newLeft = e2.clientX - offsetX;\r\n                    const newTop = e2.clientY - offsetY;\r\n                    const minTop = (window as any).getMenuBarBottom?.() || 0;\r\n                    target.style.left = newLeft + 'px';\r\n                    target.style.top = Math.max(minTop, newTop) + 'px';\r\n                    this.lastDragPointerX = e2.clientX;\r\n                    const candidate = this.getSnapCandidate(target, this.lastDragPointerX);\r\n                    if (candidate) (window as any).showSnapPreview?.(candidate);\r\n                    else (window as any).hideSnapPreview?.();\r\n                });\r\n            };\r\n            const mouseUpHandler = () => cleanup(true);\r\n            const blurHandler = () => cleanup(true);\r\n            overlay.addEventListener('mousemove', mouseMoveHandler);\r\n            overlay.addEventListener('mouseup', mouseUpHandler);\r\n            window.addEventListener('mousemove', mouseMoveHandler);\r\n            window.addEventListener('mouseup', mouseUpHandler);\r\n            window.addEventListener('blur', blurHandler);\r\n            e.preventDefault();\r\n        });\r\n    }\r\n\r\n    makeResizable() {\r\n        if ((this.modal.dataset as any).noResize === 'true') return;\r\n        const target = this.windowEl || this.modal;\r\n        if (!target) return;\r\n        const existingHandles = target.querySelectorAll('.resizer');\r\n        existingHandles.forEach(handle => handle.remove());\r\n        const computedPosition = window.getComputedStyle(target).position;\r\n        if (!computedPosition || computedPosition === 'static') target.style.position = 'relative';\r\n\r\n        const ensureFixedPosition = () => {\r\n            const computed = window.getComputedStyle(target);\r\n            const rect = target.getBoundingClientRect();\r\n            if (computed.position === 'static' || computed.position === 'relative') {\r\n                target.style.position = 'fixed';\r\n                target.style.left = rect.left + 'px';\r\n                target.style.top = rect.top + 'px';\r\n            } else {\r\n                if (!target.style.left) target.style.left = rect.left + 'px';\r\n                if (!target.style.top) target.style.top = rect.top + 'px';\r\n            }\r\n        };\r\n\r\n        const createHandle = (handle: any) => {\r\n            const resizer = document.createElement('div');\r\n            resizer.classList.add('resizer', `resizer-${handle.name}`);\r\n            Object.assign(resizer.style, {\r\n                position: 'absolute',\r\n                zIndex: '9999',\r\n                backgroundColor: 'transparent',\r\n                pointerEvents: 'auto',\r\n                touchAction: 'none',\r\n                cursor: handle.cursor,\r\n                ...(handle.style || {}),\r\n            });\r\n            target.appendChild(resizer);\r\n            const startResize = (event: MouseEvent) => {\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                this.refocus();\r\n                ensureFixedPosition();\r\n                const startX = event.clientX;\r\n                const startY = event.clientY;\r\n                const rect = target.getBoundingClientRect();\r\n                const computed = window.getComputedStyle(target);\r\n                const minWidth = parseFloat(computed.minWidth as any) || 240;\r\n                const minHeight = parseFloat(computed.minHeight as any) || 160;\r\n                let startLeft = parseFloat(computed.left as any);\r\n                let startTop = parseFloat(computed.top as any);\r\n                if (!Number.isFinite(startLeft)) startLeft = rect.left;\r\n                if (!Number.isFinite(startTop)) startTop = rect.top;\r\n                const startWidth = rect.width;\r\n                const startHeight = rect.height;\r\n                const overlay = document.createElement('div');\r\n                Object.assign(overlay.style, {\r\n                    position: 'fixed',\r\n                    top: '0',\r\n                    left: '0',\r\n                    width: '100%',\r\n                    height: '100%',\r\n                    zIndex: '9999',\r\n                    cursor: handle.cursor,\r\n                    backgroundColor: 'transparent',\r\n                    touchAction: 'none',\r\n                });\r\n                document.body.appendChild(overlay);\r\n                let resizing = true;\r\n                const applySize = (clientX: number, clientY: number) => {\r\n                    if (!resizing) return;\r\n                    window.requestAnimationFrame(() => {\r\n                        const dx = clientX - startX;\r\n                        const dy = clientY - startY;\r\n                        let newWidth = startWidth;\r\n                        let newHeight = startHeight;\r\n                        let newLeft = startLeft;\r\n                        let newTop = startTop;\r\n                        if (handle.directions.includes('e')) newWidth = startWidth + dx;\r\n                        if (handle.directions.includes('s')) newHeight = startHeight + dy;\r\n                        if (handle.directions.includes('w')) {\r\n                            newWidth = startWidth - dx;\r\n                            newLeft = startLeft + dx;\r\n                        }\r\n                        if (handle.directions.includes('n')) {\r\n                            newHeight = startHeight - dy;\r\n                            newTop = startTop + dy;\r\n                        }\r\n                        if (newWidth < minWidth) {\r\n                            const deficit = minWidth - newWidth;\r\n                            if (handle.directions.includes('w')) newLeft -= deficit;\r\n                            newWidth = minWidth;\r\n                        }\r\n                        if (newHeight < minHeight) {\r\n                            const deficit = minHeight - newHeight;\r\n                            if (handle.directions.includes('n')) newTop -= deficit;\r\n                            newHeight = minHeight;\r\n                        }\r\n                        const minTop = (window as any).getMenuBarBottom?.() || 0;\r\n                        if (handle.directions.includes('n') && newTop < minTop) {\r\n                            const overshoot = minTop - newTop;\r\n                            newTop = minTop;\r\n                            newHeight = Math.max(minHeight, newHeight - overshoot);\r\n                        }\r\n                        if (handle.directions.includes('w') || handle.directions.includes('e'))\r\n                            target.style.width = Math.max(minWidth, newWidth) + 'px';\r\n                        if (handle.directions.includes('s') || handle.directions.includes('n'))\r\n                            target.style.height = Math.max(minHeight, newHeight) + 'px';\r\n                        if (handle.directions.includes('w')) target.style.left = newLeft + 'px';\r\n                        if (handle.directions.includes('n')) target.style.top = newTop + 'px';\r\n                    });\r\n                };\r\n                const stopResize = () => {\r\n                    if (!resizing) return;\r\n                    resizing = false;\r\n                    overlay.remove();\r\n                    overlay.removeEventListener('mousemove', overlayMouseMove);\r\n                    overlay.removeEventListener('mouseup', overlayMouseUp);\r\n                    window.removeEventListener('mousemove', windowMouseMove);\r\n                    window.removeEventListener('mouseup', windowMouseUp);\r\n                    window.removeEventListener('blur', onBlur);\r\n                    (window as any).clampWindowToMenuBar?.(target);\r\n                    (window as any).saveWindowPositions?.();\r\n                };\r\n                const overlayMouseMove = (moveEvent: MouseEvent) =>\r\n                    applySize(moveEvent.clientX, moveEvent.clientY);\r\n                const windowMouseMove = (moveEvent: MouseEvent) =>\r\n                    applySize(moveEvent.clientX, moveEvent.clientY);\r\n                const overlayMouseUp = () => stopResize();\r\n                const windowMouseUp = () => stopResize();\r\n                const onBlur = () => stopResize();\r\n                overlay.addEventListener('mousemove', overlayMouseMove);\r\n                overlay.addEventListener('mouseup', overlayMouseUp);\r\n                window.addEventListener('mousemove', windowMouseMove);\r\n                window.addEventListener('mouseup', windowMouseUp);\r\n                window.addEventListener('blur', onBlur);\r\n            };\r\n            resizer.addEventListener('mousedown', startResize);\r\n        };\r\n\r\n        target.style.overflow = 'visible';\r\n        const handles = [\r\n            {\r\n                name: 'top',\r\n                cursor: 'n-resize',\r\n                directions: ['n'],\r\n                style: { top: '-4px', left: '12px', right: '12px', height: '8px' },\r\n            },\r\n            {\r\n                name: 'bottom',\r\n                cursor: 's-resize',\r\n                directions: ['s'],\r\n                style: { bottom: '-4px', left: '12px', right: '12px', height: '8px' },\r\n            },\r\n            {\r\n                name: 'left',\r\n                cursor: 'w-resize',\r\n                directions: ['w'],\r\n                style: { left: '-4px', top: '12px', bottom: '12px', width: '8px' },\r\n            },\r\n            {\r\n                name: 'right',\r\n                cursor: 'e-resize',\r\n                directions: ['e'],\r\n                style: { right: '-4px', top: '12px', bottom: '12px', width: '8px' },\r\n            },\r\n            {\r\n                name: 'top-left',\r\n                cursor: 'nw-resize',\r\n                directions: ['n', 'w'],\r\n                style: { top: '-6px', left: '-6px', width: '14px', height: '14px' },\r\n            },\r\n            {\r\n                name: 'top-right',\r\n                cursor: 'ne-resize',\r\n                directions: ['n', 'e'],\r\n                style: { top: '-6px', right: '-6px', width: '14px', height: '14px' },\r\n            },\r\n            {\r\n                name: 'bottom-left',\r\n                cursor: 'sw-resize',\r\n                directions: ['s', 'w'],\r\n                style: { bottom: '-6px', left: '-6px', width: '14px', height: '14px' },\r\n            },\r\n            {\r\n                name: 'bottom-right',\r\n                cursor: 'se-resize',\r\n                directions: ['s', 'e'],\r\n                style: { bottom: '-6px', right: '-6px', width: '14px', height: '14px' },\r\n            },\r\n        ];\r\n        handles.forEach(createHandle);\r\n    }\r\n\r\n    enforceMenuBarBoundary() {\r\n        (window as any).clampWindowToMenuBar?.(this.windowEl || this.modal);\r\n    }\r\n\r\n    loadIframe(url: string) {\r\n        let contentArea = this.modal.querySelector('.dialog-content') as HTMLElement | null;\r\n        if (!contentArea) {\r\n            contentArea = document.createElement('div');\r\n            contentArea.classList.add('dialog-content');\r\n            contentArea.style.width = '100%';\r\n            contentArea.style.height = '100%';\r\n            this.modal.appendChild(contentArea);\r\n        }\r\n        contentArea.innerHTML = '';\r\n        const iframe = document.createElement('iframe');\r\n        iframe.src = url;\r\n        iframe.style.width = '100%';\r\n        iframe.style.height = '100%';\r\n        iframe.style.border = 'none';\r\n        iframe.setAttribute('allow', 'fullscreen');\r\n        contentArea.appendChild(iframe);\r\n        iframe.addEventListener('load', () => {\r\n            try {\r\n                const cw = (iframe as any).contentWindow as Window | null;\r\n                if (cw && (cw as any).document) {\r\n                    const handler = () =>\r\n                        requestAnimationFrame(() => {\r\n                            this.refocus();\r\n                        });\r\n                    ['mousedown', 'click', 'touchstart'].forEach(evt => {\r\n                        (cw as any).document.addEventListener(evt, handler);\r\n                    });\r\n                } else if (cw) {\r\n                    ['mousedown', 'click', 'touchstart'].forEach(evt => {\r\n                        (cw as any).addEventListener(evt, () =>\r\n                            requestAnimationFrame(() => {\r\n                                this.refocus();\r\n                            })\r\n                        );\r\n                    });\r\n                }\r\n            } catch (err) {\r\n                console.error('Could not attach mousedown event in iframe:', err);\r\n            }\r\n        });\r\n    }\r\n\r\n    saveState() {\r\n        return {\r\n            left: this.modal.style.left,\r\n            top: this.modal.style.top,\r\n            width: this.modal.style.width,\r\n            height: this.modal.style.height,\r\n            zIndex: this.modal.style.zIndex,\r\n        };\r\n    }\r\n\r\n    restoreState(state: any) {\r\n        if (!state) return;\r\n        if (state.left) this.modal.style.left = state.left;\r\n        if (state.top) this.modal.style.top = state.top;\r\n        if (state.width) this.modal.style.width = state.width;\r\n        if (state.height) this.modal.style.height = state.height;\r\n        if (state.zIndex) this.modal.style.zIndex = state.zIndex;\r\n    }\r\n}\r\n// Note: Type declaration is in types/index.d.ts\r\n(window as any).Dialog = Dialog;\r\nexport default Dialog;\r\n\r\n", "(function () {\r\n    'use strict';\r\n\r\n    type TriggerOptions = { hoverRequiresOpen?: boolean; forceOpen?: boolean };\r\n\r\n    // Avoid redefining if legacy already provided these\r\n    if (\r\n        (window as unknown as { bindDropdownTrigger?: unknown }).bindDropdownTrigger &&\r\n        (window as unknown as { hideMenuDropdowns?: unknown }).hideMenuDropdowns\r\n    ) {\r\n        return;\r\n    }\r\n\r\n    function hideMenuDropdowns(): void {\r\n        const domUtils = (window as any).DOMUtils;\r\n\r\n        document.querySelectorAll('.menu-dropdown').forEach(dropdown => {\r\n            if (!dropdown.classList.contains('hidden')) {\r\n                if (domUtils && typeof domUtils.hide === 'function') {\r\n                    domUtils.hide(dropdown);\r\n                } else {\r\n                    dropdown.classList.add('hidden');\r\n                }\r\n            }\r\n        });\r\n        document.querySelectorAll('[data-menubar-trigger-button=\"true\"]').forEach(button => {\r\n            (button as HTMLElement).setAttribute('aria-expanded', 'false');\r\n        });\r\n        document.querySelectorAll('[data-system-menu-trigger]').forEach(button => {\r\n            (button as HTMLElement).setAttribute('aria-expanded', 'false');\r\n        });\r\n    }\r\n\r\n    function isAnyDropdownOpen(): boolean {\r\n        return Boolean(document.querySelector('.menu-dropdown:not(.hidden)'));\r\n    }\r\n\r\n    function toggleMenuDropdown(trigger: HTMLElement, options: TriggerOptions = {}): void {\r\n        if (!trigger) return;\r\n        const menuId = trigger.getAttribute('aria-controls');\r\n        if (!menuId) return;\r\n\r\n        const forceOpen = Boolean(options.forceOpen);\r\n        let menu = document.getElementById(menuId);\r\n        if (!menu) return;\r\n\r\n        const wasOpen = !menu.classList.contains('hidden');\r\n        const shouldOpen = forceOpen || !wasOpen;\r\n        hideMenuDropdowns();\r\n\r\n        if (shouldOpen) {\r\n            // Only re-render menu if it was NOT already open (i.e., we're opening it fresh)\r\n            // This prevents re-rendering during hover events when menu is already visible\r\n            if (!wasOpen) {\r\n                const MenuSystem = (\r\n                    window as unknown as {\r\n                        MenuSystem?: { renderApplicationMenu?: (modalId?: string | null) => void };\r\n                    }\r\n                ).MenuSystem;\r\n                if (MenuSystem && typeof MenuSystem.renderApplicationMenu === 'function') {\r\n                    // Get the current active modal to pass to menu renderer\r\n                    const topModal = Array.from(\r\n                        document.querySelectorAll('.modal:not(.hidden)')\r\n                    ).sort((a, b) => {\r\n                        const zA = parseInt(getComputedStyle(a).zIndex, 10) || 0;\r\n                        const zB = parseInt(getComputedStyle(b).zIndex, 10) || 0;\r\n                        return zB - zA;\r\n                    })[0];\r\n                    const activeModalId = topModal?.id || null;\r\n                    MenuSystem.renderApplicationMenu(activeModalId);\r\n                }\r\n\r\n                // Re-get menu element after rendering (it may have been recreated)\r\n                menu = document.getElementById(menuId);\r\n                if (!menu) return;\r\n            }\r\n\r\n            const domUtils = (window as any).DOMUtils;\r\n            if (domUtils && typeof domUtils.show === 'function') {\r\n                domUtils.show(menu);\r\n            } else {\r\n                menu.classList.remove('hidden');\r\n            }\r\n\r\n            trigger.setAttribute('aria-expanded', 'true');\r\n        }\r\n    }\r\n\r\n    function bindDropdownTrigger(el: HTMLElement | null, options: TriggerOptions = {}): void {\r\n        if (!el) return;\r\n        const hoverRequiresExisting =\r\n            options.hoverRequiresOpen !== undefined ? options.hoverRequiresOpen : true;\r\n        let clickJustOccurred = false;\r\n\r\n        el.addEventListener('click', event => {\r\n            event.stopPropagation();\r\n            clickJustOccurred = true;\r\n            const now = Date.now();\r\n            (window as unknown as { __lastMenuInteractionAt?: number }).__lastMenuInteractionAt =\r\n                now;\r\n            const menuId = el.getAttribute('aria-controls');\r\n            const menu = menuId ? document.getElementById(menuId) : null;\r\n            const isOpen = menu ? !menu.classList.contains('hidden') : false;\r\n            const sinceFocus =\r\n                now -\r\n                ((window as unknown as { __lastMenuFocusAt?: number }).__lastMenuFocusAt || 0);\r\n            if (isOpen && sinceFocus > 200) {\r\n                hideMenuDropdowns();\r\n                el.setAttribute('aria-expanded', 'false');\r\n            } else {\r\n                toggleMenuDropdown(el, { forceOpen: true });\r\n            }\r\n            setTimeout(() => {\r\n                clickJustOccurred = false;\r\n            }, 200);\r\n        });\r\n\r\n        el.addEventListener('mouseenter', () => {\r\n            if (clickJustOccurred) return;\r\n            (window as unknown as { __lastMenuInteractionAt?: number }).__lastMenuInteractionAt =\r\n                Date.now();\r\n            if (hoverRequiresExisting && !isAnyDropdownOpen()) return;\r\n            toggleMenuDropdown(el, { forceOpen: true });\r\n        });\r\n\r\n        el.addEventListener('focus', () => {\r\n            const now = Date.now();\r\n            (window as unknown as { __lastMenuInteractionAt?: number }).__lastMenuInteractionAt =\r\n                now;\r\n            (window as unknown as { __lastMenuFocusAt?: number }).__lastMenuFocusAt = now;\r\n            toggleMenuDropdown(el, { forceOpen: true });\r\n        });\r\n    }\r\n\r\n    function handleDocumentClickToCloseMenus(event: Event): void {\r\n        const last = (window as unknown as { __lastMenuInteractionAt?: number })\r\n            .__lastMenuInteractionAt;\r\n        if (last && Date.now() - last < 200) {\r\n            return;\r\n        }\r\n        const target = event.target instanceof Element ? (event.target as Element) : null;\r\n        if (!target) return;\r\n        if (target.closest('.menubar-trigger') || target.closest('.menu-dropdown')) return;\r\n        hideMenuDropdowns();\r\n    }\r\n\r\n    function initMenubarWiring() {\r\n        if ((window as unknown as { __menubarWired?: boolean }).__menubarWired) return;\r\n        (window as unknown as { __menubarWired?: boolean }).__menubarWired = true;\r\n\r\n        const appleMenuTrigger = document.getElementById('apple-menu-trigger');\r\n        const programLabel = document.getElementById('program-label');\r\n        bindDropdownTrigger(appleMenuTrigger, { hoverRequiresOpen: true });\r\n        bindDropdownTrigger(programLabel, { hoverRequiresOpen: true });\r\n\r\n        // Menu action activation from menu.js\r\n        document.addEventListener('click', event => {\r\n            const MenuSystem = (\r\n                window as unknown as {\r\n                    MenuSystem?: { handleMenuActionActivation?: (e: Event) => void };\r\n                }\r\n            ).MenuSystem;\r\n            if (MenuSystem && typeof MenuSystem.handleMenuActionActivation === 'function') {\r\n                MenuSystem.handleMenuActionActivation(event);\r\n            }\r\n        });\r\n\r\n        document.addEventListener('click', handleDocumentClickToCloseMenus);\r\n        document.addEventListener('pointerdown', handleDocumentClickToCloseMenus, {\r\n            capture: true,\r\n        });\r\n        document.addEventListener('keydown', event => {\r\n            if ((event as KeyboardEvent).key === 'Escape') hideMenuDropdowns();\r\n        });\r\n    }\r\n\r\n    // Expose API\r\n    (\r\n        window as unknown as {\r\n            hideMenuDropdowns: typeof hideMenuDropdowns;\r\n            bindDropdownTrigger: typeof bindDropdownTrigger;\r\n        }\r\n    ).hideMenuDropdowns = hideMenuDropdowns;\r\n    (window as unknown as { bindDropdownTrigger: typeof bindDropdownTrigger }).bindDropdownTrigger =\r\n        bindDropdownTrigger;\r\n\r\n    // Initialize on DOMContentLoaded (idempotent)\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', initMenubarWiring, { once: true });\r\n    } else {\r\n        initMenubarWiring();\r\n    }\r\n})();\r\n\r\n", "/*\r\n * src/ts/context-menu.ts\r\n * Typed port of js/context-menu.js\r\n */\r\n\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nconst guardKey = '__customContextMenuInit';\r\nif ((window as any)[guardKey]) {\r\n    // already initialized\r\n} else {\r\n    (window as any)[guardKey] = true;\r\n\r\n    const i18n =\r\n        (window as any).appI18n ||\r\n        ({\r\n            translate: (k: string) => k,\r\n            applyTranslations: (_el?: Element) => {},\r\n        } as { translate: (k: string) => string; applyTranslations: (el?: Element) => void });\r\n\r\n    const hideAllDropdowns =\r\n        typeof (window as any).hideMenuDropdowns === 'function'\r\n            ? (window as any).hideMenuDropdowns\r\n            : () => {\r\n                  const domUtils = (window as any).DOMUtils;\r\n                  document.querySelectorAll('.menu-dropdown').forEach(d => {\r\n                      if (domUtils && typeof domUtils.hide === 'function') {\r\n                          domUtils.hide(d);\r\n                      } else {\r\n                          d.classList.add('hidden');\r\n                      }\r\n                  });\r\n                  document\r\n                      .querySelectorAll('[aria-expanded=\"true\"]')\r\n                      .forEach(b => b.setAttribute('aria-expanded', 'false'));\r\n              };\r\n\r\n    function openModal(id: string) {\r\n        const el = document.getElementById(id);\r\n        if (!el) return;\r\n        if (!(window as any).dialogs) (window as any).dialogs = {};\r\n        if (!(window as any).dialogs[id] && typeof (window as any).Dialog === 'function') {\r\n            try {\r\n                (window as any).dialogs[id] = new (window as any).Dialog(id);\r\n            } catch {\r\n                // noop\r\n            }\r\n        }\r\n        const dlg = (window as any).dialogs[id];\r\n        if (dlg && typeof dlg.open === 'function') {\r\n            dlg.open();\r\n        } else {\r\n            const domUtils = (window as any).DOMUtils;\r\n            if (domUtils && typeof domUtils.show === 'function') {\r\n                domUtils.show(el);\r\n            } else {\r\n                el.classList.remove('hidden');\r\n            }\r\n            if (typeof (window as any).bringDialogToFront === 'function') {\r\n                (window as any).bringDialogToFront(id);\r\n            }\r\n        }\r\n        if (typeof (window as any).updateProgramLabelByTopModal === 'function') {\r\n            (window as any).updateProgramLabelByTopModal();\r\n        }\r\n    }\r\n\r\n    function toggleDarkMode() {\r\n        if (\r\n            (window as any).SystemUI &&\r\n            typeof (window as any).SystemUI.handleSystemToggle === 'function'\r\n        ) {\r\n            (window as any).SystemUI.handleSystemToggle('dark-mode');\r\n        } else {\r\n            const next = !document.documentElement.classList.contains('dark');\r\n            document.documentElement.classList.toggle('dark', next);\r\n            if (\r\n                (window as any).ThemeSystem &&\r\n                typeof (window as any).ThemeSystem.setThemePreference === 'function'\r\n            ) {\r\n                (window as any).ThemeSystem.setThemePreference(next ? 'dark' : 'light');\r\n            }\r\n        }\r\n    }\r\n\r\n    function getMenuItemsForTarget(target: Element | null) {\r\n        const items: Array<any> = [];\r\n        const inDesktop = !!(\r\n            target &&\r\n            (target as Element).closest &&\r\n            (target as Element).closest('#desktop')\r\n        );\r\n        const inDockItem = !!(\r\n            target &&\r\n            (target as Element).closest &&\r\n            (target as Element).closest('#dock .dock-item')\r\n        );\r\n        const inImageModal = !!(\r\n            target &&\r\n            (target as Element).closest &&\r\n            (target as Element).closest('#image-modal')\r\n        );\r\n        const inFinderModal = !!(\r\n            target &&\r\n            (target as Element).closest &&\r\n            (target as Element).closest('#finder-modal')\r\n        );\r\n\r\n        if (inDockItem) {\r\n            const dockItem = (target as Element).closest('#dock .dock-item') as Element | null;\r\n            const winId = dockItem && dockItem.getAttribute('data-window-id');\r\n            if (winId) {\r\n                items.push({\r\n                    id: 'open-dock-window',\r\n                    label: i18n.translate('context.open') || '\u00D6ffnen',\r\n                    action: () => openModal(winId),\r\n                });\r\n                items.push({ type: 'separator' });\r\n            }\r\n        }\r\n\r\n        if (inImageModal && typeof (window as any).getImageViewerState === 'function') {\r\n            const st = (window as any).getImageViewerState();\r\n            if (st && st.hasImage) {\r\n                items.push({\r\n                    id: 'image-open-tab',\r\n                    label:\r\n                        i18n.translate('context.image.openInTab') ||\r\n                        i18n.translate('menu.image.openInTab') ||\r\n                        'Bild in neuem Tab \u00F6ffnen',\r\n                    action: () => {\r\n                        if (typeof (window as any).openActiveImageInNewTab === 'function')\r\n                            (window as any).openActiveImageInNewTab();\r\n                    },\r\n                });\r\n                items.push({\r\n                    id: 'image-save',\r\n                    label:\r\n                        i18n.translate('context.image.save') ||\r\n                        i18n.translate('menu.image.saveImage') ||\r\n                        'Bild sichern \u2026',\r\n                    action: () => {\r\n                        if (typeof (window as any).downloadActiveImage === 'function')\r\n                            (window as any).downloadActiveImage();\r\n                    },\r\n                });\r\n                items.push({ type: 'separator' });\r\n            }\r\n        }\r\n\r\n        if (inFinderModal) {\r\n            const finderItem =\r\n                target &&\r\n                (target as Element).closest &&\r\n                (target as Element).closest('.finder-list-item, .finder-grid-item');\r\n            if (finderItem) {\r\n                const itemName = (finderItem as Element).getAttribute('data-item-name');\r\n                const itemType = (finderItem as Element).getAttribute('data-item-type');\r\n                if (itemName && itemType) {\r\n                    items.push({\r\n                        id: 'finder-open-item',\r\n                        label: i18n.translate('context.finder.openItem') || '\u00D6ffnen',\r\n                        action: () => {\r\n                            if (\r\n                                (window as any).FinderSystem &&\r\n                                typeof (window as any).FinderSystem.openItem === 'function'\r\n                            )\r\n                                (window as any).FinderSystem.openItem(itemName, itemType);\r\n                        },\r\n                    });\r\n\r\n                    // \"Open with Preview\" for image files\r\n                    const isImage = /\\.(png|jpe?g|gif|bmp|webp|svg)$/i.test(itemName);\r\n                    if (isImage && itemType === 'file') {\r\n                        items.push({\r\n                            id: 'finder-open-with-preview',\r\n                            label: i18n.translate('context.finder.openWithPreview') || '\u00D6ffnen mit Vorschau',\r\n                            action: () => {\r\n                                // Use ActionBus for simplicity\r\n                                const ab = (window as any).ActionBus;\r\n                                if (ab && typeof ab.execute === 'function') {\r\n                                    ab.execute('openWithPreview', { itemName });\r\n                                }\r\n                            },\r\n                        });\r\n                    }\r\n\r\n                    items.push({ type: 'separator' });\r\n                    items.push({\r\n                        id: 'finder-get-info',\r\n                        label: i18n.translate('context.finder.getInfo') || 'Informationen',\r\n                        action: () => {\r\n                            console.log('Get info for:', itemName, itemType);\r\n                        },\r\n                    });\r\n                    return items;\r\n                }\r\n            }\r\n\r\n            items.push({\r\n                id: 'finder-refresh',\r\n                label: i18n.translate('context.finder.refresh') || 'Aktualisieren',\r\n                action: () => {\r\n                    if (\r\n                        (window as any).FinderSystem &&\r\n                        typeof (window as any).FinderSystem.navigateTo === 'function'\r\n                    ) {\r\n                        const state = (window as any).FinderSystem.getState();\r\n                        if (state) {\r\n                            (window as any).FinderSystem.navigateTo(\r\n                                state.currentPath,\r\n                                state.currentView\r\n                            );\r\n                        }\r\n                    }\r\n                },\r\n            });\r\n            items.push({ type: 'separator' });\r\n\r\n            const currentViewMode =\r\n                (window as any).FinderSystem && (window as any).FinderSystem.getState\r\n                    ? (window as any).FinderSystem.getState().viewMode\r\n                    : 'list';\r\n            if (currentViewMode !== 'list') {\r\n                items.push({\r\n                    id: 'finder-view-list',\r\n                    label: i18n.translate('context.finder.viewList') || 'Als Liste',\r\n                    action: () => {\r\n                        if (\r\n                            (window as any).FinderSystem &&\r\n                            typeof (window as any).FinderSystem.setViewMode === 'function'\r\n                        )\r\n                            (window as any).FinderSystem.setViewMode('list');\r\n                    },\r\n                });\r\n            }\r\n            if (currentViewMode !== 'grid') {\r\n                items.push({\r\n                    id: 'finder-view-grid',\r\n                    label: i18n.translate('context.finder.viewGrid') || 'Als Raster',\r\n                    action: () => {\r\n                        if (\r\n                            (window as any).FinderSystem &&\r\n                            typeof (window as any).FinderSystem.setViewMode === 'function'\r\n                        )\r\n                            (window as any).FinderSystem.setViewMode('grid');\r\n                    },\r\n                });\r\n            }\r\n            items.push({ type: 'separator' });\r\n\r\n            items.push({\r\n                id: 'finder-sort-name',\r\n                label: i18n.translate('context.finder.sortByName') || 'Nach Name sortieren',\r\n                action: () => {\r\n                    if (\r\n                        (window as any).FinderSystem &&\r\n                        typeof (window as any).FinderSystem.setSortBy === 'function'\r\n                    )\r\n                        (window as any).FinderSystem.setSortBy('name');\r\n                },\r\n            });\r\n            items.push({\r\n                id: 'finder-sort-date',\r\n                label: i18n.translate('context.finder.sortByDate') || 'Nach Datum sortieren',\r\n                action: () => {\r\n                    if (\r\n                        (window as any).FinderSystem &&\r\n                        typeof (window as any).FinderSystem.setSortBy === 'function'\r\n                    )\r\n                        (window as any).FinderSystem.setSortBy('date');\r\n                },\r\n            });\r\n            items.push({\r\n                id: 'finder-sort-size',\r\n                label: i18n.translate('context.finder.sortBySize') || 'Nach Gr\u00F6\u00DFe sortieren',\r\n                action: () => {\r\n                    if (\r\n                        (window as any).FinderSystem &&\r\n                        typeof (window as any).FinderSystem.setSortBy === 'function'\r\n                    )\r\n                        (window as any).FinderSystem.setSortBy('size');\r\n                },\r\n            });\r\n\r\n            return items;\r\n        }\r\n\r\n        if (inDesktop) {\r\n            items.push({\r\n                id: 'open-finder',\r\n                label: i18n.translate('context.openFinder') || 'Finder \u00F6ffnen',\r\n                action: () => openModal('finder-modal'),\r\n            });\r\n            items.push({\r\n                id: 'open-text',\r\n                label: i18n.translate('context.openTextEditor') || 'Texteditor \u00F6ffnen',\r\n                action: () => openModal('text-modal'),\r\n            });\r\n            items.push({\r\n                id: 'open-projects',\r\n                label: i18n.translate('context.openProjects') || 'Projekte \u00F6ffnen',\r\n                action: () => openModal('projects-modal'),\r\n            });\r\n            items.push({ type: 'separator' });\r\n            items.push({\r\n                id: 'toggle-dark',\r\n                label: i18n.translate('context.toggleDarkMode') || 'Dark Mode umschalten',\r\n                action: toggleDarkMode,\r\n            });\r\n            items.push({\r\n                id: 'open-settings',\r\n                label: i18n.translate('context.openSettings') || 'Systemeinstellungen \u2026',\r\n                action: () => openModal('settings-modal'),\r\n            });\r\n            items.push({ type: 'separator' });\r\n            items.push({\r\n                id: 'about',\r\n                label: i18n.translate('context.about') || '\u00DCber Marvin',\r\n                action: () => openModal('about-modal'),\r\n            });\r\n            return items;\r\n        }\r\n\r\n        items.push({\r\n            id: 'open-finder',\r\n            label: i18n.translate('context.openFinder') || 'Finder \u00F6ffnen',\r\n            action: () => openModal('finder-modal'),\r\n        });\r\n        items.push({\r\n            id: 'open-text',\r\n            label: i18n.translate('context.openTextEditor') || 'Texteditor \u00F6ffnen',\r\n            action: () => openModal('text-modal'),\r\n        });\r\n        items.push({ type: 'separator' });\r\n        items.push({\r\n            id: 'toggle-dark',\r\n            label: i18n.translate('context.toggleDarkMode') || 'Dark Mode umschalten',\r\n            action: toggleDarkMode,\r\n        });\r\n        items.push({\r\n            id: 'open-settings',\r\n            label: i18n.translate('context.openSettings') || 'Systemeinstellungen \u2026',\r\n            action: () => openModal('settings-modal'),\r\n        });\r\n        items.push({ type: 'separator' });\r\n        items.push({\r\n            id: 'about',\r\n            label: i18n.translate('context.about') || '\u00DCber Marvin',\r\n            action: () => openModal('about-modal'),\r\n        });\r\n        return items;\r\n    }\r\n\r\n    // Create DOM once\r\n    const menu = document.createElement('ul');\r\n    menu.id = 'context-menu';\r\n    menu.className = 'menu-dropdown context-menu hidden';\r\n    menu.setAttribute('role', 'menu');\r\n    menu.setAttribute('aria-label', i18n.translate('context.menuLabel') || 'Kontextmen\u00FC');\r\n\r\n    document.addEventListener('DOMContentLoaded', () => {\r\n        if (!document.body.contains(menu)) document.body.appendChild(menu);\r\n        try {\r\n            i18n.applyTranslations(menu);\r\n        } catch {}\r\n    });\r\n\r\n    function clearMenu() {\r\n        while (menu.firstChild) menu.removeChild(menu.firstChild);\r\n    }\r\n\r\n    function renderMenu(items: Array<any>) {\r\n        clearMenu();\r\n        const fragment = document.createDocumentFragment();\r\n        let firstFocusable: HTMLElement | null = null;\r\n        items.forEach((it: any, idx: number) => {\r\n            if (it.type === 'separator') {\r\n                const sep = document.createElement('li');\r\n                sep.className = 'menu-separator';\r\n                sep.setAttribute('role', 'separator');\r\n                fragment.appendChild(sep);\r\n                return;\r\n            }\r\n            const li = document.createElement('li');\r\n            const btn = document.createElement('button');\r\n            btn.type = 'button';\r\n            btn.className = 'menu-item';\r\n            btn.setAttribute('role', 'menuitem');\r\n            btn.tabIndex = -1;\r\n            btn.dataset.itemId = it.id || 'item-' + idx;\r\n            const labelSpan = document.createElement('span');\r\n            labelSpan.className = 'menu-item-label';\r\n            labelSpan.textContent = it.label || '';\r\n            btn.appendChild(labelSpan);\r\n            btn.addEventListener('click', ev => {\r\n                ev.stopPropagation();\r\n                hideContextMenu();\r\n                try {\r\n                    if (it.action) {\r\n                        it.action();\r\n                    }\r\n                } catch (e) {\r\n                    console.warn('Context action failed', e);\r\n                }\r\n            });\r\n            li.appendChild(btn);\r\n            fragment.appendChild(li);\r\n            if (!firstFocusable) firstFocusable = btn;\r\n        });\r\n        menu.appendChild(fragment);\r\n        try {\r\n            i18n.applyTranslations(menu);\r\n        } catch {}\r\n        return firstFocusable;\r\n    }\r\n\r\n    function clampPosition(x: number, y: number) {\r\n        const rect = menu.getBoundingClientRect();\r\n        const vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\r\n        const vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n        const margin = 6;\r\n        const nx = Math.min(Math.max(margin, x), Math.max(margin, vw - rect.width - margin));\r\n        const ny = Math.min(Math.max(margin, y), Math.max(margin, vh - rect.height - margin));\r\n        return { x: nx, y: ny };\r\n    }\r\n\r\n    function showContextMenu(ev: MouseEvent) {\r\n        const target = ev.target instanceof Element ? ev.target : null;\r\n        if (!target) return;\r\n        if (target.closest('input, textarea, [contenteditable=\"true\"]')) return;\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n        hideAllDropdowns();\r\n        buildAndOpenAt(ev.clientX, ev.clientY, target);\r\n    }\r\n\r\n    function buildAndOpenAt(x: number, y: number, target: Element | null) {\r\n        const items = getMenuItemsForTarget(target);\r\n        const firstFocusable = renderMenu(items);\r\n        if (document.body && menu.parentElement !== document.body) {\r\n            document.body.appendChild(menu);\r\n        } else if (document.body && document.body.lastElementChild !== menu) {\r\n            document.body.appendChild(menu);\r\n        }\r\n        const domUtils = (window as any).DOMUtils;\r\n        if (domUtils && typeof domUtils.show === 'function') {\r\n            domUtils.show(menu);\r\n        } else {\r\n            menu.classList.remove('hidden');\r\n        }\r\n        menu.style.left = Math.max(0, x) + 'px';\r\n        menu.style.top = Math.max(0, y) + 'px';\r\n        const clamped = clampPosition(x, y);\r\n        menu.style.left = clamped.x + 'px';\r\n        menu.style.top = clamped.y + 'px';\r\n        if (lastInvokeWasKeyboard && firstFocusable) {\r\n            (firstFocusable as HTMLElement).focus();\r\n        }\r\n        bindAutoClose();\r\n    }\r\n\r\n    function hideContextMenu() {\r\n        const domUtils = (window as any).DOMUtils;\r\n        if (!menu.classList.contains('hidden')) {\r\n            if (domUtils && typeof domUtils.hide === 'function') {\r\n                domUtils.hide(menu);\r\n            } else {\r\n                menu.classList.add('hidden');\r\n            }\r\n        }\r\n        unbindAutoClose();\r\n    }\r\n\r\n    let onDocClick: ((e: Event) => void) | null = null;\r\n    let onDocScroll: (() => void) | null = null;\r\n    let onResize: (() => void) | null = null;\r\n    let onKeyDown: ((e: KeyboardEvent) => void) | null = null;\r\n\r\n    function bindAutoClose() {\r\n        unbindAutoClose();\r\n        onDocClick = (e: Event) => {\r\n            const t = e.target instanceof Element ? e.target : null;\r\n            if (!t) {\r\n                hideContextMenu();\r\n                return;\r\n            }\r\n            if (t.closest('#context-menu')) return;\r\n            hideContextMenu();\r\n        };\r\n        onDocScroll = () => hideContextMenu();\r\n        onResize = () => hideContextMenu();\r\n        onKeyDown = (e: KeyboardEvent) => {\r\n            const items = Array.from(menu.querySelectorAll('.menu-item')) as HTMLElement[];\r\n            const focusIdx = items.findIndex(el => el === document.activeElement);\r\n            if (e.key === 'Escape') {\r\n                e.preventDefault();\r\n                hideContextMenu();\r\n                return;\r\n            }\r\n            if (!items.length) return;\r\n            if (e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                const next = items[(Math.max(0, focusIdx) + 1) % items.length];\r\n                if (next) next.focus();\r\n            } else if (e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                const next = items[(focusIdx > 0 ? focusIdx : items.length) - 1];\r\n                if (next) next.focus();\r\n            } else if (e.key === 'Home') {\r\n                e.preventDefault();\r\n                items[0]?.focus();\r\n            } else if (e.key === 'End') {\r\n                e.preventDefault();\r\n                items[items.length - 1]?.focus();\r\n            } else if (e.key === 'Enter' || e.key === ' ') {\r\n                if (\r\n                    document.activeElement &&\r\n                    (document.activeElement as Element).classList.contains('menu-item')\r\n                ) {\r\n                    e.preventDefault();\r\n                    (document.activeElement as HTMLElement).click();\r\n                }\r\n            }\r\n        };\r\n        document.addEventListener('click', onDocClick as EventListener, { capture: true });\r\n        document.addEventListener('contextmenu', onDocClick as EventListener, { capture: true });\r\n        document.addEventListener('scroll', onDocScroll as EventListener, { capture: true });\r\n        window.addEventListener('resize', onResize as EventListener);\r\n        document.addEventListener('keydown', onKeyDown as EventListener);\r\n    }\r\n\r\n    function unbindAutoClose() {\r\n        if (onDocClick)\r\n            document.removeEventListener('click', onDocClick as EventListener, { capture: true });\r\n        if (onDocClick)\r\n            document.removeEventListener('contextmenu', onDocClick as EventListener, {\r\n                capture: true,\r\n            });\r\n        if (onDocScroll)\r\n            document.removeEventListener('scroll', onDocScroll as EventListener, { capture: true });\r\n        if (onResize) window.removeEventListener('resize', onResize as EventListener);\r\n        if (onKeyDown) document.removeEventListener('keydown', onKeyDown as EventListener);\r\n        onDocClick = onDocScroll = onResize = onKeyDown = null;\r\n    }\r\n\r\n    let lastInvokeWasKeyboard = false;\r\n    document.addEventListener('keydown', e => {\r\n        if (e.key === 'ContextMenu' || (e.shiftKey && e.key === 'F10')) {\r\n            lastInvokeWasKeyboard = true;\r\n        }\r\n    });\r\n    document.addEventListener(\r\n        'keyup',\r\n        () => {\r\n            lastInvokeWasKeyboard = false;\r\n        },\r\n        { capture: true }\r\n    );\r\n\r\n    document.addEventListener('contextmenu', showContextMenu);\r\n\r\n    if (typeof (window as any).bindDropdownTrigger === 'function') {\r\n        document.querySelectorAll('[data-menubar-trigger-button=\"true\"]').forEach(btn => {\r\n            btn.addEventListener('click', () => hideContextMenu());\r\n        });\r\n    }\r\n}\r\n\r\nexport {};\r\n\r\n", "// ============================================================================\r\n// src/ts/storage.ts \u2014 Persistence & State Management Module (TypeScript)\r\n// Mirrors js/storage.js API and preserves global export window.StorageSystem\r\n// ============================================================================\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    console.log('\u2705 StorageSystem (TS) loaded');\r\n\r\n    // ===== Types =====\r\n    type FinderState = { repo: string; path?: string } | null;\r\n    type Positions = Record<\r\n        string,\r\n        { left: string; top: string; width: string; height: string; position: string }\r\n    >;\r\n\r\n    // ===== Module Dependencies / Constants =====\r\n    const w = window as unknown as Record<string, unknown>;\r\n    const APP_CONSTANTS = (w.APP_CONSTANTS as Record<string, unknown>) || {};\r\n\r\n    const FINDER_STATE_KEY = (APP_CONSTANTS.FINDER_STATE_STORAGE_KEY as string) || 'finderState';\r\n    const OPEN_MODALS_KEY = 'openModals';\r\n    const MODAL_POSITIONS_KEY = 'modalPositions';\r\n\r\n    const getModalIds = (): string[] => {\r\n        const ac = (w.APP_CONSTANTS as Record<string, unknown> | undefined) || undefined;\r\n        const v = ac && (ac['MODAL_IDS'] as unknown);\r\n        return Array.isArray(v) ? (v as string[]) : [];\r\n    };\r\n    const getTransientModalIds = (): Set<string> => {\r\n        const ac = (w.APP_CONSTANTS as Record<string, unknown> | undefined) || undefined;\r\n        const v = ac && (ac['TRANSIENT_MODAL_IDS'] as unknown);\r\n        return v instanceof Set ? (v as Set<string>) : new Set<string>();\r\n    };\r\n\r\n    // ===== Finder State Persistence =====\r\n\r\n    function readFinderState(): FinderState {\r\n        try {\r\n            const raw = localStorage.getItem(FINDER_STATE_KEY);\r\n            if (!raw) return null;\r\n            const parsed = JSON.parse(raw);\r\n            if (!parsed || typeof parsed !== 'object') return null;\r\n            const po = parsed as Record<string, unknown>;\r\n            const repo = typeof po.repo === 'string' ? po.repo.trim() : '';\r\n            if (!repo) return null;\r\n            return {\r\n                repo,\r\n                path: typeof po.path === 'string' ? po.path : '',\r\n            };\r\n        } catch (err) {\r\n            console.warn('Finder state konnte nicht gelesen werden:', err);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function writeFinderState(state: { repo: string; path?: string } | null | undefined): void {\r\n        if (!state || typeof state.repo !== 'string' || !state.repo) {\r\n            clearFinderState();\r\n            return;\r\n        }\r\n        const payload = {\r\n            repo: state.repo,\r\n            path: typeof state.path === 'string' ? state.path : '',\r\n        };\r\n        try {\r\n            localStorage.setItem(FINDER_STATE_KEY, JSON.stringify(payload));\r\n        } catch (err) {\r\n            console.warn('Finder state konnte nicht gespeichert werden:', err);\r\n        }\r\n    }\r\n\r\n    function clearFinderState(): void {\r\n        try {\r\n            localStorage.removeItem(FINDER_STATE_KEY);\r\n        } catch (err) {\r\n            console.warn('Finder state konnte nicht gel\u00F6scht werden:', err);\r\n        }\r\n    }\r\n\r\n    // ===== Open Modals Persistence =====\r\n\r\n    function saveOpenModals(): void {\r\n        const modalIds = getModalIds();\r\n        const transientModalIds = getTransientModalIds();\r\n\r\n        const openModals = modalIds.filter(id => {\r\n            if (transientModalIds.has(id)) return false;\r\n            const el = document.getElementById(id) as HTMLElement | null;\r\n            if (!el) return false;\r\n            const minimized = el.dataset && el.dataset.minimized === 'true';\r\n            return !el.classList.contains('hidden') || minimized;\r\n        });\r\n\r\n        try {\r\n            localStorage.setItem(OPEN_MODALS_KEY, JSON.stringify(openModals));\r\n        } catch (err) {\r\n            console.warn('Open modals konnte nicht gespeichert werden:', err);\r\n        }\r\n    }\r\n\r\n    function restoreOpenModals(): void {\r\n        const transientModalIds = getTransientModalIds();\r\n        let openModals: string[] = [];\r\n\r\n        try {\r\n            openModals = JSON.parse(localStorage.getItem(OPEN_MODALS_KEY) || '[]');\r\n        } catch (err) {\r\n            console.warn('Open modals konnte nicht gelesen werden:', err);\r\n            return;\r\n        }\r\n\r\n        openModals.forEach(id => {\r\n            // Skip transient modals\r\n            if (transientModalIds.has(id)) return;\r\n\r\n            // Validate modal exists in DOM\r\n            const el = document.getElementById(id);\r\n            if (!el) {\r\n                console.warn(`Skipping restore of modal \"${id}\": element not found in DOM`);\r\n                return;\r\n            }\r\n\r\n            // Validate modal is registered in WindowManager (if available)\r\n            const WindowManager = w['WindowManager'] as\r\n                | { getConfig?: (id: string) => unknown }\r\n                | undefined;\r\n            if (WindowManager && typeof WindowManager.getConfig === 'function') {\r\n                const config = WindowManager.getConfig(id);\r\n                if (!config) {\r\n                    console.warn(\r\n                        `Skipping restore of modal \"${id}\": not registered in WindowManager`\r\n                    );\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // Attempt to restore via dialog instance\r\n            const dialogs = w['dialogs'] as Record<string, unknown> | undefined;\r\n            const dialogInstance = dialogs && (dialogs[id] as Record<string, unknown> | null);\r\n            const openFn = dialogInstance && (dialogInstance['open'] as (() => void) | undefined);\r\n\r\n            if (typeof openFn === 'function') {\r\n                try {\r\n                    openFn();\r\n                } catch (err) {\r\n                    console.warn(`Error restoring modal \"${id}\":`, err);\r\n                    // Fallback: try to show element directly\r\n                    const domUtils = (\r\n                        w as unknown as { DOMUtils?: { show?: (el: Element) => void } }\r\n                    ).DOMUtils;\r\n                    if (domUtils && typeof domUtils.show === 'function') {\r\n                        domUtils.show(el);\r\n                    } else {\r\n                        el.classList.remove('hidden');\r\n                    }\r\n                }\r\n            } else {\r\n                // Fallback: no dialog instance, just show the element\r\n                const domUtils = (w as unknown as { DOMUtils?: { show?: (el: Element) => void } })\r\n                    .DOMUtils;\r\n                if (domUtils && typeof domUtils.show === 'function') {\r\n                    domUtils.show(el);\r\n                } else {\r\n                    el.classList.remove('hidden');\r\n                }\r\n            }\r\n        });\r\n\r\n        // Update dock indicators and program label (if available)\r\n        const updateDockIndicators = w['updateDockIndicators'] as (() => void) | undefined;\r\n        if (typeof updateDockIndicators === 'function') updateDockIndicators();\r\n        const updateProgramLabelByTopModal = w['updateProgramLabelByTopModal'] as\r\n            | (() => void)\r\n            | undefined;\r\n        if (typeof updateProgramLabelByTopModal === 'function') updateProgramLabelByTopModal();\r\n    }\r\n\r\n    // ===== Window Positions & Sizes =====\r\n\r\n    function getDialogWindowElement(modal: HTMLElement | null): HTMLElement | null {\r\n        if (!modal) return null;\r\n        return (modal.querySelector('.autopointer') as HTMLElement | null) || modal;\r\n    }\r\n\r\n    function saveWindowPositions(): void {\r\n        const modalIds = getModalIds();\r\n        const transientModalIds = getTransientModalIds();\r\n        const positions: Positions = {};\r\n\r\n        modalIds.forEach(id => {\r\n            if (transientModalIds.has(id)) return;\r\n            const el = document.getElementById(id) as HTMLElement | null;\r\n            const windowEl = getDialogWindowElement(el);\r\n            if (el && windowEl) {\r\n                positions[id] = {\r\n                    left: windowEl.style.left || '',\r\n                    top: windowEl.style.top || '',\r\n                    width: windowEl.style.width || '',\r\n                    height: windowEl.style.height || '',\r\n                    position: windowEl.style.position || '',\r\n                };\r\n            }\r\n        });\r\n\r\n        try {\r\n            localStorage.setItem(MODAL_POSITIONS_KEY, JSON.stringify(positions));\r\n        } catch (err) {\r\n            console.warn('Window positions konnte nicht gespeichert werden:', err);\r\n        }\r\n    }\r\n\r\n    function restoreWindowPositions(): void {\r\n        const transientModalIds = getTransientModalIds();\r\n        let positions: Positions = {};\r\n\r\n        try {\r\n            positions = JSON.parse(localStorage.getItem(MODAL_POSITIONS_KEY) || '{}');\r\n        } catch (err) {\r\n            console.warn('Window positions konnte nicht gelesen werden:', err);\r\n            return;\r\n        }\r\n\r\n        Object.keys(positions).forEach(id => {\r\n            if (transientModalIds.has(id)) return;\r\n            const el = document.getElementById(id) as HTMLElement | null;\r\n            const windowEl = getDialogWindowElement(el);\r\n            if (el && windowEl) {\r\n                const stored = positions[id];\r\n                // noUncheckedIndexedAccess: positions[id] may be undefined\r\n                if (!stored) return;\r\n\r\n                if (stored.position) {\r\n                    windowEl.style.position = stored.position;\r\n                } else if (stored.left || stored.top) {\r\n                    windowEl.style.position = 'fixed';\r\n                }\r\n                if (stored.left) windowEl.style.left = stored.left;\r\n                if (stored.top) windowEl.style.top = stored.top;\r\n                if (stored.width) windowEl.style.width = stored.width;\r\n                if (stored.height) windowEl.style.height = stored.height;\r\n            }\r\n\r\n            const clampWindowToMenuBar = w['clampWindowToMenuBar'] as\r\n                | ((el: HTMLElement | null) => void)\r\n                | undefined;\r\n            if (typeof clampWindowToMenuBar === 'function') {\r\n                clampWindowToMenuBar(windowEl);\r\n            }\r\n        });\r\n    }\r\n\r\n    // ===== Layout Reset =====\r\n\r\n    function resetWindowLayout(): void {\r\n        const modalIds = getModalIds();\r\n\r\n        modalIds.forEach(id => {\r\n            const modal = document.getElementById(id) as HTMLElement | null;\r\n            const windowEl = getDialogWindowElement(modal);\r\n            if (modal) {\r\n                modal.style.zIndex = '';\r\n            }\r\n            if (windowEl) {\r\n                windowEl.style.left = '';\r\n                windowEl.style.top = '';\r\n                windowEl.style.width = '';\r\n                windowEl.style.height = '';\r\n                windowEl.style.position = '';\r\n                windowEl.style.zIndex = '';\r\n            }\r\n        });\r\n\r\n        if (typeof w['topZIndex'] !== 'undefined') {\r\n            w['topZIndex'] = 1000 as unknown;\r\n        }\r\n\r\n        try {\r\n            localStorage.removeItem(MODAL_POSITIONS_KEY);\r\n        } catch (err) {\r\n            console.warn('Modal positions konnte nicht gel\u00F6scht werden:', err);\r\n        }\r\n\r\n        const hideMenuDropdowns = w['hideMenuDropdowns'] as (() => void) | undefined;\r\n        if (typeof hideMenuDropdowns === 'function') hideMenuDropdowns();\r\n\r\n        const syncTopZIndexWithDOM = w['syncTopZIndexWithDOM'] as (() => void) | undefined;\r\n        if (typeof syncTopZIndexWithDOM === 'function') syncTopZIndexWithDOM();\r\n\r\n        const dialogs = w['dialogs'] as Record<string, unknown> | undefined;\r\n        if (dialogs) {\r\n            Object.values(dialogs).forEach(dialog => {\r\n                const enforce = (dialog as Record<string, unknown>)['enforceMenuBarBoundary'] as\r\n                    | (() => void)\r\n                    | undefined;\r\n                if (typeof enforce === 'function') enforce();\r\n            });\r\n        }\r\n\r\n        // Clear finder state\r\n        clearFinderState();\r\n\r\n        const updateProgramLabelByTopModal = w['updateProgramLabelByTopModal'] as\r\n            | (() => void)\r\n            | undefined;\r\n        if (typeof updateProgramLabelByTopModal === 'function') updateProgramLabelByTopModal();\r\n    }\r\n\r\n    // ===== Public API (global) =====\r\n\r\n    const api = {\r\n        // Finder state\r\n        readFinderState,\r\n        writeFinderState,\r\n        clearFinderState,\r\n\r\n        // Open modals\r\n        saveOpenModals,\r\n        restoreOpenModals,\r\n\r\n        // Window positions\r\n        saveWindowPositions,\r\n        restoreWindowPositions,\r\n        getDialogWindowElement,\r\n\r\n        // Layout reset\r\n        resetWindowLayout,\r\n    };\r\n\r\n    w['StorageSystem'] = api;\r\n})();\r\n\r\n", "/**\r\n * SessionManager - Debounced Auto-Save System for Window Instances\r\n * \r\n * Provides centralized, debounced persistence of window instance state to localStorage.\r\n * Handles storage quota limits gracefully and coordinates saves across multiple instances.\r\n */\r\n\r\nconsole.log('SessionManager loaded');\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    // ===== Types =====\r\n    type InstanceData = {\r\n        instanceId: string;\r\n        type: string;\r\n        title: string;\r\n        state: Record<string, unknown>;\r\n        metadata: Record<string, unknown>;\r\n    };\r\n\r\n    type SessionData = {\r\n        version: string;\r\n        timestamp: number;\r\n        instances: Record<string, InstanceData[]>; // Keyed by instance type (terminal, text-editor, etc.)\r\n    };\r\n\r\n    type SaveOptions = {\r\n        immediate?: boolean; // Skip debounce and save immediately\r\n    };\r\n\r\n    // ===== Constants =====\r\n    const SESSION_STORAGE_KEY = 'windowInstancesSession';\r\n    const SESSION_VERSION = '1.0';\r\n    const DEFAULT_DEBOUNCE_MS = 750; // Conservative default\r\n    const MAX_STORAGE_SIZE = 5 * 1024 * 1024; // 5MB conservative limit (most browsers allow 5-10MB)\r\n\r\n    // ===== Module Variables =====\r\n    let saveTimer: number | null = null;\r\n    let debounceDelay = DEFAULT_DEBOUNCE_MS;\r\n    let pendingSaveTypes = new Set<string>(); // Track which instance types need saving\r\n    let quotaExceeded = false;\r\n    let saveInProgress = false;\r\n\r\n    // ===== Storage Helpers =====\r\n\r\n    /**\r\n     * Estimate size of data in bytes (rough approximation)\r\n     */\r\n    function estimateSize(data: unknown): number {\r\n        try {\r\n            return JSON.stringify(data).length * 2; // Rough UTF-16 byte estimate\r\n        } catch {\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Check if storage quota is available\r\n     */\r\n    function checkStorageQuota(dataSize: number): boolean {\r\n        if (quotaExceeded) {\r\n            return false;\r\n        }\r\n        return dataSize < MAX_STORAGE_SIZE;\r\n    }\r\n\r\n    /**\r\n     * Read session from localStorage\r\n     */\r\n    function readSession(): SessionData | null {\r\n        try {\r\n            const raw = localStorage.getItem(SESSION_STORAGE_KEY);\r\n            if (!raw) return null;\r\n\r\n            const parsed = JSON.parse(raw) as SessionData;\r\n            if (!parsed || typeof parsed !== 'object') return null;\r\n            if (parsed.version !== SESSION_VERSION) {\r\n                console.warn(`SessionManager: Version mismatch (stored: ${parsed.version}, expected: ${SESSION_VERSION})`);\r\n                return null;\r\n            }\r\n\r\n            return parsed;\r\n        } catch (err) {\r\n            console.warn('SessionManager: Failed to read session:', err);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Write session to localStorage with quota handling\r\n     */\r\n    function writeSession(session: SessionData): boolean {\r\n        const size = estimateSize(session);\r\n        \r\n        if (!checkStorageQuota(size)) {\r\n            if (!quotaExceeded) {\r\n                console.error('SessionManager: Storage quota exceeded. Auto-save disabled.');\r\n                console.error(`Attempted to save ${(size / 1024).toFixed(2)}KB, limit is ${(MAX_STORAGE_SIZE / 1024).toFixed(2)}KB`);\r\n                quotaExceeded = true;\r\n            }\r\n            return false;\r\n        }\r\n\r\n        try {\r\n            localStorage.setItem(SESSION_STORAGE_KEY, JSON.stringify(session));\r\n            quotaExceeded = false; // Reset flag on successful save\r\n            return true;\r\n        } catch (err) {\r\n            if (err instanceof Error && err.name === 'QuotaExceededError') {\r\n                console.error('SessionManager: Storage quota exceeded:', err);\r\n                quotaExceeded = true;\r\n            } else {\r\n                console.error('SessionManager: Failed to write session:', err);\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Clear session from localStorage\r\n     */\r\n    function clearSession(): void {\r\n        try {\r\n            localStorage.removeItem(SESSION_STORAGE_KEY);\r\n            console.log('SessionManager: Session cleared');\r\n        } catch (err) {\r\n            console.warn('SessionManager: Failed to clear session:', err);\r\n        }\r\n    }\r\n\r\n    // ===== Instance Manager Integration =====\r\n\r\n    /**\r\n     * Get all instance managers registered globally\r\n     */\r\n    function getInstanceManagers(): Map<string, unknown> {\r\n        const managers = new Map<string, unknown>();\r\n        const w = window as unknown as Record<string, unknown>;\r\n\r\n        // Known instance managers (terminal, text-editor, etc.)\r\n        const knownManagers = [\r\n            'TerminalInstanceManager',\r\n            'TextEditorInstanceManager',\r\n        ];\r\n\r\n        knownManagers.forEach(key => {\r\n            const manager = w[key];\r\n            if (manager && typeof manager === 'object') {\r\n                const mgr = manager as Record<string, unknown>;\r\n                const type = typeof mgr.type === 'string' ? mgr.type : key.replace('InstanceManager', '').toLowerCase();\r\n                managers.set(type, manager);\r\n            }\r\n        });\r\n\r\n        return managers;\r\n    }\r\n\r\n    /**\r\n     * Serialize all instances from all managers\r\n     */\r\n    function serializeAllInstances(): Record<string, InstanceData[]> {\r\n        const result: Record<string, InstanceData[]> = {};\r\n        const managers = getInstanceManagers();\r\n\r\n        managers.forEach((manager, type) => {\r\n            const mgr = manager as Record<string, unknown>;\r\n            if (typeof mgr.serializeAll === 'function') {\r\n                try {\r\n                    const instances = (mgr.serializeAll as () => unknown)();\r\n                    if (Array.isArray(instances)) {\r\n                        result[type] = instances as InstanceData[];\r\n                    }\r\n                } catch (err) {\r\n                    console.error(`SessionManager: Failed to serialize instances for type \"${type}\":`, err);\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    // ===== Core Save Logic =====\r\n\r\n    /**\r\n     * Perform the actual save operation\r\n     */\r\n    function performSave(): void {\r\n        if (saveInProgress) {\r\n            console.warn('SessionManager: Save already in progress, skipping');\r\n            return;\r\n        }\r\n\r\n        saveInProgress = true;\r\n        lastSaveAttempt = Date.now();\r\n\r\n        try {\r\n            const instances = serializeAllInstances();\r\n            const session: SessionData = {\r\n                version: SESSION_VERSION,\r\n                timestamp: Date.now(),\r\n                instances,\r\n            };\r\n\r\n            const success = writeSession(session);\r\n            if (success) {\r\n                const instanceCount = Object.values(instances).reduce((sum, arr) => sum + arr.length, 0);\r\n                console.log(`SessionManager: Saved ${instanceCount} instances across ${Object.keys(instances).length} types`);\r\n            }\r\n\r\n            pendingSaveTypes.clear();\r\n        } catch (err) {\r\n            console.error('SessionManager: Save failed:', err);\r\n        } finally {\r\n            saveInProgress = false;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Schedule a debounced save\r\n     */\r\n    function scheduleSave(instanceType?: string): void {\r\n        if (instanceType) {\r\n            pendingSaveTypes.add(instanceType);\r\n        }\r\n\r\n        if (saveTimer !== null) {\r\n            clearTimeout(saveTimer);\r\n        }\r\n\r\n        saveTimer = window.setTimeout(() => {\r\n            saveTimer = null;\r\n            performSave();\r\n        }, debounceDelay);\r\n    }\r\n\r\n    // ===== Public API =====\r\n\r\n    /**\r\n     * Save all instances immediately (skip debounce)\r\n     */\r\n    function saveAll(options: SaveOptions = {}): void {\r\n        if (options.immediate) {\r\n            if (saveTimer !== null) {\r\n                clearTimeout(saveTimer);\r\n                saveTimer = null;\r\n            }\r\n            performSave();\r\n        } else {\r\n            scheduleSave();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Save instances of a specific type (debounced by default)\r\n     */\r\n    function saveInstanceType(instanceType: string, options: SaveOptions = {}): void {\r\n        if (options.immediate) {\r\n            if (saveTimer !== null) {\r\n                clearTimeout(saveTimer);\r\n                saveTimer = null;\r\n            }\r\n            performSave();\r\n        } else {\r\n            scheduleSave(instanceType);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Restore session from localStorage\r\n     */\r\n    function restoreSession(): boolean {\r\n        const session = readSession();\r\n        if (!session) {\r\n            console.log('SessionManager: No session to restore');\r\n            return false;\r\n        }\r\n\r\n        const managers = getInstanceManagers();\r\n        let restoredCount = 0;\r\n\r\n        Object.entries(session.instances).forEach(([type, instances]) => {\r\n            const manager = managers.get(type);\r\n            if (!manager) {\r\n                console.warn(`SessionManager: No manager found for type \"${type}\"`);\r\n                return;\r\n            }\r\n\r\n            const mgr = manager as Record<string, unknown>;\r\n            if (typeof mgr.deserializeAll === 'function') {\r\n                try {\r\n                    (mgr.deserializeAll as (data: InstanceData[]) => void)(instances);\r\n                    restoredCount += instances.length;\r\n                    console.log(`SessionManager: Restored ${instances.length} \"${type}\" instances`);\r\n                } catch (err) {\r\n                    console.error(`SessionManager: Failed to restore instances for type \"${type}\":`, err);\r\n                }\r\n            }\r\n        });\r\n\r\n        console.log(`SessionManager: Restored ${restoredCount} instances total`);\r\n        return restoredCount > 0;\r\n    }\r\n\r\n    /**\r\n     * Configure debounce delay\r\n     */\r\n    function setDebounceDelay(ms: number): void {\r\n        if (ms < 100 || ms > 5000) {\r\n            console.warn(`SessionManager: Invalid debounce delay ${ms}ms, must be 100-5000ms`);\r\n            return;\r\n        }\r\n        debounceDelay = ms;\r\n        console.log(`SessionManager: Debounce delay set to ${ms}ms`);\r\n    }\r\n\r\n    /**\r\n     * Get current debounce delay\r\n     */\r\n    function getDebounceDelay(): number {\r\n        return debounceDelay;\r\n    }\r\n\r\n    /**\r\n     * Clear all saved session data\r\n     */\r\n    function clear(): void {\r\n        if (saveTimer !== null) {\r\n            clearTimeout(saveTimer);\r\n            saveTimer = null;\r\n        }\r\n        pendingSaveTypes.clear();\r\n        clearSession();\r\n        quotaExceeded = false;\r\n    }\r\n\r\n    /**\r\n     * Get session statistics\r\n     */\r\n    function getStats() {\r\n        const session = readSession();\r\n        if (!session) {\r\n            return {\r\n                hasSession: false,\r\n                instanceCount: 0,\r\n                types: [],\r\n                timestamp: null,\r\n                sizeBytes: 0,\r\n            };\r\n        }\r\n\r\n        const instanceCount = Object.values(session.instances).reduce((sum, arr) => sum + arr.length, 0);\r\n        const types = Object.keys(session.instances);\r\n        const sizeBytes = estimateSize(session);\r\n\r\n        return {\r\n            hasSession: true,\r\n            instanceCount,\r\n            types,\r\n            timestamp: session.timestamp,\r\n            sizeBytes,\r\n            quotaExceeded,\r\n        };\r\n    }\r\n\r\n    // ===== Lifecycle Hooks =====\r\n\r\n    /**\r\n     * Initialize auto-save system and browser lifecycle hooks\r\n     */\r\n    function init(): void {\r\n        console.log('SessionManager: Initializing auto-save system');\r\n\r\n        // Save on window blur (user switching away)\r\n        window.addEventListener('blur', () => {\r\n            saveAll({ immediate: true });\r\n        });\r\n\r\n        // Save on beforeunload (page closing/refreshing)\r\n        window.addEventListener('beforeunload', () => {\r\n            // Must be immediate to complete before page unload\r\n            performSave();\r\n        });\r\n\r\n        // Save on visibility change (tab hidden)\r\n        document.addEventListener('visibilitychange', () => {\r\n            if (document.hidden) {\r\n                saveAll({ immediate: true });\r\n            }\r\n        });\r\n\r\n        console.log(`SessionManager: Initialized with ${debounceDelay}ms debounce`);\r\n    }\r\n\r\n    // ===== Global API =====\r\n\r\n    const SessionManager = {\r\n        init,\r\n        saveAll,\r\n        saveInstanceType,\r\n        restoreSession,\r\n        clear,\r\n        setDebounceDelay,\r\n        getDebounceDelay,\r\n        getStats,\r\n    };\r\n\r\n    (window as unknown as { SessionManager: typeof SessionManager }).SessionManager = SessionManager;\r\n})();\r\n", "/**\n * src/ts/theme.ts\n * Theme management (dark/light/system) with safe typing and legacy compatibility.\n */\n\n(() => {\n  'use strict';\n\n  type ThemePref = 'system' | 'light' | 'dark';\n\n  // Constants from global config if available\n  const win = window as unknown as Record<string, unknown>;\n  const APP_CONSTANTS = (win.APP_CONSTANTS as Record<string, unknown>) || {};\n\n  const THEME_KEY =\n    (APP_CONSTANTS.THEME_PREFERENCE_KEY as string) || 'themePreference';\n\n  const validThemePreferences: ThemePref[] = ['system', 'light', 'dark'];\n\n  const systemDarkQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n  let themePreference: ThemePref = (() => {\n    const fromStorage = localStorage.getItem(THEME_KEY) as ThemePref | null;\n    return (fromStorage && validThemePreferences.includes(fromStorage)\n      ? fromStorage\n      : 'system') as ThemePref;\n  })();\n\n  function updateThemeFromPreference(): void {\n    const useDark =\n      themePreference === 'dark' ||\n      (themePreference === 'system' && systemDarkQuery.matches);\n    document.documentElement.classList.toggle('dark', useDark);\n  }\n\n  function setThemePreference(pref: ThemePref): void {\n    if (!validThemePreferences.includes(pref)) return;\n    themePreference = pref;\n    localStorage.setItem(THEME_KEY, pref);\n    updateThemeFromPreference();\n\n    // Notify other modules\n    window.dispatchEvent(\n      new CustomEvent('themePreferenceChange', {\n        detail: { preference: pref },\n      })\n    );\n  }\n\n  function getThemePreference(): ThemePref {\n    return themePreference;\n  }\n\n  // Initialize\n  updateThemeFromPreference();\n\n  const handleSystemThemeChange = () => {\n    updateThemeFromPreference();\n  };\n\n  type MQLLegacy = MediaQueryList & {\n    addListener?: (listener: (this: MediaQueryList, ev: MediaQueryListEvent) => void) => void;\n    removeListener?: (listener: (this: MediaQueryList, ev: MediaQueryListEvent) => void) => void;\n  };\n  const mql = systemDarkQuery as MQLLegacy;\n  if (typeof mql.addEventListener === 'function') {\n    mql.addEventListener('change', handleSystemThemeChange as EventListener);\n  } else if (typeof mql.addListener === 'function') {\n    mql.addListener(handleSystemThemeChange as (this: MediaQueryList, ev: MediaQueryListEvent) => void);\n  }\n\n  // Global export\n  const w = window as unknown as Record<string, unknown>;\n  w['ThemeSystem'] = {\n    setThemePreference,\n    getThemePreference,\n    updateThemeFromPreference,\n  };\n\n  // Legacy wrappers\n  w['setThemePreference'] = setThemePreference;\n  w['getThemePreference'] = getThemePreference;\n})();\n", "/**\r\n * src/ts/base-window-instance.ts\r\n * Typed port of js/base-window-instance.js\r\n */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\n\r\nexport type EventCallback = (data?: any) => void;\r\n\r\nexport interface BaseWindowConfig {\r\n    id?: string;\r\n    type?: string;\r\n    title?: string;\r\n    initialState?: Record<string, any>;\r\n    metadata?: Record<string, any>;\r\n}\r\n\r\nexport class BaseWindowInstance {\r\n    instanceId: string;\r\n    type: string;\r\n    title: string;\r\n    container: HTMLElement | null;\r\n    windowElement: HTMLElement | null;\r\n    state: Record<string, any>;\r\n    eventListeners: Map<string, EventCallback[]>;\r\n    isInitialized: boolean;\r\n    isVisible: boolean;\r\n    metadata: Record<string, any>;\r\n\r\n    constructor(config: BaseWindowConfig) {\r\n        this.instanceId = config.id || this._generateId();\r\n        this.type = config.type || 'unknown';\r\n        this.title = config.title || 'Untitled';\r\n        this.container = null;\r\n        this.windowElement = null;\r\n        this.state = this._initializeState(config.initialState || {});\r\n        this.eventListeners = new Map();\r\n        this.isInitialized = false;\r\n        this.isVisible = false;\r\n        this.metadata = config.metadata || {};\r\n    }\r\n\r\n    private _generateId(): string {\r\n        return `${this.type}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    private _initializeState(initialState: Record<string, any>): Record<string, any> {\r\n        return {\r\n            ...initialState,\r\n            created: Date.now(),\r\n            modified: Date.now(),\r\n        };\r\n    }\r\n\r\n    init(container: HTMLElement) {\r\n        if (this.isInitialized) {\r\n            console.warn(`Instance ${this.instanceId} already initialized`);\r\n            return;\r\n        }\r\n        this.container = container;\r\n        this.render();\r\n        this.attachEventListeners();\r\n        this.isInitialized = true;\r\n        this.emit('initialized');\r\n    }\r\n\r\n    // Subclasses must implement render\r\n    render(): void {\r\n        throw new Error('render() must be implemented by subclass');\r\n    }\r\n\r\n    attachEventListeners(): void {\r\n        // optional override by subclasses\r\n    }\r\n\r\n    show(): void {\r\n        if (this.container) {\r\n            this.container.classList.remove('hidden');\r\n            this.isVisible = true;\r\n            this.emit('shown');\r\n        }\r\n    }\r\n\r\n    hide(): void {\r\n        if (this.container) {\r\n            this.container.classList.add('hidden');\r\n            this.isVisible = false;\r\n            this.emit('hidden');\r\n        }\r\n    }\r\n\r\n    destroy(): void {\r\n        this.emit('beforeDestroy');\r\n        this.removeAllEventListeners();\r\n        if (this.container) {\r\n            try {\r\n                if (typeof (this.container as any).remove === 'function') {\r\n                    (this.container as any).remove();\r\n                } else if (this.container.parentNode) {\r\n                    this.container.parentNode.removeChild(this.container);\r\n                }\r\n            } catch {\r\n                try {\r\n                    this.container.innerHTML = '';\r\n                    this.container.classList.add('hidden');\r\n                } catch {\r\n                    /* ignore */\r\n                }\r\n            }\r\n            this.container = null;\r\n        }\r\n        this.windowElement = null;\r\n        this.isInitialized = false;\r\n        this.emit('destroyed');\r\n    }\r\n\r\n    updateState(updates: Record<string, any>): void {\r\n        const oldState = { ...this.state };\r\n        this.state = {\r\n            ...this.state,\r\n            ...updates,\r\n            modified: Date.now(),\r\n        };\r\n        this.emit('stateChanged', { oldState, newState: this.state });\r\n        \r\n        // Trigger auto-save when state changes\r\n        this._triggerAutoSave();\r\n    }\r\n    \r\n    private _triggerAutoSave(): void {\r\n        const w = window as any;\r\n        if (w.SessionManager && typeof w.SessionManager.saveInstanceType === 'function') {\r\n            try {\r\n                w.SessionManager.saveInstanceType(this.type);\r\n            } catch (error) {\r\n                console.warn('Failed to trigger auto-save:', error);\r\n            }\r\n        }\r\n    }\r\n\r\n    getState(): Record<string, any> {\r\n        return { ...this.state };\r\n    }\r\n\r\n    serialize() {\r\n        return {\r\n            instanceId: this.instanceId,\r\n            type: this.type,\r\n            title: this.title,\r\n            state: this.getState(),\r\n            metadata: this.metadata,\r\n        };\r\n    }\r\n\r\n    deserialize(data: any) {\r\n        if (data.state) this.state = data.state;\r\n        if (data.title) this.title = data.title;\r\n        if (data.metadata) this.metadata = { ...this.metadata, ...data.metadata };\r\n        this.emit('deserialized');\r\n    }\r\n\r\n    emit(eventName: string, data?: any): void {\r\n        const listeners = this.eventListeners.get(eventName) || [];\r\n        listeners.forEach(callback => {\r\n            try {\r\n                callback.call(this, data);\r\n            } catch (error) {\r\n                console.error(`Error in event listener for ${eventName}:`, error);\r\n            }\r\n        });\r\n    }\r\n\r\n    on(eventName: string, callback: EventCallback): void {\r\n        if (!this.eventListeners.has(eventName)) this.eventListeners.set(eventName, []);\r\n        this.eventListeners.get(eventName)!.push(callback);\r\n    }\r\n\r\n    off(eventName: string, callback: EventCallback): void {\r\n        if (!this.eventListeners.has(eventName)) return;\r\n        const listeners = this.eventListeners.get(eventName)!;\r\n        const index = listeners.indexOf(callback);\r\n        if (index > -1) listeners.splice(index, 1);\r\n    }\r\n\r\n    removeAllEventListeners(): void {\r\n        this.eventListeners.clear();\r\n    }\r\n\r\n    focus(): void {\r\n        if (this.container && this.isVisible) this.emit('focused');\r\n    }\r\n\r\n    blur(): void {\r\n        this.emit('blurred');\r\n    }\r\n}\r\n\r\n// Attach to window for legacy compatibility\r\n// Note: Type declaration is in types/index.d.ts\r\nif (typeof window !== 'undefined') {\r\n    (window as any).BaseWindowInstance = BaseWindowInstance;\r\n}\r\n\r\nexport default BaseWindowInstance;\r\nconsole.log('BaseWindowInstance loaded');\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    type InstanceConfig = {\r\n        id?: string;\r\n        type?: string;\r\n        title?: string;\r\n        initialState?: Record<string, unknown>;\r\n        metadata?: Record<string, unknown>;\r\n    };\r\n\r\n    type StateChangeEvent = {\r\n        oldState: Record<string, unknown>;\r\n        newState: Record<string, unknown>;\r\n    };\r\n\r\n    type SerializedInstance = {\r\n        instanceId: string;\r\n        type: string;\r\n        title: string;\r\n        state: Record<string, unknown>;\r\n        metadata: Record<string, unknown>;\r\n    };\r\n\r\n    type EventCallback = (data?: unknown) => void;\r\n\r\n    class BaseWindowInstance {\r\n        instanceId: string;\r\n        type: string;\r\n        title: string;\r\n        container: HTMLElement | null;\r\n        windowElement: HTMLElement | null;\r\n        state: Record<string, unknown>;\r\n        eventListeners: Map<string, EventCallback[]>;\r\n        isInitialized: boolean;\r\n        isVisible: boolean;\r\n        metadata: Record<string, unknown>;\r\n\r\n        constructor(config: InstanceConfig) {\r\n            this.instanceId = config.id || this._generateId();\r\n            this.type = config.type || 'unknown';\r\n            this.title = config.title || 'Untitled';\r\n            this.container = null;\r\n            this.windowElement = null;\r\n            this.state = this._initializeState(config.initialState || {});\r\n            this.eventListeners = new Map();\r\n            this.isInitialized = false;\r\n            this.isVisible = false;\r\n            this.metadata = config.metadata || {};\r\n        }\r\n\r\n        protected _generateId(): string {\r\n            return `${this.type}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\r\n        }\r\n\r\n        protected _initializeState(initialState: Record<string, unknown>): Record<string, unknown> {\r\n            return {\r\n                ...initialState,\r\n                created: Date.now(),\r\n                modified: Date.now(),\r\n            };\r\n        }\r\n\r\n        init(container: HTMLElement): void {\r\n            if (this.isInitialized) {\r\n                console.warn(`Instance ${this.instanceId} already initialized`);\r\n                return;\r\n            }\r\n\r\n            this.container = container;\r\n            this.render();\r\n            this.attachEventListeners();\r\n            this.isInitialized = true;\r\n            this.emit('initialized');\r\n        }\r\n\r\n        protected render(): void {\r\n            throw new Error('render() must be implemented by subclass');\r\n        }\r\n\r\n        protected attachEventListeners(): void {\r\n            // To be implemented by subclasses\r\n        }\r\n\r\n        show(): void {\r\n            if (this.container) {\r\n                this.container.classList.remove('hidden');\r\n                this.isVisible = true;\r\n                this.emit('shown');\r\n            }\r\n        }\r\n\r\n        hide(): void {\r\n            if (this.container) {\r\n                this.container.classList.add('hidden');\r\n                this.isVisible = false;\r\n                this.emit('hidden');\r\n            }\r\n        }\r\n\r\n        destroy(): void {\r\n            this.emit('beforeDestroy');\r\n            this.removeAllEventListeners();\r\n\r\n            if (this.container) {\r\n                try {\r\n                    // Remove container element from DOM to avoid orphaned visible nodes\r\n                    if (typeof (this.container as HTMLElement).remove === 'function') {\r\n                        (this.container as HTMLElement).remove();\r\n                    } else if ((this.container as HTMLElement).parentNode) {\r\n                        (this.container as HTMLElement).parentNode!.removeChild(\r\n                            this.container as HTMLElement\r\n                        );\r\n                    }\r\n                } catch {\r\n                    // Fallback: clear contents and hide\r\n                    try {\r\n                        this.container.innerHTML = '';\r\n                        this.container.classList.add('hidden');\r\n                    } catch {\r\n                        /* ignore */\r\n                    }\r\n                }\r\n                this.container = null;\r\n            }\r\n\r\n            this.windowElement = null;\r\n            this.isInitialized = false;\r\n            this.emit('destroyed');\r\n        }\r\n\r\n        updateState(updates: Record<string, unknown>): void {\r\n            const oldState = { ...this.state };\r\n            this.state = {\r\n                ...this.state,\r\n                ...updates,\r\n                modified: Date.now(),\r\n            };\r\n            this.emit('stateChanged', { oldState, newState: this.state } as StateChangeEvent);\r\n            \r\n            // Trigger auto-save when state changes\r\n            this._triggerAutoSave();\r\n        }\r\n        \r\n        private _triggerAutoSave(): void {\r\n            const w = window as unknown as Record<string, unknown>;\r\n            const SessionManager = w.SessionManager as Record<string, unknown> | undefined;\r\n            if (SessionManager && typeof SessionManager.saveInstanceType === 'function') {\r\n                try {\r\n                    (SessionManager.saveInstanceType as (type: string) => void)(this.type);\r\n                } catch (error) {\r\n                    console.warn('Failed to trigger auto-save:', error);\r\n                }\r\n            }\r\n        }\r\n\r\n        getState(): Record<string, unknown> {\r\n            return { ...this.state };\r\n        }\r\n\r\n        serialize(): SerializedInstance {\r\n            return {\r\n                instanceId: this.instanceId,\r\n                type: this.type,\r\n                title: this.title,\r\n                state: this.getState(),\r\n                metadata: this.metadata,\r\n            };\r\n        }\r\n\r\n        deserialize(data: Partial<SerializedInstance>): void {\r\n            if (data.state) {\r\n                this.state = data.state;\r\n            }\r\n            if (data.title) {\r\n                this.title = data.title;\r\n            }\r\n            if (data.metadata) {\r\n                this.metadata = { ...this.metadata, ...data.metadata };\r\n            }\r\n            this.emit('deserialized');\r\n        }\r\n\r\n        emit(eventName: string, data?: unknown): void {\r\n            const listeners = this.eventListeners.get(eventName) || [];\r\n            listeners.forEach(callback => {\r\n                try {\r\n                    callback.call(this, data);\r\n                } catch (error) {\r\n                    console.error(`Error in event listener for ${eventName}:`, error);\r\n                }\r\n            });\r\n        }\r\n\r\n        on(eventName: string, callback: EventCallback): void {\r\n            if (!this.eventListeners.has(eventName)) {\r\n                this.eventListeners.set(eventName, []);\r\n            }\r\n            this.eventListeners.get(eventName)!.push(callback);\r\n        }\r\n\r\n        off(eventName: string, callback: EventCallback): void {\r\n            if (!this.eventListeners.has(eventName)) return;\r\n\r\n            const listeners = this.eventListeners.get(eventName)!;\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1) {\r\n                listeners.splice(index, 1);\r\n            }\r\n        }\r\n\r\n        removeAllEventListeners(): void {\r\n            this.eventListeners.clear();\r\n        }\r\n\r\n        focus(): void {\r\n            if (this.container && this.isVisible) {\r\n                this.emit('focused');\r\n            }\r\n        }\r\n\r\n        blur(): void {\r\n            this.emit('blurred');\r\n        }\r\n    }\r\n\r\n    (window as unknown as { BaseWindowInstance: typeof BaseWindowInstance }).BaseWindowInstance =\r\n        BaseWindowInstance;\r\n})();\r\n", "console.log('InstanceManager loaded');\r\n\r\n(function () {\r\n  'use strict';\r\n\r\n  type BaseInstanceLike = {\r\n    instanceId: string;\r\n    init: (container: HTMLElement) => void;\r\n    destroy: () => void;\r\n    blur: () => void;\r\n    focus: () => void;\r\n    serialize: () => Record<string, unknown>;\r\n    deserialize: (data: Record<string, unknown>) => void;\r\n    on: (event: string, callback: (data?: unknown) => void) => void;\r\n  };\r\n\r\n  type InstanceConstructor = new (config: Record<string, unknown>) => BaseInstanceLike;\r\n\r\n  type ManagerConfig = {\r\n    type: string;\r\n    instanceClass: InstanceConstructor;\r\n    maxInstances?: number;\r\n    createContainer?: (instanceId: string) => HTMLElement | null;\r\n  };\r\n\r\n  type CreateInstanceConfig = {\r\n    id?: string;\r\n    title?: string;\r\n    initialState?: Record<string, unknown>;\r\n    metadata?: Record<string, unknown>;\r\n  };\r\n\r\n  class InstanceManager {\r\n    type: string;\r\n    instanceClass: InstanceConstructor;\r\n    maxInstances: number;\r\n    createContainer: (instanceId: string) => HTMLElement | null;\r\n    instances: Map<string, BaseInstanceLike>;\r\n    activeInstanceId: string | null;\r\n    instanceCounter: number;\r\n\r\n    constructor(config: ManagerConfig) {\r\n      this.type = config.type;\r\n      this.instanceClass = config.instanceClass;\r\n      this.maxInstances = config.maxInstances || 0;\r\n      this.createContainer = config.createContainer || this._defaultCreateContainer.bind(this);\r\n\r\n      this.instances = new Map();\r\n      this.activeInstanceId = null;\r\n      this.instanceCounter = 0;\r\n    }\r\n\r\n    createInstance(config: CreateInstanceConfig = {}): BaseInstanceLike | null {\r\n      if (this.maxInstances > 0 && this.instances.size >= this.maxInstances) {\r\n        console.warn(`Maximum instances (${this.maxInstances}) reached for ${this.type}`);\r\n        return null;\r\n      }\r\n\r\n      this.instanceCounter++;\r\n      const instanceId = config.id || `${this.type}-${this.instanceCounter}`;\r\n\r\n      const container = this.createContainer(instanceId);\r\n      if (!container) {\r\n        console.error('Failed to create container for instance');\r\n        return null;\r\n      }\r\n\r\n      const instanceConfig = {\r\n        id: instanceId,\r\n        type: this.type,\r\n        title: config.title || `${this.type} ${this.instanceCounter}`,\r\n        initialState: config.initialState || {},\r\n        metadata: config.metadata || {},\r\n      };\r\n\r\n      const instance = new this.instanceClass(instanceConfig);\r\n\r\n      try {\r\n        instance.init(container);\r\n        this.instances.set(instanceId, instance);\r\n        this.activeInstanceId = instanceId;\r\n\r\n        this._setupInstanceEvents(instance);\r\n        \r\n        // Trigger auto-save after instance creation\r\n        this._triggerAutoSave();\r\n\r\n        console.log(`Created instance: ${instanceId}`);\r\n        return instance;\r\n      } catch (error) {\r\n        console.error('Failed to initialize instance:', error);\r\n        container.remove();\r\n        return null;\r\n      }\r\n    }\r\n\r\n    getInstance(instanceId: string): BaseInstanceLike | null {\r\n      return this.instances.get(instanceId) || null;\r\n    }\r\n\r\n    getActiveInstance(): BaseInstanceLike | null {\r\n      return this.activeInstanceId ? this.instances.get(this.activeInstanceId) || null : null;\r\n    }\r\n\r\n    setActiveInstance(instanceId: string): void {\r\n      if (this.instances.has(instanceId)) {\r\n        const previousId = this.activeInstanceId;\r\n\r\n        // Guard: avoid recursion if already active\r\n        if (previousId === instanceId) {\r\n          return;\r\n        }\r\n\r\n        this.activeInstanceId = instanceId;\r\n\r\n        // Blur previous instance\r\n        if (previousId) {\r\n          const previousInstance = this.instances.get(previousId);\r\n          if (previousInstance) {\r\n            previousInstance.blur();\r\n          }\r\n        }\r\n\r\n        // Focus new instance\r\n        const instance = this.instances.get(instanceId);\r\n        if (instance) {\r\n          instance.focus();\r\n        }\r\n      }\r\n    }\r\n\r\n    getAllInstances(): BaseInstanceLike[] {\r\n      return Array.from(this.instances.values());\r\n    }\r\n\r\n    getAllInstanceIds(): string[] {\r\n      return Array.from(this.instances.keys());\r\n    }\r\n\r\n    destroyInstance(instanceId: string): void {\r\n      const instance = this.instances.get(instanceId);\r\n      if (!instance) {\r\n        console.warn(`Instance ${instanceId} not found`);\r\n        return;\r\n      }\r\n\r\n      instance.destroy();\r\n      this.instances.delete(instanceId);\r\n\r\n      // Update active instance if needed\r\n      if (this.activeInstanceId === instanceId) {\r\n        const remainingIds = this.getAllInstanceIds();\r\n        // noUncheckedIndexedAccess: array access returns T | undefined\r\n        const lastId = remainingIds.length > 0 ? remainingIds[remainingIds.length - 1] : undefined;\r\n        this.activeInstanceId = lastId ?? null;\r\n      }\r\n      \r\n      // Trigger auto-save after instance destruction\r\n      this._triggerAutoSave();\r\n\r\n      console.log(`Destroyed instance: ${instanceId}`);\r\n    }\r\n\r\n    destroyAllInstances(): void {\r\n      this.instances.forEach((instance) => {\r\n        instance.destroy();\r\n      });\r\n      this.instances.clear();\r\n      this.activeInstanceId = null;\r\n      \r\n      // Trigger auto-save after destroying all instances\r\n      this._triggerAutoSave();\r\n    }\r\n\r\n    hasInstances(): boolean {\r\n      return this.instances.size > 0;\r\n    }\r\n\r\n    getInstanceCount(): number {\r\n      return this.instances.size;\r\n    }\r\n\r\n    serializeAll(): Record<string, unknown>[] {\r\n      return this.getAllInstances().map((instance) => instance.serialize());\r\n    }\r\n\r\n    deserializeAll(data: unknown): void {\r\n      if (!Array.isArray(data)) return;\r\n\r\n      data.forEach((instanceData: Record<string, unknown>) => {\r\n        const instance = this.createInstance({\r\n          id: instanceData.instanceId as string | undefined,\r\n          title: instanceData.title as string | undefined,\r\n          metadata: instanceData.metadata as Record<string, unknown> | undefined,\r\n        });\r\n\r\n        if (instance && instanceData.state) {\r\n          instance.deserialize(instanceData);\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Reorder instances to match the provided array of instance IDs\r\n     * @param newOrder - Array of instance IDs in the desired order\r\n     */\r\n    reorderInstances(newOrder: string[]): void {\r\n      // Validate that all IDs exist\r\n      const validIds = newOrder.filter(id => this.instances.has(id));\r\n      if (validIds.length !== this.instances.size) {\r\n        console.warn('Invalid reorder: not all instance IDs provided or some IDs do not exist');\r\n        return;\r\n      }\r\n\r\n      // Create a new Map with the desired order\r\n      const newMap = new Map<string, BaseInstanceLike>();\r\n      validIds.forEach(id => {\r\n        const instance = this.instances.get(id);\r\n        if (instance) {\r\n          newMap.set(id, instance);\r\n        }\r\n      });\r\n\r\n      // Replace the instances map\r\n      this.instances = newMap;\r\n      console.log('Instances reordered:', validIds);\r\n    }\r\n    \r\n    private _triggerAutoSave(): void {\r\n      const w = window as unknown as Record<string, unknown>;\r\n      const SessionManager = w.SessionManager as Record<string, unknown> | undefined;\r\n      if (SessionManager && typeof SessionManager.saveInstanceType === 'function') {\r\n        try {\r\n          (SessionManager.saveInstanceType as (type: string) => void)(this.type);\r\n        } catch (error) {\r\n          console.warn('Failed to trigger auto-save:', error);\r\n        }\r\n      }\r\n    }\r\n\r\n    private _defaultCreateContainer(instanceId: string): HTMLElement {\r\n      const container = document.createElement('div');\r\n      container.id = `${instanceId}-container`;\r\n      container.className = 'instance-container';\r\n      document.body.appendChild(container);\r\n      return container;\r\n    }\r\n\r\n    private _setupInstanceEvents(instance: BaseInstanceLike): void {\r\n      instance.on('focused', () => {\r\n        this.setActiveInstance(instance.instanceId);\r\n      });\r\n\r\n      instance.on('destroyed', () => {\r\n        this.instances.delete(instance.instanceId);\r\n      });\r\n    }\r\n  }\r\n\r\n  (window as unknown as { InstanceManager: typeof InstanceManager }).InstanceManager = InstanceManager;\r\n})();\r\n", "console.log('WindowChrome loaded');\n\n(function () {\n  'use strict';\n\n  type ControlType = 'close' | 'minimize' | 'maximize';\n\n  type TitlebarConfig = {\n    title?: string;\n    icon?: string;\n    showClose?: boolean;\n    showMinimize?: boolean;\n    showMaximize?: boolean;\n    onClose?: () => void;\n    onMinimize?: () => void;\n    onMaximize?: () => void;\n  };\n\n  type ToolbarSeparator = { type: 'separator' };\n  type ToolbarButtonCfg = {\n    label?: string;\n    icon?: string;\n    title?: string;\n    action?: string;\n    onClick?: (e: MouseEvent) => void;\n  };\n  type ToolbarItem = ToolbarSeparator | ToolbarButtonCfg;\n\n  type StatusBarConfig = {\n    leftContent?: string;\n    rightContent?: string;\n  };\n\n  type WindowFrameConfig = TitlebarConfig & {\n    toolbar?: ToolbarItem[];\n    showStatusBar?: boolean;\n    statusBarLeft?: string;\n    statusBarRight?: string;\n  };\n\n  type WindowFrameParts = {\n    frame: HTMLElement;\n    titlebar: HTMLElement;\n    content: HTMLElement;\n    statusbar: HTMLElement | null;\n  };\n\n  function createControlButton(type: ControlType, symbol: string, callback?: () => void): HTMLButtonElement {\n    const btn = document.createElement('button');\n    btn.type = 'button';\n    btn.className = `window-control-btn window-${type}-btn`;\n    btn.innerHTML = symbol;\n    btn.style.cssText =\n      'width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; border-radius: 4px; transition: background-color 0.2s;';\n\n    btn.addEventListener('mouseenter', () => {\n      if (type === 'close') {\n        btn.style.backgroundColor = '#ef4444';\n        btn.style.color = '#ffffff';\n      } else {\n        btn.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n      }\n    });\n\n    btn.addEventListener('mouseleave', () => {\n      btn.style.backgroundColor = 'transparent';\n      btn.style.color = '';\n    });\n\n    if (callback) {\n      btn.addEventListener('click', () => callback());\n    }\n\n    return btn;\n  }\n\n  function createToolbarButton(config: ToolbarButtonCfg): HTMLButtonElement {\n    const btn = document.createElement('button');\n    btn.type = 'button';\n    btn.className = 'toolbar-btn px-2 py-1 text-sm rounded hover:bg-gray-200 dark:hover:bg-gray-800 transition';\n\n    if (config.icon) {\n      btn.innerHTML = config.icon;\n    } else if (config.label) {\n      btn.textContent = config.label;\n    }\n\n    if (config.title) btn.title = config.title;\n    if (config.action) btn.dataset.action = config.action;\n    if (config.onClick) btn.addEventListener('click', config.onClick);\n\n    return btn;\n  }\n\n  const WindowChrome = {\n    createTitlebar(config: TitlebarConfig): HTMLElement {\n      const titlebar = document.createElement('div');\n      titlebar.className =\n        'window-titlebar flex items-center justify-between px-3 py-2 bg-gray-200 dark:bg-gray-800 border-b border-gray-300 dark:border-gray-700';\n      titlebar.style.cssText = 'height: 32px; cursor: move; user-select: none;';\n\n      const leftSide = document.createElement('div');\n      leftSide.className = 'flex items-center gap-2';\n\n      if (config.icon) {\n        const iconEl = document.createElement('span');\n        iconEl.className = 'window-icon';\n\n        if (config.icon.startsWith('http') || config.icon.startsWith('./') || config.icon.startsWith('/')) {\n          const img = document.createElement('img');\n          img.src = config.icon;\n          img.alt = '';\n          img.style.cssText = 'width: 16px; height: 16px; object-fit: contain;';\n          iconEl.appendChild(img);\n        } else {\n          iconEl.textContent = config.icon;\n          iconEl.style.fontSize = '16px';\n        }\n\n        leftSide.appendChild(iconEl);\n      }\n\n      const titleEl = document.createElement('span');\n      titleEl.className = 'window-title font-medium text-sm text-gray-800 dark:text-gray-200';\n      titleEl.textContent = config.title || 'Untitled';\n      (titleEl as HTMLElement).dataset.titleTarget = 'true';\n      leftSide.appendChild(titleEl);\n\n      titlebar.appendChild(leftSide);\n\n      const rightSide = document.createElement('div');\n      rightSide.className = 'flex items-center gap-1';\n\n      if (config.showMinimize) {\n        rightSide.appendChild(createControlButton('minimize', '\u2212', config.onMinimize));\n      }\n      if (config.showMaximize) {\n        rightSide.appendChild(createControlButton('maximize', '\u25A1', config.onMaximize));\n      }\n      if (config.showClose !== false) {\n        rightSide.appendChild(createControlButton('close', '\u00D7', config.onClose));\n      }\n\n      titlebar.appendChild(rightSide);\n\n      return titlebar;\n    },\n\n    createToolbar(buttons: ToolbarItem[]): HTMLElement {\n      const toolbar = document.createElement('div');\n      toolbar.className =\n        'window-toolbar flex items-center gap-2 px-3 py-2 bg-gray-100 dark:bg-gray-900 border-b border-gray-300 dark:border-gray-700';\n\n      buttons.forEach((btn) => {\n        if ((btn as ToolbarSeparator).type === 'separator') {\n          const separator = document.createElement('div');\n          separator.className = 'toolbar-separator';\n          separator.style.cssText = 'width: 1px; height: 20px; background: currentColor; opacity: 0.2;';\n          toolbar.appendChild(separator);\n        } else {\n          toolbar.appendChild(createToolbarButton(btn as ToolbarButtonCfg));\n        }\n      });\n\n      return toolbar;\n    },\n\n    createStatusBar(config: StatusBarConfig): HTMLElement {\n      const statusBar = document.createElement('div');\n      statusBar.className =\n        'window-statusbar flex items-center justify-between px-3 py-1 bg-gray-100 dark:bg-gray-900 border-t border-gray-300 dark:border-gray-700 text-xs text-gray-600 dark:text-gray-400';\n      statusBar.style.cssText = 'height: 24px;';\n\n      const leftEl = document.createElement('span');\n      leftEl.className = 'statusbar-left';\n      leftEl.textContent = config.leftContent || '';\n      statusBar.appendChild(leftEl);\n\n      const rightEl = document.createElement('span');\n      rightEl.className = 'statusbar-right';\n      rightEl.textContent = config.rightContent || '';\n      statusBar.appendChild(rightEl);\n\n      return statusBar;\n    },\n\n    updateTitle(titlebar: HTMLElement, newTitle: string): void {\n      const titleEl = titlebar.querySelector('[data-title-target=\"true\"]');\n      if (titleEl) (titleEl as HTMLElement).textContent = newTitle;\n    },\n\n    updateStatusBar(statusBar: HTMLElement, side: 'left' | 'right', content: string): void {\n      const target = statusBar.querySelector(`.statusbar-${side}`);\n      if (target) (target as HTMLElement).textContent = content;\n    },\n\n    createWindowFrame(config: WindowFrameConfig): WindowFrameParts {\n      const frame = document.createElement('div');\n      frame.className = 'window-frame flex flex-col h-full bg-white dark:bg-gray-900 rounded-lg shadow-lg overflow-hidden';\n\n      const titlebar = this.createTitlebar({\n        title: config.title || 'Untitled',\n        icon: config.icon,\n        showClose: config.showClose,\n        showMinimize: config.showMinimize,\n        showMaximize: config.showMaximize,\n        onClose: config.onClose,\n        onMinimize: config.onMinimize,\n        onMaximize: config.onMaximize,\n      });\n      frame.appendChild(titlebar);\n\n      if (config.toolbar) {\n        const toolbar = this.createToolbar(config.toolbar);\n        frame.appendChild(toolbar);\n      }\n\n      const content = document.createElement('div');\n      content.className = 'window-content flex-1 overflow-auto';\n      frame.appendChild(content);\n\n      let statusbar: HTMLElement | null = null;\n      if (config.showStatusBar) {\n        statusbar = this.createStatusBar({\n          leftContent: config.statusBarLeft || '',\n          rightContent: config.statusBarRight || '',\n        });\n        frame.appendChild(statusbar);\n      }\n\n      return { frame, titlebar, content, statusbar };\n    },\n  } as const;\n\n  (window as unknown as { WindowChrome: typeof WindowChrome }).WindowChrome = WindowChrome;\n})();\n", "(function () {\r\n    'use strict';\r\n\r\n    // Minimal structural types to avoid runtime coupling\r\n    type Instance = {\r\n        instanceId: string;\r\n        title: string;\r\n        focus?: () => void;\r\n        blur?: () => void;\r\n        destroy?: () => void;\r\n        show?: () => void;\r\n        hide?: () => void;\r\n    };\r\n\r\n    type InstanceConfig = {\r\n        id?: string;\r\n        type?: string;\r\n        title?: string;\r\n        initialState?: unknown;\r\n        metadata?: Record<string, unknown>;\r\n    };\r\n\r\n    type Manager = {\r\n        getAllInstances(): Instance[];\r\n        getActiveInstance(): Instance | null;\r\n        getAllInstanceIds(): string[];\r\n        getInstance(id: string): Instance | null;\r\n        setActiveInstance(id: string): void;\r\n        createInstance(config?: Partial<InstanceConfig>): Instance | null;\r\n        destroyInstance(id: string): void;\r\n        getInstanceCount?: () => number;\r\n        reorderInstances?: (newOrder: string[]) => void;\r\n    };\r\n\r\n    interface WindowTabsOptions {\r\n        addButton?: boolean;\r\n        onCreateInstanceTitle?: () => string | undefined;\r\n    }\r\n\r\n    interface WindowTabsController {\r\n        el: HTMLElement;\r\n        refresh(): void;\r\n        destroy(): void;\r\n        setTitle(instanceId: string, title: string): void;\r\n    }\r\n\r\n    // (reserved) helper could be added later to skip shortcuts in inputs\r\n\r\n    // Drag state for tab reordering\r\n    let draggedTab: HTMLElement | null = null;\r\n    let draggedInstanceId: string | null = null;\r\n\r\n    function createTabEl(instance: Instance, isActive: boolean): HTMLElement {\r\n        const tab = document.createElement('button');\r\n        tab.type = 'button';\r\n        tab.className = [\r\n            'wt-tab',\r\n            'px-3 py-1 text-sm rounded-t-md border border-b-0',\r\n            'transition-colors whitespace-nowrap flex items-center gap-2',\r\n            isActive\r\n                ? 'bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-gray-700'\r\n                : 'bg-gray-200/70 dark:bg-gray-800/70 text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-800',\r\n        ].join(' ');\r\n        tab.dataset.instanceId = instance.instanceId;\r\n        tab.draggable = true;\r\n\r\n        const title = document.createElement('span');\r\n        title.className = 'wt-tab-title';\r\n        title.textContent = instance.title || instance.instanceId;\r\n        tab.appendChild(title);\r\n\r\n        const close = document.createElement('span');\r\n        close.className = 'wt-tab-close ml-1 text-xs opacity-70 hover:opacity-100';\r\n        close.textContent = '\u00D7';\r\n        close.setAttribute('aria-label', 'Tab schlie\u00DFen');\r\n        close.title = 'Tab schlie\u00DFen';\r\n        tab.appendChild(close);\r\n\r\n        return tab;\r\n    }\r\n\r\n    function renderTabs(\r\n        container: HTMLElement,\r\n        manager: Manager,\r\n        options: WindowTabsOptions,\r\n        onSelect: (id: string) => void,\r\n        onClose: (id: string) => void,\r\n        onNew?: () => void\r\n    ): void {\r\n        container.innerHTML = '';\r\n\r\n        const bar = document.createElement('div');\r\n        bar.className = 'window-tabs flex items-center gap-1 px-2 pt-2 select-none';\r\n\r\n        const instances = manager.getAllInstances();\r\n        const active = manager.getActiveInstance();\r\n        const activeId = active?.instanceId ?? null;\r\n\r\n        // Diagnostic: log all instance IDs being rendered as tabs\r\n        console.log(\r\n            '[WindowTabs] Rendering tabs for instance IDs:',\r\n            instances.map(i => i.instanceId)\r\n        );\r\n        instances.forEach((inst: Instance) => {\r\n            const tab = createTabEl(inst, inst.instanceId === activeId);\r\n            // Click handlers\r\n            tab.addEventListener('click', e => {\r\n                const target = e.target as HTMLElement;\r\n                if (target.closest('.wt-tab-close')) {\r\n                    onClose(inst.instanceId);\r\n                } else {\r\n                    onSelect(inst.instanceId);\r\n                }\r\n            });\r\n            // Middle-click closes on supported devices\r\n            tab.addEventListener('auxclick', (e: MouseEvent) => {\r\n                if (e.button === 1) {\r\n                    onClose(inst.instanceId);\r\n                }\r\n            });\r\n            // Drag and drop handlers for tab reordering\r\n            tab.addEventListener('dragstart', (e: DragEvent) => {\r\n                draggedTab = tab;\r\n                draggedInstanceId = inst.instanceId;\r\n                if (e.dataTransfer) {\r\n                    e.dataTransfer.effectAllowed = 'move';\r\n                    e.dataTransfer.setData('text/plain', inst.instanceId);\r\n                }\r\n                tab.style.opacity = '0.5';\r\n            });\r\n            tab.addEventListener('dragend', () => {\r\n                tab.style.opacity = '1';\r\n                draggedTab = null;\r\n                draggedInstanceId = null;\r\n                // Remove any drop indicators\r\n                const allTabs = bar.querySelectorAll('.wt-tab');\r\n                allTabs.forEach(t => {\r\n                    (t as HTMLElement).classList.remove('border-l-4', 'border-l-blue-500');\r\n                });\r\n            });\r\n            tab.addEventListener('dragover', (e: DragEvent) => {\r\n                e.preventDefault();\r\n                if (e.dataTransfer) {\r\n                    e.dataTransfer.dropEffect = 'move';\r\n                }\r\n                // Don't show indicator on the dragged tab itself\r\n                if (tab === draggedTab) {\r\n                    return;\r\n                }\r\n                // Show visual indicator\r\n                const allTabs = bar.querySelectorAll('.wt-tab');\r\n                allTabs.forEach(t => {\r\n                    (t as HTMLElement).classList.remove('border-l-4', 'border-l-blue-500');\r\n                });\r\n                tab.classList.add('border-l-4', 'border-l-blue-500');\r\n            });\r\n            tab.addEventListener('dragleave', () => {\r\n                tab.classList.remove('border-l-4', 'border-l-blue-500');\r\n            });\r\n            tab.addEventListener('drop', (e: DragEvent) => {\r\n                e.preventDefault();\r\n                e.stopPropagation();\r\n                // Remove visual indicators\r\n                tab.classList.remove('border-l-4', 'border-l-blue-500');\r\n                if (!draggedInstanceId || draggedInstanceId === inst.instanceId) {\r\n                    return;\r\n                }\r\n                // Get current order\r\n                const currentOrder = manager.getAllInstanceIds();\r\n                const draggedIdx = currentOrder.indexOf(draggedInstanceId);\r\n                const targetIdx = currentOrder.indexOf(inst.instanceId);\r\n                if (draggedIdx === -1 || targetIdx === -1) {\r\n                    return;\r\n                }\r\n                // Create new order by moving dragged item before target\r\n                const newOrder = [...currentOrder];\r\n                newOrder.splice(draggedIdx, 1);\r\n                const newTargetIdx = newOrder.indexOf(inst.instanceId);\r\n                newOrder.splice(newTargetIdx, 0, draggedInstanceId);\r\n                // Update instance order if manager supports it\r\n                if (manager.reorderInstances) {\r\n                    manager.reorderInstances(newOrder);\r\n                    // Re-render tabs to reflect new order\r\n                    renderTabs(container, manager, options, onSelect, onClose, onNew);\r\n                }\r\n            });\r\n            bar.appendChild(tab);\r\n        });\r\n\r\n        if (options.addButton !== false) {\r\n            const addBtn = document.createElement('button');\r\n            addBtn.type = 'button';\r\n            addBtn.className =\r\n                'wt-add px-2 py-1 text-sm rounded-md border bg-gray-100 dark:bg-gray-800 border-gray-300 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-700';\r\n            addBtn.textContent = '+';\r\n            addBtn.title = 'Neue Instanz';\r\n            addBtn.addEventListener('click', () => {\r\n                if (onNew) {\r\n                    onNew();\r\n                } else {\r\n                    const title = options.onCreateInstanceTitle?.();\r\n                    manager.createInstance({ title });\r\n                }\r\n                // refresh will be triggered by wrapper\r\n            });\r\n            bar.appendChild(addBtn);\r\n        }\r\n\r\n        container.appendChild(bar);\r\n\r\n        // Bottom border under tabs\r\n        const underline = document.createElement('div');\r\n        underline.className = 'h-px bg-gray-300 dark:bg-gray-700';\r\n        container.appendChild(underline);\r\n    }\r\n\r\n    function wrapManager(manager: Manager, onChange: () => void): Manager {\r\n        const createOrig = manager.createInstance.bind(manager);\r\n        const destroyOrig = manager.destroyInstance.bind(manager);\r\n        const setActiveOrig = manager.setActiveInstance.bind(manager);\r\n\r\n        type MutableManager = Manager & { [key: string]: unknown };\r\n        (manager as MutableManager).createInstance = (cfg?: Partial<InstanceConfig>) => {\r\n            const inst = createOrig(cfg);\r\n            onChange();\r\n            return inst;\r\n        };\r\n        (manager as MutableManager).destroyInstance = (id: string) => {\r\n            destroyOrig(id);\r\n            onChange();\r\n        };\r\n        (manager as MutableManager).setActiveInstance = (id: string) => {\r\n            setActiveOrig(id);\r\n            onChange();\r\n        };\r\n        return manager;\r\n    }\r\n\r\n    function createController(\r\n        manager: Manager,\r\n        mountEl: HTMLElement,\r\n        options: WindowTabsOptions = {}\r\n    ): WindowTabsController {\r\n        const wrapped = wrapManager(manager, () => controller.refresh());\r\n\r\n        const controller: WindowTabsController = {\r\n            el: mountEl,\r\n            refresh() {\r\n                renderTabs(\r\n                    mountEl,\r\n                    wrapped,\r\n                    options,\r\n                    id => wrapped.setActiveInstance(id),\r\n                    id => wrapped.destroyInstance(id)\r\n                );\r\n            },\r\n            destroy() {\r\n                mountEl.innerHTML = '';\r\n            },\r\n            setTitle(instanceId: string, title: string) {\r\n                const inst = wrapped.getInstance(instanceId);\r\n                if (inst) {\r\n                    inst.title = title;\r\n                    this.refresh();\r\n                }\r\n            },\r\n        };\r\n\r\n        controller.refresh();\r\n        return controller;\r\n    }\r\n\r\n    const WindowTabs = {\r\n        /**\r\n         * Create a window tabs bar bound to a specific InstanceManager.\r\n         */\r\n        create(\r\n            manager: Manager,\r\n            mountEl: HTMLElement,\r\n            options?: WindowTabsOptions\r\n        ): WindowTabsController {\r\n            return createController(manager, mountEl, options);\r\n        },\r\n    };\r\n\r\n    (window as unknown as { [k: string]: unknown }).WindowTabs = WindowTabs;\r\n})();\r\n\r\n", "console.log('TerminalInstance (TS) loaded');\r\n\r\n/**\r\n * TerminalInstance - Multi-Instance capable terminal implementation\r\n * Ported to TypeScript with preserved global API and behavior.\r\n */\r\n(() => {\r\n    'use strict';\r\n\r\n    type DirEntry = {\r\n        type: 'directory';\r\n        contents: Record<string, FSNode>;\r\n    };\r\n    type FileEntry = {\r\n        type: 'file';\r\n        content: string;\r\n    };\r\n    type FSNode = DirEntry | FileEntry;\r\n\r\n    type BaseLike = {\r\n        container: HTMLElement | null;\r\n        updateState: (u: Record<string, unknown>) => void;\r\n    } & Record<string, unknown>;\r\n    type BaseCtor = new (cfg: Record<string, unknown>) => BaseLike & Record<string, unknown>;\r\n    const Base = (window as unknown as { BaseWindowInstance: BaseCtor }).BaseWindowInstance;\r\n\r\n    class TerminalInstance extends Base {\r\n        outputElement: HTMLElement | null;\r\n        inputElement: HTMLInputElement | null;\r\n        commandHistory: string[];\r\n        historyIndex: number;\r\n        currentPath: string;\r\n        fileSystem: Record<string, FSNode>;\r\n\r\n        constructor(config: Record<string, unknown>) {\r\n            super({\r\n                ...config,\r\n                type: 'terminal',\r\n            });\r\n\r\n            this.outputElement = null;\r\n            this.inputElement = null;\r\n            this.commandHistory = [];\r\n            this.historyIndex = -1;\r\n            this.currentPath = '~';\r\n\r\n            this.fileSystem = {\r\n                '~': {\r\n                    type: 'directory',\r\n                    contents: {\r\n                        Desktop: { type: 'directory', contents: {} },\r\n                        Documents: {\r\n                            type: 'directory',\r\n                            contents: {\r\n                                'readme.txt': {\r\n                                    type: 'file',\r\n                                    content: 'Willkommen im Terminal!',\r\n                                },\r\n                            },\r\n                        },\r\n                        Downloads: { type: 'directory', contents: {} },\r\n                        'welcome.txt': {\r\n                            type: 'file',\r\n                            content:\r\n                                'Willkommen auf Marvins Portfolio-Website!\\n\\nGib \"help\" ein, um eine Liste verf\u00FCgbarer Befehle zu sehen.',\r\n                        },\r\n                    },\r\n                },\r\n            };\r\n        }\r\n\r\n        // No override of _initializeState to avoid type modifier conflicts\r\n\r\n        protected render(): void {\r\n            if (!this.container) return;\r\n\r\n            const html = `\r\n                <div class=\"terminal-wrapper h-full flex flex-col bg-gray-900 text-green-400 font-mono text-sm\">\r\n                    <div class=\"terminal-output flex-1 overflow-y-auto p-4 space-y-1\" data-terminal-output>\r\n                    </div>\r\n                    <div class=\"terminal-input-line flex items-center px-4 py-2 border-t border-gray-700\">\r\n                        <span class=\"terminal-prompt text-blue-400\">guest@marvin:${this.currentPath}$</span>\r\n                        <input\r\n                            type=\"text\"\r\n                            class=\"flex-1 ml-2 bg-transparent outline-none text-green-400 terminal-input\"\r\n                            autocomplete=\"off\"\r\n                            spellcheck=\"false\"\r\n                            aria-label=\"Terminal input\"\r\n                            data-terminal-input\r\n                        />\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n            this.container.innerHTML = html;\r\n            this.outputElement = this.container.querySelector('[data-terminal-output]');\r\n            this.inputElement = this.container.querySelector('[data-terminal-input]');\r\n\r\n            try {\r\n                this.showWelcomeMessage();\r\n            } catch {\r\n                /* noop */\r\n            }\r\n            if (this.inputElement && typeof this.inputElement.focus === 'function') {\r\n                this.inputElement.focus();\r\n            }\r\n        }\r\n\r\n        protected attachEventListeners(): void {\r\n            if (!this.inputElement) return;\r\n\r\n            this.inputElement.addEventListener('keydown', (e: KeyboardEvent) => {\r\n                if (e.key === 'Enter') {\r\n                    e.preventDefault();\r\n                    const command = this.inputElement!.value.trim();\r\n                    if (command) {\r\n                        this.executeCommand(command);\r\n                        this.commandHistory.push(command);\r\n                        this.historyIndex = this.commandHistory.length;\r\n                        this.updateState({ commandHistory: this.commandHistory });\r\n                    }\r\n                    this.inputElement!.value = '';\r\n                    this.inputElement!.focus();\r\n                } else if (e.key === 'Tab') {\r\n                    e.preventDefault();\r\n                    this.handleTabCompletion();\r\n                } else if (e.key === 'ArrowUp') {\r\n                    e.preventDefault();\r\n                    if (this.historyIndex > 0) {\r\n                        this.historyIndex--;\r\n                        // noUncheckedIndexedAccess: array access may return undefined\r\n                        const historyEntry = this.commandHistory[this.historyIndex];\r\n                        if (historyEntry !== undefined) {\r\n                            this.inputElement!.value = historyEntry;\r\n                        }\r\n                    }\r\n                } else if (e.key === 'ArrowDown') {\r\n                    e.preventDefault();\r\n                    if (this.historyIndex < this.commandHistory.length - 1) {\r\n                        this.historyIndex++;\r\n                        // noUncheckedIndexedAccess: array access may return undefined\r\n                        const historyEntry = this.commandHistory[this.historyIndex];\r\n                        if (historyEntry !== undefined) {\r\n                            this.inputElement!.value = historyEntry;\r\n                        }\r\n                    } else {\r\n                        this.historyIndex = this.commandHistory.length;\r\n                        this.inputElement!.value = '';\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        showWelcomeMessage(): void {\r\n            this.addOutput(\r\n                'Willkommen im Terminal! Gib \"help\" ein f\u00FCr verf\u00FCgbare Befehle.',\r\n                'info'\r\n            );\r\n        }\r\n\r\n        handleTabCompletion(): void {\r\n            if (!this.inputElement) return;\r\n\r\n            const input = this.inputElement.value;\r\n            const [partialCmd, ...args] = input.split(' ');\r\n\r\n            // noUncheckedIndexedAccess: array destructuring may return undefined\r\n            if (partialCmd === undefined) return;\r\n\r\n            const availableCommands = [\r\n                'help',\r\n                'clear',\r\n                'ls',\r\n                'pwd',\r\n                'cd',\r\n                'cat',\r\n                'echo',\r\n                'date',\r\n                'whoami',\r\n            ];\r\n\r\n            if (args.length === 0) {\r\n                const matches = availableCommands.filter(cmd => cmd.startsWith(partialCmd));\r\n\r\n                if (matches.length === 1) {\r\n                    const match = matches[0];\r\n                    if (match !== undefined) {\r\n                        this.inputElement.value = match + ' ';\r\n                    }\r\n                } else if (matches.length > 1) {\r\n                    this.addOutput(`guest@marvin:${this.currentPath}$ ${input}`, 'command');\r\n                    this.addOutput(matches.join('  '), 'info');\r\n                    const commonPrefix = this.findCommonPrefix(matches);\r\n                    if (commonPrefix.length > partialCmd.length) {\r\n                        this.inputElement.value = commonPrefix;\r\n                    }\r\n                }\r\n            } else {\r\n                if (partialCmd === 'cd' || partialCmd === 'cat') {\r\n                    this.completePathArgument(partialCmd, args[0] || '');\r\n                }\r\n            }\r\n        }\r\n\r\n        findCommonPrefix(strings: string[]): string {\r\n            if (!strings.length) return '';\r\n            // noUncheckedIndexedAccess: array access may return undefined\r\n            const firstString = strings[0];\r\n            if (strings.length === 1) return firstString ?? '';\r\n            if (firstString === undefined) return '';\r\n\r\n            let prefix: string = firstString;\r\n            for (let i = 1; i < strings.length; i++) {\r\n                const currentString = strings[i];\r\n                if (currentString === undefined) continue;\r\n\r\n                while (currentString.indexOf(prefix) !== 0) {\r\n                    prefix = prefix.substring(0, prefix.length - 1);\r\n                    if (!prefix) return '';\r\n                }\r\n            }\r\n            return prefix;\r\n        }\r\n\r\n        completePathArgument(cmd: 'cd' | 'cat', partial: string): void {\r\n            const currentDir = this.resolvePath(this.currentPath);\r\n            if (!currentDir || currentDir.type !== 'directory') return;\r\n\r\n            const items = Object.keys(currentDir.contents);\r\n            let matches: string[];\r\n            if (cmd === 'cd') {\r\n                matches = items.filter(\r\n                    item =>\r\n                        (currentDir.contents[item] as FSNode).type === 'directory' &&\r\n                        item.startsWith(partial)\r\n                );\r\n            } else {\r\n                matches = items.filter(\r\n                    item =>\r\n                        (currentDir.contents[item] as FSNode).type === 'file' &&\r\n                        item.startsWith(partial)\r\n                );\r\n            }\r\n\r\n            if (matches.length === 1) {\r\n                this.inputElement!.value = `${cmd} ${matches[0]}`;\r\n            } else if (matches.length > 1) {\r\n                this.addOutput(\r\n                    `guest@marvin:${this.currentPath}$ ${this.inputElement!.value}`,\r\n                    'command'\r\n                );\r\n                const formatted = matches.map(item => {\r\n                    // noUncheckedIndexedAccess: dictionary access may return undefined\r\n                    const itemObj = currentDir.contents[item] as FSNode | undefined;\r\n                    if (!itemObj) return item;\r\n                    const prefix = itemObj.type === 'directory' ? '\uD83D\uDCC1 ' : '\uD83D\uDCC4 ';\r\n                    return prefix + item;\r\n                });\r\n                this.addOutput(formatted.join('  '), 'info');\r\n                const commonPrefix = this.findCommonPrefix(matches);\r\n                if (commonPrefix.length > partial.length) {\r\n                    this.inputElement!.value = `${cmd} ${commonPrefix}`;\r\n                }\r\n            }\r\n        }\r\n\r\n        executeCommand(command: string): void {\r\n            this.addOutput(`guest@marvin:${this.currentPath}$ ${command}`, 'command');\r\n            const [cmd, ...args] = command.split(' ');\r\n\r\n            // noUncheckedIndexedAccess: array destructuring may return undefined\r\n            if (cmd === undefined) return;\r\n\r\n            const commands: Record<string, () => void> = {\r\n                help: () => this.showHelp(),\r\n                clear: () => this.clearOutput(),\r\n                ls: () => this.listDirectory(args[0]),\r\n                pwd: () => this.printWorkingDirectory(),\r\n                cd: () => this.changeDirectory(args[0]),\r\n                cat: () => this.catFile(args[0]),\r\n                echo: () => this.echo(args.join(' ')),\r\n                date: () => this.showDate(),\r\n                whoami: () => this.addOutput('guest', 'output'),\r\n            };\r\n\r\n            const commandFn = commands[cmd];\r\n            if (commandFn !== undefined) {\r\n                commandFn();\r\n            } else {\r\n                this.addOutput(\r\n                    `Befehl nicht gefunden: ${cmd}. Gib \"help\" ein f\u00FCr verf\u00FCgbare Befehle.`,\r\n                    'error'\r\n                );\r\n            }\r\n        }\r\n\r\n        addOutput(text: string, type: 'command' | 'output' | 'error' | 'info' = 'output'): void {\r\n            if (!this.outputElement) return;\r\n            const line = document.createElement('div');\r\n            line.className = `terminal-line terminal-${type}`;\r\n            const colorMap: Record<string, string> = {\r\n                command: 'text-blue-400',\r\n                output: 'text-green-400',\r\n                error: 'text-red-400',\r\n                info: 'text-yellow-400',\r\n            };\r\n            line.className += ` ${colorMap[type] || 'text-green-400'}`;\r\n            line.textContent = text;\r\n            this.outputElement.appendChild(line);\r\n            this.outputElement.scrollTop = this.outputElement.scrollHeight;\r\n        }\r\n\r\n        clearOutput(): void {\r\n            if (this.outputElement) this.outputElement.innerHTML = '';\r\n        }\r\n\r\n        showHelp(): void {\r\n            const helpText = [\r\n                'Verf\u00FCgbare Befehle:',\r\n                '  help         - Zeige diese Hilfe',\r\n                '  clear        - L\u00F6sche Ausgabe',\r\n                '  ls [path]    - Liste Dateien (optional mit Pfad)',\r\n                '  pwd          - Zeige aktuelles Verzeichnis',\r\n                '  cd <dir>     - Wechsle Verzeichnis (., .., ~, relative/absolute Pfade)',\r\n                '  cat <file>   - Zeige Dateiinhalt (auch mit Pfad: cat ./file oder cat dir/file)',\r\n                '  echo <text>  - Gebe Text aus',\r\n                '  date         - Zeige Datum/Zeit',\r\n                '  whoami       - Zeige Benutzername',\r\n                '',\r\n                'Pfad-Beispiele:',\r\n                '  .            - Aktuelles Verzeichnis',\r\n                '  ..           - \u00DCbergeordnetes Verzeichnis',\r\n                '  ~            - Home-Verzeichnis',\r\n                '  ./file       - Datei im aktuellen Verzeichnis',\r\n                '  ../file      - Datei im \u00FCbergeordneten Verzeichnis',\r\n                '  dir/subdir   - Unterverzeichnis (relativ)',\r\n                '',\r\n                'Tipps:',\r\n                '  \u2191/\u2193          - Durchsuche Befehlshistorie',\r\n                '  Tab          - Vervollst\u00E4ndige Befehle und Pfade',\r\n            ];\r\n            helpText.forEach(l => this.addOutput(l, 'info'));\r\n        }\r\n\r\n        listDirectory(path?: string): void {\r\n            const targetPath = path ? this.normalizePath(path) : this.currentPath;\r\n            const targetDir = this.resolvePath(targetPath);\r\n            if (!targetDir) {\r\n                this.addOutput(`Verzeichnis nicht gefunden: ${path || targetPath}`, 'error');\r\n                return;\r\n            }\r\n            if (targetDir.type !== 'directory') {\r\n                this.addOutput(`${path || targetPath} ist kein Verzeichnis`, 'error');\r\n                return;\r\n            }\r\n            const items = Object.keys(targetDir.contents);\r\n            if (items.length === 0) this.addOutput('(leer)', 'output');\r\n            else {\r\n                items.forEach(item => {\r\n                    // noUncheckedIndexedAccess: dictionary access may return undefined\r\n                    const itemObj = targetDir.contents[item];\r\n                    if (!itemObj) return;\r\n                    const prefix = itemObj.type === 'directory' ? '\uD83D\uDCC1 ' : '\uD83D\uDCC4 ';\r\n                    this.addOutput(prefix + item, 'output');\r\n                });\r\n            }\r\n        }\r\n\r\n        printWorkingDirectory(): void {\r\n            this.addOutput(this.currentPath, 'output');\r\n        }\r\n\r\n        changeDirectory(path?: string): void {\r\n            if (!path) {\r\n                this.currentPath = '~';\r\n                this.updatePrompt();\r\n                return;\r\n            }\r\n            const newPath = this.normalizePath(path);\r\n            const resolved = this.resolvePath(newPath);\r\n            if (!resolved) {\r\n                this.addOutput(`Verzeichnis nicht gefunden: ${path}`, 'error');\r\n                return;\r\n            }\r\n            if (resolved.type !== 'directory') {\r\n                this.addOutput(`${path} ist kein Verzeichnis`, 'error');\r\n                return;\r\n            }\r\n            this.currentPath = newPath;\r\n            this.updatePrompt();\r\n            this.updateState({ currentPath: this.currentPath });\r\n        }\r\n\r\n        catFile(filename?: string): void {\r\n            if (!filename) {\r\n                this.addOutput('Dateiname fehlt', 'error');\r\n                return;\r\n            }\r\n            if (filename.includes('/')) {\r\n                const normalizedPath = this.normalizePath(filename);\r\n                const pathParts = normalizedPath.split('/').filter(p => p !== '');\r\n                const fileName = pathParts.pop()!;\r\n                const dirPath = pathParts.length > 0 ? pathParts.join('/') : '~';\r\n                const dir = this.resolvePath(dirPath);\r\n                if (!dir) {\r\n                    this.addOutput(`Verzeichnis nicht gefunden: ${dirPath}`, 'error');\r\n                    return;\r\n                }\r\n                const file = (dir as DirEntry).contents?.[fileName] as FSNode | undefined;\r\n                if (!file) this.addOutput(`Datei nicht gefunden: ${filename}`, 'error');\r\n                else if (file.type !== 'file')\r\n                    this.addOutput(`${filename} ist keine Datei`, 'error');\r\n                else this.addOutput(file.content, 'output');\r\n            } else {\r\n                const currentDir = this.resolvePath(this.currentPath) as DirEntry | null;\r\n                const file = currentDir?.contents?.[filename] as FSNode | undefined;\r\n                if (!file) this.addOutput(`Datei nicht gefunden: ${filename}`, 'error');\r\n                else if (file.type !== 'file')\r\n                    this.addOutput(`${filename} ist keine Datei`, 'error');\r\n                else this.addOutput(file.content, 'output');\r\n            }\r\n        }\r\n\r\n        echo(text: string): void {\r\n            this.addOutput(text, 'output');\r\n        }\r\n\r\n        showDate(): void {\r\n            this.addOutput(new Date().toString(), 'output');\r\n        }\r\n\r\n        updatePrompt(): void {\r\n            const prompt = this.container?.querySelector('.terminal-prompt') as HTMLElement | null;\r\n            if (prompt) {\r\n                prompt.textContent = `guest@marvin:${this.currentPath}$`;\r\n            }\r\n        }\r\n\r\n        resolvePath(path: string | undefined | null): FSNode | null {\r\n            if (!path) return null;\r\n            const normalizedPath = this.normalizePath(path);\r\n\r\n            // noUncheckedIndexedAccess: dictionary access may return undefined\r\n            const homeNode = this.fileSystem['~'];\r\n            if (normalizedPath === '~') return homeNode ?? null;\r\n            if (homeNode === undefined) return null;\r\n\r\n            let current: FSNode = homeNode;\r\n            const parts = normalizedPath\r\n                .replace(/^~\\/?/, '')\r\n                .split('/')\r\n                .filter(p => p);\r\n            for (const part of parts) {\r\n                if ((current as DirEntry).type !== 'directory') return null;\r\n                if (!(current as DirEntry).contents || !(current as DirEntry).contents[part])\r\n                    return null;\r\n                // noUncheckedIndexedAccess: dictionary access may return undefined\r\n                const nextNode = (current as DirEntry).contents[part];\r\n                if (nextNode === undefined) return null;\r\n                current = nextNode;\r\n            }\r\n            return current;\r\n        }\r\n\r\n        normalizePath(path: string): string {\r\n            if (!path || path === '~') return '~';\r\n            if (path === '.') return this.currentPath;\r\n            if (path === './') return this.currentPath;\r\n            let workingPath: string;\r\n            if (path.startsWith('~')) workingPath = path;\r\n            else if (path.startsWith('/')) workingPath = '~' + path;\r\n            else\r\n                workingPath =\r\n                    this.currentPath === '~' ? `~/${path}` : `${this.currentPath}/${path}`;\r\n            const parts = workingPath.split('/').filter(p => p !== '' && p !== '.');\r\n            const resolved: string[] = [];\r\n            for (const part of parts) {\r\n                if (part === '..') {\r\n                    if (resolved.length > 0 && resolved[resolved.length - 1] !== '~') {\r\n                        resolved.pop();\r\n                    }\r\n                } else {\r\n                    resolved.push(part);\r\n                }\r\n            }\r\n            if (resolved.length === 0 || (resolved.length === 1 && resolved[0] === '~')) return '~';\r\n            if (resolved[0] !== '~') resolved.unshift('~');\r\n            return resolved.join('/');\r\n        }\r\n\r\n        parentPath(path: string): string {\r\n            const parts = path.split('/').filter(Boolean);\r\n            parts.pop();\r\n            return parts.length > 0 ? '/' + parts.join('/') : '~';\r\n        }\r\n\r\n        serialize(): Record<string, unknown> {\r\n            const baseSerialize = (\r\n                Base.prototype as unknown as {\r\n                    serialize: () => Record<string, unknown>;\r\n                }\r\n            ).serialize;\r\n            const baseObj = baseSerialize.call(this) as Record<string, unknown>;\r\n            return {\r\n                ...baseObj,\r\n                currentPath: this.currentPath,\r\n                commandHistory: this.commandHistory,\r\n                fileSystem: this.fileSystem,\r\n            } as Record<string, unknown>;\r\n        }\r\n\r\n        deserialize(data: Record<string, unknown>): void {\r\n            const baseDeserialize = (\r\n                Base.prototype as unknown as {\r\n                    deserialize: (d: Record<string, unknown>) => void;\r\n                }\r\n            ).deserialize;\r\n            baseDeserialize.call(this, data);\r\n            const d = data as Record<string, unknown> & {\r\n                currentPath?: string;\r\n                commandHistory?: string[];\r\n                fileSystem?: Record<string, FSNode>;\r\n            };\r\n            if (d.currentPath) {\r\n                this.currentPath = d.currentPath;\r\n                this.updatePrompt();\r\n            }\r\n            if (d.commandHistory) {\r\n                this.commandHistory = d.commandHistory;\r\n                this.historyIndex = this.commandHistory.length;\r\n            }\r\n            if (d.fileSystem) {\r\n                this.fileSystem = d.fileSystem;\r\n            }\r\n        }\r\n\r\n        focus(): void {\r\n            const baseFocus = (Base.prototype as unknown as { focus: () => void }).focus;\r\n            baseFocus.call(this);\r\n            if (this.inputElement) this.inputElement.focus();\r\n        }\r\n    }\r\n\r\n    (window as unknown as { TerminalInstance: typeof TerminalInstance }).TerminalInstance =\r\n        TerminalInstance;\r\n\r\n    // Create Terminal Instance Manager\r\n    const G = window as unknown as Record<string, unknown>;\r\n    type InstanceManagerCtor = new (cfg: Record<string, unknown>) => unknown;\r\n    const InstanceManager = G['InstanceManager'] as unknown as InstanceManagerCtor | undefined;\r\n    if (InstanceManager) {\r\n        (G['TerminalInstanceManager'] as unknown) = new (InstanceManager as InstanceManagerCtor)({\r\n            type: 'terminal',\r\n            instanceClass: TerminalInstance,\r\n            maxInstances: 0,\r\n            createContainer: function (instanceId: string): HTMLElement | null {\r\n                const terminalModalContainer = document.getElementById('terminal-container');\r\n                if (!terminalModalContainer) {\r\n                    console.error('Terminal container not found');\r\n                    return null;\r\n                }\r\n                const container = document.createElement('div');\r\n                container.id = `${instanceId}-container`;\r\n                container.className = 'terminal-instance-container h-full';\r\n                // Use DOMUtils if available to hide initially, else fallback\r\n                const domUtils = (\r\n                    window as unknown as { DOMUtils?: { hide?: (el: Element) => void } }\r\n                ).DOMUtils;\r\n                if (domUtils && typeof domUtils.hide === 'function') {\r\n                    domUtils.hide(container);\r\n                } else {\r\n                    container.classList.add('hidden');\r\n                }\r\n                terminalModalContainer.appendChild(container);\r\n                return container;\r\n            },\r\n        });\r\n    }\r\n})();\r\n\r\n", "console.log('TextEditorInstance (TS) loaded');\r\n\r\n/**\r\n * TextEditorInstance - Multi-Instance capable text editor\r\n * TypeScript migration preserving global API and behavior.\r\n */\r\n(() => {\r\n    'use strict';\r\n\r\n    type WrapMode = 'off' | 'soft';\r\n\r\n    type BaseLike = {\r\n        container: HTMLElement | null;\r\n        updateState: (u: Record<string, unknown>) => void;\r\n    } & Record<string, unknown>;\r\n    type BaseCtor = new (cfg: Record<string, unknown>) => BaseLike;\r\n    const Base = (window as unknown as { BaseWindowInstance: BaseCtor }).BaseWindowInstance;\r\n\r\n    class TextEditorInstance extends Base {\r\n        editor: HTMLTextAreaElement | null;\r\n        statusBar: HTMLElement | null;\r\n        saveButton: HTMLElement | null;\r\n        fileInput: HTMLInputElement | null;\r\n        wordCountDisplay: HTMLElement | null;\r\n        lineColDisplay: HTMLElement | null;\r\n        findReplacePanel: HTMLElement | null;\r\n        findInput: HTMLInputElement | null;\r\n        replaceInput: HTMLInputElement | null;\r\n\r\n        wrapMode: WrapMode;\r\n        currentRemoteFile: string | null;\r\n        currentFilename: string;\r\n        isDirty: boolean;\r\n\r\n        constructor(config: Record<string, unknown>) {\r\n            super({\r\n                ...config,\r\n                type: 'text-editor',\r\n            });\r\n\r\n            this.editor = null;\r\n            this.statusBar = null;\r\n            this.saveButton = null;\r\n            this.fileInput = null;\r\n            this.wordCountDisplay = null;\r\n            this.lineColDisplay = null;\r\n            this.findReplacePanel = null;\r\n            this.findInput = null;\r\n            this.replaceInput = null;\r\n\r\n            this.wrapMode = 'off';\r\n            this.currentRemoteFile = null;\r\n            this.currentFilename =\r\n                ((config as Record<string, unknown>).filename as string) || 'Untitled.txt';\r\n            this.isDirty = false;\r\n        }\r\n\r\n        protected render(): void {\r\n            if (!this.container) return;\r\n            const isDark = document.documentElement.classList.contains('dark');\r\n            this.container.innerHTML = `\r\n                <div class=\"text-editor-wrapper flex flex-col h-full\" style=\"background: ${isDark ? '#0f172a' : '#fafafa'}; color: ${isDark ? '#e5e7eb' : '#111827'};\">\r\n                    <!-- Toolbar -->\r\n                    <div class=\"text-editor-toolbar flex-none\" style=\"background: ${isDark ? '#1f2937' : '#f5f5f5'}; padding: 8px 12px; border-bottom: 1px solid ${isDark ? '#374151' : '#d1d5db'}; display: flex; gap: 8px; align-items: center; flex-wrap: wrap;\">\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"clear\" title=\"Neu\">Neu</button>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"open\" title=\"\u00D6ffnen\">\u00D6ffnen</button>\r\n                        <button type=\"button\" class=\"text-editor-btn text-save-btn\" data-action=\"save\" title=\"Speichern\">Speichern</button>\r\n                        <div class=\"toolbar-separator\"></div>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"bold\" title=\"Fett\" style=\"font-weight: bold;\">B</button>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"italic\" title=\"Kursiv\" style=\"font-style: italic;\">I</button>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"underline\" title=\"Unterstrichen\" style=\"text-decoration: underline;\">U</button>\r\n                        <div class=\"toolbar-separator\"></div>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"find\" title=\"Suchen & Ersetzen\">\uD83D\uDD0D</button>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"toggleWrap\" title=\"Zeilenumbruch\">\u23CE</button>\r\n                        <input type=\"file\" class=\"text-file-input\"\r\n                            accept=\".txt,.md,.markdown,.html,.css,.js,.json,.yml,.yaml,.xml\"\r\n                            style=\"display:none\">\r\n                    </div>\r\n\r\n                    <!-- Find/Replace Panel (hidden by default) -->\r\n                    <div class=\"find-replace-panel\" style=\"background: ${isDark ? '#1f2937' : '#f5f5f5'}; padding: 8px 12px; border-bottom: 1px solid ${isDark ? '#374151' : '#d1d5db'}; display: none; gap: 8px; align-items: center;\">\r\n                        <input type=\"text\" class=\"find-input\" placeholder=\"Suchen...\" style=\"padding: 4px 8px; border: 1px solid ${isDark ? '#475569' : '#d1d5db'}; border-radius: 4px; background: ${isDark ? '#111827' : '#ffffff'}; color: inherit;\">\r\n                        <input type=\"text\" class=\"replace-input\" placeholder=\"Ersetzen...\" style=\"padding: 4px 8px; border: 1px solid ${isDark ? '#475569' : '#d1d5db'}; border-radius: 4px; background: ${isDark ? '#111827' : '#ffffff'}; color: inherit;\">\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"findNext\">Weiter</button>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"replaceOne\">Ersetzen</button>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"replaceAll\">Alle ersetzen</button>\r\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"closeFindReplace\">\u2715</button>\r\n                    </div>\r\n\r\n                    <!-- Status Bar for filename -->\r\n                    <div class=\"text-file-status\" style=\"padding: 6px 12px; border-bottom: 1px solid ${isDark ? '#374151' : '#d1d5db'}; background: ${isDark ? '#1f2937' : '#f5f5f5'}; font-size: 13px; opacity: 0.85; display: none;\"></div>\r\n\r\n                    <!-- Editor Textarea -->\r\n                    <textarea class=\"text-editor-textarea flex-1 w-full resize-none p-4 border-0 outline-none\"\r\n                        spellcheck=\"false\"\r\n                        wrap=\"off\"\r\n                        style=\"background: ${isDark ? '#111827' : '#ffffff'}; color: inherit; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; line-height: 1.6; tab-size: 4;\"\r\n                        placeholder=\"Text eingeben...\"></textarea>\r\n\r\n                    <!-- Status Bar -->\r\n                    <div class=\"text-editor-statusbar flex-none\" style=\"background: ${isDark ? '#1f2937' : '#f5f5f5'}; padding: 6px 12px; border-top: 1px solid ${isDark ? '#374151' : '#d1d5db'}; font-size: 12px; opacity: 0.75; display: flex; justify-content: space-between;\">\r\n                        <span class=\"word-count-display\">W\u00F6rter: 0 | Zeichen: 0</span>\r\n                        <span class=\"line-col-display\">Zeile 1, Spalte 1</span>\r\n                    </div>\r\n                </div>\r\n            `;\r\n            this._applyButtonStyles();\r\n        }\r\n\r\n        private _applyButtonStyles(): void {\r\n            if (!this.container) return;\r\n            const isDark = document.documentElement.classList.contains('dark');\r\n            const buttons = this.container.querySelectorAll(\r\n                '.text-editor-btn'\r\n            ) as NodeListOf<HTMLButtonElement>;\r\n            buttons.forEach(btn => {\r\n                (btn as HTMLElement).style.cssText = `\r\n                    padding: 6px 12px;\r\n                    font-size: 13px;\r\n                    border: 1px solid ${isDark ? '#475569' : '#d1d5db'};\r\n                    background: ${isDark ? '#111827' : '#ffffff'};\r\n                    color: inherit;\r\n                    border-radius: 6px;\r\n                    cursor: pointer;\r\n                    transition: background 0.2s;\r\n                `;\r\n            });\r\n            const separators = this.container.querySelectorAll('.toolbar-separator');\r\n            separators.forEach(sep => {\r\n                (sep as HTMLElement).style.cssText = `\r\n                    width: 1px;\r\n                    height: 20px;\r\n                    background: ${isDark ? '#475569' : '#d1d5db'};\r\n                    margin: 0 4px;\r\n                `;\r\n            });\r\n        }\r\n\r\n        protected attachEventListeners(): void {\r\n            if (!this.container) return;\r\n            this.editor = this.container.querySelector(\r\n                '.text-editor-textarea'\r\n            ) as HTMLTextAreaElement | null;\r\n            this.statusBar = this.container.querySelector('.text-file-status');\r\n            this.saveButton = this.container.querySelector('[data-action=\"save\"]');\r\n            this.fileInput = this.container.querySelector(\r\n                '.text-file-input'\r\n            ) as HTMLInputElement | null;\r\n            this.wordCountDisplay = this.container.querySelector('.word-count-display');\r\n            this.lineColDisplay = this.container.querySelector('.line-col-display');\r\n            this.findReplacePanel = this.container.querySelector('.find-replace-panel');\r\n            this.findInput = this.container.querySelector('.find-input') as HTMLInputElement | null;\r\n            this.replaceInput = this.container.querySelector(\r\n                '.replace-input'\r\n            ) as HTMLInputElement | null;\r\n\r\n            if (this.state && (this.state as Record<string, unknown>).content && this.editor) {\r\n                this.editor.value = (this.state as Record<string, unknown>).content as string;\r\n            }\r\n\r\n            this.editor?.addEventListener('input', () => this._handleInput());\r\n            this.editor?.addEventListener('click', () => this._updateCursorPosition());\r\n            this.editor?.addEventListener('keyup', () => this._updateCursorPosition());\r\n            this.editor?.addEventListener('select', () => this._updateCursorPosition());\r\n\r\n            this.container.addEventListener('click', e => {\r\n                const target = e.target as HTMLElement | null;\r\n                const btn = target?.closest('[data-action]') as HTMLElement | null;\r\n                if (!btn) return;\r\n                const action = btn.getAttribute('data-action') as string;\r\n                this._handleAction(action);\r\n            });\r\n\r\n            if (this.fileInput) {\r\n                this.fileInput.addEventListener('change', e =>\r\n                    this._handleFileOpen(e as unknown as Event)\r\n                );\r\n            }\r\n\r\n            this._updateWordCount();\r\n            this._updateCursorPosition();\r\n            this._loadWrapPreference();\r\n        }\r\n\r\n        private _handleAction(action: string): void {\r\n            const actions: Record<string, () => void> = {\r\n                clear: () => this.clearContent(),\r\n                open: () => this.openFile(),\r\n                save: () => this.saveFile(),\r\n                bold: () => this._wrapSelection('**', '**'),\r\n                italic: () => this._wrapSelection('*', '*'),\r\n                underline: () => this._wrapSelection('<u>', '</u>'),\r\n                find: () => this.toggleFindReplace(),\r\n                toggleWrap: () => this.toggleWrapMode(),\r\n                findNext: () => this.findNext(),\r\n                replaceOne: () => this.replaceOne(),\r\n                replaceAll: () => this.replaceAll(),\r\n                closeFindReplace: () => this.closeFindReplace(),\r\n            };\r\n            if (actions[action]) actions[action]();\r\n        }\r\n\r\n        private _handleInput(): void {\r\n            this.isDirty = true;\r\n            if (this.editor) {\r\n                this.updateState({ content: this.editor.value });\r\n                this._updateWordCount();\r\n                this._updateSaveButton();\r\n                const emit = (\r\n                    Base.prototype as unknown as {\r\n                        emit: (this: unknown, ev: string, data?: unknown) => void;\r\n                    }\r\n                ).emit;\r\n                emit.call(this, 'contentChanged', { content: this.editor.value });\r\n            }\r\n        }\r\n\r\n        private _updateWordCount(): void {\r\n            if (!this.editor || !this.wordCountDisplay) return;\r\n            const text = this.editor.value;\r\n            const words = text.trim() ? text.trim().split(/\\s+/).length : 0;\r\n            const chars = text.length;\r\n            this.wordCountDisplay.textContent = `W\u00F6rter: ${words} | Zeichen: ${chars}`;\r\n        }\r\n\r\n        private _updateCursorPosition(): void {\r\n            if (!this.editor || !this.lineColDisplay) return;\r\n            const pos = this.editor.selectionStart;\r\n            const textBeforeCursor = this.editor.value.substring(0, pos);\r\n            const line = (textBeforeCursor.match(/\\n/g) || []).length + 1;\r\n            const lastNewline = textBeforeCursor.lastIndexOf('\\n');\r\n            const col = pos - lastNewline;\r\n            this.lineColDisplay.textContent = `Zeile ${line}, Spalte ${col}`;\r\n            this.updateState({ cursorPosition: { line, col } });\r\n        }\r\n\r\n        private _updateSaveButton(): void {\r\n            if (!this.saveButton) return;\r\n            if (this.isDirty) {\r\n                (this.saveButton as HTMLElement).style.fontWeight = 'bold';\r\n                (this.saveButton as HTMLElement).setAttribute('title', '\u00C4nderungen speichern');\r\n            } else {\r\n                (this.saveButton as HTMLElement).style.fontWeight = 'normal';\r\n                (this.saveButton as HTMLElement).setAttribute('title', 'Speichern');\r\n            }\r\n        }\r\n\r\n        clearContent(): void {\r\n            if (this.isDirty && !confirm('Ungespeicherte \u00C4nderungen gehen verloren. Fortfahren?')) {\r\n                return;\r\n            }\r\n            if (this.editor) this.editor.value = '';\r\n            this.currentFilename = 'Untitled.txt';\r\n            this.isDirty = false;\r\n            this.updateState({ content: '', filename: this.currentFilename });\r\n            this._updateWordCount();\r\n            this._updateSaveButton();\r\n            this._hideStatusBar();\r\n            const emit = (\r\n                Base.prototype as unknown as {\r\n                    emit: (this: unknown, ev: string, data?: unknown) => void;\r\n                }\r\n            ).emit;\r\n            emit.call(this, 'contentCleared');\r\n        }\r\n\r\n        openFile(): void {\r\n            this.fileInput?.click();\r\n        }\r\n\r\n        private _handleFileOpen(event: Event): void {\r\n            const target = event.target as HTMLInputElement | null;\r\n            const file = target?.files?.[0];\r\n            if (!file) return;\r\n            const reader = new FileReader();\r\n            reader.onload = e => {\r\n                const result = (e.target as FileReader).result as string;\r\n                if (this.editor) this.editor.value = result;\r\n                this.currentFilename = file.name;\r\n                this.isDirty = false;\r\n                this.updateState({ content: result, filename: file.name });\r\n                this._updateWordCount();\r\n                this._updateSaveButton();\r\n                this._showStatusBar(`Ge\u00F6ffnet: ${file.name}`);\r\n                const emit = (\r\n                    Base.prototype as unknown as {\r\n                        emit: (this: unknown, ev: string, data?: unknown) => void;\r\n                    }\r\n                ).emit;\r\n                emit.call(this, 'fileOpened', { filename: file.name });\r\n            };\r\n            reader.readAsText(file);\r\n        }\r\n\r\n        saveFile(): void {\r\n            const content = this.editor?.value || '';\r\n            const blob = new Blob([content], { type: 'text/plain' });\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = this.currentFilename;\r\n            a.click();\r\n            URL.revokeObjectURL(url);\r\n            this.isDirty = false;\r\n            this._updateSaveButton();\r\n            this._showStatusBar(`Gespeichert: ${this.currentFilename}`);\r\n            const emit = (\r\n                Base.prototype as unknown as {\r\n                    emit: (this: unknown, ev: string, data?: unknown) => void;\r\n                }\r\n            ).emit;\r\n            emit.call(this, 'fileSaved', { filename: this.currentFilename });\r\n        }\r\n\r\n        private _wrapSelection(before: string, after: string): void {\r\n            if (!this.editor) return;\r\n            const start = this.editor.selectionStart;\r\n            const end = this.editor.selectionEnd;\r\n            const selectedText = this.editor.value.substring(start, end);\r\n            const replacement = before + selectedText + after;\r\n            this.editor.setRangeText(replacement, start, end, 'select');\r\n            this.editor.focus();\r\n            this._handleInput();\r\n        }\r\n\r\n        toggleWrapMode(): void {\r\n            this.wrapMode = this.wrapMode === 'soft' ? 'off' : 'soft';\r\n            if (this.editor) {\r\n                this.editor.wrap = this.wrapMode;\r\n                this.editor.style.whiteSpace = this.wrapMode === 'soft' ? 'pre-wrap' : 'pre';\r\n            }\r\n            try {\r\n                localStorage.setItem(\r\n                    `textEditorWrapMode_${(this as unknown as { instanceId: string }).instanceId}`,\r\n                    this.wrapMode\r\n                );\r\n            } catch (e) {\r\n                console.warn('Could not save wrap mode', e);\r\n            }\r\n            this.updateState({ wrapMode: this.wrapMode });\r\n            this._showStatusBar(\r\n                this.wrapMode === 'soft' ? 'Zeilenumbruch aktiviert' : 'Zeilenumbruch deaktiviert'\r\n            );\r\n        }\r\n\r\n        private _loadWrapPreference(): void {\r\n            try {\r\n                const id = (this as unknown as { instanceId: string }).instanceId;\r\n                const saved = localStorage.getItem(`textEditorWrapMode_${id}`) as WrapMode | null;\r\n                if (saved && this.editor) {\r\n                    this.wrapMode = saved;\r\n                    this.editor.wrap = this.wrapMode;\r\n                    this.editor.style.whiteSpace = this.wrapMode === 'soft' ? 'pre-wrap' : 'pre';\r\n                }\r\n            } catch (e) {\r\n                console.warn('Could not load wrap mode', e);\r\n            }\r\n        }\r\n\r\n        toggleFindReplace(): void {\r\n            if (!this.findReplacePanel) return;\r\n            const isHidden = this.findReplacePanel.style.display === 'none';\r\n            this.findReplacePanel.style.display = isHidden ? 'flex' : 'none';\r\n            if (isHidden && this.findInput) this.findInput.focus();\r\n            else this.editor?.focus();\r\n        }\r\n\r\n        closeFindReplace(): void {\r\n            if (this.findReplacePanel) {\r\n                this.findReplacePanel.style.display = 'none';\r\n                this.editor?.focus();\r\n            }\r\n        }\r\n\r\n        findNext(): void {\r\n            if (!this.findInput || !this.editor) return;\r\n            const searchText = this.findInput.value;\r\n            if (!searchText) return;\r\n            const content = this.editor.value;\r\n            const currentPos = this.editor.selectionEnd;\r\n            const index = content.indexOf(searchText, currentPos);\r\n            if (index !== -1) {\r\n                this.editor.setSelectionRange(index, index + searchText.length);\r\n                this.editor.focus();\r\n            } else {\r\n                const firstIndex = content.indexOf(searchText);\r\n                if (firstIndex !== -1) {\r\n                    this.editor.setSelectionRange(firstIndex, firstIndex + searchText.length);\r\n                    this.editor.focus();\r\n                } else {\r\n                    this._showStatusBar('Nicht gefunden');\r\n                }\r\n            }\r\n        }\r\n\r\n        replaceOne(): void {\r\n            if (!this.findInput || !this.replaceInput || !this.editor) return;\r\n            const searchText = this.findInput.value;\r\n            const replaceText = this.replaceInput.value;\r\n            if (!searchText) return;\r\n            const start = this.editor.selectionStart;\r\n            const end = this.editor.selectionEnd;\r\n            const selectedText = this.editor.value.substring(start, end);\r\n            if (selectedText === searchText) {\r\n                this.editor.setRangeText(replaceText, start, end, 'end');\r\n                this._handleInput();\r\n            }\r\n            this.findNext();\r\n        }\r\n\r\n        replaceAll(): void {\r\n            if (!this.findInput || !this.replaceInput || !this.editor) return;\r\n            const searchText = this.findInput.value;\r\n            const replaceText = this.replaceInput.value;\r\n            if (!searchText) return;\r\n            const newContent = this.editor.value.split(searchText).join(replaceText);\r\n            const count = (this.editor.value.match(new RegExp(searchText, 'g')) || []).length;\r\n            this.editor.value = newContent;\r\n            this._handleInput();\r\n            this._showStatusBar(`${count} Ersetzungen vorgenommen`);\r\n        }\r\n\r\n        private _showStatusBar(message: string): void {\r\n            if (!this.statusBar) return;\r\n            this.statusBar.textContent = message;\r\n            this.statusBar.style.display = 'block';\r\n            setTimeout(() => this._hideStatusBar(), 3000);\r\n        }\r\n\r\n        private _hideStatusBar(): void {\r\n            if (this.statusBar) this.statusBar.style.display = 'none';\r\n        }\r\n\r\n        focus(): void {\r\n            const baseFocus = (Base.prototype as unknown as { focus: () => void }).focus;\r\n            baseFocus.call(this);\r\n            this.editor?.focus();\r\n        }\r\n\r\n        serialize(): Record<string, unknown> {\r\n            const baseSerialize = (\r\n                Base.prototype as unknown as {\r\n                    serialize: () => Record<string, unknown>;\r\n                }\r\n            ).serialize;\r\n            const baseObj = baseSerialize.call(this) as Record<string, unknown>;\r\n            return {\r\n                ...baseObj,\r\n                content: this.editor?.value || '',\r\n                filename: this.currentFilename,\r\n                wrapMode: this.wrapMode,\r\n                isDirty: this.isDirty,\r\n            };\r\n        }\r\n\r\n        deserialize(data: Record<string, unknown>): void {\r\n            const baseDeserialize = (\r\n                Base.prototype as unknown as {\r\n                    deserialize: (d: Record<string, unknown>) => void;\r\n                }\r\n            ).deserialize;\r\n            baseDeserialize.call(this, data);\r\n\r\n            const d = data as {\r\n                content?: string;\r\n                filename?: string;\r\n                wrapMode?: WrapMode;\r\n                isDirty?: boolean;\r\n            };\r\n            if (d.content && this.editor) {\r\n                this.editor.value = d.content;\r\n                this._updateWordCount();\r\n            }\r\n            if (d.filename) this.currentFilename = d.filename;\r\n            if (d.wrapMode) {\r\n                this.wrapMode = d.wrapMode;\r\n                if (this.editor) {\r\n                    this.editor.wrap = this.wrapMode;\r\n                    this.editor.style.whiteSpace = this.wrapMode === 'soft' ? 'pre-wrap' : 'pre';\r\n                }\r\n            }\r\n            if (typeof d.isDirty !== 'undefined') {\r\n                this.isDirty = d.isDirty;\r\n                this._updateSaveButton();\r\n            }\r\n        }\r\n    }\r\n\r\n    (window as unknown as { TextEditorInstance: typeof TextEditorInstance }).TextEditorInstance =\r\n        TextEditorInstance;\r\n\r\n    const G = window as unknown as Record<string, unknown>;\r\n    type InstanceManagerCtor = new (cfg: Record<string, unknown>) => unknown;\r\n    const InstanceManager = G['InstanceManager'] as unknown as InstanceManagerCtor | undefined;\r\n    if (InstanceManager) {\r\n        (G['TextEditorInstanceManager'] as unknown) = new (InstanceManager as InstanceManagerCtor)({\r\n            type: 'text-editor',\r\n            instanceClass: TextEditorInstance,\r\n            maxInstances: 0,\r\n            createContainer: function (instanceId: string): HTMLElement | null {\r\n                const editorModalContainer = document.getElementById('text-editor-container');\r\n                if (!editorModalContainer) {\r\n                    console.error('Text editor container not found');\r\n                    return null;\r\n                }\r\n                const container = document.createElement('div');\r\n                container.id = `${instanceId}-container`;\r\n                container.className = 'text-editor-instance-container h-full';\r\n                // Use DOMUtils if available to hide initially, else fallback\r\n                const domUtils = (\r\n                    window as unknown as { DOMUtils?: { hide?: (el: Element) => void } }\r\n                ).DOMUtils;\r\n                if (domUtils && typeof domUtils.hide === 'function') {\r\n                    domUtils.hide(container);\r\n                } else {\r\n                    container.classList.add('hidden');\r\n                }\r\n                editorModalContainer.appendChild(container);\r\n                return container;\r\n            },\r\n        });\r\n    }\r\n})();\r\n\r\n", "/**\r\n * Text Editor Module\r\n * Replaces text.html iframe with inline text editor\r\n */\r\n\r\ntype WrapMode = 'soft' | 'off';\r\n\r\ninterface FileMeta {\r\n    fileName?: string;\r\n    repo?: string;\r\n    path?: string;\r\n}\r\n\r\ninterface RemoteFilePayload extends FileMeta {\r\n    content: string;\r\n}\r\n\r\ninterface LoadErrorPayload extends FileMeta {\r\n    message?: string;\r\n}\r\n\r\ntype StatusState =\r\n    | { type: 'plain'; text: string }\r\n    | { type: 'i18n'; key: string; params?: Record<string, unknown> };\r\n\r\ninterface TextEditorSystemInternal extends TextEditorSystemAPI {\r\n    container: HTMLElement | null;\r\n    editor: HTMLTextAreaElement | null;\r\n    statusBar: HTMLElement | null;\r\n    saveButton: HTMLButtonElement | null;\r\n    fileInput: HTMLInputElement | null;\r\n    wrapMode: WrapMode;\r\n    currentRemoteFile: RemoteFilePayload | null;\r\n    statusState: StatusState | null;\r\n    wordCountDisplay: HTMLElement | null;\r\n    lineColDisplay: HTMLElement | null;\r\n    findReplacePanel: HTMLElement | null;\r\n    findInput: HTMLInputElement | null;\r\n    replaceInput: HTMLInputElement | null;\r\n    toastContainer: HTMLElement | null;\r\n    \r\n    // Internal methods\r\n    init(containerOrId: HTMLElement | string): void;\r\n        render(): void;\r\n        cacheElements(): void;\r\n        loadWrapPreference(): void;\r\n        attachListeners(): void;\r\n        loadSavedContent(): void;\r\n        syncSaveButtonState(): void;\r\n        registerActions(): void;\r\n        updateCSSVariables(): void;\r\n        applyWrapMode(mode?: string): void;\r\n        setStatusPlain(msg: string): void;\r\n        focusEditor(): void;\r\n        handleEditorInput(): void;\r\n        updateWordCount(): void;\r\n        updateCursorPosition(): void;\r\n        handleFileSelect(event: Event): void;\r\n        updateDocumentTitle(): void;\r\n        clearStatus(): void;\r\n        toggleWrapMode(): void;\r\n        execCommand(cmd: string): void;\r\n            handlePaste(e?: Event): void;\r\n        selectAll(): void;\r\n        wrapSelection(before: string, after: string): void;\r\n        insertHeading(level: number): void;\r\n        insertList(type: string): void;\r\n        alignText(align: string): void;\r\n        insertLink(): void;\r\n        toggleFindReplace(): void;\r\n        findNext(): void;\r\n        replaceOne(): void;\r\n        replaceAll(): void;\r\n        closeFindReplace(): void;\r\n            formatFileLabel(meta?: unknown): string;\r\n        setStatusLocalized(key: string, params?: unknown): void;\r\n            resolveTranslation(key: string, params?: unknown): { text: string; translated: boolean };\r\n        showToast(msg: string, type?: string): void;\r\n        insertTextAtCursor(text: string): void;\r\n        showInputModal(title: string, defaultValue?: string, placeholder?: string): Promise<string | null>;\r\n            applyStatusState(state?: StatusState): void;\r\n            clearEditor(): void;\r\n            openFile(): void;\r\n            saveFile(): void;\r\n        loadRemoteFile(payload: Partial<RemoteFilePayload>): void;\r\n        showLoading(payload?: unknown): void;\r\n        showLoadError(payload?: unknown): void;\r\n        handleMenuAction(action: string): void;\r\n        destroy(): void;\r\n}\r\n\r\nconst TextEditorSystem: TextEditorSystemInternal = {\r\n    container: null,\r\n    editor: null,\r\n    statusBar: null,\r\n    saveButton: null,\r\n    fileInput: null,\r\n    wrapMode: 'off',\r\n    currentRemoteFile: null,\r\n    statusState: null,\r\n    wordCountDisplay: null,\r\n    lineColDisplay: null,\r\n    findReplacePanel: null,\r\n    findInput: null,\r\n    replaceInput: null,\r\n    toastContainer: null,\r\n\r\n        /**\r\n         * Initialize text editor in container\r\n         * @param {HTMLElement|string} containerOrId - Container element or ID\r\n         */\r\n        init(containerOrId: HTMLElement | string): void {\r\n            const container =\r\n                typeof containerOrId === 'string'\r\n                    ? document.getElementById(containerOrId)\r\n                    : containerOrId;\r\n\r\n            if (!container) {\r\n                console.error('Text editor container not found:', containerOrId);\r\n                return;\r\n            }\r\n\r\n            this.container = container;\r\n            this.render();\r\n            this.cacheElements();\r\n            this.loadWrapPreference();\r\n            this.attachListeners();\r\n            this.loadSavedContent();\r\n            this.syncSaveButtonState();\r\n\r\n            // Register text editor actions with ActionBus\r\n            if (window.ActionBus) {\r\n                this.registerActions();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Render text editor UI\r\n         */\r\n        render(): void {\r\n            if (!this.container) return;\r\n\r\n            this.container.innerHTML = `\r\n                <div class=\"dialog-content flex flex-col h-full\" style=\"background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827);\">\r\n                    <!-- File Operations Toolbar -->\r\n                    <div id=\"text-toolbar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: flex; gap: 8px; align-items: center; flex-wrap: wrap;\">\r\n                        <button type=\"button\" data-action=\"textEditor:clear\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.clear\" data-i18n-title=\"textEditor.toolbar.clear\">Neu</button>\r\n                        <button type=\"button\" data-action=\"textEditor:open\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.open\" data-i18n-title=\"textEditor.toolbar.open\">\u00D6ffnen</button>\r\n                        <button type=\"button\" data-action=\"textEditor:save\" class=\"text-editor-btn\" id=\"text-save-button\" data-i18n=\"textEditor.toolbar.save\" data-i18n-title=\"textEditor.toolbar.save\">Speichern</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:bold\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.bold\" style=\"font-weight: bold;\">B</button>\r\n                        <button type=\"button\" data-action=\"textEditor:italic\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.italic\" style=\"font-style: italic;\">I</button>\r\n                        <button type=\"button\" data-action=\"textEditor:underline\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.underline\" style=\"text-decoration: underline;\">U</button>\r\n                        <button type=\"button\" data-action=\"textEditor:strikethrough\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.strikeThrough\" style=\"text-decoration: line-through;\">S</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:heading1\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading1\">H1</button>\r\n                        <button type=\"button\" data-action=\"textEditor:heading2\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading2\">H2</button>\r\n                        <button type=\"button\" data-action=\"textEditor:heading3\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading3\">H3</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:unorderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.unorderedList\">\u2022 List</button>\r\n                        <button type=\"button\" data-action=\"textEditor:orderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.orderedList\">1. List</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:alignLeft\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignLeft\">\u21E4</button>\r\n                        <button type=\"button\" data-action=\"textEditor:alignCenter\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignCenter\">\u2261</button>\r\n                        <button type=\"button\" data-action=\"textEditor:alignRight\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignRight\">\u21E5</button>\r\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\r\n                        <button type=\"button\" data-action=\"textEditor:insertLink\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.insertLink\">\uD83D\uDD17</button>\r\n                        <button type=\"button\" data-action=\"textEditor:findReplace\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.findReplace\">\uD83D\uDD0D</button>\r\n                        <input type=\"file\" id=\"text-file-input\"\r\n                            accept=\".txt,.md,.markdown,.html,.htm,.css,.scss,.js,.jsx,.ts,.tsx,.json,.yml,.yaml,.xml,.csv,.tsv,.ini,.cfg,.conf,.env,.gitignore,.log,.c,.h,.cpp,.hpp,.java,.kt,.swift,.cs,.py,.rb,.php,.rs,.go,.sh,.bash,.zsh,.fish,.ps1,.bat\"\r\n                            style=\"display:none\">\r\n                    </div>\r\n                    <!-- Find and Replace Panel (Hidden by default) -->\r\n                    <div id=\"find-replace-panel\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: none; gap: 8px; align-items: center; flex-wrap: wrap;\">\r\n                        <input type=\"text\" id=\"find-input\" data-i18n-placeholder=\"textEditor.findReplace.find\" placeholder=\"Find...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\r\n                        <input type=\"text\" id=\"replace-input\" data-i18n-placeholder=\"textEditor.findReplace.replace\" placeholder=\"Replace...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\r\n                        <button type=\"button\" data-action=\"textEditor:findNext\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.next\" data-i18n-title=\"textEditor.findReplace.next\" style=\"font-size: 12px;\">Next</button>\r\n                        <button type=\"button\" data-action=\"textEditor:replaceOne\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceOne\" data-i18n-title=\"textEditor.findReplace.replaceOne\" style=\"font-size: 12px;\">Replace</button>\r\n                        <button type=\"button\" data-action=\"textEditor:replaceAll\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceAll\" data-i18n-title=\"textEditor.findReplace.replaceAll\" style=\"font-size: 12px;\">Replace All</button>\r\n                        <button type=\"button\" data-action=\"textEditor:closeFindReplace\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.close\" data-i18n-title=\"textEditor.findReplace.close\" style=\"font-size: 12px;\">\u2715</button>\r\n                    </div>\r\n                    <div id=\"text-file-status\" class=\"flex-none\" style=\"padding: 8px 16px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827); font-size: 14px; opacity: 0.75; display: none;\"></div>\r\n                    <textarea id=\"text-editor-textarea\" spellcheck=\"false\" wrap=\"off\" class=\"flex-1 w-full resize-none p-4 border-0 outline-none\"\r\n                        style=\"background: var(--editor-surface-bg, #ffffff); color: inherit; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace; font-size: 14px; line-height: 1.6; tab-size: 4;\"\r\n                        title=\"textarea\"></textarea>\r\n                    <!-- Status Bar with Word Count -->\r\n                    <div id=\"word-count-bar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 6px 12px; border-top: 1px solid var(--editor-toolbar-border, #d1d5db); font-size: 12px; color: var(--editor-text, #111827); opacity: 0.75; display: flex; justify-content: space-between;\">\r\n                        <span id=\"word-count-display\" data-i18n=\"textEditor.status.wordCount\" data-i18n-params='{\"words\":0,\"chars\":0}'>Words: 0 | Characters: 0</span>\r\n                        <span id=\"line-col-display\" data-i18n=\"textEditor.status.position\" data-i18n-params='{\"line\":1,\"col\":1}'>Line 1, Col 1</span>\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n            // Apply CSS variables for dark mode support\r\n            this.updateCSSVariables();\r\n\r\n            // Apply i18n translations\r\n            if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\r\n                window.appI18n.applyTranslations();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Update CSS variables for dark mode\r\n         */\r\n        updateCSSVariables(): void {\r\n            if (!this.container) return;\r\n\r\n            const isDark = document.documentElement.classList.contains('dark');\r\n\r\n            this.container.style.setProperty('--editor-body-bg', isDark ? '#0f172a' : '#fafafa');\r\n            this.container.style.setProperty('--editor-text', isDark ? '#e5e7eb' : '#111827');\r\n            this.container.style.setProperty('--editor-toolbar-bg', isDark ? '#1f2937' : '#f5f5f5');\r\n            this.container.style.setProperty(\r\n                '--editor-toolbar-border',\r\n                isDark ? '#374151' : '#d1d5db'\r\n            );\r\n            this.container.style.setProperty(\r\n                '--editor-toolbar-button-bg',\r\n                isDark ? '#111827' : '#ffffff'\r\n            );\r\n            this.container.style.setProperty(\r\n                '--editor-toolbar-button-hover',\r\n                isDark ? '#1f2937' : '#e5e7eb'\r\n            );\r\n            this.container.style.setProperty(\r\n                '--editor-toolbar-button-border',\r\n                isDark ? '#475569' : '#d1d5db'\r\n            );\r\n            this.container.style.setProperty('--editor-surface-bg', isDark ? '#111827' : '#ffffff');\r\n\r\n            // Apply button styles\r\n            const buttons = this.container.querySelectorAll<HTMLElement>('.text-editor-btn');\r\n            buttons.forEach(btn => {\r\n                btn.style.margin = '0';\r\n                btn.style.padding = '6px 12px';\r\n                btn.style.fontSize = '14px';\r\n                btn.style.border = `1px solid ${isDark ? '#475569' : '#d1d5db'}`;\r\n                btn.style.background = isDark ? '#111827' : '#ffffff';\r\n                btn.style.cursor = 'pointer';\r\n                btn.style.color = 'inherit';\r\n                btn.style.borderRadius = '6px';\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Cache DOM elements\r\n         */\r\n        cacheElements(): void {\r\n            if (!this.container) return;\r\n\r\n            this.editor = this.container.querySelector<HTMLTextAreaElement>(\r\n                '#text-editor-textarea'\r\n            );\r\n            this.statusBar = this.container.querySelector<HTMLElement>('#text-file-status');\r\n            this.saveButton = this.container.querySelector<HTMLButtonElement>('#text-save-button');\r\n            this.fileInput = this.container.querySelector<HTMLInputElement>('#text-file-input');\r\n            this.wordCountDisplay = this.container.querySelector<HTMLElement>(\r\n                '#word-count-display'\r\n            );\r\n            this.lineColDisplay = this.container.querySelector<HTMLElement>('#line-col-display');\r\n            this.findReplacePanel = this.container.querySelector<HTMLElement>(\r\n                '#find-replace-panel'\r\n            );\r\n            this.findInput = this.container.querySelector<HTMLInputElement>('#find-input');\r\n            this.replaceInput = this.container.querySelector<HTMLInputElement>('#replace-input');\r\n        },\r\n\r\n        /**\r\n         * Load wrap mode preference\r\n         */\r\n        loadWrapPreference(): void {\r\n            const storedWrapMode = localStorage.getItem('textEditorWrapMode');\r\n            this.wrapMode = storedWrapMode === 'soft' ? 'soft' : 'off';\r\n            this.applyWrapMode(this.wrapMode);\r\n        },\r\n\r\n        /**\r\n         * Apply wrap mode\r\n         * @param {string} mode - Wrap mode (soft|off)\r\n         */\r\n        applyWrapMode(mode?: string): void {\r\n            if (!this.editor) return;\r\n            const effective = mode ?? this.wrapMode;\r\n            const normalized = effective === 'soft' ? 'soft' : 'off';\r\n            this.wrapMode = normalized;\r\n            this.editor.wrap = normalized;\r\n            this.editor.style.whiteSpace = normalized === 'soft' ? 'pre-wrap' : 'pre';\r\n\r\n            try {\r\n                localStorage.setItem('textEditorWrapMode', normalized);\r\n            } catch (err) {\r\n                console.warn('Wrap preference could not be stored:', err);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Toggle wrap mode\r\n         */\r\n        toggleWrapMode(): void {\r\n            const next = this.wrapMode === 'soft' ? 'off' : 'soft';\r\n            this.applyWrapMode(next);\r\n            this.setStatusPlain(\r\n                next === 'soft' ? 'Zeilenumbruch aktiviert' : 'Zeilenumbruch deaktiviert'\r\n            );\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Attach event listeners\r\n         */\r\n        attachListeners(): void {\r\n            if (!this.editor || !this.fileInput) return;\r\n\r\n            // Editor input listener for auto-save and word count\r\n            this.editor.addEventListener('input', () => {\r\n                this.handleEditorInput();\r\n                this.updateWordCount();\r\n            });\r\n\r\n            // Editor selection and cursor listener\r\n            this.editor.addEventListener('click', () => {\r\n                this.updateCursorPosition();\r\n            });\r\n\r\n            this.editor.addEventListener('keyup', () => {\r\n                this.updateCursorPosition();\r\n            });\r\n\r\n            // File input change listener\r\n            this.fileInput.addEventListener('change', event => {\r\n                this.handleFileSelect(event);\r\n            });\r\n\r\n            // Listen for theme changes to update CSS variables\r\n            const themeObserver = new MutationObserver(() => {\r\n                this.updateCSSVariables();\r\n            });\r\n            themeObserver.observe(document.documentElement, {\r\n                attributes: true,\r\n                attributeFilter: ['class'],\r\n            });\r\n\r\n            // Listen for language changes\r\n            window.addEventListener('languagePreferenceChange', () => {\r\n                this.updateDocumentTitle();\r\n                this.applyStatusState();\r\n            });\r\n\r\n            // Initial word count and cursor position\r\n            this.updateWordCount();\r\n            this.updateCursorPosition();\r\n        },\r\n\r\n        /**\r\n         * Register actions with ActionBus\r\n         */\r\n        registerActions(): void {\r\n            if (!window.ActionBus) return;\r\n\r\n            window.ActionBus.registerAll({\r\n                'textEditor:clear': () => this.clearEditor(),\r\n                'textEditor:open': () => this.openFile(),\r\n                'textEditor:save': () => this.saveFile(),\r\n                'textEditor:toggleWrap': () => this.toggleWrapMode(),\r\n                'textEditor:undo': () => this.execCommand('undo'),\r\n                'textEditor:redo': () => this.execCommand('redo'),\r\n                'textEditor:cut': () => this.execCommand('cut'),\r\n                'textEditor:copy': () => this.execCommand('copy'),\r\n                'textEditor:paste': () => this.handlePaste(),\r\n                'textEditor:selectAll': () => this.selectAll(),\r\n                // New formatting actions\r\n                'textEditor:bold': () => this.wrapSelection('**', '**'),\r\n                'textEditor:italic': () => this.wrapSelection('*', '*'),\r\n                'textEditor:underline': () => this.wrapSelection('<u>', '</u>'),\r\n                'textEditor:strikethrough': () => this.wrapSelection('~~', '~~'),\r\n                'textEditor:heading1': () => this.insertHeading(1),\r\n                'textEditor:heading2': () => this.insertHeading(2),\r\n                'textEditor:heading3': () => this.insertHeading(3),\r\n                'textEditor:unorderedList': () => this.insertList('unordered'),\r\n                'textEditor:orderedList': () => this.insertList('ordered'),\r\n                'textEditor:alignLeft': () => this.alignText('left'),\r\n                'textEditor:alignCenter': () => this.alignText('center'),\r\n                'textEditor:alignRight': () => this.alignText('right'),\r\n                'textEditor:insertLink': () => this.insertLink(),\r\n                'textEditor:findReplace': () => this.toggleFindReplace(),\r\n                'textEditor:findNext': () => this.findNext(),\r\n                'textEditor:replaceOne': () => this.replaceOne(),\r\n                'textEditor:replaceAll': () => this.replaceAll(),\r\n                'textEditor:closeFindReplace': () => this.closeFindReplace(),\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Handle editor input\r\n         */\r\n        handleEditorInput(): void {\r\n            if (!this.editor) return;\r\n\r\n            try {\r\n                localStorage.setItem('textEditorContent', this.editor.value);\r\n            } catch (err) {\r\n                console.warn('Could not save editor content to localStorage:', err);\r\n            }\r\n\r\n            this.syncSaveButtonState();\r\n        },\r\n\r\n        /**\r\n         * Handle file selection\r\n         */\r\n        handleFileSelect(event: Event): void {\r\n            const input = event.target as HTMLInputElement | null;\r\n            const file = input?.files?.[0];\r\n            if (!file) return;\r\n\r\n            const reader = new FileReader();\r\n            reader.onload = (e: ProgressEvent<FileReader>) => {\r\n                const content = e.target?.result;\r\n                if (typeof content === 'string' && this.editor) {\r\n                    this.editor.value = content;\r\n                    this.updateWordCount();\r\n                    this.updateCursorPosition();\r\n                }\r\n                    this.currentRemoteFile = { fileName: file.name, content: '' };\r\n                this.updateDocumentTitle();\r\n                this.setStatusPlain(file.name);\r\n                this.syncSaveButtonState();\r\n                this.focusEditor();\r\n            };\r\n            reader.readAsText(file);\r\n\r\n            // Reset input for future opens\r\n            if (input) {\r\n                input.value = '';\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Load saved content from localStorage\r\n         */\r\n        loadSavedContent(): void {\r\n            if (!this.editor) return;\r\n\r\n            try {\r\n                const saved = localStorage.getItem('textEditorContent');\r\n                if (saved) {\r\n                    this.editor.value = saved;\r\n                    this.updateWordCount();\r\n                    this.updateCursorPosition();\r\n                }\r\n            } catch (err) {\r\n                console.warn('Could not load saved content:', err);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Sync save button state\r\n         */\r\n        syncSaveButtonState(): void {\r\n            if (!this.saveButton || !this.editor) return;\r\n\r\n            this.saveButton.disabled = this.editor.value.length === 0;\r\n        },\r\n\r\n        /**\r\n         * Focus editor\r\n         */\r\n        focusEditor(): void {\r\n            if (this.editor) {\r\n                this.editor.focus();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Clear editor\r\n         */\r\n        clearEditor(): void {\r\n            if (!this.editor) return;\r\n\r\n            this.editor.value = '';\r\n            this.updateWordCount();\r\n            this.updateCursorPosition();\r\n            localStorage.removeItem('textEditorContent');\r\n            this.currentRemoteFile = null;\r\n            this.updateDocumentTitle();\r\n            this.clearStatus();\r\n            this.syncSaveButtonState();\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Open file picker\r\n         */\r\n        openFile(): void {\r\n            if (this.fileInput) {\r\n                this.fileInput.click();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Save file\r\n         */\r\n        saveFile(): void {\r\n            if (!this.editor) return;\r\n\r\n            const content = this.editor.value;\r\n            const blob = new Blob([content], {\r\n                type: 'text/plain;charset=utf-8',\r\n            });\r\n            const url = URL.createObjectURL(blob);\r\n            const a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            const firstLine = content.split('\\n')[0] || 'text';\r\n            const sanitized =\r\n                firstLine\r\n                    .trim()\r\n                    .substring(0, 20)\r\n                    .replace(/[^a-zA-Z0-9-_]/g, '') || 'text';\r\n            a.download = `${sanitized}.txt`;\r\n\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n            URL.revokeObjectURL(url);\r\n        },\r\n\r\n        /**\r\n         * Execute document command\r\n         * @param {string} command - Command to execute\r\n         */\r\n        execCommand(command: string): void {\r\n            this.focusEditor();\r\n            try {\r\n                if (!document.execCommand(command)) {\r\n                    this.setStatusPlain(`Command ${command} not available`);\r\n                }\r\n            } catch (err) {\r\n                console.warn(`Command ${command} failed:`, err);\r\n                this.setStatusPlain(`Command ${command} failed`);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle paste operation\r\n         */\r\n    handlePaste(e?: Event): void {\r\n            this.focusEditor();\r\n\r\n            if (navigator.clipboard && typeof navigator.clipboard.readText === 'function') {\r\n                navigator.clipboard\r\n                    .readText()\r\n                    .then(text => {\r\n                        if (text && this.editor) {\r\n                            this.insertTextAtCursor(text);\r\n                        }\r\n                    })\r\n                    .catch(() => {\r\n                        this.execCommand('paste');\r\n                    });\r\n            } else {\r\n                this.execCommand('paste');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Select all text\r\n         */\r\n        selectAll(): void {\r\n            this.focusEditor();\r\n            if (this.editor) {\r\n                this.editor.select();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Insert text at cursor position\r\n         * @param {string} text - Text to insert\r\n         */\r\n        insertTextAtCursor(text: string): void {\r\n            if (!this.editor || typeof text !== 'string') return;\r\n\r\n            const start =\r\n                typeof this.editor.selectionStart === 'number'\r\n                    ? this.editor.selectionStart\r\n                    : this.editor.value.length;\r\n            const end =\r\n                typeof this.editor.selectionEnd === 'number' ? this.editor.selectionEnd : start;\r\n\r\n            this.editor.setRangeText(text, start, end, 'end');\r\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n        },\r\n\r\n        /**\r\n         * Update document title\r\n         */\r\n        updateDocumentTitle(): void {\r\n            const titleKey =\r\n                this.currentRemoteFile && this.currentRemoteFile.fileName\r\n                    ? 'textEditor.documentTitleWithFile'\r\n                    : 'textEditor.documentTitle';\r\n\r\n            const params =\r\n                this.currentRemoteFile && this.currentRemoteFile.fileName\r\n                    ? { fileName: this.currentRemoteFile.fileName }\r\n                    : undefined;\r\n\r\n            const { text } = this.resolveTranslation(titleKey, params);\r\n            document.title = text;\r\n        },\r\n\r\n        /**\r\n         * Format file label for display\r\n         * @param {Object} meta - File metadata\r\n         * @returns {string} Formatted label\r\n         */\r\n        formatFileLabel(meta: FileMeta = {}): string {\r\n            const parts = [];\r\n            if (meta.repo) parts.push(meta.repo);\r\n            if (meta.path) {\r\n                parts.push(meta.path);\r\n            } else if (meta.fileName) {\r\n                parts.push(meta.fileName);\r\n            }\r\n            return parts.join(' / ');\r\n        },\r\n\r\n        /**\r\n         * Set plain text status\r\n         * @param {string} text - Status text\r\n         */\r\n        setStatusPlain(text: string | null | undefined): void {\r\n            if (!text) {\r\n                this.clearStatus();\r\n                return;\r\n            }\r\n            this.statusState = { type: 'plain', text };\r\n            this.applyStatusState();\r\n        },\r\n\r\n        /**\r\n         * Set localized status\r\n         * @param {string} key - Translation key\r\n         * @param {Object} params - Translation parameters\r\n         */\r\n        setStatusLocalized(key: string, params?: Record<string, unknown>): void {\r\n            this.statusState = {\r\n                type: 'i18n',\r\n                key,\r\n                params: params || undefined,\r\n            };\r\n            this.applyStatusState();\r\n        },\r\n\r\n        /**\r\n         * Clear status\r\n         */\r\n        clearStatus(): void {\r\n            this.statusState = null;\r\n            this.applyStatusState();\r\n        },\r\n\r\n        /**\r\n         * Apply status state to UI\r\n         */\r\n        applyStatusState(): void {\r\n            if (!this.statusBar) return;\r\n\r\n            if (!this.statusState) {\r\n                this.statusBar.textContent = '';\r\n                this.statusBar.style.display = 'none';\r\n                this.statusBar.removeAttribute('data-i18n');\r\n                this.statusBar.removeAttribute('data-i18n-params');\r\n                return;\r\n            }\r\n\r\n            if (this.statusState.type === 'i18n') {\r\n                const { text, translated } = this.resolveTranslation(\r\n                    this.statusState.key,\r\n                    this.statusState.params\r\n                );\r\n                this.statusBar.textContent = text;\r\n\r\n                if (translated) {\r\n                    this.statusBar.setAttribute('data-i18n', this.statusState.key);\r\n                    if (this.statusState.params) {\r\n                        this.statusBar.setAttribute(\r\n                            'data-i18n-params',\r\n                            JSON.stringify(this.statusState.params)\r\n                        );\r\n                    } else {\r\n                        this.statusBar.removeAttribute('data-i18n-params');\r\n                    }\r\n\r\n                    if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\r\n                        window.appI18n.applyTranslations();\r\n                    }\r\n                } else {\r\n                    this.statusBar.removeAttribute('data-i18n');\r\n                    this.statusBar.removeAttribute('data-i18n-params');\r\n                }\r\n            } else {\r\n                this.statusBar.removeAttribute('data-i18n');\r\n                this.statusBar.removeAttribute('data-i18n-params');\r\n                this.statusBar.textContent = this.statusState.text;\r\n            }\r\n\r\n            this.statusBar.style.display = 'block';\r\n        },\r\n\r\n        /**\r\n         * Resolve translation\r\n         * @param {string} key - Translation key\r\n         * @param {Object} params - Translation parameters\r\n         * @returns {Object} Resolved translation\r\n         */\r\n        resolveTranslation(\r\n            key: string,\r\n            params?: Record<string, unknown>\r\n        ): { text: string; translated: boolean } {\r\n            if (!key) return { text: '', translated: false };\r\n\r\n            const fallbackMessages = {\r\n                'textEditor.documentTitle': () => 'Texteditor',\r\n                    'textEditor.documentTitleWithFile': (p: unknown) => {\r\n                        const fileName = p && (p as any).fileName ? (p as any).fileName : '';\r\n                    return fileName ? `Texteditor \u2013 ${fileName}` : 'Texteditor';\r\n                },\r\n                'textEditor.status.loading': () => 'Lade Datei \u2026',\r\n                    'textEditor.status.loadingWithLabel': (p: unknown) => {\r\n                        const label = p && (p as any).label ? (p as any).label : '';\r\n                    return label ? `${label} (l\u00E4dt \u2026)` : 'Lade Datei \u2026';\r\n                },\r\n                'textEditor.status.loadError': () => 'Datei konnte nicht geladen werden.',\r\n                'textEditor.status.rateLimit': () =>\r\n                    'GitHub Rate Limit erreicht. Bitte versuche es sp\u00E4ter erneut.',\r\n                    'textEditor.status.wordCount': (p: unknown) => {\r\n                        const words = p && typeof (p as any).words === 'number' ? (p as any).words : 0;\r\n                        const chars = p && typeof (p as any).chars === 'number' ? (p as any).chars : 0;\r\n                    return `Words: ${words} | Characters: ${chars}`;\r\n                },\r\n                    'textEditor.status.position': (p: unknown) => {\r\n                        const line = p && typeof (p as any).line === 'number' ? (p as any).line : 1;\r\n                        const col = p && typeof (p as any).col === 'number' ? (p as any).col : 1;\r\n                    return `Line ${line}, Col ${col}`;\r\n                },\r\n                'textEditor.findReplace.noMatch': () => 'No match found',\r\n                    'textEditor.findReplace.replacedCount': (p: unknown) => {\r\n                        const count = p && typeof (p as any).count === 'number' ? (p as any).count : 0;\r\n                    return `Replaced ${count} occurrence(s)`;\r\n                },\r\n                } as Record<string, ((...args: unknown[]) => string) | (() => string)>;\r\n\r\n            try {\r\n                if (window.appI18n && typeof window.appI18n.translate === 'function') {\r\n                    const translated = window.appI18n.translate(key);\r\n                    if (translated && translated !== key) {\r\n                        return { text: translated, translated: true };\r\n                    }\r\n                }\r\n            } catch (err) {\r\n                console.warn('Translation failed, falling back:', err);\r\n            }\r\n\r\n            const fallbackFn = fallbackMessages[key];\r\n            if (typeof fallbackFn === 'function') {\r\n                return { text: fallbackFn(params || {}), translated: false };\r\n            }\r\n\r\n            return { text: key, translated: false };\r\n        },\r\n\r\n        // ==================== Public API for Finder Integration ====================\r\n\r\n        /**\r\n         * Load remote file into editor\r\n         * @param {Object} payload - File payload\r\n         * @param {string} payload.content - File content\r\n         * @param {string} [payload.fileName] - File name\r\n         * @param {string} [payload.repo] - Repository name\r\n         * @param {string} [payload.path] - File path\r\n         */\r\n        loadRemoteFile(payload: Partial<RemoteFilePayload>): void {\r\n            if (typeof payload.content !== 'string') {\r\n                console.warn('Invalid payload for loadRemoteFile:', payload);\r\n                return;\r\n            }\r\n\r\n            const remotePayload: RemoteFilePayload = {\r\n                content: payload.content,\r\n                fileName: payload.fileName,\r\n                repo: payload.repo,\r\n                path: payload.path,\r\n            };\r\n\r\n            if (this.editor) {\r\n                this.editor.value = remotePayload.content;\r\n                this.updateWordCount();\r\n                this.updateCursorPosition();\r\n            }\r\n\r\n            this.currentRemoteFile = remotePayload;\r\n            const label = this.formatFileLabel(remotePayload);\r\n            this.updateDocumentTitle();\r\n            this.setStatusPlain(label);\r\n\r\n            try {\r\n                localStorage.setItem('textEditorContent', remotePayload.content);\r\n            } catch (err) {\r\n                console.warn('Could not save to localStorage:', err);\r\n            }\r\n\r\n            this.syncSaveButtonState();\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Show loading state\r\n         * @param {Object} payload - Loading payload\r\n         * @param {string} [payload.fileName] - File name\r\n         * @param {string} [payload.repo] - Repository name\r\n         * @param {string} [payload.path] - File path\r\n         */\r\n        showLoading(payload: FileMeta = {}): void {\r\n            const label = this.formatFileLabel(payload);\r\n            if (label) {\r\n                this.setStatusLocalized('textEditor.status.loadingWithLabel', {\r\n                    label,\r\n                });\r\n            } else {\r\n                this.setStatusLocalized('textEditor.status.loading');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show load error\r\n         * @param {Object} payload - Error payload\r\n         * @param {string} [payload.message] - Error message\r\n         * @param {string} [payload.fileName] - File name\r\n         * @param {string} [payload.repo] - Repository name\r\n         * @param {string} [payload.path] - File path\r\n         */\r\n        showLoadError(payload: LoadErrorPayload = {}): void {\r\n            const label = this.formatFileLabel(payload);\r\n            const fallback = this.resolveTranslation('textEditor.status.loadError');\r\n            const message = payload && payload.message ? payload.message : fallback.text;\r\n\r\n            if (label) {\r\n                this.setStatusPlain(`${label} \u2014 ${message}`);\r\n            } else {\r\n                this.setStatusPlain(message);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Handle menu action\r\n         * @param {string} action - Action name\r\n         */\r\n        handleMenuAction(action: string): void {\r\n            if (!action) return;\r\n\r\n            const actionMap: Record<string, string> = {\r\n                'file:new': 'textEditor:clear',\r\n                'file:open': 'textEditor:open',\r\n                'file:save': 'textEditor:save',\r\n                'edit:undo': 'textEditor:undo',\r\n                'edit:redo': 'textEditor:redo',\r\n                'edit:cut': 'textEditor:cut',\r\n                'edit:copy': 'textEditor:copy',\r\n                'edit:paste': 'textEditor:paste',\r\n                'edit:selectAll': 'textEditor:selectAll',\r\n                'view:toggleWrap': 'textEditor:toggleWrap',\r\n            };\r\n\r\n            const mappedAction = actionMap[action];\r\n            if (mappedAction && window.ActionBus) {\r\n                window.ActionBus.execute(mappedAction);\r\n            } else {\r\n                console.warn('Unknown menu action:', action);\r\n            }\r\n        },\r\n\r\n        // ==================== New Formatting Methods ====================\r\n\r\n        /**\r\n         * Wrap selected text with prefix and suffix\r\n         * @param {string} prefix - Text to insert before selection\r\n         * @param {string} suffix - Text to insert after selection\r\n         */\r\n        wrapSelection(prefix: string, suffix: string): void {\r\n            if (!this.editor) return;\r\n\r\n            const start = this.editor.selectionStart;\r\n            const end = this.editor.selectionEnd;\r\n            const selectedText = this.editor.value.substring(start, end);\r\n            const wrappedText = prefix + selectedText + suffix;\r\n\r\n            this.editor.setRangeText(wrappedText, start, end, 'select');\r\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Insert heading at current line\r\n         * @param {number} level - Heading level (1-3)\r\n         */\r\n        insertHeading(level: number): void {\r\n            if (!this.editor) return;\r\n\r\n            const start = this.editor.selectionStart;\r\n            const text = this.editor.value;\r\n\r\n            // Find the start of the current line\r\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\r\n            let lineEnd = text.indexOf('\\n', start);\r\n            if (lineEnd === -1) lineEnd = text.length;\r\n\r\n            const currentLine = text.substring(lineStart, lineEnd);\r\n            const prefix = '#'.repeat(level) + ' ';\r\n\r\n            // Check if line already starts with heading markers\r\n            const headingMatch = currentLine.match(/^#+\\s/);\r\n            let newLine;\r\n\r\n            if (headingMatch) {\r\n                // Replace existing heading\r\n                newLine = prefix + currentLine.substring(headingMatch[0].length);\r\n            } else {\r\n                // Add new heading\r\n                newLine = prefix + currentLine;\r\n            }\r\n\r\n            this.editor.setRangeText(newLine, lineStart, lineEnd, 'end');\r\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Insert list at current line or for selected lines\r\n         * @param {string} type - List type ('ordered' or 'unordered')\r\n         */\r\n        insertList(type: 'ordered' | 'unordered'): void {\r\n            if (!this.editor) return;\r\n\r\n            const start = this.editor.selectionStart;\r\n            const end = this.editor.selectionEnd;\r\n            const text = this.editor.value;\r\n\r\n            // Find the start and end of affected lines\r\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\r\n            let lineEnd = text.indexOf('\\n', end);\r\n            if (lineEnd === -1) lineEnd = text.length;\r\n\r\n            const selectedLines = text.substring(lineStart, lineEnd).split('\\n');\r\n            const prefix = type === 'ordered' ? null : '- ';\r\n\r\n            const newLines = selectedLines.map((line, index) => {\r\n                // Remove existing list markers\r\n                const cleanLine = line.replace(/^(?:\\d+\\.\\s|-\\s|\\*\\s)/, '');\r\n\r\n                if (type === 'ordered') {\r\n                    return `${index + 1}. ${cleanLine}`;\r\n                }\r\n                // use prefix for unordered lists\r\n                return `${prefix}${cleanLine}`;\r\n            });\r\n\r\n            const newText = newLines.join('\\n');\r\n            this.editor.setRangeText(newText, lineStart, lineEnd, 'end');\r\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Align text (add HTML alignment tags)\r\n         * @param {string} alignment - Alignment type ('left', 'center', 'right')\r\n         */\r\n        alignText(alignment: 'left' | 'center' | 'right'): void {\r\n            if (!this.editor) return;\r\n\r\n            const start = this.editor.selectionStart;\r\n            const end = this.editor.selectionEnd;\r\n            const text = this.editor.value;\r\n\r\n            // Find the start and end of affected lines\r\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\r\n            let lineEnd = text.indexOf('\\n', end);\r\n            if (lineEnd === -1) lineEnd = text.length;\r\n\r\n            const selectedText = text.substring(lineStart, lineEnd);\r\n            const alignedText = `<div style=\"text-align: ${alignment};\">\\n${selectedText}\\n</div>`;\r\n\r\n            this.editor.setRangeText(alignedText, lineStart, lineEnd, 'end');\r\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Insert link at cursor or wrap selection\r\n         */\r\n        insertLink(): void {\r\n            if (!this.editor) return;\r\n\r\n            const start = this.editor.selectionStart;\r\n            const end = this.editor.selectionEnd;\r\n            const selectedText = this.editor.value.substring(start, end);\r\n\r\n            const urlLabel =\r\n                this.resolveTranslation('textEditor.insertLink.enterUrl').text || 'Enter URL:';\r\n            this.showInputModal(urlLabel, 'https://example.com', 'https://').then((url: string | null) => {\r\n                if (!url) return;\r\n\r\n                const linkText = selectedText || 'link text';\r\n                const markdown = `[${linkText}](${url})`;\r\n\r\n                this.editor?.setRangeText(markdown, start, end, 'end');\r\n                this.editor?.dispatchEvent(new Event('input', { bubbles: true }));\r\n                this.focusEditor();\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Update word and character count\r\n         */\r\n        updateWordCount(): void {\r\n            if (!this.editor || !this.wordCountDisplay) return;\r\n\r\n            const text = this.editor.value;\r\n            const chars = text.length;\r\n            const trimmedText = text.trim();\r\n            const words = trimmedText === '' ? 0 : trimmedText.split(/\\s+/).length;\r\n\r\n            // Use internal resolver (handles fallback + params)\r\n            const wc = this.resolveTranslation('textEditor.status.wordCount', { words, chars });\r\n            if (wc.translated) {\r\n                this.wordCountDisplay.textContent = wc.text;\r\n                return;\r\n            }\r\n\r\n            // Fallback to English\r\n            this.wordCountDisplay.textContent = `Words: ${words} | Characters: ${chars}`;\r\n        },\r\n\r\n        /**\r\n         * Update cursor position display\r\n         */\r\n        updateCursorPosition(): void {\r\n            if (!this.editor || !this.lineColDisplay) return;\r\n\r\n            const text = this.editor.value;\r\n            const pos = this.editor.selectionStart;\r\n\r\n            const textBeforeCursor = text.substring(0, pos);\r\n            const lines = textBeforeCursor.split('\\n');\r\n            const line = lines.length;\r\n            const lastLine = lines[lines.length - 1] || '';\r\n            const col = lastLine.length + 1;\r\n\r\n            // Use internal resolver (handles fallback + params)\r\n            const posMsg = this.resolveTranslation('textEditor.status.position', { line, col });\r\n            if (posMsg.translated) {\r\n                this.lineColDisplay.textContent = posMsg.text;\r\n                return;\r\n            }\r\n\r\n            // Fallback to English\r\n            this.lineColDisplay.textContent = `Line ${line}, Col ${col}`;\r\n        },\r\n\r\n        /**\r\n         * Toggle find and replace panel\r\n         */\r\n        toggleFindReplace(): void {\r\n            if (!this.findReplacePanel) return;\r\n\r\n            if (this.findReplacePanel.style.display === 'none') {\r\n                this.findReplacePanel.style.display = 'flex';\r\n                if (this.findInput) {\r\n                    this.findInput.focus();\r\n                }\r\n            } else {\r\n                this.findReplacePanel.style.display = 'none';\r\n                this.focusEditor();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Close find and replace panel\r\n         */\r\n        closeFindReplace(): void {\r\n            if (!this.findReplacePanel) return;\r\n            this.findReplacePanel.style.display = 'none';\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Find next occurrence\r\n         */\r\n        findNext(): void {\r\n            if (!this.editor || !this.findInput) return;\r\n\r\n            const searchText = this.findInput.value;\r\n            if (!searchText) return;\r\n\r\n            const text = this.editor.value;\r\n            const start = this.editor.selectionEnd;\r\n            const index = text.indexOf(searchText, start);\r\n\r\n            if (index !== -1) {\r\n                this.editor.setSelectionRange(index, index + searchText.length);\r\n                this.editor.focus();\r\n            } else {\r\n                // Wrap around to beginning\r\n                const firstIndex = text.indexOf(searchText);\r\n                if (firstIndex !== -1) {\r\n                    this.editor.setSelectionRange(firstIndex, firstIndex + searchText.length);\r\n                    this.editor.focus();\r\n                } else {\r\n                    const message =\r\n                        this.resolveTranslation('textEditor.findReplace.noMatch').text ||\r\n                        'No match found';\r\n                    this.showToast(message, 'info');\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Replace one occurrence\r\n         */\r\n        replaceOne(): void {\r\n            if (!this.editor || !this.findInput || !this.replaceInput) return;\r\n\r\n            const searchText = this.findInput.value;\r\n            const replaceText = this.replaceInput.value;\r\n\r\n            if (!searchText) return;\r\n\r\n            const start = this.editor.selectionStart;\r\n            const end = this.editor.selectionEnd;\r\n            const selectedText = this.editor.value.substring(start, end);\r\n\r\n            if (selectedText === searchText) {\r\n                this.editor.setRangeText(replaceText, start, end, 'end');\r\n                this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n                this.findNext(); // Find next occurrence\r\n            } else {\r\n                this.findNext(); // Find first occurrence\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Replace all occurrences\r\n         */\r\n        replaceAll(): void {\r\n            if (!this.editor || !this.findInput || !this.replaceInput) return;\r\n\r\n            const searchText = this.findInput.value;\r\n            const replaceText = this.replaceInput.value;\r\n\r\n            if (!searchText) return;\r\n\r\n            const text = this.editor.value;\r\n            const parts = text.split(searchText);\r\n            const count = parts.length - 1;\r\n\r\n            if (count > 0) {\r\n                const newText = parts.join(replaceText);\r\n                this.editor.value = newText;\r\n                this.editor.dispatchEvent(new Event('input', { bubbles: true }));\r\n\r\n                const message =\r\n                    this.resolveTranslation('textEditor.findReplace.replacedCount', { count })\r\n                        .text || `Replaced ${count} occurrence(s)`;\r\n                this.showToast(message, 'success');\r\n            } else {\r\n                const message =\r\n                    this.resolveTranslation('textEditor.findReplace.noMatch').text ||\r\n                    'No match found';\r\n                this.showToast(message, 'info');\r\n            }\r\n\r\n            this.focusEditor();\r\n        },\r\n\r\n        /**\r\n         * Show toast notification\r\n         * @param {string} message - Message to display\r\n         * @param {string} type - Toast type: 'info', 'success', 'error'\r\n         * @param {number} duration - Display duration in ms (default: 3000)\r\n         */\r\n        showToast(\r\n            message: string,\r\n            type: 'info' | 'success' | 'error' = 'info',\r\n            duration = 3000\r\n        ): void {\r\n            if (!this.container) return;\r\n\r\n            const toast = document.createElement('div');\r\n            toast.className = `text-editor-toast text-editor-toast-${type}`;\r\n            toast.textContent = message;\r\n\r\n            // Add to container\r\n            if (!this.toastContainer) {\r\n                this.toastContainer = document.createElement('div');\r\n                this.toastContainer.className = 'text-editor-toast-container';\r\n                this.container.appendChild(this.toastContainer);\r\n            }\r\n\r\n            this.toastContainer.appendChild(toast);\r\n\r\n            // Trigger animation\r\n            setTimeout(() => toast.classList.add('show'), 10);\r\n\r\n            // Auto-remove\r\n            setTimeout(() => {\r\n                toast.classList.remove('show');\r\n                setTimeout(() => toast.remove(), 300);\r\n            }, duration);\r\n        },\r\n\r\n        /**\r\n         * Show input modal dialog\r\n         * @param {string} title - Modal title\r\n         * @param {string} placeholder - Input placeholder\r\n         * @param {string} defaultValue - Default input value\r\n         * @returns {Promise<string|null>} Resolves with input value or null if cancelled\r\n         */\r\n        showInputModal(\r\n            title: string,\r\n            defaultValue = '',\r\n            placeholder = ''\r\n        ): Promise<string | null> {\r\n            return new Promise(resolve => {\r\n                const modal = document.createElement('div');\r\n                modal.className = 'text-editor-modal-overlay';\r\n\r\n                modal.innerHTML = `\r\n                    <div class=\"text-editor-modal\">\r\n                        <div class=\"text-editor-modal-header\">\r\n                            <h3>${title}</h3>\r\n                        </div>\r\n                        <div class=\"text-editor-modal-body\">\r\n                            <input type=\"text\" class=\"text-editor-modal-input\" placeholder=\"${placeholder}\" value=\"${defaultValue}\">\r\n                        </div>\r\n                        <div class=\"text-editor-modal-footer\">\r\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-cancel\">Cancel</button>\r\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-confirm\">OK</button>\r\n                        </div>\r\n                    </div>\r\n                `;\r\n\r\n                document.body.appendChild(modal);\r\n\r\n                const input = modal.querySelector('.text-editor-modal-input') as HTMLInputElement | null;\r\n                const cancelBtn = modal.querySelector('.text-editor-modal-btn-cancel') as HTMLButtonElement | null;\r\n                const confirmBtn = modal.querySelector('.text-editor-modal-btn-confirm') as HTMLButtonElement | null;\r\n\r\n                if (!input || !cancelBtn || !confirmBtn) {\r\n                    modal.remove();\r\n                    resolve(null);\r\n                    return;\r\n                }\r\n\r\n                // Focus input and select text\r\n                setTimeout(() => {\r\n                    input?.focus();\r\n                    input?.select();\r\n                }, 50);\r\n\r\n                const cleanup = () => {\r\n                    modal.classList.add('closing');\r\n                    setTimeout(() => modal.remove(), 200);\r\n                };\r\n\r\n                const handleConfirm = () => {\r\n                    const value = input?.value.trim();\r\n                    cleanup();\r\n                    resolve((value || '') as string || null);\r\n                };\r\n\r\n                const handleCancel = () => {\r\n                    cleanup();\r\n                    resolve(null);\r\n                };\r\n\r\n                // Event listeners\r\n                confirmBtn.addEventListener('click', handleConfirm);\r\n                cancelBtn.addEventListener('click', handleCancel);\r\n                input.addEventListener('keydown', (e: KeyboardEvent) => {\r\n                    if (e.key === 'Enter') {\r\n                        e.preventDefault();\r\n                        handleConfirm();\r\n                    } else if (e.key === 'Escape') {\r\n                        e.preventDefault();\r\n                        handleCancel();\r\n                    }\r\n                });\r\n\r\n                // Click outside to close\r\n                modal.addEventListener('click', (e: MouseEvent) => {\r\n                    if (e.target === modal) {\r\n                        handleCancel();\r\n                    }\r\n                });\r\n\r\n                // Trigger animation\r\n                setTimeout(() => modal.classList.add('show'), 10);\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Destroy text editor\r\n         */\r\n        destroy(): void {\r\n            if (this.container) {\r\n                this.container.innerHTML = '';\r\n                this.container = null;\r\n            }\r\n            this.editor = null;\r\n            this.statusBar = null;\r\n            this.saveButton = null;\r\n            this.fileInput = null;\r\n            this.wordCountDisplay = null;\r\n            this.lineColDisplay = null;\r\n            this.findReplacePanel = null;\r\n            this.findInput = null;\r\n            this.replaceInput = null;\r\n            this.toastContainer = null;\r\n        },\r\n    };\r\n\r\n    // Export to global scope\r\n    window.TextEditorSystem = TextEditorSystem;\r\n\r\n    // Auto-init if container exists on load\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            const container = document.getElementById('text-editor-container');\r\n            if (container) {\r\n                TextEditorSystem.init(container);\r\n            }\r\n        });\r\n    } else {\r\n        const container = document.getElementById('text-editor-container');\r\n        if (container) {\r\n            TextEditorSystem.init(container);\r\n        }\r\n    }\r\n// End of TextEditorSystem module\r\n", "(function () {\r\n    'use strict';\r\n\r\n    type PlaceholderState = { key: string; params?: Record<string, unknown> } | null;\r\n\r\n    function getEl(id: string): HTMLElement | null {\r\n        return document.getElementById(id);\r\n    }\r\n\r\n    function applyTranslations(el: HTMLElement | null): void {\r\n        const w = window as unknown as { appI18n?: { applyTranslations: (n?: Element) => void } };\r\n        if (el && w.appI18n && typeof w.appI18n.applyTranslations === 'function') {\r\n            w.appI18n.applyTranslations(el);\r\n        }\r\n    }\r\n\r\n    function setPlaceholder(messageKey: string, params?: Record<string, unknown>): void {\r\n        const placeholder = getEl('image-placeholder');\r\n        if (!placeholder) return;\r\n        if (typeof messageKey !== 'string' || messageKey.length === 0) {\r\n            placeholder.removeAttribute('data-i18n');\r\n            placeholder.removeAttribute('data-i18n-params');\r\n            placeholder.textContent = '';\r\n\r\n            const domUtils = (window as any).DOMUtils;\r\n            if (domUtils && typeof domUtils.hide === 'function') {\r\n                domUtils.hide(placeholder);\r\n            } else {\r\n                placeholder.classList.add('hidden');\r\n            }\r\n\r\n            state.placeholder = null;\r\n            return;\r\n        }\r\n        placeholder.setAttribute('data-i18n', messageKey);\r\n        if (params && Object.keys(params).length > 0) {\r\n            placeholder.setAttribute('data-i18n-params', JSON.stringify(params));\r\n        } else {\r\n            placeholder.removeAttribute('data-i18n-params');\r\n        }\r\n        state.placeholder = { key: messageKey, params };\r\n        applyTranslations(placeholder);\r\n        {\r\n            const domUtils = (window as unknown as { DOMUtils?: { show?: (el: Element) => void } })\r\n                .DOMUtils;\r\n            if (domUtils && typeof domUtils.show === 'function') {\r\n                domUtils.show(placeholder);\r\n            } else {\r\n                placeholder.classList.remove('hidden');\r\n            }\r\n        }\r\n    }\r\n\r\n    function updateInfo(opts: {\r\n        repo?: string;\r\n        path?: string;\r\n        dimensions?: string;\r\n        size?: number;\r\n    }): void {\r\n        const infoEl = getEl('image-info');\r\n        if (!infoEl) return;\r\n        const parts: string[] = [];\r\n        if (opts.repo) parts.push(opts.repo);\r\n        if (opts.path) parts.push(opts.path);\r\n        const meta: string[] = [];\r\n        if (opts.dimensions) meta.push(opts.dimensions);\r\n        if (typeof opts.size === 'number' && opts.size > 0) {\r\n            const kb = (opts.size / 1024).toFixed(1);\r\n            meta.push(`${kb} KB`);\r\n        }\r\n        const info = [parts.join(' / '), meta.join(' \u2022 ')].filter(Boolean).join(' \u2014 ');\r\n        if (info) {\r\n            infoEl.textContent = info;\r\n            const domUtils = (window as unknown as { DOMUtils?: { show?: (el: Element) => void } })\r\n                .DOMUtils;\r\n            if (domUtils && typeof domUtils.show === 'function') {\r\n                domUtils.show(infoEl);\r\n            } else {\r\n                infoEl.classList.remove('hidden');\r\n            }\r\n        } else {\r\n            infoEl.textContent = '';\r\n            const domUtils = (window as unknown as { DOMUtils?: { hide?: (el: Element) => void } })\r\n                .DOMUtils;\r\n            if (domUtils && typeof domUtils.hide === 'function') {\r\n                domUtils.hide(infoEl);\r\n            } else {\r\n                infoEl.classList.add('hidden');\r\n            }\r\n        }\r\n    }\r\n\r\n    const state: { placeholder: PlaceholderState } = { placeholder: null };\r\n\r\n    // Re-apply placeholder on language change\r\n    const gw = window as unknown as Window & { __imageViewerUtilsWired?: boolean };\r\n    if (!gw.__imageViewerUtilsWired) {\r\n        gw.__imageViewerUtilsWired = true;\r\n        window.addEventListener('languagePreferenceChange', () => {\r\n            if (state.placeholder) {\r\n                setPlaceholder(state.placeholder.key, state.placeholder.params);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Export as globals (namespaced + legacy aliases if free)\r\n    type ImageViewerGlobal = Window & {\r\n        ImageViewerUtils?: {\r\n            setPlaceholder?: typeof setPlaceholder;\r\n            updateInfo?: typeof updateInfo;\r\n        };\r\n        setImagePlaceholder?: typeof setPlaceholder;\r\n        updateImageInfo?: typeof updateInfo;\r\n    };\r\n    const w = window as unknown as ImageViewerGlobal;\r\n    w.ImageViewerUtils = w.ImageViewerUtils || {};\r\n    w.ImageViewerUtils.setPlaceholder = setPlaceholder;\r\n    w.ImageViewerUtils.updateInfo = updateInfo;\r\n    if (typeof w.setImagePlaceholder !== 'function') w.setImagePlaceholder = setPlaceholder;\r\n    if (typeof w.updateImageInfo !== 'function') w.updateImageInfo = updateInfo;\r\n})();\r\n\r\n", "/**\r\n * src/ts/logger.ts\r\n * Typed port of the legacy `js/logger.js`.\r\n */\r\n\r\nexport type LogLevelName = 'ERROR' | 'WARN' | 'INFO' | 'DEBUG' | 'TRACE';\r\n\r\nconst LOG_LEVELS: Record<LogLevelName, number> = {\r\n    ERROR: 0,\r\n    WARN: 1,\r\n    INFO: 2,\r\n    DEBUG: 3,\r\n    TRACE: 4,\r\n};\r\n\r\nconst LOG_COLORS: Record<LogLevelName, string> = {\r\n    ERROR: '#ff0000',\r\n    WARN: '#ff9800',\r\n    INFO: '#2196f3',\r\n    DEBUG: '#9c27b0',\r\n    TRACE: '#607d8b',\r\n};\r\n\r\nexport class Logger {\r\n    level: number;\r\n    enabledCategories: Set<string>;\r\n    format: 'compact' | 'detailed';\r\n\r\n    constructor() {\r\n        this.level = this.isDevelopment() ? LOG_LEVELS.TRACE : LOG_LEVELS.WARN;\r\n        this.enabledCategories = new Set(['*']);\r\n        this.format = 'compact';\r\n    }\r\n\r\n    isDevelopment(): boolean {\r\n        try {\r\n            return (\r\n                location.hostname === 'localhost' ||\r\n                location.hostname === '127.0.0.1' ||\r\n                location.port !== ''\r\n            );\r\n        } catch {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    setLevel(level: LogLevelName | number) {\r\n        if (typeof level === 'string') {\r\n            this.level = LOG_LEVELS[level.toUpperCase() as LogLevelName] ?? LOG_LEVELS.INFO;\r\n        } else {\r\n            this.level = level;\r\n        }\r\n    }\r\n\r\n    enableCategory(category: string) {\r\n        if (category === '*') {\r\n            this.enabledCategories.clear();\r\n            this.enabledCategories.add('*');\r\n        } else {\r\n            this.enabledCategories.add(category);\r\n        }\r\n    }\r\n\r\n    disableCategory(category: string) {\r\n        this.enabledCategories.delete(category);\r\n    }\r\n\r\n    isCategoryEnabled(category: string) {\r\n        return this.enabledCategories.has('*') || this.enabledCategories.has(category);\r\n    }\r\n\r\n    private _log(level: LogLevelName, category: string, message?: unknown, ...args: unknown[]) {\r\n        if (LOG_LEVELS[level] > this.level) return;\r\n        if (!this.isCategoryEnabled(category)) return;\r\n\r\n        const color = LOG_COLORS[level];\r\n        const timestamp = new Date().toLocaleTimeString();\r\n\r\n        if (this.format === 'detailed') {\r\n            console.log(\r\n                `%c[${timestamp}] [${level}] [${category}]`,\r\n                `color: ${color}; font-weight: bold`,\r\n                message,\r\n                ...args\r\n            );\r\n        } else {\r\n            console.log(`%c[${category}]`, `color: ${color}`, message, ...args);\r\n        }\r\n    }\r\n\r\n    error(category: string, message?: unknown, ...args: unknown[]) {\r\n        this._log('ERROR', category, message, ...args);\r\n    }\r\n\r\n    warn(category: string, message?: unknown, ...args: unknown[]) {\r\n        this._log('WARN', category, message, ...args);\r\n    }\r\n\r\n    info(category: string, message?: unknown, ...args: unknown[]) {\r\n        this._log('INFO', category, message, ...args);\r\n    }\r\n\r\n    debug(category: string, message?: unknown, ...args: unknown[]) {\r\n        this._log('DEBUG', category, message, ...args);\r\n    }\r\n\r\n    trace(category: string, message?: unknown, ...args: unknown[]) {\r\n        this._log('TRACE', category, message, ...args);\r\n    }\r\n\r\n    group(category: string, title?: string) {\r\n        if (!this.isCategoryEnabled(category)) return;\r\n        console.group(title ?? category);\r\n    }\r\n\r\n    groupEnd() {\r\n        console.groupEnd();\r\n    }\r\n\r\n    time(label: string) {\r\n        console.time(label);\r\n    }\r\n\r\n    timeEnd(label: string) {\r\n        console.timeEnd(label);\r\n    }\r\n}\r\n\r\nconst logger = new Logger();\r\n\r\nexport default logger;\r\n\r\ndeclare global {\r\n    interface Window {\r\n        Logger?: Logger;\r\n    }\r\n}\r\n\r\nif (typeof window !== 'undefined') {\r\n    window.Logger = logger;\r\n}\r\n\r\n// For CommonJS compatibility\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ndeclare const module: any;\r\nif (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = logger;\r\n}\r\n", "(function () {\r\n    'use strict';\r\n\r\n    type Instance = { instanceId: string };\r\n    type Manager = {\r\n        getAllInstances(): Instance[];\r\n        getActiveInstance(): Instance | null;\r\n        setActiveInstance(id: string): void;\r\n        createInstance(config?: { title?: string }): Instance | null;\r\n        destroyInstance(id: string): void;\r\n    };\r\n\r\n    interface Options {\r\n        scope?: HTMLElement | Document;\r\n        newTitleFactory?: () => string | undefined;\r\n    }\r\n\r\n    type Binding = {\r\n        key: string;\r\n        ctrl?: boolean;\r\n        shift?: boolean;\r\n        handler: () => void;\r\n        description?: string;\r\n        context?: string; // 'global' or a window type like 'finder'\r\n    };\r\n\r\n    const state = {\r\n        bindings: [] as Binding[],\r\n        contextResolver: (() => 'global') as () => string,\r\n        globalListenerAttached: false,\r\n    };\r\n\r\n    // Note: We intentionally do not branch on platform. We accept either Cmd (Meta) or Ctrl as modifier everywhere.\r\n\r\n    function isEditable(target: EventTarget | null): boolean {\r\n        if (!(target instanceof Element)) return false;\r\n        const tag = target.tagName?.toLowerCase();\r\n        if (tag === 'input' || tag === 'textarea' || tag === 'select') return true;\r\n        return (target as HTMLElement).isContentEditable;\r\n    }\r\n\r\n    function nextIndex(current: number, total: number): number {\r\n        return (current + 1) % total;\r\n    }\r\n\r\n    function prevIndex(current: number, total: number): number {\r\n        return (current - 1 + total) % total;\r\n    }\r\n\r\n    function isBinding(x: unknown): x is Binding {\r\n        if (typeof x !== 'object' || x === null) return false;\r\n        const obj = x as { key?: unknown; handler?: unknown };\r\n        return typeof obj.key === 'string' && typeof obj.handler === 'function';\r\n    }\r\n\r\n    // Legacy-friendly register that accepts a binding object (used by MultiInstanceIntegration)\r\n    function register(binding: Binding): () => void;\r\n    // Manager-scoped shortcuts helper (convenience API)\r\n    function register(manager: Manager, options?: Options): () => void;\r\n    function register(arg1: Binding | Manager, arg2: Options = {} as Options): () => void {\r\n        // Binding-style registry\r\n        if (isBinding(arg1)) {\r\n            const b = arg1 as Binding;\r\n            state.bindings.push(b);\r\n            ensureGlobalListener();\r\n            return () => {\r\n                const idx = state.bindings.indexOf(b);\r\n                if (idx >= 0) state.bindings.splice(idx, 1);\r\n            };\r\n        }\r\n\r\n        // Manager-style\r\n        const manager = arg1 as Manager;\r\n        const scope: Document | HTMLElement = arg2.scope || document;\r\n        const handler = (e: KeyboardEvent) => {\r\n            // Cross-platform: accept either Cmd (Meta) or Ctrl as the modifier\r\n            const mod = e.metaKey || e.ctrlKey;\r\n            if (!mod) return;\r\n            if (isEditable(e.target)) return;\r\n            const key = e.key.toLowerCase();\r\n\r\n            if (key === 'n') {\r\n                e.preventDefault();\r\n                const title = arg2.newTitleFactory?.();\r\n                manager.createInstance({ title });\r\n                return;\r\n            }\r\n\r\n            const active = manager.getActiveInstance();\r\n            const instances = manager.getAllInstances();\r\n            const total = instances.length;\r\n            if (total === 0) return;\r\n\r\n            if (key === 'w' && active) {\r\n                e.preventDefault();\r\n                manager.destroyInstance(active.instanceId);\r\n                return;\r\n            }\r\n\r\n            if (key === 'tab') {\r\n                e.preventDefault();\r\n                const currentIndex = active\r\n                    ? instances.findIndex(i => i.instanceId === active.instanceId)\r\n                    : -1;\r\n                const idx = e.shiftKey\r\n                    ? prevIndex(currentIndex, total)\r\n                    : nextIndex(currentIndex, total);\r\n                const target = instances[idx];\r\n                if (target) manager.setActiveInstance(target.instanceId);\r\n                return;\r\n            }\r\n\r\n            if (/^[1-9]$/.test(key)) {\r\n                e.preventDefault();\r\n                const n = parseInt(key, 10);\r\n                const idx = Math.min(n - 1, total - 1);\r\n                const target = instances[idx];\r\n                if (target) manager.setActiveInstance(target.instanceId);\r\n                return;\r\n            }\r\n        };\r\n        scope.addEventListener('keydown', handler as unknown as EventListener);\r\n        return () => scope.removeEventListener('keydown', handler as unknown as EventListener);\r\n    }\r\n\r\n    function ensureGlobalListener() {\r\n        if (state.globalListenerAttached) return;\r\n        const listener = (e: KeyboardEvent) => {\r\n            // Cross-platform: accept either Cmd (Meta) or Ctrl as the modifier\r\n            const mod = e.metaKey || e.ctrlKey;\r\n            if (!mod) return;\r\n            if (isEditable(e.target)) return;\r\n            const key = e.key.toLowerCase();\r\n            const context = state.contextResolver?.() || 'global';\r\n            // Find first matching binding for current context or global\r\n            const binding = state.bindings.find(b => {\r\n                if (b.key.toLowerCase() !== key) return false;\r\n                if (!!b.ctrl !== true) return false; // API expects ctrl/meta always true\r\n                if (!!b.shift !== !!e.shiftKey && b.shift !== undefined) return false;\r\n                if (b.context && b.context !== context) return false;\r\n                return true;\r\n            });\r\n            if (binding) {\r\n                e.preventDefault();\r\n                try {\r\n                    binding.handler();\r\n                } catch {}\r\n            }\r\n        };\r\n        document.addEventListener('keydown', listener as unknown as EventListener);\r\n        state.globalListenerAttached = true;\r\n    }\r\n\r\n    function setContextResolver(resolver: () => string) {\r\n        state.contextResolver = resolver;\r\n        ensureGlobalListener();\r\n    }\r\n\r\n    const KeyboardShortcuts = { register, setContextResolver };\r\n    (window as unknown as { [k: string]: unknown }).KeyboardShortcuts = KeyboardShortcuts;\r\n})();\r\n\r\n", "(function () {\r\n    'use strict';\r\n\r\n    const GITHUB_CACHE_NS = 'finderGithubCacheV1:';\r\n\r\n    function getCacheTtl(): number {\r\n        const dflt = 5 * 60 * 1000; // 5 minutes\r\n        try {\r\n            const constants =\r\n                (window as unknown as { APP_CONSTANTS?: Record<string, unknown> }).APP_CONSTANTS ||\r\n                {};\r\n            const val = (constants as Record<string, unknown>)['GITHUB_CACHE_DURATION'];\r\n            return typeof val === 'number' ? (val as number) : dflt;\r\n        } catch {\r\n            return dflt;\r\n        }\r\n    }\r\n\r\n    function makeCacheKey(kind: 'repos' | 'contents', repo = '', subPath = ''): string {\r\n        if (kind === 'repos') return GITHUB_CACHE_NS + 'repos';\r\n        return `${GITHUB_CACHE_NS}contents:${repo}:${subPath}`;\r\n    }\r\n\r\n    function writeCache(\r\n        kind: 'repos' | 'contents',\r\n        repo: string,\r\n        subPath: string,\r\n        data: unknown\r\n    ): void {\r\n        const key = makeCacheKey(kind, repo, subPath);\r\n        try {\r\n            const payload = { t: Date.now(), d: data };\r\n            localStorage.setItem(key, JSON.stringify(payload));\r\n        } catch {\r\n            /* ignore */\r\n        }\r\n    }\r\n\r\n    function readCache<T = unknown>(kind: 'repos' | 'contents', repo = '', subPath = ''): T | null {\r\n        const key = makeCacheKey(kind, repo, subPath);\r\n        try {\r\n            const raw = localStorage.getItem(key);\r\n            if (!raw) return null;\r\n            const parsed = JSON.parse(raw);\r\n            if (!parsed || typeof parsed !== 'object') return null;\r\n            const ttl = getCacheTtl();\r\n            if (typeof parsed.t !== 'number' || Date.now() - parsed.t > ttl) return null;\r\n            return (parsed.d as T) ?? null;\r\n        } catch {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function getHeaders(): Record<string, string> {\r\n        const headers: Record<string, string> = { Accept: 'application/vnd.github.v3+json' };\r\n        try {\r\n            const token = localStorage.getItem('githubToken');\r\n            if (token && token.trim()) {\r\n                headers['Authorization'] = `token ${token.trim()}`;\r\n            }\r\n        } catch {\r\n            /* ignore */\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    async function fetchJSON<T = unknown>(url: string): Promise<T> {\r\n        const res = await fetch(url, { headers: getHeaders() });\r\n        if (!res.ok) {\r\n            throw Object.assign(new Error(`GitHub API error: ${res.status}`), {\r\n                status: res.status,\r\n            });\r\n        }\r\n        return res.json() as Promise<T>;\r\n    }\r\n\r\n    async function fetchUserRepos(\r\n        username: string,\r\n        params?: { per_page?: number; sort?: string }\r\n    ): Promise<unknown[]> {\r\n        const search = new globalThis.URLSearchParams();\r\n        search.set('per_page', String(params?.per_page ?? 100));\r\n        search.set('sort', params?.sort ?? 'updated');\r\n        const url = `https://api.github.com/users/${encodeURIComponent(username)}/repos?${search.toString()}`;\r\n        return fetchJSON<unknown[]>(url);\r\n    }\r\n\r\n    async function fetchRepoContents(\r\n        username: string,\r\n        repo: string,\r\n        subPath = ''\r\n    ): Promise<unknown> {\r\n        const pathPart = subPath ? `/${encodeURIComponent(subPath).replace(/%2F/g, '/')}` : '';\r\n        const url = `https://api.github.com/repos/${encodeURIComponent(username)}/${encodeURIComponent(repo)}/contents${pathPart}`;\r\n        return fetchJSON<unknown>(url);\r\n    }\r\n\r\n    type GitHubAPINamespace = {\r\n        getHeaders: () => Record<string, string>;\r\n        readCache: <T = unknown>(\r\n            kind: 'repos' | 'contents',\r\n            repo?: string,\r\n            subPath?: string\r\n        ) => T | null;\r\n        writeCache: (\r\n            kind: 'repos' | 'contents',\r\n            repo: string,\r\n            subPath: string,\r\n            data: unknown\r\n        ) => void;\r\n        fetchJSON: <T = unknown>(url: string) => Promise<T>;\r\n        fetchUserRepos: (\r\n            username: string,\r\n            params?: { per_page?: number; sort?: string }\r\n        ) => Promise<unknown[]>;\r\n        fetchRepoContents: (username: string, repo: string, subPath?: string) => Promise<unknown>;\r\n    };\r\n\r\n    (window as unknown as { GitHubAPI: GitHubAPINamespace }).GitHubAPI = {\r\n        getHeaders,\r\n        readCache,\r\n        writeCache,\r\n        fetchJSON,\r\n        fetchUserRepos,\r\n        fetchRepoContents,\r\n    };\r\n})();\r\n", "\uFEFF/*\r\n * Fotos-App \u0393\u00C7\u00F4 inspiriert von der macOS Fotos Anwendung.\r\n * L\u251C\u00F1dt Bilder aus der Picsum API, gruppiert sie in verschiedene Ansichten\r\n * und stellt einen Detail-Viewer inklusive Favoritenverwaltung bereit.\r\n */\r\n\r\n type Orientation = 'landscape' | 'portrait' | 'square';\r\n type SidebarFilter = 'all' | 'favorites' | Orientation;\r\n type SegmentView = 'moments' | 'collections' | 'years';\r\n\r\n interface PicsumApiPhoto {\r\n     id: string;\r\n     author: string;\r\n     width: number;\r\n     height: number;\r\n     url: string;\r\n     download_url: string;\r\n }\r\n\r\n interface PhotoLibraryItem {\r\n     id: string;\r\n     author: string;\r\n     width: number;\r\n     height: number;\r\n     orientation: Orientation;\r\n     year: number;\r\n     url: string;\r\n     downloadUrl: string;\r\n     thumbUrl: string;\r\n     largeUrl: string;\r\n }\r\n\r\n interface ExternalPhotoItem {\r\n     id: string;\r\n     author: string;\r\n     downloadUrl: string;\r\n     largeUrl: string;\r\n     url?: string;\r\n     width?: number;\r\n     height?: number;\r\n     orientation?: Orientation;\r\n     sourceName?: string;\r\n     isExternal: true;\r\n }\r\n\r\n type AnyPhotoItem = PhotoLibraryItem | ExternalPhotoItem;\r\n\r\ninterface PhotosElements {\r\n    container: HTMLElement | null;\r\n    sidebar: HTMLElement | null;\r\n    gallery: HTMLElement | null;\r\n    loading: HTMLElement | null;\r\n    error: HTMLElement | null;\r\n    errorRetry: HTMLButtonElement | null;\r\n    empty: HTMLElement | null;\r\n    placeholder: HTMLElement | null;\r\n    photoCount: HTMLElement | null;\r\n    refreshButton: HTMLButtonElement | null;\r\n    searchInput: HTMLInputElement | null;\r\n    searchClear: HTMLButtonElement | null;\r\n    sidebarButtons: HTMLButtonElement[];\r\n    segmentButtons: HTMLButtonElement[];\r\n    overlay: HTMLElement | null;\r\n    detailTitle: HTMLElement | null;\r\n    detailMeta: HTMLElement | null;\r\n    detailDimensions: HTMLElement | null;\r\n    detailCounter: HTMLElement | null;\r\n    detailOpen: HTMLAnchorElement | null;\r\n    detailDownload: HTMLAnchorElement | null;\r\n    detailFavorite: HTMLButtonElement | null;\r\n    detailFavoriteLabel: HTMLElement | null;\r\n    detailFavoriteIcon: HTMLElement | null;\r\n    detailClose: HTMLButtonElement | null;\r\n    detailPrev: HTMLButtonElement | null;\r\n    detailNext: HTMLButtonElement | null;\r\n    image: HTMLImageElement | null;\r\n    imageInfo: HTMLElement | null;\r\n    loader: HTMLElement | null;\r\n    countAll: HTMLElement | null;\r\n    countFavorites: HTMLElement | null;\r\n    countLandscape: HTMLElement | null;\r\n    countPortrait: HTMLElement | null;\r\n    countSquare: HTMLElement | null;\r\n    titlebar: HTMLElement | null;\r\n    statusbar: HTMLElement | null;\r\n} interface PhotosState {\r\n     initialized: boolean;\r\n     photos: PhotoLibraryItem[];\r\n     filteredPhotos: PhotoLibraryItem[];\r\n     filteredIndexMap: Map<string, number>;\r\n     favorites: Set<string>;\r\n     activeFilter: SidebarFilter;\r\n     activeSegment: SegmentView;\r\n     searchTerm: string;\r\n     isLoading: boolean;\r\n     currentPage: number;\r\n     overlayVisible: boolean;\r\n     selectedIndex: number;\r\n     activePhotoId: string | null;\r\n     externalPhoto: ExternalPhotoItem | null;\r\n     pendingImageId: string | null;\r\n     orientationCounts: Record<Orientation, number>;\r\n }\r\n\r\n interface PhotosAppApi {\r\n     init: () => void;\r\n     showExternalImage: (payload: { src: string; name?: string }) => void;\r\n }\r\n\r\ninterface PhotoGroup {\r\n    title: string;\r\n    photos: PhotoLibraryItem[];\r\n}\r\n\r\ntype TranslateFn = (key: string, params?: Record<string, unknown>, options?: { fallback?: string }) => string;\r\n\r\nconst globalWindow = window as typeof window & {\r\n    appI18n?: {\r\n        translate?: TranslateFn;\r\n        applyTranslations?: (root?: Element | Document) => void;\r\n    };\r\n    PhotosApp?: PhotosAppApi;\r\n    WindowChrome?: {\r\n        createWindowFrame: (config: unknown) => {\r\n            frame: HTMLElement;\r\n            titlebar: HTMLElement;\r\n            content: HTMLElement;\r\n            statusbar: HTMLElement | null;\r\n        };\r\n        updateStatusBar: (statusbar: HTMLElement, side: 'left' | 'right', content: string) => void;\r\n    };\r\n    API?: {\r\n        window?: {\r\n            close?: (windowId: string) => void;\r\n        };\r\n    };\r\n};\r\n\r\nfunction t(key: string, fallback: string, params?: Record<string, unknown>): string {\r\n    const translate = globalWindow.appI18n?.translate;\r\n    if (typeof translate === 'function') {\r\n        return translate(key, params, { fallback });\r\n    }\r\n    return fallback;\r\n}\r\n\r\n(function photosAppFactory() {\r\n    const state: PhotosState = {\r\n        initialized: false,\r\n        photos: [],\r\n        filteredPhotos: [],\r\n         filteredIndexMap: new Map(),\r\n         favorites: new Set(),\r\n         activeFilter: 'all',\r\n         activeSegment: 'moments',\r\n         searchTerm: '',\r\n         isLoading: false,\r\n         currentPage: 1,\r\n         overlayVisible: false,\r\n         selectedIndex: -1,\r\n         activePhotoId: null,\r\n         externalPhoto: null,\r\n         pendingImageId: null,\r\n         orientationCounts: { landscape: 0, portrait: 0, square: 0 },\r\n     };\r\n\r\n    const elements: PhotosElements = {\r\n        container: null,\r\n        sidebar: null,\r\n        gallery: null,\r\n        loading: null,\r\n        error: null,\r\n        errorRetry: null,\r\n        empty: null,\r\n        placeholder: null,\r\n        photoCount: null,\r\n        refreshButton: null,\r\n        searchInput: null,\r\n        searchClear: null,\r\n        sidebarButtons: [],\r\n        segmentButtons: [],\r\n        overlay: null,\r\n        detailTitle: null,\r\n        detailMeta: null,\r\n        detailDimensions: null,\r\n        detailCounter: null,\r\n        detailOpen: null,\r\n        detailDownload: null,\r\n        detailFavorite: null,\r\n        detailFavoriteLabel: null,\r\n        detailFavoriteIcon: null,\r\n        detailClose: null,\r\n        detailPrev: null,\r\n        detailNext: null,\r\n        image: null,\r\n        imageInfo: null,\r\n        loader: null,\r\n        countAll: null,\r\n        countFavorites: null,\r\n        countLandscape: null,\r\n        countPortrait: null,\r\n        countSquare: null,\r\n        titlebar: null,\r\n        statusbar: null,\r\n    };    function isExternalPhoto(photo: AnyPhotoItem): photo is ExternalPhotoItem {\r\n        return (photo as ExternalPhotoItem).isExternal === true;\r\n    }\r\n\r\n    function renderWindow(): HTMLElement | null {\r\n        const WindowChrome = globalWindow.WindowChrome;\r\n        if (!WindowChrome) {\r\n            console.error('WindowChrome not available');\r\n            return null;\r\n        }\r\n\r\n        const { frame, titlebar, content, statusbar } = WindowChrome.createWindowFrame({\r\n            title: t('photos.title', 'Fotos'),\r\n            icon: './img/fotos.png',\r\n            showClose: true,\r\n            showMinimize: false,\r\n            showMaximize: false,\r\n            onClose: () => {\r\n                globalWindow.API?.window?.close?.('photos-window');\r\n            },\r\n            toolbar: [\r\n                {\r\n                    label: '',\r\n                    icon: `<div class=\"relative flex-1 sm:flex-initial min-w-[200px]\">\r\n                        <input id=\"photos-search\" type=\"search\" placeholder=\"${t('photos.search.placeholder', 'Nach Autor suchen')}\" \r\n                            class=\"w-full rounded-2xl border border-gray-300 dark:border-gray-700 bg-white/70 dark:bg-gray-900/70 px-4 py-2 text-sm text-gray-700 dark:text-gray-200 focus:outline-none focus:ring-2 focus:ring-blue-400\" />\r\n                        <button id=\"photos-search-clear\" type=\"button\" class=\"absolute inset-y-0 right-2 flex items-center text-xl text-gray-400 hover:text-gray-600 dark:text-gray-500 dark:hover:text-gray-300 invisible pointer-events-none\" \r\n                            title=\"${t('photos.search.clear', 'Suche l\u00F6schen')}\">\u00D7</button>\r\n                    </div>`,\r\n                },\r\n                { type: 'separator' },\r\n                {\r\n                    label: '',\r\n                    icon: `<div class=\"flex bg-gray-200 dark:bg-gray-800 rounded-full p-1 text-sm font-medium text-gray-600 dark:text-gray-300 shadow-inner\" role=\"group\">\r\n                        <button type=\"button\" data-photos-segment=\"moments\" class=\"photos-segment-button\">${t('photos.segments.moments', 'Momente')}</button>\r\n                        <button type=\"button\" data-photos-segment=\"collections\" class=\"photos-segment-button\">${t('photos.segments.collections', 'Sammlungen')}</button>\r\n                        <button type=\"button\" data-photos-segment=\"years\" class=\"photos-segment-button\">${t('photos.segments.years', 'Jahre')}</button>\r\n                    </div>`,\r\n                },\r\n            ],\r\n            showStatusBar: true,\r\n            statusBarLeft: t('photos.status.countPlaceholder', '\u2013 Fotos'),\r\n            statusBarRight: '',\r\n        });\r\n\r\n        // Store references\r\n        elements.titlebar = titlebar;\r\n        elements.statusbar = statusbar;\r\n\r\n        // Build sidebar\r\n        const sidebar = document.createElement('aside');\r\n        sidebar.className = 'hidden md:flex flex-col w-56 border-r border-gray-200 dark:border-gray-800 bg-gray-50/80 dark:bg-gray-900/60';\r\n        sidebar.innerHTML = `\r\n            <div class=\"px-5 pt-6 pb-4\">\r\n                <p class=\"text-xs uppercase tracking-[0.2em] text-gray-400 dark:text-gray-500\">${t('photos.sidebar.library', 'Bibliothek')}</p>\r\n                <nav class=\"mt-4 space-y-1\" id=\"photos-sidebar\">\r\n                    <button type=\"button\" data-photos-filter=\"all\" class=\"photos-sidebar-button\">\r\n                        <span>${t('photos.sidebar.items.all', 'Alle Fotos')}</span>\r\n                        <span id=\"photos-count-all\" class=\"photos-sidebar-count\">\u2013</span>\r\n                    </button>\r\n                    <button type=\"button\" data-photos-filter=\"favorites\" class=\"photos-sidebar-button\">\r\n                        <span>${t('photos.sidebar.items.favorites', 'Favoriten')}</span>\r\n                        <span id=\"photos-count-favorites\" class=\"photos-sidebar-count\">0</span>\r\n                    </button>\r\n                </nav>\r\n                <p class=\"text-xs uppercase tracking-[0.2em] text-gray-400 dark:text-gray-500 mt-6\">${t('photos.sidebar.filters', 'Filter')}</p>\r\n                <nav class=\"mt-4 space-y-1\">\r\n                    <button type=\"button\" data-photos-filter=\"landscape\" class=\"photos-sidebar-button\">\r\n                        <span>${t('photos.sidebar.items.landscape', 'Querformat')}</span>\r\n                        <span id=\"photos-count-landscape\" class=\"photos-sidebar-count\">\u2013</span>\r\n                    </button>\r\n                    <button type=\"button\" data-photos-filter=\"portrait\" class=\"photos-sidebar-button\">\r\n                        <span>${t('photos.sidebar.items.portrait', 'Hochformat')}</span>\r\n                        <span id=\"photos-count-portrait\" class=\"photos-sidebar-count\">\u2013</span>\r\n                    </button>\r\n                    <button type=\"button\" data-photos-filter=\"square\" class=\"photos-sidebar-button\">\r\n                        <span>${t('photos.sidebar.items.square', 'Quadratisch')}</span>\r\n                        <span id=\"photos-count-square\" class=\"photos-sidebar-count\">\u2013</span>\r\n                    </button>\r\n                </nav>\r\n            </div>\r\n            <div class=\"px-5 pb-6 mt-auto\">\r\n                <button id=\"photos-refresh\" type=\"button\" class=\"w-full inline-flex items-center justify-center gap-2 px-3 py-2 text-sm font-medium rounded-2xl bg-white dark:bg-gray-800 border border-gray-200 dark:border-gray-700 text-gray-700 dark:text-gray-200 transition hover:border-blue-400 hover:text-blue-600 dark:hover:border-blue-400 dark:hover:text-blue-300\">\r\n                    <span aria-hidden=\"true\">\u21BB</span>\r\n                    <span>${t('photos.sidebar.refresh', 'Neu laden')}</span>\r\n                </button>\r\n                <p class=\"text-[11px] text-gray-400 dark:text-gray-500 mt-3 leading-relaxed\">${t('photos.sidebar.sourceNote', 'Quelle: Lorem Picsum \u2013 zuf\u00E4llige kuratierte Fotokollektionen.')}</p>\r\n            </div>\r\n        `;\r\n\r\n        // Build main area\r\n        const mainArea = document.createElement('div');\r\n        mainArea.className = 'flex-1 flex flex-col min-h-0 relative';\r\n        mainArea.innerHTML = `\r\n            <div class=\"flex-1 relative min-h-0\">\r\n                <div id=\"photos-loading\" class=\"absolute inset-0 flex items-center justify-center bg-white/80 dark:bg-gray-900/80 z-20 hidden\">\r\n                    <div class=\"flex flex-col items-center gap-2 text-gray-600 dark:text-gray-300\">\r\n                        <span class=\"h-10 w-10 border-4 border-gray-300 dark:border-gray-700 border-t-blue-500 dark:border-t-blue-400 rounded-full animate-spin\"></span>\r\n                        <span class=\"text-sm font-medium\">${t('photos.status.loading', 'Lade Fotos\u2026')}</span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"photos-error\" class=\"absolute inset-x-0 top-6 mx-auto max-w-lg bg-red-50 dark:bg-red-900/40 text-red-700 dark:text-red-200 rounded-2xl shadow px-5 py-4 hidden\">\r\n                    <p class=\"font-semibold mb-1\">${t('photos.errors.heading', 'Fehler beim Laden')}</p>\r\n                    <p class=\"text-sm\">${t('photos.errors.description', 'Bitte \u00FCberpr\u00FCfe deine Verbindung und versuche es erneut.')}</p>\r\n                    <button id=\"photos-error-retry\" type=\"button\" class=\"mt-3 inline-flex items-center gap-2 text-sm font-medium text-red-700 dark:text-red-100 underline decoration-dotted\">${t('photos.buttons.retry', 'Erneut versuchen')}</button>\r\n                </div>\r\n                <div id=\"photos-gallery\" class=\"absolute inset-0 overflow-y-auto px-5 sm:px-6 py-6 space-y-8\"></div>\r\n                <div id=\"photos-empty\" class=\"absolute inset-0 flex items-center justify-center text-center text-gray-500 dark:text-gray-400 hidden px-6\">\r\n                    <div>\r\n                        <p class=\"text-lg font-semibold\">${t('photos.empty.title', 'Keine Fotos gefunden')}</p>\r\n                        <p class=\"text-sm mt-1\">${t('photos.empty.description', 'Passe Suche oder Filter an, um weitere Ergebnisse zu sehen.')}</p>\r\n                    </div>\r\n                </div>\r\n                <div id=\"image-placeholder\" class=\"absolute inset-0 flex items-center justify-center text-gray-500 dark:text-gray-400 text-center px-6 hidden pointer-events-none\">${t('photos.placeholder', 'W\u00E4hle ein Foto aus, um Details zu sehen.')}</div>\r\n            </div>\r\n        `;\r\n\r\n        // Detail overlay\r\n        const detailOverlay = document.createElement('div');\r\n        detailOverlay.id = 'photo-detail-overlay';\r\n        detailOverlay.className = 'absolute inset-0 hidden items-center justify-center px-4 py-10 bg-black/50 backdrop-blur-sm z-30';\r\n        detailOverlay.innerHTML = `\r\n            <div class=\"bg-white dark:bg-gray-900 rounded-3xl shadow-2xl overflow-hidden max-w-5xl w-full h-full flex flex-col\">\r\n                <div class=\"flex items-center gap-4 px-6 py-4 border-b border-gray-200 dark:border-gray-800\">\r\n                    <div class=\"flex-1 min-w-0\">\r\n                        <p id=\"photo-detail-title\" class=\"text-xl font-semibold text-gray-900 dark:text-gray-100 truncate\">${t('photos.detail.titleFallback', 'Foto')}</p>\r\n                        <p id=\"photo-detail-meta\" class=\"text-sm text-gray-500 dark:text-gray-400 mt-1 truncate\"></p>\r\n                    </div>\r\n                    <div class=\"flex items-center gap-2\">\r\n                        <button id=\"photo-detail-favorite\" type=\"button\" class=\"inline-flex items-center gap-2 px-3 py-1.5 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-200 text-sm font-medium transition hover:bg-gray-200 dark:hover:bg-gray-700\">\r\n                            <span aria-hidden=\"true\">\u2661</span>\r\n                            <span>${t('photos.detail.favoriteAdd', 'Zu Favoriten')}</span>\r\n                        </button>\r\n                        <a id=\"photo-detail-download\" class=\"inline-flex items-center gap-2 px-3 py-1.5 rounded-full bg-blue-600 text-white text-sm font-medium transition hover:bg-blue-500\" href=\"#\" target=\"_blank\" rel=\"noreferrer\">${t('photos.detail.download', 'Herunterladen')}</a>\r\n                        <button id=\"photo-detail-close\" type=\"button\" class=\"inline-flex items-center justify-center w-9 h-9 rounded-full bg-gray-100 dark:bg-gray-800 text-gray-700 dark:text-gray-200 text-lg leading-none transition hover:bg-gray-200 dark:hover:bg-gray-700\" title=\"${t('common.close', 'Schlie\u00DFen')}\">\u00D7</button>\r\n                    </div>\r\n                </div>\r\n                <div class=\"flex-1 flex overflow-hidden\">\r\n                    <button id=\"photo-detail-prev\" type=\"button\" class=\"hidden sm:flex items-center justify-center w-14 bg-transparent text-3xl text-gray-400 dark:text-gray-500 hover:text-gray-700 dark:hover:text-gray-200 transition\" title=\"${t('photos.detail.prev', 'Vorheriges Foto')}\">\u2039</button>\r\n                    <div class=\"flex-1 relative bg-gray-50 dark:bg-gray-950 flex items-center justify-center overflow-hidden\">\r\n                        <img id=\"image-viewer\" class=\"max-w-full max-h-full object-contain\" alt=\"${t('photos.detail.imageAlt', 'Ausgew\u00E4hltes Foto')}\" />\r\n                        <div id=\"photo-detail-loader\" class=\"absolute inset-0 flex items-center justify-center bg-gray-900/40 text-white text-sm font-medium hidden\">${t('photos.detail.loader', 'Foto wird geladen\u2026')}</div>\r\n                    </div>\r\n                    <button id=\"photo-detail-next\" type=\"button\" class=\"hidden sm:flex items-center justify-center w-14 bg-transparent text-3xl text-gray-400 dark:text-gray-500 hover:text-gray-700 dark:hover:text-gray-200 transition\" title=\"${t('photos.detail.next', 'N\u00E4chstes Foto')}\">\u203A</button>\r\n                </div>\r\n                <div class=\"px-6 py-4 border-t border-gray-200 dark:border-gray-800 flex flex-wrap items-center gap-x-6 gap-y-2 text-sm text-gray-600 dark:text-gray-300\">\r\n                    <div class=\"flex-1 min-w-[200px]\">\r\n                        <p id=\"image-info\" class=\"font-medium text-gray-700 dark:text-gray-200\"></p>\r\n                        <p id=\"photo-detail-dimensions\" class=\"text-xs text-gray-500 dark:text-gray-400 mt-1\"></p>\r\n                    </div>\r\n                    <div class=\"flex items-center gap-3\">\r\n                        <span id=\"photo-detail-counter\" class=\"text-xs font-medium\"></span>\r\n                        <a id=\"photo-detail-open\" href=\"#\" target=\"_blank\" rel=\"noreferrer\" class=\"text-blue-600 dark:text-blue-400 hover:underline\">${t('photos.detail.openInBrowser', 'Im Browser \u00F6ffnen')}</a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        // Combine layout\r\n        const container = document.createElement('div');\r\n        container.className = 'flex h-full';\r\n        container.appendChild(sidebar);\r\n        container.appendChild(mainArea);\r\n\r\n        content.appendChild(container);\r\n        content.appendChild(detailOverlay);\r\n\r\n        return frame;\r\n    }\r\n\r\n    function init(): void {\r\n        if (state.initialized) {\r\n            return;\r\n        }\r\n        state.initialized = true;\r\n\r\n        // Check if we're in WindowChrome mode\r\n        const photosWindow = document.getElementById('photos-window');\r\n        if (!photosWindow) {\r\n            // Create and inject WindowChrome UI\r\n            const frame = renderWindow();\r\n            if (!frame) {\r\n                console.error('Failed to render photos window');\r\n                return;\r\n            }\r\n\r\n            // Find or create container\r\n            let container = document.getElementById('photos-window');\r\n            if (!container) {\r\n                container = document.createElement('div');\r\n                container.id = 'photos-window';\r\n                container.className = 'fixed inset-0 flex items-center justify-center hidden modal relative';\r\n                container.style.zIndex = '1000';\r\n                document.body.appendChild(container);\r\n            }\r\n\r\n            // Inject frame\r\n            const wrapper = document.createElement('div');\r\n            wrapper.className = 'w-[min(90vw,1100px)] h-[min(85vh,780px)]';\r\n            wrapper.appendChild(frame);\r\n            container.appendChild(wrapper);\r\n\r\n            elements.container = container;\r\n        } else {\r\n            elements.container = photosWindow;\r\n        }\r\n\r\n        cacheElements();\r\n        if (!elements.gallery) {\r\n            return;\r\n        }\r\n        wireSidebar();\r\n        wireSegments();\r\n        wireSearch();\r\n        wireGallery();\r\n        wireDetail();\r\n        globalWindow.appI18n?.applyTranslations?.(elements.container ?? undefined);\r\n        void fetchPhotos();\r\n    }\r\n\r\n    function cacheElements(): void {\r\n        if (!elements.container) {\r\n            return;\r\n        }\r\n        elements.sidebar = elements.container.querySelector('#photos-sidebar') ?? null;\r\n        elements.gallery = elements.container.querySelector('#photos-gallery') ?? null;\r\n        elements.loading = elements.container.querySelector('#photos-loading') ?? null;\r\n        elements.error = elements.container.querySelector('#photos-error') ?? null;\r\n        elements.errorRetry = elements.container.querySelector('#photos-error-retry') as HTMLButtonElement | null;\r\n        elements.empty = elements.container.querySelector('#photos-empty') ?? null;\r\n        elements.placeholder = elements.container.querySelector('#image-placeholder') ?? null;\r\n        elements.photoCount = elements.statusbar?.querySelector('.statusbar-left') ?? null;\r\n        elements.refreshButton = elements.container.querySelector('#photos-refresh') as HTMLButtonElement | null;\r\n        elements.searchInput = elements.container.querySelector('#photos-search') as HTMLInputElement | null;\r\n        elements.searchClear = elements.container.querySelector('#photos-search-clear') as HTMLButtonElement | null;\r\n        elements.overlay = elements.container.querySelector('#photo-detail-overlay') ?? null;\r\n        elements.detailTitle = elements.container.querySelector('#photo-detail-title') ?? null;\r\n        elements.detailMeta = elements.container.querySelector('#photo-detail-meta') ?? null;\r\n        elements.detailDimensions = elements.container.querySelector('#photo-detail-dimensions') ?? null;\r\n        elements.detailCounter = elements.container.querySelector('#photo-detail-counter') ?? null;\r\n        elements.detailOpen = elements.container.querySelector('#photo-detail-open') as HTMLAnchorElement | null;\r\n        elements.detailDownload = elements.container.querySelector('#photo-detail-download') as HTMLAnchorElement | null;\r\n        elements.detailFavorite = elements.container.querySelector('#photo-detail-favorite') as HTMLButtonElement | null;\r\n        elements.detailFavoriteLabel = elements.detailFavorite?.querySelector('span:last-child') ?? null;\r\n        elements.detailFavoriteIcon = elements.detailFavorite?.querySelector('span[aria-hidden=\"true\"]') ?? null;\r\n        elements.detailClose = elements.container.querySelector('#photo-detail-close') as HTMLButtonElement | null;\r\n        elements.detailPrev = elements.container.querySelector('#photo-detail-prev') as HTMLButtonElement | null;\r\n        elements.detailNext = elements.container.querySelector('#photo-detail-next') as HTMLButtonElement | null;\r\n        elements.image = elements.container.querySelector('#image-viewer') as HTMLImageElement | null;\r\n        elements.imageInfo = elements.container.querySelector('#image-info') ?? null;\r\n        elements.loader = elements.container.querySelector('#photo-detail-loader') ?? null;\r\n        elements.countAll = elements.container.querySelector('#photos-count-all') ?? null;\r\n        elements.countFavorites = elements.container.querySelector('#photos-count-favorites') ?? null;\r\n        elements.countLandscape = elements.container.querySelector('#photos-count-landscape') ?? null;\r\n        elements.countPortrait = elements.container.querySelector('#photos-count-portrait') ?? null;\r\n        elements.countSquare = elements.container.querySelector('#photos-count-square') ?? null;\r\n\r\n        const sidebarButtons = elements.sidebar?.querySelectorAll<HTMLButtonElement>('button[data-photos-filter]') ?? [];\r\n        elements.sidebarButtons = Array.from(sidebarButtons);\r\n        const segmentButtons = elements.container.querySelectorAll<HTMLButtonElement>('button[data-photos-segment]');\r\n        elements.segmentButtons = Array.from(segmentButtons);\r\n    }\r\n\r\n     function wireSidebar(): void {\r\n         elements.sidebarButtons.forEach(button => {\r\n             button.addEventListener('click', () => {\r\n                 const filter = button.getAttribute('data-photos-filter') as SidebarFilter | null;\r\n                 if (!filter || state.activeFilter === filter) {\r\n                     return;\r\n                 }\r\n                 state.activeFilter = filter;\r\n                 syncSidebarSelection();\r\n                 applyFilters();\r\n             });\r\n         });\r\n         syncSidebarSelection();\r\n         elements.refreshButton?.addEventListener('click', () => {\r\n             void fetchPhotos({ refresh: true });\r\n         });\r\n     }\r\n\r\n     function wireSegments(): void {\r\n         elements.segmentButtons.forEach(button => {\r\n             button.addEventListener('click', () => {\r\n                 const segment = button.getAttribute('data-photos-segment') as SegmentView | null;\r\n                 if (!segment || state.activeSegment === segment) {\r\n                     return;\r\n                 }\r\n                 state.activeSegment = segment;\r\n                 syncSegmentSelection();\r\n                 renderGallery();\r\n             });\r\n         });\r\n         syncSegmentSelection();\r\n     }\r\n\r\n     function wireSearch(): void {\r\n         elements.searchInput?.addEventListener('input', event => {\r\n             const target = event.currentTarget as HTMLInputElement;\r\n             state.searchTerm = target.value;\r\n             toggleSearchClear();\r\n             applyFilters();\r\n         });\r\n         elements.searchClear?.addEventListener('click', () => {\r\n             if (!elements.searchInput) {\r\n                 return;\r\n             }\r\n             elements.searchInput.value = '';\r\n             state.searchTerm = '';\r\n             toggleSearchClear();\r\n             applyFilters();\r\n         });\r\n         toggleSearchClear();\r\n     }\r\n\r\n     function wireGallery(): void {\r\n         elements.gallery?.addEventListener('click', event => {\r\n             const target = event.target as HTMLElement | null;\r\n             if (!target) {\r\n                 return;\r\n             }\r\n             const card = target.closest<HTMLElement>('[data-photo-index]');\r\n             if (!card) {\r\n                 return;\r\n             }\r\n             const rawIndex = card.getAttribute('data-photo-index');\r\n             const index = rawIndex ? Number(rawIndex) : NaN;\r\n             if (Number.isNaN(index) || index < 0) {\r\n                 return;\r\n             }\r\n             openDetail(index);\r\n         });\r\n     }\r\n\r\n     function wireDetail(): void {\r\n         elements.detailClose?.addEventListener('click', closeDetail);\r\n         elements.overlay?.addEventListener('click', event => {\r\n             if (event.target === elements.overlay) {\r\n                 closeDetail();\r\n             }\r\n         });\r\n         elements.detailPrev?.addEventListener('click', () => moveSelection(-1));\r\n         elements.detailNext?.addEventListener('click', () => moveSelection(1));\r\n         elements.detailFavorite?.addEventListener('click', toggleFavorite);\r\n         document.addEventListener('keydown', handleKeyNavigation);\r\n         elements.errorRetry?.addEventListener('click', () => {\r\n             void fetchPhotos({ refresh: true });\r\n         });\r\n         if (elements.image) {\r\n             elements.image.addEventListener('load', handleImageLoaded);\r\n             elements.image.addEventListener('error', handleImageError);\r\n         }\r\n     }\r\n\r\n     function handleImageLoaded(): void {\r\n         setDetailLoading(false);\r\n         if (!elements.image) {\r\n             return;\r\n         }\r\n         if (state.pendingImageId) {\r\n             const width = elements.image.naturalWidth;\r\n             const height = elements.image.naturalHeight;\r\n             const orientation = width === height ? 'square' : width > height ? 'landscape' : 'portrait';\r\n             if (state.externalPhoto && state.externalPhoto.id === state.pendingImageId) {\r\n                 state.externalPhoto.width = width;\r\n                 state.externalPhoto.height = height;\r\n                 state.externalPhoto.orientation = orientation;\r\n             }\r\n            if (state.overlayVisible) {\r\n                const current = getCurrentDetailPhoto();\r\n                if (current) {\r\n                    updateDetailMetadata(current);\r\n                }\r\n            }\r\n         }\r\n         state.pendingImageId = null;\r\n     }\r\n\r\n    function handleImageError(): void {\r\n        setDetailLoading(false);\r\n        if (elements.detailMeta) {\r\n            elements.detailMeta.textContent = t(\r\n                'photos.errors.detailImage',\r\n                'The photo could not be loaded.'\r\n            );\r\n        }\r\n    }\r\n\r\n     async function fetchPhotos(options: { refresh?: boolean } = {}): Promise<void> {\r\n         if (state.isLoading) {\r\n             return;\r\n         }\r\n         setError(false);\r\n         setLoading(true);\r\n         try {\r\n            const shouldRandomize = options.refresh || state.photos.length === 0;\r\n            const page = shouldRandomize ? getRandomPage() : state.currentPage;\r\n             const limit = 60;\r\n             const response = await fetch(`https://picsum.photos/v2/list?page=${page}&limit=${limit}`);\r\n             if (!response.ok) {\r\n                 throw new Error('Picsum request failed');\r\n             }\r\n             const data = (await response.json()) as PicsumApiPhoto[];\r\n             const mapped = data.map(mapPhotoItem);\r\n             state.photos = mapped;\r\n             state.currentPage = page;\r\n             state.favorites.clear();\r\n             state.externalPhoto = null;\r\n             state.orientationCounts = calculateOrientationCounts(mapped);\r\n             applyFilters();\r\n             updateSidebarCounts();\r\n         } catch (error) {\r\n            console.warn('Photos app: failed to load', error);\r\n             setError(true);\r\n         } finally {\r\n             setLoading(false);\r\n         }\r\n     }\r\n\r\n     function mapPhotoItem(item: PicsumApiPhoto, index: number): PhotoLibraryItem {\r\n         const width = Number(item.width) || 0;\r\n         const height = Number(item.height) || 0;\r\n         const orientation: Orientation = width === height ? 'square' : width > height ? 'landscape' : 'portrait';\r\n         const numericId = Number.parseInt(item.id, 10);\r\n         const yearBase = Number.isFinite(numericId) ? numericId : index;\r\n         const year = 2014 + ((yearBase % 10) + 1);\r\n        const sanitizedAuthor =\r\n            item.author && item.author.trim().length > 0\r\n                ? item.author.trim()\r\n                : t('photos.detail.unknownPhotographer', 'Unknown photographer');\r\n         const id = String(item.id);\r\n         return {\r\n             id,\r\n             author: sanitizedAuthor,\r\n             width,\r\n             height,\r\n             orientation,\r\n             year,\r\n             url: item.url,\r\n             downloadUrl: item.download_url,\r\n             thumbUrl: `https://picsum.photos/id/${id}/600/400`,\r\n             largeUrl: `https://picsum.photos/id/${id}/1600/1200`,\r\n         };\r\n     }\r\n\r\n     function calculateOrientationCounts(photos: PhotoLibraryItem[]): Record<Orientation, number> {\r\n         return photos.reduce(\r\n             (acc, photo) => {\r\n                 acc[photo.orientation] += 1;\r\n                 return acc;\r\n             },\r\n             { landscape: 0, portrait: 0, square: 0 } as Record<Orientation, number>,\r\n         );\r\n     }\r\n\r\n     function applyFilters(): void {\r\n         const search = state.searchTerm.trim().toLowerCase();\r\n         const previousActiveId = state.overlayVisible ? state.activePhotoId : null;\r\n         const filtered = state.photos.filter(photo => {\r\n             if (state.activeFilter === 'favorites' && !state.favorites.has(photo.id)) {\r\n                 return false;\r\n             }\r\n             if (state.activeFilter === 'landscape' && photo.orientation !== 'landscape') {\r\n                 return false;\r\n             }\r\n             if (state.activeFilter === 'portrait' && photo.orientation !== 'portrait') {\r\n                 return false;\r\n             }\r\n             if (state.activeFilter === 'square' && photo.orientation !== 'square') {\r\n                 return false;\r\n             }\r\n             if (search && !photo.author.toLowerCase().includes(search)) {\r\n                 return false;\r\n             }\r\n             return true;\r\n         });\r\n         state.filteredPhotos = filtered;\r\n         state.filteredIndexMap = new Map(filtered.map((photo, index) => [photo.id, index]));\r\n         renderGallery();\r\n         updateEmptyState();\r\n         updatePhotoCount();\r\n         updateSidebarCounts();\r\n         if (previousActiveId) {\r\n             const newIndex = state.filteredIndexMap.get(previousActiveId);\r\n             if (typeof newIndex === 'number') {\r\n                 state.selectedIndex = newIndex;\r\n                 updateNavigationButtons();\r\n                 updateCounter();\r\n                 setActiveCard(previousActiveId);\r\n             } else if (!state.externalPhoto) {\r\n                 closeDetail();\r\n             }\r\n         }\r\n     }\r\n\r\n     function renderGallery(): void {\r\n         if (!elements.gallery) {\r\n             return;\r\n         }\r\n         elements.gallery.innerHTML = '';\r\n         if (!state.filteredPhotos.length) {\r\n             return;\r\n         }\r\n         const groups = buildGroups(state.filteredPhotos, state.activeSegment);\r\n         groups.forEach(group => {\r\n             const section = document.createElement('section');\r\n             section.className = 'space-y-3';\r\n\r\n             const heading = document.createElement('div');\r\n             heading.className = 'flex items-baseline justify-between px-2';\r\n            const title = document.createElement('h3');\r\n            title.className = 'text-base font-semibold text-gray-800 dark:text-gray-100 tracking-wide';\r\n            title.textContent = group.title;\r\n            const count = document.createElement('span');\r\n            count.className = 'text-xs text-gray-500 dark:text-gray-400';\r\n            const countKey =\r\n                group.photos.length === 1 ? 'photos.labels.photoSingular' : 'photos.labels.photoPlural';\r\n            const countLabel = t(countKey, group.photos.length === 1 ? 'Photo' : 'Photos');\r\n            count.textContent = `${group.photos.length} ${countLabel}`;\r\n            heading.append(title, count);\r\n            section.append(heading);\r\n\r\n            const grid = document.createElement('div');\r\n            grid.className = 'grid gap-4 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 auto-rows-[minmax(140px,_auto)]';\r\n\r\n             group.photos.forEach(photo => {\r\n                 const index = state.filteredIndexMap.get(photo.id) ?? -1;\r\n                 const card = document.createElement('button');\r\n                 card.type = 'button';\r\n                 card.className = 'photos-card relative group overflow-hidden rounded-2xl bg-gray-200 dark:bg-gray-800 shadow-md hover:-translate-y-0.5 hover:shadow-xl focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-blue-400';\r\n                 card.dataset.photoId = photo.id;\r\n                 card.dataset.photoIndex = String(index);\r\n                 if (state.favorites.has(photo.id)) {\r\n                     card.dataset.favorite = 'true';\r\n                 }\r\n                if (state.activePhotoId === photo.id && state.overlayVisible) {\r\n                    card.dataset.selected = 'true';\r\n                }\r\n\r\n                const image = document.createElement('img');\r\n                image.src = photo.thumbUrl;\r\n                image.alt = t('photos.gallery.alt', 'Photo by {author}', { author: photo.author });\r\n                image.loading = 'lazy';\r\n                image.className = 'w-full h-full object-cover transition duration-300 group-hover:scale-105';\r\n\r\n                 const overlay = document.createElement('div');\r\n                 overlay.className = 'absolute inset-x-0 bottom-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent px-3 py-2 text-left';\r\n                 const author = document.createElement('p');\r\n                 author.className = 'text-white text-sm font-medium truncate';\r\n                 author.textContent = photo.author;\r\n                 const meta = document.createElement('p');\r\n                 meta.className = 'text-white/80 text-[11px] uppercase tracking-[0.3em]';\r\n                 meta.textContent = `${photo.year} \u0393\u00C7\u00F3 ${formatOrientation(photo.orientation)}`;\r\n                 overlay.append(author, meta);\r\n\r\n                 card.append(image, overlay);\r\n                 grid.append(card);\r\n             });\r\n\r\n             section.append(grid);\r\n             elements.gallery?.append(section);\r\n         });\r\n     }\r\n\r\n     function buildGroups(photos: PhotoLibraryItem[], segment: SegmentView): PhotoGroup[] {\r\n        if (segment === 'collections') {\r\n            const orientations: Array<{ title: string; key: Orientation }> = [\r\n                { title: t('photos.collections.landscape', 'Landscapes'), key: 'landscape' },\r\n                { title: t('photos.collections.portrait', 'Portraits'), key: 'portrait' },\r\n                { title: t('photos.collections.square', 'Squares'), key: 'square' },\r\n            ];\r\n            return orientations\r\n                .map(item => ({ title: item.title, photos: photos.filter(photo => photo.orientation === item.key) }))\r\n                .filter(group => group.photos.length > 0);\r\n        }\r\n         if (segment === 'years') {\r\n             const byYear = new Map<number, PhotoLibraryItem[]>();\r\n             photos.forEach(photo => {\r\n                 const collection = byYear.get(photo.year) ?? [];\r\n                 collection.push(photo);\r\n                 byYear.set(photo.year, collection);\r\n             });\r\n             return Array.from(byYear.entries())\r\n                 .sort((a, b) => b[0] - a[0])\r\n                 .map(([year, group]) => ({ title: String(year), photos: group }));\r\n         }\r\n         // moments -> group by author\r\n         const byAuthor = new Map<string, PhotoLibraryItem[]>();\r\n         photos.forEach(photo => {\r\n             const key = photo.author;\r\n             const collection = byAuthor.get(key) ?? [];\r\n             collection.push(photo);\r\n             byAuthor.set(key, collection);\r\n         });\r\n         return Array.from(byAuthor.entries())\r\n             .sort((a, b) => {\r\n                 const latestA = Math.max(...a[1].map(item => item.year));\r\n                 const latestB = Math.max(...b[1].map(item => item.year));\r\n                 return latestB - latestA;\r\n             })\r\n             .map(([author, group]) => ({ title: author, photos: group }));\r\n     }\r\n\r\n    function formatOrientation(orientation: Orientation | undefined): string {\r\n        if (orientation === 'portrait') {\r\n            return t('photos.orientations.portrait', 'Portrait');\r\n        }\r\n        if (orientation === 'square') {\r\n            return t('photos.orientations.square', 'Square');\r\n        }\r\n        return t('photos.orientations.landscape', 'Landscape');\r\n    }\r\n\r\n     function setActiveCard(photoId: string): void {\r\n         if (!elements.gallery) {\r\n             return;\r\n         }\r\n         const current = elements.gallery.querySelector<HTMLElement>('.photos-card[data-selected=\"true\"]');\r\n         if (current) {\r\n             current.removeAttribute('data-selected');\r\n         }\r\n         const next = elements.gallery.querySelector<HTMLElement>(`.photos-card[data-photo-id=\"${photoId}\"]`);\r\n         if (next) {\r\n             next.dataset.selected = 'true';\r\n         }\r\n     }\r\n\r\n     function clearActiveCard(): void {\r\n         if (!elements.gallery) {\r\n             return;\r\n         }\r\n         const current = elements.gallery.querySelector<HTMLElement>('.photos-card[data-selected=\"true\"]');\r\n         current?.removeAttribute('data-selected');\r\n     }\r\n\r\n     function updateEmptyState(): void {\r\n         const shouldShow = state.filteredPhotos.length === 0;\r\n         elements.empty?.classList.toggle('hidden', !shouldShow);\r\n     }\r\n\r\n     function updatePhotoCount(): void {\r\n        const total = state.filteredPhotos.length;\r\n        const labelKey = total === 1 ? 'photos.labels.photoSingular' : 'photos.labels.photoPlural';\r\n        const label = t(labelKey, total === 1 ? 'Photo' : 'Photos');\r\n        const segmentKey =\r\n            state.activeSegment === 'collections'\r\n                ? 'photos.segments.collections'\r\n                : state.activeSegment === 'years'\r\n                ? 'photos.segments.years'\r\n                : 'photos.segments.moments';\r\n        const segmentFallback =\r\n            state.activeSegment === 'collections'\r\n                ? 'Collections'\r\n                : state.activeSegment === 'years'\r\n                ? 'Years'\r\n                : 'Moments';\r\n        const segmentLabel = t(segmentKey, segmentFallback);\r\n        const statusText = t(\r\n            'photos.status.count',\r\n            `${total} ${label} \u0393\u00C7\u00F3 ${segmentLabel}`,\r\n            { count: total, label, segment: segmentLabel },\r\n        );\r\n\r\n        // Update statusbar if available\r\n        if (elements.statusbar && globalWindow.WindowChrome) {\r\n            globalWindow.WindowChrome.updateStatusBar(elements.statusbar, 'left', statusText);\r\n        }\r\n\r\n        // Fallback for old photo-count element\r\n        if (elements.photoCount) {\r\n            elements.photoCount.textContent = statusText;\r\n        }\r\n     }\r\n\r\n     function updateSidebarCounts(): void {\r\n         if (elements.countAll) {\r\n             elements.countAll.textContent = String(state.photos.length);\r\n         }\r\n         if (elements.countFavorites) {\r\n             elements.countFavorites.textContent = String(state.favorites.size);\r\n         }\r\n         if (elements.countLandscape) {\r\n             elements.countLandscape.textContent = String(state.orientationCounts.landscape);\r\n         }\r\n         if (elements.countPortrait) {\r\n             elements.countPortrait.textContent = String(state.orientationCounts.portrait);\r\n         }\r\n         if (elements.countSquare) {\r\n             elements.countSquare.textContent = String(state.orientationCounts.square);\r\n         }\r\n     }\r\n\r\n     function syncSidebarSelection(): void {\r\n         elements.sidebarButtons.forEach(button => {\r\n             const filter = button.getAttribute('data-photos-filter') as SidebarFilter | null;\r\n             button.dataset.active = filter === state.activeFilter ? 'true' : 'false';\r\n         });\r\n     }\r\n\r\n     function syncSegmentSelection(): void {\r\n         elements.segmentButtons.forEach(button => {\r\n             const segment = button.getAttribute('data-photos-segment') as SegmentView | null;\r\n             button.dataset.active = segment === state.activeSegment ? 'true' : 'false';\r\n         });\r\n     }\r\n\r\n     function toggleSearchClear(): void {\r\n         if (!elements.searchClear) {\r\n             return;\r\n         }\r\n         const hasValue = Boolean(state.searchTerm.trim());\r\n         elements.searchClear.classList.toggle('invisible', !hasValue);\r\n         elements.searchClear.classList.toggle('pointer-events-none', !hasValue);\r\n     }\r\n\r\n     function setLoading(isLoading: boolean): void {\r\n         state.isLoading = isLoading;\r\n         elements.loading?.classList.toggle('hidden', !isLoading);\r\n     }\r\n\r\n     function setError(hasError: boolean): void {\r\n         elements.error?.classList.toggle('hidden', !hasError);\r\n     }\r\n\r\n     function openDetail(index: number, options: { external?: boolean; photo?: ExternalPhotoItem } = {}): void {\r\n         const overlay = elements.overlay;\r\n         if (!overlay || !elements.image) {\r\n             return;\r\n         }\r\n         let photo: AnyPhotoItem | null = null;\r\n         if (options.external && options.photo) {\r\n             photo = options.photo;\r\n             state.externalPhoto = options.photo;\r\n             state.selectedIndex = -1;\r\n             state.activePhotoId = options.photo.id;\r\n         } else {\r\n             const selected = state.filteredPhotos[index];\r\n             if (!selected) {\r\n                 return;\r\n             }\r\n             photo = selected;\r\n             state.selectedIndex = index;\r\n             state.activePhotoId = selected.id;\r\n             state.externalPhoto = null;\r\n         }\r\n         state.overlayVisible = true;\r\n         overlay.classList.remove('hidden');\r\n         overlay.classList.add('flex');\r\n         if (!photo) {\r\n             return;\r\n         }\r\n         setDetailLoading(true);\r\n         state.pendingImageId = photo.id;\r\n         if ('largeUrl' in photo && photo.largeUrl) {\r\n             elements.image.src = photo.largeUrl;\r\n         } else {\r\n             elements.image.src = photo.downloadUrl;\r\n         }\r\n         updateDetailMetadata(photo);\r\n         updateNavigationButtons();\r\n         updateCounter();\r\n         if (!options.external) {\r\n             setActiveCard(photo.id);\r\n         } else {\r\n             clearActiveCard();\r\n         }\r\n     }\r\n\r\n     function getCurrentDetailPhoto(): AnyPhotoItem | null {\r\n         if (state.externalPhoto) {\r\n             return state.externalPhoto;\r\n         }\r\n         if (state.selectedIndex >= 0) {\r\n             return state.filteredPhotos[state.selectedIndex] ?? null;\r\n         }\r\n         return null;\r\n     }\r\n\r\n     function updateDetailMetadata(photo: AnyPhotoItem): void {\r\n        if (elements.detailTitle) {\r\n            const fallbackTitle = t('photos.detail.unknownPhoto', 'Unknown photo');\r\n            elements.detailTitle.textContent = photo.author || fallbackTitle;\r\n        }\r\n        if (elements.imageInfo) {\r\n            const label = isExternalPhoto(photo) && photo.sourceName ? photo.sourceName : photo.author;\r\n            elements.imageInfo.textContent = label;\r\n        }\r\n        const orientationLabel = formatOrientation(photo.orientation);\r\n        const metaParts: string[] = [];\r\n        if (isExternalPhoto(photo)) {\r\n            metaParts.push(t('photos.detail.externalLabel', 'External photo'));\r\n            if (photo.sourceName) {\r\n                metaParts.push(photo.sourceName);\r\n            }\r\n        } else {\r\n            metaParts.push(String(photo.year));\r\n            metaParts.push(orientationLabel);\r\n        }\r\n        if (elements.detailMeta) {\r\n            elements.detailMeta.textContent = metaParts.join(' \u0393\u00C7\u00F3 ');\r\n        }\r\n        if (elements.detailDimensions) {\r\n            if (photo.width && photo.height) {\r\n                elements.detailDimensions.textContent = t(\r\n                    'photos.detail.dimensions',\r\n                    `Resolution: ${photo.width} \u251C\u00F9 ${photo.height}px`,\r\n                    { width: photo.width, height: photo.height },\r\n                );\r\n            } else {\r\n                elements.detailDimensions.textContent = '';\r\n            }\r\n        }\r\n        if (elements.detailOpen) {\r\n            elements.detailOpen.href = photo.url ?? photo.downloadUrl;\r\n        }\r\n        if (elements.detailDownload) {\r\n            elements.detailDownload.href = photo.downloadUrl;\r\n            elements.detailDownload.download = t(\r\n                'photos.detail.downloadFilename',\r\n                `photo-${photo.id}.jpg`,\r\n                { id: photo.id },\r\n            );\r\n        }\r\n        updateFavoriteButton(photo);\r\n    }\r\n\r\n    function updateFavoriteButton(photo: AnyPhotoItem): void {\r\n        if (!elements.detailFavorite || !elements.detailFavoriteLabel || !elements.detailFavoriteIcon) {\r\n            return;\r\n        }\r\n        if (isExternalPhoto(photo)) {\r\n            elements.detailFavorite.setAttribute('disabled', 'true');\r\n            elements.detailFavorite.classList.add('opacity-40', 'pointer-events-none');\r\n            elements.detailFavoriteLabel.textContent = t(\r\n                'photos.detail.favoriteUnavailable',\r\n                'Unavailable',\r\n            );\r\n            elements.detailFavoriteIcon.textContent = '\u0393\u00C7\u00F4';\r\n            return;\r\n        }\r\n        const isFavorite = state.favorites.has(photo.id);\r\n        elements.detailFavorite.removeAttribute('disabled');\r\n        elements.detailFavorite.classList.remove('opacity-40', 'pointer-events-none');\r\n        const removeLabel = t('photos.detail.favoriteRemove', 'Remove favorite');\r\n        const addLabel = t('photos.detail.favoriteAdd', 'Add to favorites');\r\n        elements.detailFavoriteLabel.textContent = isFavorite ? removeLabel : addLabel;\r\n        elements.detailFavoriteIcon.textContent = isFavorite ? '\u0393\u00D6\u00D1' : '\u0393\u00D6\u00ED';\r\n    }\r\n\r\n     function closeDetail(): void {\r\n         if (!elements.overlay) {\r\n             return;\r\n         }\r\n         elements.overlay.classList.add('hidden');\r\n         elements.overlay.classList.remove('flex');\r\n         state.overlayVisible = false;\r\n         state.selectedIndex = -1;\r\n         state.activePhotoId = null;\r\n         state.externalPhoto = null;\r\n         state.pendingImageId = null;\r\n         clearActiveCard();\r\n         setDetailLoading(false);\r\n     }\r\n\r\n     function moveSelection(delta: number): void {\r\n         if (state.externalPhoto) {\r\n             return;\r\n         }\r\n         const nextIndex = state.selectedIndex + delta;\r\n         if (nextIndex < 0 || nextIndex >= state.filteredPhotos.length) {\r\n             return;\r\n         }\r\n         openDetail(nextIndex);\r\n     }\r\n\r\n     function toggleFavorite(): void {\r\n         if (state.externalPhoto) {\r\n             return;\r\n         }\r\n         const photo = state.filteredPhotos[state.selectedIndex];\r\n         if (!photo) {\r\n             return;\r\n         }\r\n         if (state.favorites.has(photo.id)) {\r\n             state.favorites.delete(photo.id);\r\n         } else {\r\n             state.favorites.add(photo.id);\r\n         }\r\n         updateFavoriteButton(photo);\r\n         updateSidebarCounts();\r\n         updateCardFavoriteState(photo.id);\r\n     }\r\n\r\n     function updateCardFavoriteState(photoId: string): void {\r\n         if (!elements.gallery) {\r\n             return;\r\n         }\r\n         const card = elements.gallery.querySelector<HTMLElement>(`.photos-card[data-photo-id=\"${photoId}\"]`);\r\n         if (!card) {\r\n             return;\r\n         }\r\n         if (state.favorites.has(photoId)) {\r\n             card.dataset.favorite = 'true';\r\n         } else {\r\n             card.removeAttribute('data-favorite');\r\n         }\r\n     }\r\n\r\n     function updateNavigationButtons(): void {\r\n         const hasPrev = state.selectedIndex > 0 && !state.externalPhoto;\r\n         const hasNext =\r\n             state.selectedIndex >= 0 &&\r\n             state.selectedIndex < state.filteredPhotos.length - 1 &&\r\n             !state.externalPhoto;\r\n         if (elements.detailPrev) {\r\n             elements.detailPrev.classList.toggle('opacity-30', !hasPrev);\r\n             elements.detailPrev.classList.toggle('pointer-events-none', !hasPrev);\r\n         }\r\n         if (elements.detailNext) {\r\n             elements.detailNext.classList.toggle('opacity-30', !hasNext);\r\n             elements.detailNext.classList.toggle('pointer-events-none', !hasNext);\r\n         }\r\n     }\r\n\r\n     function updateCounter(): void {\r\n        if (!elements.detailCounter) {\r\n            return;\r\n        }\r\n        if (state.externalPhoto) {\r\n            elements.detailCounter.textContent = t('photos.detail.externalCounter', 'External image');\r\n            return;\r\n        }\r\n        if (state.selectedIndex >= 0) {\r\n            elements.detailCounter.textContent = t(\r\n                'photos.detail.counter',\r\n                `${state.selectedIndex + 1} of ${state.filteredPhotos.length}`,\r\n                { index: state.selectedIndex + 1, total: state.filteredPhotos.length },\r\n            );\r\n        } else {\r\n            elements.detailCounter.textContent = '';\r\n        }\r\n    }\r\n\r\n     function setDetailLoading(isLoading: boolean): void {\r\n         elements.loader?.classList.toggle('hidden', !isLoading);\r\n     }\r\n\r\n    function handleKeyNavigation(event: KeyboardEvent): void {\r\n        if (!state.overlayVisible) {\r\n            return;\r\n        }\r\n        if (event.key === 'Escape') {\r\n            closeDetail();\r\n        } else if (event.key === 'ArrowLeft') {\r\n            moveSelection(-1);\r\n        } else if (event.key === 'ArrowRight') {\r\n            moveSelection(1);\r\n        }\r\n    }\r\n\r\n     function getRandomPage(): number {\r\n         return Math.floor(Math.random() * 10) + 1;\r\n     }\r\n\r\n    function showExternalImage(payload: { src: string; name?: string }): void {\r\n        if (!payload || !payload.src) {\r\n            return;\r\n        }\r\n        if (!state.initialized) {\r\n            init();\r\n        }\r\n        const name =\r\n            payload.name && payload.name.trim().length > 0\r\n                ? payload.name.trim()\r\n                : t('photos.detail.externalFile', 'External file');\r\n        const externalPhoto: ExternalPhotoItem = {\r\n            id: `external-${Date.now()}`,\r\n            author: name,\r\n            downloadUrl: payload.src,\r\n            largeUrl: payload.src,\r\n            url: payload.src,\r\n            sourceName: name,\r\n            isExternal: true,\r\n        };\r\n        openDetail(-1, { external: true, photo: externalPhoto });\r\n    }\r\n\r\n    function handleLanguageChange(): void {\r\n        if (!state.initialized) {\r\n            return;\r\n        }\r\n        renderGallery();\r\n        updateEmptyState();\r\n        updatePhotoCount();\r\n        if (state.overlayVisible) {\r\n            const current = getCurrentDetailPhoto();\r\n            if (current) {\r\n                updateDetailMetadata(current);\r\n            }\r\n            updateNavigationButtons();\r\n            updateCounter();\r\n        } else {\r\n            updateCounter();\r\n        }\r\n        globalWindow.appI18n?.applyTranslations?.(elements.container ?? undefined);\r\n    }\r\n\r\n    const api: PhotosAppApi = {\r\n        init,\r\n        showExternalImage,\r\n    };\r\n\r\n    globalWindow.PhotosApp = api;\r\n\r\n    window.addEventListener('languagePreferenceChange', handleLanguageChange);\r\n\r\n    // Don't auto-init - let WindowManager handle it\r\n    // if (document.readyState === 'loading') {\r\n    //     document.addEventListener('DOMContentLoaded', init, { once: true });\r\n    // } else {\r\n    //     init();\r\n    // }\r\n })();\r\n\r\n", "console.log('Window Configurations loaded');\r\n\r\n/**\r\n * Window-Konfigurationen\r\n *\r\n * Hier werden alle Fenster/Modals definiert.\r\n * Um ein neues Fenster hinzuzuf\u00FCgen, einfach einen neuen Eintrag hier anlegen!\r\n */\r\n(function () {\r\n    'use strict';\r\n\r\n    const windowConfigurations = [\r\n        {\r\n            id: 'finder-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.finder',\r\n            icon: './img/sucher.png',\r\n            closeButtonId: 'close-finder-modal',\r\n            metadata: {\r\n                initHandler: function () {\r\n                    // Create first Finder instance when modal opens if none exist\r\n                    if (\r\n                        window.FinderInstanceManager &&\r\n                        !window.FinderInstanceManager.hasInstances()\r\n                    ) {\r\n                        const inst = window.FinderInstanceManager.createInstance({\r\n                            title: 'Finder',\r\n                        });\r\n                        // Ensure visibility and UI sync (tab bar + content) after fresh open\r\n                        try {\r\n                            const active =\r\n                                inst && inst.instanceId\r\n                                    ? inst\r\n                                    : window.FinderInstanceManager.getActiveInstance?.();\r\n                            if (active && window.MultiInstanceIntegration) {\r\n                                // Show the active instance content\r\n                                window.MultiInstanceIntegration.showInstance(\r\n                                    'finder',\r\n                                    active.instanceId\r\n                                );\r\n                                // If available, refresh the tab UI\r\n                                const integ =\r\n                                    window.MultiInstanceIntegration.getIntegration?.('finder');\r\n                                integ?.tabManager?.addTab?.(active);\r\n\r\n                                // Force tab UI refresh to ensure tab is rendered\r\n                                if (integ?.tabManager?.controller?.refresh) {\r\n                                    integ.tabManager.controller.refresh();\r\n                                }\r\n                            }\r\n                        } catch (e) {\r\n                            console.warn('Finder init post-create sync failed:', e);\r\n                        }\r\n                    }\r\n                },\r\n                openHandler: function () {\r\n                    // On every open: ensure at least one Finder instance is available and visible\r\n                    if (\r\n                        window.FinderInstanceManager &&\r\n                        !window.FinderInstanceManager.hasInstances()\r\n                    ) {\r\n                        const inst = window.FinderInstanceManager.createInstance({\r\n                            title: 'Finder',\r\n                        });\r\n                        try {\r\n                            const activeId =\r\n                                (inst && inst.instanceId) ||\r\n                                window.FinderInstanceManager.getActiveInstance?.()?.instanceId;\r\n                            if (activeId && window.MultiInstanceIntegration) {\r\n                                window.MultiInstanceIntegration.showInstance('finder', activeId);\r\n                                const integ =\r\n                                    window.MultiInstanceIntegration.getIntegration?.('finder');\r\n                                if (\r\n                                    integ &&\r\n                                    integ.tabManager &&\r\n                                    typeof integ.tabManager.addTab === 'function'\r\n                                ) {\r\n                                    integ.tabManager.addTab(inst || { instanceId: activeId });\r\n                                }\r\n                                // Force tab UI refresh to ensure tab is rendered\r\n                                if (integ?.tabManager?.controller?.refresh) {\r\n                                    integ.tabManager.controller.refresh();\r\n                                }\r\n                            }\r\n                        } catch (e) {\r\n                            console.warn('Finder open post-create sync failed:', e);\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        },\r\n        {\r\n            id: 'launchpad-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.launchpad',\r\n            icon: './img/launchpad.png',\r\n            closeButtonId: 'close-launchpad-modal',\r\n            metadata: {\r\n                skipMenubarUpdate: true, // Don't update menubar when launchpad is focused\r\n                initHandler: function () {\r\n                    // Initialize Launchpad module if not already done\r\n                    if (window.LaunchpadSystem && !window.LaunchpadSystem.container) {\r\n                        const container = document.getElementById('launchpad-container');\r\n                        if (container) {\r\n                            window.LaunchpadSystem.init(container);\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        },\r\n        {\r\n            id: 'projects-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.projects',\r\n            icon: './img/sucher.png',\r\n            closeButtonId: 'close-projects-modal',\r\n        },\r\n        {\r\n            id: 'about-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.about',\r\n            icon: './img/profil.jpg',\r\n            closeButtonId: 'close-about-modal',\r\n        },\r\n        {\r\n            id: 'settings-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.settings',\r\n            icon: './img/settings.png',\r\n            closeButtonId: 'close-settings-modal',\r\n            metadata: {\r\n                initHandler: function () {\r\n                    // Initialize settings module if not already done\r\n                    if (window.SettingsSystem && !window.SettingsSystem.container) {\r\n                        const container = document.getElementById('settings-container');\r\n                        if (container) {\r\n                            window.SettingsSystem.init(container);\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        },\r\n        {\r\n            id: 'text-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.text',\r\n            icon: './img/notepad.png',\r\n            closeButtonId: 'close-text-modal',\r\n            metadata: {\r\n                initHandler: function () {\r\n                    // Primary: Create first Text Editor instance when modal opens if none exist\r\n                    if (\r\n                        window.TextEditorInstanceManager &&\r\n                        !window.TextEditorInstanceManager.hasInstances()\r\n                    ) {\r\n                        window.TextEditorInstanceManager.createInstance({\r\n                            title: 'Editor',\r\n                        });\r\n                    }\r\n                    // Fallback: Initialize old text editor module if instance manager not available\r\n                    else if (window.TextEditorSystem && !window.TextEditorSystem.container) {\r\n                        const container = document.getElementById('text-editor-container');\r\n                        if (container) {\r\n                            window.TextEditorSystem.init(container);\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        },\r\n        {\r\n            id: 'image-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.photos',\r\n            icon: './img/photos-app-icon.svg',\r\n            closeButtonId: 'close-image-modal',\r\n        },\r\n        {\r\n            id: 'program-info-modal',\r\n            type: 'transient',\r\n            programKey: 'programs.default',\r\n            icon: './img/sucher.png',\r\n            closeButtonId: 'close-program-info-modal',\r\n        },\r\n        {\r\n            id: 'terminal-modal',\r\n            type: 'persistent',\r\n            programKey: 'programs.terminal',\r\n            icon: './img/terminal.png',\r\n            closeButtonId: 'close-terminal-modal',\r\n            metadata: {\r\n                initHandler: function () {\r\n                    // Primary: Create first Terminal instance when modal opens if none exist\r\n                    if (\r\n                        window.TerminalInstanceManager &&\r\n                        !window.TerminalInstanceManager.hasInstances()\r\n                    ) {\r\n                        window.TerminalInstanceManager.createInstance({\r\n                            title: 'Terminal',\r\n                        });\r\n                    }\r\n                    // Fallback: Initialize old terminal module if instance manager not available\r\n                    else if (window.TerminalSystem && !window.TerminalSystem.container) {\r\n                        const container = document.getElementById('terminal-container');\r\n                        if (container) {\r\n                            window.TerminalSystem.init(container);\r\n                        }\r\n                    }\r\n                },\r\n            },\r\n        },\r\n    ];\r\n\r\n    // Automatisch alle Fenster registrieren wenn WindowManager verf\u00FCgbar ist\r\n    if (window.WindowManager) {\r\n        window.WindowManager.registerAll(windowConfigurations);\r\n        console.log(`Registered ${windowConfigurations.length} windows`);\r\n    } else {\r\n        // Fallback: Warte auf WindowManager\r\n        document.addEventListener('DOMContentLoaded', () => {\r\n            if (window.WindowManager) {\r\n                window.WindowManager.registerAll(windowConfigurations);\r\n                console.log(`Registered ${windowConfigurations.length} windows (delayed)`);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Export f\u00FCr Zugriff von au\u00DFen\r\n    window.windowConfigurations = windowConfigurations;\r\n})();\r\n", "console.log('FinderInstance loaded');\r\n\r\n/**\r\n * FinderInstance - Multi-Instance f\u00E4higer Finder-Implementierung\r\n *\r\n * Erm\u00F6glicht mehrere Finder-Fenster mit isolierten States\r\n * Zeigt, wie das Finder-Modul f\u00FCr Multi-Instance umgebaut werden kann\r\n */\r\n(function () {\r\n    'use strict';\r\n\r\n    // Constants\r\n    const ROOT_FOLDER_NAME = 'Computer';\r\n\r\n    /**\r\n     * Single Finder Instance\r\n     * Extends BaseWindowInstance to support multiple finder windows\r\n     */\r\n    class FinderInstance extends window.BaseWindowInstance {\r\n        constructor(config) {\r\n            super({\r\n                ...config,\r\n                type: 'finder',\r\n            });\r\n\r\n            // Finder-specific state\r\n            this.currentPath = [];\r\n            this.currentView = 'computer'; // 'computer', 'github', 'favorites', 'recent'\r\n            this.selectedItems = new Set();\r\n            this.viewMode = 'list'; // 'list', 'grid', 'columns'\r\n            this.sortBy = 'name'; // 'name', 'date', 'size', 'type'\r\n            this.sortOrder = 'asc'; // 'asc', 'desc'\r\n            this.githubRepos = [];\r\n            this.githubLoading = false;\r\n            this.githubError = false;\r\n            this.githubErrorMessage = '';\r\n            this.lastGithubItemsMap = new Map();\r\n            this.favorites = new Set();\r\n            this.recentFiles = [];\r\n\r\n            // DOM References (per instance)\r\n            this.domRefs = {\r\n                sidebarComputer: null,\r\n                sidebarGithub: null,\r\n                sidebarFavorites: null,\r\n                sidebarRecent: null,\r\n                breadcrumbs: null,\r\n                contentArea: null,\r\n                toolbar: null,\r\n                searchInput: null,\r\n            };\r\n\r\n            // GitHub cache\r\n            this.githubContentCache = new Map();\r\n\r\n            // Virtual file system (per instance)\r\n            this.virtualFileSystem = this._createVirtualFileSystem();\r\n        }\r\n\r\n        /**\r\n         * Create virtual file system for this instance\r\n         * @private\r\n         */\r\n        _createVirtualFileSystem() {\r\n            const rootFolder = {\r\n                type: 'folder',\r\n                icon: '\uD83D\uDCBB',\r\n                children: {\r\n                    Documents: {\r\n                        type: 'folder',\r\n                        icon: '\uD83D\uDCC4',\r\n                        children: {\r\n                            'README.md': {\r\n                                type: 'file',\r\n                                icon: '\uD83D\uDCDD',\r\n                                content:\r\n                                    '# Willkommen im Finder\\n\\nDies ist ein virtuelles Dateisystem.',\r\n                                size: 1024,\r\n                            },\r\n                        },\r\n                    },\r\n                    Downloads: {\r\n                        type: 'folder',\r\n                        icon: '\u2B07\uFE0F',\r\n                        children: {},\r\n                    },\r\n                    Pictures: {\r\n                        type: 'folder',\r\n                        icon: '\uD83D\uDDBC\uFE0F',\r\n                        children: {},\r\n                    },\r\n                    Music: {\r\n                        type: 'folder',\r\n                        icon: '\uD83C\uDFB5',\r\n                        children: {},\r\n                    },\r\n                    Videos: {\r\n                        type: 'folder',\r\n                        icon: '\uD83C\uDFAC',\r\n                        children: {},\r\n                    },\r\n                },\r\n            };\r\n\r\n            return {\r\n                [ROOT_FOLDER_NAME]: rootFolder,\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Initialize instance state\r\n         * @protected\r\n         */\r\n        _initializeState(initialState) {\r\n            return {\r\n                ...super._initializeState(initialState),\r\n                currentPath: initialState.currentPath || [],\r\n                currentView: initialState.currentView || 'computer',\r\n                viewMode: initialState.viewMode || 'list',\r\n                sortBy: initialState.sortBy || 'name',\r\n                sortOrder: initialState.sortOrder || 'asc',\r\n                favorites: initialState.favorites || [],\r\n                recentFiles: initialState.recentFiles || [],\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Render finder UI\r\n         * @protected\r\n         */\r\n        render() {\r\n            if (!this.container) return;\r\n\r\n            const html = `\r\n                <div class=\"finder-instance-wrapper flex-1 flex gap-0 min-h-0 overflow-hidden\">\r\n                    <!-- Sidebar -->\r\n                    <aside class=\"w-48 bg-gray-50 dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 overflow-y-auto\">\r\n                        <div class=\"py-2\">\r\n                            <!-- Favoriten Section -->\r\n                            <div class=\"px-3 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wide\"\r\n                                data-i18n=\"finder.sidebar.favorites\">\r\n                                Favoriten\r\n                            </div>\r\n                            <button id=\"finder-sidebar-computer\" data-finder-sidebar-computer data-action=\"finder:switchView\" data-finder-view=\"computer\"\r\n                                class=\"finder-sidebar-item finder-sidebar-active\">\r\n                                <span class=\"finder-sidebar-icon\">\uD83D\uDCBB</span>\r\n                                <span data-i18n=\"finder.sidebar.computer\">Computer</span>\r\n                            </button>\r\n                            <button id=\"finder-sidebar-recent\" data-finder-sidebar-recent data-action=\"finder:switchView\" data-finder-view=\"recent\"\r\n                                class=\"finder-sidebar-item\">\r\n                                <span class=\"finder-sidebar-icon\">\uD83D\uDD52</span>\r\n                                <span data-i18n=\"finder.sidebar.recent\">Zuletzt ge\u00F6ffnet</span>\r\n                            </button>\r\n\r\n                            <!-- Orte Section -->\r\n                            <div class=\"px-3 py-1 mt-4 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wide\"\r\n                                data-i18n=\"finder.sidebar.locations\">\r\n                                Orte\r\n                            </div>\r\n                            <button id=\"finder-sidebar-github\" data-finder-sidebar-github data-action=\"finder:switchView\" data-finder-view=\"github\"\r\n                                class=\"finder-sidebar-item\">\r\n                                <span class=\"finder-sidebar-icon\">\uD83D\uDCC2</span>\r\n                                <span data-i18n=\"finder.sidebar.github\">GitHub Projekte</span>\r\n                            </button>\r\n                            <button id=\"finder-sidebar-favorites\" data-finder-sidebar-favorites data-action=\"finder:switchView\"\r\n                                data-finder-view=\"favorites\" class=\"finder-sidebar-item\">\r\n                                <span class=\"finder-sidebar-icon\">\u2B50</span>\r\n                                <span data-i18n=\"finder.sidebar.starred\">Mit Stern</span>\r\n                            </button>\r\n                        </div>\r\n                    </aside>\r\n\r\n                    <!-- Main Content Area -->\r\n                    <div class=\"flex-1 flex flex-col min-h-0\">\r\n                        <!-- Toolbar -->\r\n                        <div id=\"finder-toolbar\" data-finder-toolbar\r\n                            class=\"px-4 py-2 border-b border-gray-200 dark:border-gray-700 flex items-center gap-2\">\r\n                            <button data-action=\"finder:navigateUp\" class=\"finder-toolbar-btn\" title=\"Zur\u00FCck\"\r\n                                data-i18n-title=\"finder.toolbar.back\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                                    <path d=\"M19 12H5M12 19l-7-7 7-7\" />\r\n                                </svg>\r\n                            </button>\r\n                            <button data-action=\"finder:goRoot\" class=\"finder-toolbar-btn\" title=\"Vorw\u00E4rts\"\r\n                                data-i18n-title=\"finder.toolbar.forward\">\r\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\r\n                                </svg>\r\n                            </button>\r\n                            <div class=\"flex-1 mx-2\">\r\n                                <div id=\"finder-path-breadcrumbs\" data-finder-breadcrumbs\r\n                                    class=\"flex items-center gap-1 text-sm text-gray-600 dark:text-gray-400\">\r\n                                    <!-- Breadcrumbs werden dynamisch generiert -->\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"flex gap-1\">\r\n                                <button data-action=\"finder:setViewMode\" data-view-mode=\"list\" class=\"finder-toolbar-btn\"\r\n                                    title=\"Listenansicht\" data-i18n-title=\"finder.toolbar.listView\">\r\n                                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                        <path d=\"M3 4h18v2H3V4m0 7h18v2H3v-2m0 7h18v2H3v-2Z\" />\r\n                                    </svg>\r\n                                </button>\r\n                                <button data-action=\"finder:setViewMode\" data-view-mode=\"grid\" class=\"finder-toolbar-btn\"\r\n                                    title=\"Rasteransicht\" data-i18n-title=\"finder.toolbar.gridView\">\r\n                                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n                                        <path d=\"M3 3h8v8H3V3m10 0h8v8h-8V3M3 13h8v8H3v-8m10 0h8v8h-8v-8Z\" />\r\n                                    </svg>\r\n                                </button>\r\n                            </div>\r\n                            <input id=\"finder-search-input\" data-finder-search type=\"text\" placeholder=\"Suchen\"\r\n                                data-i18n-placeholder=\"finder.toolbar.search\"\r\n                                class=\"px-3 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\" />\r\n                        </div>\r\n\r\n                        <!-- Content Area -->\r\n                        <div id=\"finder-content-area\" data-finder-content class=\"flex-1 overflow-auto bg-white dark:bg-gray-800 p-4\">\r\n                            <!-- Content wird dynamisch generiert -->\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            `;\r\n\r\n            this.container.innerHTML = html;\r\n\r\n            // Cache DOM references\r\n            this.domRefs.sidebarComputer = this.container.querySelector(\r\n                '[data-finder-sidebar-computer]'\r\n            );\r\n            this.domRefs.sidebarGithub = this.container.querySelector(\r\n                '[data-finder-sidebar-github]'\r\n            );\r\n            this.domRefs.sidebarFavorites = this.container.querySelector(\r\n                '[data-finder-sidebar-favorites]'\r\n            );\r\n            this.domRefs.sidebarRecent = this.container.querySelector(\r\n                '[data-finder-sidebar-recent]'\r\n            );\r\n            this.domRefs.breadcrumbs = this.container.querySelector('[data-finder-breadcrumbs]');\r\n            this.domRefs.contentArea = this.container.querySelector('[data-finder-content]');\r\n            this.domRefs.toolbar = this.container.querySelector('[data-finder-toolbar]');\r\n            this.domRefs.searchInput = this.container.querySelector('[data-finder-search]');\r\n        }\r\n\r\n        /**\r\n         * Attach event listeners\r\n         * @protected\r\n         */\r\n        attachEventListeners() {\r\n            if (!this.container) return;\r\n\r\n            // Delegate events on container\r\n            this.container.addEventListener('click', e => this._handleClick(e));\r\n            this.container.addEventListener('dblclick', e => this._handleDoubleClick(e));\r\n\r\n            // Initial render\r\n            this.navigateTo(this.state.currentPath, this.state.currentView);\r\n        }\r\n\r\n        /**\r\n         * Handle click events\r\n         * @private\r\n         */\r\n        _handleClick(e) {\r\n            const action = e.target.closest('[data-action]')?.dataset.action;\r\n            if (!action) return;\r\n\r\n            const handlers = {\r\n                'finder:switchView': () => {\r\n                    const view = e.target.closest('[data-finder-view]')?.dataset.finderView;\r\n                    if (view) this.switchView(view);\r\n                },\r\n                'finder:navigateUp': () => this.navigateUp(),\r\n                'finder:goRoot': () => this.navigateTo([], this.currentView),\r\n                'finder:navigateToPath': () => {\r\n                    const path = e.target.closest('[data-path]')?.dataset.path;\r\n                    if (path) this.navigateTo(path);\r\n                },\r\n                'finder:setSortBy': () => {\r\n                    const sortBy = e.target.closest('[data-sort-by]')?.dataset.sortBy;\r\n                    if (sortBy) this.setSortBy(sortBy);\r\n                },\r\n                'finder:setViewMode': () => {\r\n                    const mode = e.target.closest('[data-view-mode]')?.dataset.viewMode;\r\n                    if (mode) this.setViewMode(mode);\r\n                },\r\n            };\r\n\r\n            if (handlers[action]) {\r\n                handlers[action]();\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Handle double click events\r\n         * @private\r\n         */\r\n        _handleDoubleClick(e) {\r\n            const item = e.target.closest('[data-action-dblclick]');\r\n            if (!item || item.dataset.actionDblclick !== 'finder:openItem') return;\r\n\r\n            const name = item.dataset.itemName;\r\n            const type = item.dataset.itemType;\r\n            if (name && type) {\r\n                this.openItem(name, type);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Navigate to path\r\n         */\r\n        navigateTo(path, view = null) {\r\n            if (view !== null) {\r\n                this.currentView = view;\r\n            }\r\n\r\n            if (typeof path === 'string') {\r\n                this.currentPath = path === '' ? [] : path.split('/');\r\n            } else if (Array.isArray(path)) {\r\n                this.currentPath = [...path];\r\n            }\r\n\r\n            this.updateSidebarSelection();\r\n            this.renderBreadcrumbs();\r\n            this.renderContent();\r\n            this.updateState({\r\n                currentPath: this.currentPath,\r\n                currentView: this.currentView,\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Navigate up one level\r\n         */\r\n        navigateUp() {\r\n            if (this.currentPath.length > 0) {\r\n                this.currentPath.pop();\r\n                this.navigateTo(this.currentPath);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Navigate to folder\r\n         */\r\n        navigateToFolder(folderName) {\r\n            this.currentPath.push(folderName);\r\n            this.navigateTo(this.currentPath);\r\n        }\r\n\r\n        /**\r\n         * Switch view\r\n         */\r\n        switchView(view) {\r\n            this.currentPath = [];\r\n            this.navigateTo([], view);\r\n        }\r\n\r\n        /**\r\n         * Update sidebar selection\r\n         */\r\n        updateSidebarSelection() {\r\n            const refs = this.domRefs;\r\n            if (!refs) return;\r\n\r\n            // Remove all active marks\r\n            [\r\n                refs.sidebarComputer,\r\n                refs.sidebarGithub,\r\n                refs.sidebarFavorites,\r\n                refs.sidebarRecent,\r\n            ].forEach(el => {\r\n                if (el) el.classList.remove('finder-sidebar-active');\r\n            });\r\n\r\n            // Mark current view\r\n            switch (this.currentView) {\r\n                case 'computer':\r\n                    if (refs.sidebarComputer)\r\n                        refs.sidebarComputer.classList.add('finder-sidebar-active');\r\n                    break;\r\n                case 'github':\r\n                    if (refs.sidebarGithub)\r\n                        refs.sidebarGithub.classList.add('finder-sidebar-active');\r\n                    break;\r\n                case 'favorites':\r\n                    if (refs.sidebarFavorites)\r\n                        refs.sidebarFavorites.classList.add('finder-sidebar-active');\r\n                    break;\r\n                case 'recent':\r\n                    if (refs.sidebarRecent)\r\n                        refs.sidebarRecent.classList.add('finder-sidebar-active');\r\n                    break;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Render breadcrumbs\r\n         */\r\n        renderBreadcrumbs() {\r\n            if (!this.domRefs.breadcrumbs) return;\r\n\r\n            const parts = [];\r\n\r\n            // View label\r\n            let viewLabel = '';\r\n            switch (this.currentView) {\r\n                case 'computer':\r\n                    viewLabel = 'Computer';\r\n                    break;\r\n                case 'github':\r\n                    viewLabel = 'GitHub Projekte';\r\n                    break;\r\n                case 'favorites':\r\n                    viewLabel = 'Favoriten';\r\n                    break;\r\n                case 'recent':\r\n                    viewLabel = 'Zuletzt ge\u00F6ffnet';\r\n                    break;\r\n            }\r\n\r\n            parts.push(\r\n                `<button class=\"finder-breadcrumb-item\" data-action=\"finder:goRoot\">${viewLabel}</button>`\r\n            );\r\n\r\n            // Path parts\r\n            this.currentPath.forEach((part, index) => {\r\n                // Skip root folder name if we're in computer view and it's the first part\r\n                if (index === 0 && this.currentView === 'computer' && part === ROOT_FOLDER_NAME) {\r\n                    return;\r\n                }\r\n\r\n                const pathUpToHere = this.currentPath.slice(0, index + 1);\r\n                parts.push('<span class=\"finder-breadcrumb-separator\">\u203A</span>');\r\n                parts.push(\r\n                    `<button class=\"finder-breadcrumb-item\" data-action=\"finder:navigateToPath\" data-path=\"${pathUpToHere.join('/')}\">${part}</button>`\r\n                );\r\n            });\r\n\r\n            this.domRefs.breadcrumbs.innerHTML = parts.join('');\r\n        }\r\n\r\n        /**\r\n         * Render content area\r\n         */\r\n        renderContent() {\r\n            if (!this.domRefs.contentArea) return;\r\n\r\n            // Special handling for GitHub view (async loading)\r\n            if (this.currentView === 'github') {\r\n                this.renderGithubContent();\r\n                return;\r\n            }\r\n\r\n            const items = this.getCurrentItems();\r\n\r\n            if (items.length === 0) {\r\n                this.domRefs.contentArea.innerHTML = `\r\n                    <div class=\"finder-empty-state\">\r\n                        <div class=\"text-6xl mb-4\">\uD83D\uDCC2</div>\r\n                        <div class=\"text-gray-500 dark:text-gray-400\">Dieser Ordner ist leer</div>\r\n                    </div>\r\n                `;\r\n                return;\r\n            }\r\n\r\n            // Sort items\r\n            const sortedItems = this.sortItems(items);\r\n\r\n            // Render based on view mode\r\n            switch (this.viewMode) {\r\n                case 'list':\r\n                    this.renderListView(sortedItems);\r\n                    break;\r\n                case 'grid':\r\n                    this.renderGridView(sortedItems);\r\n                    break;\r\n                case 'columns':\r\n                    this.renderListView(sortedItems); // Fallback to list for now\r\n                    break;\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Get current items based on view and path\r\n         */\r\n        getCurrentItems() {\r\n            switch (this.currentView) {\r\n                case 'computer':\r\n                    return this.getComputerItems();\r\n                case 'github':\r\n                    return this.getGithubItems();\r\n                case 'favorites':\r\n                    return this.getFavoriteItems();\r\n                case 'recent':\r\n                    return this.getRecentItems();\r\n                default:\r\n                    return [];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Get computer items\r\n         */\r\n        getComputerItems() {\r\n            let current = this.virtualFileSystem;\r\n\r\n            for (const pathPart of this.currentPath) {\r\n                if (current[pathPart] && current[pathPart].children) {\r\n                    current = current[pathPart].children;\r\n                } else {\r\n                    return [];\r\n                }\r\n            }\r\n\r\n            return Object.entries(current).map(([name, item]) => ({\r\n                name,\r\n                type: item.type,\r\n                icon: item.icon || (item.type === 'folder' ? '\uD83D\uDCC1' : '\uD83D\uDCC4'),\r\n                size: item.size || 0,\r\n                modified: item.modified || new Date().toISOString(),\r\n            }));\r\n        }\r\n\r\n        /**\r\n         * Get GitHub items (placeholder - simplified from finder.js)\r\n         */\r\n        getGithubItems() {\r\n            // Fallback (should be handled by renderGithubContent)\r\n            return [];\r\n        }\r\n\r\n        /**\r\n         * Get favorite items\r\n         */\r\n        getFavoriteItems() {\r\n            return Array.from(this.favorites).map(path => ({\r\n                name: path.split('/').pop(),\r\n                type: 'favorite',\r\n                icon: '\u2B50',\r\n                path,\r\n            }));\r\n        }\r\n\r\n        /**\r\n         * Get recent items\r\n         */\r\n        getRecentItems() {\r\n            return this.recentFiles.map(file => ({\r\n                name: file.name,\r\n                type: 'recent',\r\n                icon: file.icon || '\uD83D\uDCC4',\r\n                path: file.path,\r\n                modified: file.modified,\r\n            }));\r\n        }\r\n\r\n        /**\r\n         * Sort items\r\n         */\r\n        sortItems(items) {\r\n            const sorted = [...items];\r\n\r\n            sorted.sort((a, b) => {\r\n                // Folders first\r\n                if (a.type === 'folder' && b.type !== 'folder') return -1;\r\n                if (a.type !== 'folder' && b.type === 'folder') return 1;\r\n\r\n                // Then by sortBy\r\n                let comparison = 0;\r\n                switch (this.sortBy) {\r\n                    case 'name':\r\n                        comparison = a.name.localeCompare(b.name);\r\n                        break;\r\n                    case 'size':\r\n                        comparison = (a.size || 0) - (b.size || 0);\r\n                        break;\r\n                    case 'date':\r\n                        comparison = new Date(b.modified || 0) - new Date(a.modified || 0);\r\n                        break;\r\n                    case 'type':\r\n                        comparison = (a.type || '').localeCompare(b.type || '');\r\n                        break;\r\n                }\r\n\r\n                return this.sortOrder === 'asc' ? comparison : -comparison;\r\n            });\r\n\r\n            return sorted;\r\n        }\r\n\r\n        /**\r\n         * Render list view\r\n         */\r\n        renderListView(items) {\r\n            const html = `\r\n                <div id=\"finder-list-container\">\r\n                <table class=\"finder-list-table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th data-action=\"finder:setSortBy\" data-sort-by=\"name\">Name</th>\r\n                            <th data-action=\"finder:setSortBy\" data-sort-by=\"size\">Gr\u00F6\u00DFe</th>\r\n                            <th data-action=\"finder:setSortBy\" data-sort-by=\"date\">Ge\u00E4ndert</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        ${items\r\n        .map(\r\n            item => `\r\n                            <tr class=\"finder-list-item\" data-action-dblclick=\"finder:openItem\" data-item-name=\"${item.name}\" data-item-type=\"${item.type}\">\r\n                                <td>\r\n                                    <span class=\"finder-item-icon\">${item.icon}</span>\r\n                                    <span class=\"finder-item-name\">${item.name}</span>\r\n                                </td>\r\n                                <td>${this.formatSize(item.size)}</td>\r\n                                <td>${this.formatDate(item.modified)}</td>\r\n                            </tr>\r\n                        `\r\n        )\r\n        .join('')}\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            `;\r\n\r\n            this.domRefs.contentArea.innerHTML = html;\r\n        }\r\n\r\n        /**\r\n         * Render grid view\r\n         */\r\n        renderGridView(items) {\r\n            const html = `\r\n                <div id=\"finder-list-container\">\r\n                <div class=\"finder-grid-container\">\r\n                    ${items\r\n        .map(\r\n            item => `\r\n                        <div class=\"finder-grid-item\" data-action-dblclick=\"finder:openItem\" data-item-name=\"${item.name}\" data-item-type=\"${item.type}\">\r\n                            <div class=\"finder-grid-icon\">${item.icon}</div>\r\n                            <div class=\"finder-grid-name\">${item.name}</div>\r\n                        </div>\r\n                    `\r\n        )\r\n        .join('')}\r\n                </div>\r\n                </div>\r\n            `;\r\n\r\n            this.domRefs.contentArea.innerHTML = html;\r\n        }\r\n\r\n        /**\r\n         * Open item\r\n         */\r\n        openItem(name, type) {\r\n            if (type === 'folder') {\r\n                this.navigateToFolder(name);\r\n            } else if (type === 'file') {\r\n                // Add to recent files\r\n                this.addToRecent(name);\r\n                // Emit event for file opening (can be handled by parent)\r\n                this.emit('fileOpened', { name, path: [...this.currentPath, name].join('/') });\r\n\r\n                // If in GitHub view and image file, open Preview\r\n                if (this.currentView === 'github') {\r\n                    const item = this.lastGithubItemsMap.get(name);\r\n                    const isImage = /\\.(png|jpe?g|gif|bmp|webp|svg)$/i.test(name);\r\n                    if (item && isImage && item.download_url) {\r\n                        // Collect all images in current folder\r\n                        const allImages = [];\r\n                        let startIndex = 0;\r\n                        let idx = 0;\r\n                        this.lastGithubItemsMap.forEach((entry, key) => {\r\n                            if (/\\.(png|jpe?g|gif|bmp|webp|svg)$/i.test(key) && entry.download_url) {\r\n                                if (key === name) startIndex = idx;\r\n                                allImages.push(entry.download_url);\r\n                                idx++;\r\n                            }\r\n                        });\r\n\r\n                        // Open Preview with all images\r\n                        if (window.PreviewInstanceManager && typeof window.PreviewInstanceManager.openImages === 'function') {\r\n                            const fullPath = [...this.currentPath, name].join('/');\r\n                            window.PreviewInstanceManager.openImages(allImages, startIndex, fullPath);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Render GitHub view with async fetching and caching\r\n         */\r\n        async renderGithubContent() {\r\n            const el = this.domRefs.contentArea;\r\n            if (!el) return;\r\n\r\n            // Root (list repos)\r\n            if (this.currentPath.length === 0) {\r\n                // Loading placeholder\r\n                el.innerHTML = '<div class=\"finder-empty-state\">Lade Repositories\u2026</div>';\r\n                const repos = await this.fetchGithubRepos();\r\n                this.lastGithubItemsMap.clear();\r\n                const items = (repos || []).map(repo => ({\r\n                    name: repo.name,\r\n                    type: 'folder',\r\n                    icon: '\uD83D\uDCE6',\r\n                }));\r\n                items.forEach(it => this.lastGithubItemsMap.set(it.name, it));\r\n                if (this.githubError && items.length === 0) {\r\n                    el.innerHTML =\r\n                        '<div class=\"finder-empty-state text-center\"><div class=\"text-2xl mb-2\">\u26A0\uFE0F</div><div>Repositories could not be loaded (Repos konnten nicht geladen werden). Possible Rate Limit.</div></div>';\r\n                } else if (items.length === 0) {\r\n                    el.innerHTML =\r\n                        '<div class=\"finder-empty-state text-center\">Keine \u00F6ffentlichen Repositories gefunden</div>';\r\n                } else {\r\n                    this.renderListView(items);\r\n                }\r\n                return;\r\n            }\r\n\r\n            // Repo and subpaths\r\n            const repo = this.currentPath[0];\r\n            const subPathParts = this.currentPath.slice(1);\r\n            const subPath = subPathParts.join('/');\r\n\r\n            el.innerHTML = '<div class=\"finder-empty-state\">Lade Inhalte\u2026</div>';\r\n            const contents = await this.fetchGithubContents(repo, subPath);\r\n            this.lastGithubItemsMap.clear();\r\n            const items = (contents || []).map(entry => {\r\n                const isDir = entry.type === 'dir';\r\n                return {\r\n                    name: entry.name,\r\n                    type: isDir ? 'folder' : 'file',\r\n                    icon: isDir ? '\uD83D\uDCC1' : '\uD83D\uDCC4',\r\n                    size: entry.size || 0,\r\n                    download_url: entry.download_url || null,\r\n                };\r\n            });\r\n            items.forEach(it => this.lastGithubItemsMap.set(it.name, it));\r\n            if (this.githubError && items.length === 0) {\r\n                el.innerHTML =\r\n                    '<div class=\"finder-empty-state text-center\"><div class=\"text-2xl mb-2\">\u26A0\uFE0F</div><div>Repositories could not be loaded (Repos konnten nicht geladen werden). Possible Rate Limit.</div></div>';\r\n            } else if (items.length === 0) {\r\n                el.innerHTML =\r\n                    '<div class=\"finder-empty-state text-center\">Dieser Ordner ist leer</div>';\r\n            } else {\r\n                this.renderListView(items);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Fetch GitHub repos for configured user\r\n         */\r\n        async fetchGithubRepos() {\r\n            const GITHUB_USERNAME = 'Marormur';\r\n            try {\r\n                // Simple in-memory cache per instance\r\n                if (Array.isArray(this.githubRepos) && this.githubRepos.length) {\r\n                    return this.githubRepos;\r\n                }\r\n                const res = await fetch(`https://api.github.com/users/${GITHUB_USERNAME}/repos`, {\r\n                    headers: { Accept: 'application/vnd.github.v3+json' },\r\n                });\r\n                if (!res.ok) throw new Error('GitHub repos fetch failed');\r\n                const data = await res.json();\r\n                this.githubRepos = data || [];\r\n                this.githubError = false;\r\n                this.githubErrorMessage = '';\r\n                return this.githubRepos;\r\n            } catch (e) {\r\n                console.warn('GitHub repos error:', e);\r\n                this.githubError = true;\r\n                this.githubErrorMessage = 'Repositories could not be loaded';\r\n                return [];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Fetch contents (files/folders) for a given repo and subPath\r\n         */\r\n        async fetchGithubContents(repo, subPath = '') {\r\n            try {\r\n                const key = `${repo}:${subPath}`;\r\n                if (this.githubContentCache.has(key)) {\r\n                    return this.githubContentCache.get(key);\r\n                }\r\n                const base = `https://api.github.com/repos/Marormur/${repo}/contents`;\r\n                const url = subPath ? `${base}/${this._encodeGithubPath(subPath)}` : base;\r\n                const res = await fetch(url, {\r\n                    headers: { Accept: 'application/vnd.github.v3+json' },\r\n                });\r\n                if (!res.ok) throw new Error('GitHub contents fetch failed');\r\n                const data = await res.json();\r\n                this.githubContentCache.set(key, data || []);\r\n                this.githubError = false;\r\n                this.githubErrorMessage = '';\r\n                return data;\r\n            } catch (e) {\r\n                console.warn('GitHub contents error:', e);\r\n                this.githubError = true;\r\n                this.githubErrorMessage = 'Repositories could not be loaded';\r\n                return [];\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Encode a GitHub path by encoding segments but keeping '/'\r\n         */\r\n        _encodeGithubPath(subPath) {\r\n            if (!subPath) return '';\r\n            return subPath\r\n                .split('/')\r\n                .filter(Boolean)\r\n                .map(seg => encodeURIComponent(seg))\r\n                .join('/');\r\n        }\r\n\r\n        /**\r\n         * Open image viewer modal with given src\r\n         */\r\n        openImageViewer({ src, name }) {\r\n            try {\r\n                const img = document.getElementById('image-viewer');\r\n                const info = document.getElementById('image-info');\r\n                const placeholder = document.getElementById('image-placeholder');\r\n                if (info) {\r\n                    info.textContent = name || '';\r\n                    info.classList.remove('hidden');\r\n                }\r\n                if (placeholder) placeholder.classList.add('hidden');\r\n                if (img) {\r\n                    img.src = src;\r\n                    img.classList.remove('hidden');\r\n                }\r\n                // Notify Photos App about external image if available\r\n                if (window.PhotosApp && typeof window.PhotosApp.showExternalImage === 'function') {\r\n                    window.PhotosApp.showExternalImage({ src, name });\r\n                }\r\n                if (window.API?.window?.open) {\r\n                    window.API.window.open('image-modal');\r\n                } else {\r\n                    const modal = document.getElementById('image-modal');\r\n                    if (modal) modal.classList.remove('hidden');\r\n                }\r\n            } catch (e) {\r\n                console.warn('Failed to open image viewer:', e);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * Add to recent files\r\n         */\r\n        addToRecent(name) {\r\n            const fullPath = [...this.currentPath, name].join('/');\r\n            this.recentFiles.unshift({\r\n                name,\r\n                path: fullPath,\r\n                icon: '\uD83D\uDCC4',\r\n                modified: new Date().toISOString(),\r\n            });\r\n\r\n            // Limit to 20 items\r\n            this.recentFiles = this.recentFiles.slice(0, 20);\r\n            this.updateState({ recentFiles: this.recentFiles });\r\n        }\r\n\r\n        /**\r\n         * Set sort by\r\n         */\r\n        setSortBy(field) {\r\n            if (this.sortBy === field) {\r\n                this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\r\n            } else {\r\n                this.sortBy = field;\r\n                this.sortOrder = 'asc';\r\n            }\r\n            this.renderContent();\r\n            this.updateState({ sortBy: this.sortBy, sortOrder: this.sortOrder });\r\n        }\r\n\r\n        /**\r\n         * Set view mode\r\n         */\r\n        setViewMode(mode) {\r\n            this.viewMode = mode;\r\n            this.renderContent();\r\n            this.updateState({ viewMode: this.viewMode });\r\n        }\r\n\r\n        /**\r\n         * Format size\r\n         */\r\n        formatSize(bytes) {\r\n            if (!bytes || bytes === 0) return '-';\r\n            if (bytes < 1024) return bytes + ' B';\r\n            if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';\r\n            return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\r\n        }\r\n\r\n        /**\r\n         * Format date\r\n         */\r\n        formatDate(dateStr) {\r\n            if (!dateStr) return '-';\r\n            const date = new Date(dateStr);\r\n            return date.toLocaleDateString('de-DE', {\r\n                day: '2-digit',\r\n                month: '2-digit',\r\n                year: 'numeric',\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Serialize finder state\r\n         */\r\n        serialize() {\r\n            return {\r\n                ...super.serialize(),\r\n                currentPath: this.currentPath,\r\n                currentView: this.currentView,\r\n                viewMode: this.viewMode,\r\n                sortBy: this.sortBy,\r\n                sortOrder: this.sortOrder,\r\n                favorites: Array.from(this.favorites),\r\n                recentFiles: this.recentFiles,\r\n            };\r\n        }\r\n\r\n        /**\r\n         * Restore finder from saved state\r\n         */\r\n        deserialize(data) {\r\n            super.deserialize(data);\r\n\r\n            if (data.currentPath) {\r\n                this.currentPath = data.currentPath;\r\n            }\r\n\r\n            if (data.currentView) {\r\n                this.currentView = data.currentView;\r\n            }\r\n\r\n            if (data.viewMode) {\r\n                this.viewMode = data.viewMode;\r\n            }\r\n\r\n            if (data.sortBy) {\r\n                this.sortBy = data.sortBy;\r\n            }\r\n\r\n            if (data.sortOrder) {\r\n                this.sortOrder = data.sortOrder;\r\n            }\r\n\r\n            if (data.favorites) {\r\n                this.favorites = new Set(data.favorites);\r\n            }\r\n\r\n            if (data.recentFiles) {\r\n                this.recentFiles = data.recentFiles;\r\n            }\r\n\r\n            // Re-render\r\n            this.navigateTo(this.currentPath, this.currentView);\r\n        }\r\n\r\n        /**\r\n         * Focus finder\r\n         */\r\n        focus() {\r\n            super.focus();\r\n            if (this.domRefs.searchInput) {\r\n                // Don't auto-focus search input, just bring to front\r\n            }\r\n        }\r\n    }\r\n\r\n    // Export\r\n    window.FinderInstance = FinderInstance;\r\n\r\n    // Create Finder Instance Manager\r\n    if (window.InstanceManager) {\r\n        window.FinderInstanceManager = new window.InstanceManager({\r\n            type: 'finder',\r\n            instanceClass: FinderInstance,\r\n            maxInstances: 0, // Unlimited\r\n            createContainer: function (instanceId) {\r\n                // Create container and append to finder modal container\r\n                const finderModalContainer = document.getElementById('finder-container');\r\n                if (!finderModalContainer) {\r\n                    console.error('Finder container not found');\r\n                    return null;\r\n                }\r\n\r\n                const container = document.createElement('div');\r\n                container.id = `${instanceId}-container`;\r\n                // Make this container a flex column so the rendered content's flex-1 can expand\r\n                container.className = 'finder-instance-container h-full flex flex-col min-h-0';\r\n\r\n                // Initially hidden (will be shown by integration layer)\r\n                container.classList.add('hidden');\r\n\r\n                finderModalContainer.appendChild(container);\r\n                return container;\r\n            },\r\n        });\r\n    }\r\n})();\r\n", "/**\r\n * launchpad.js\r\n * Launchpad system for displaying all available applications in a grid\r\n */\r\nconsole.log('Launchpad loaded');\r\n\r\n(function (global) {\r\n    'use strict';\r\n\r\n    // State\r\n    let container = null;\r\n    let searchInput = null;\r\n    let appsGrid = null;\r\n    let allApps = [];\r\n    let filteredApps = [];\r\n\r\n    // Local translate helper\r\n    function translate(key, fallback) {\r\n        if (!global.appI18n || typeof global.appI18n.translate !== 'function') {\r\n            return fallback || key;\r\n        }\r\n        const result = global.appI18n.translate(key);\r\n        if (result === key && fallback) return fallback;\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Initialize the Launchpad system\r\n     */\r\n    function init(containerElement) {\r\n        if (!containerElement) {\r\n            console.warn('LaunchpadSystem: No container element provided');\r\n            return;\r\n        }\r\n\r\n        // Prevent re-initialization\r\n        if (container) {\r\n            console.warn('LaunchpadSystem: Already initialized');\r\n            return;\r\n        }\r\n\r\n        container = containerElement;\r\n        render();\r\n        loadApps();\r\n    }\r\n\r\n    /**\r\n     * Render the Launchpad UI\r\n     */\r\n    function render() {\r\n        if (!container) return;\r\n\r\n        container.innerHTML = `\r\n            <div class=\"launchpad-container\">\r\n                <div class=\"launchpad-search\">\r\n                    <input\r\n                        id=\"launchpad-search-input\"\r\n                        type=\"text\"\r\n                        placeholder=\"${translate('modals.launchpad.searchPlaceholder', 'Search apps')}\"\r\n                        class=\"launchpad-search-input\"\r\n                    />\r\n                </div>\r\n                <div id=\"launchpad-apps-grid\" class=\"launchpad-apps-grid\">\r\n                    <!-- Apps will be rendered here -->\r\n                </div>\r\n            </div>\r\n        `;\r\n\r\n        // Get references\r\n        searchInput = container.querySelector('#launchpad-search-input');\r\n        appsGrid = container.querySelector('#launchpad-apps-grid');\r\n\r\n        // Attach event listeners\r\n        if (searchInput) {\r\n            searchInput.addEventListener('input', handleSearch);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Load all available applications from WindowManager\r\n     */\r\n    function loadApps() {\r\n        if (!global.WindowManager) {\r\n            console.warn('LaunchpadSystem: WindowManager not available');\r\n            return;\r\n        }\r\n\r\n        // Get all registered windows\r\n        const windowIds = global.WindowManager.getAllWindowIds();\r\n\r\n        allApps = [];\r\n\r\n        windowIds.forEach(windowId => {\r\n            const config = global.WindowManager.getConfig(windowId);\r\n            const programInfo = global.WindowManager.getProgramInfo(windowId);\r\n\r\n            // Skip transient windows like program-info-modal\r\n            if (config && config.type === 'transient') {\r\n                return;\r\n            }\r\n\r\n            // Skip the launchpad itself\r\n            if (windowId === 'launchpad-modal') {\r\n                return;\r\n            }\r\n\r\n            if (programInfo) {\r\n                allApps.push({\r\n                    id: windowId,\r\n                    name: programInfo.programLabel || translate('programs.default.label', 'App'),\r\n                    icon: programInfo.icon || './img/sucher.png',\r\n                    programKey: config ? config.programKey : null,\r\n                });\r\n            }\r\n        });\r\n\r\n        filteredApps = [...allApps];\r\n        renderApps();\r\n    }\r\n\r\n    /**\r\n     * Handle search input\r\n     */\r\n    function handleSearch(event) {\r\n        const query = event.target.value.toLowerCase().trim();\r\n\r\n        if (!query) {\r\n            filteredApps = [...allApps];\r\n        } else {\r\n            filteredApps = allApps.filter(app => app.name.toLowerCase().includes(query));\r\n        }\r\n\r\n        renderApps();\r\n    }\r\n\r\n    /**\r\n     * Render the apps grid\r\n     */\r\n    function renderApps() {\r\n        if (!appsGrid) return;\r\n\r\n        appsGrid.innerHTML = '';\r\n\r\n        if (filteredApps.length === 0) {\r\n            appsGrid.innerHTML = `\r\n                <div class=\"launchpad-empty\">\r\n                    <p>${translate('finder.empty', 'No apps found')}</p>\r\n                </div>\r\n            `;\r\n            return;\r\n        }\r\n\r\n        filteredApps.forEach(app => {\r\n            const appButton = document.createElement('button');\r\n            appButton.className = 'launchpad-app-button';\r\n            appButton.setAttribute('data-window-id', app.id);\r\n            // Use ActionBus to open the app and close Launchpad\r\n            appButton.setAttribute('data-action', 'launchpadOpenWindow');\r\n            appButton.title = app.name;\r\n\r\n            const iconContainer = document.createElement('div');\r\n            iconContainer.className = 'launchpad-app-icon';\r\n\r\n            // Render icon: image path or emoji\r\n            const isImagePath =\r\n                typeof app.icon === 'string' && /\\.(png|jpg|jpeg|gif|svg|webp)$/i.test(app.icon);\r\n            if (\r\n                isImagePath ||\r\n                (typeof app.icon === 'string' &&\r\n                    (app.icon.startsWith('./') || app.icon.startsWith('http')))\r\n            ) {\r\n                const icon = document.createElement('img');\r\n                icon.src = app.icon;\r\n                icon.alt = app.name;\r\n                icon.draggable = false;\r\n                iconContainer.appendChild(icon);\r\n            } else if (typeof app.icon === 'string' && app.icon.trim().length) {\r\n                const emoji = document.createElement('div');\r\n                emoji.className = 'launchpad-app-emoji';\r\n                emoji.textContent = app.icon;\r\n                iconContainer.appendChild(emoji);\r\n            } else {\r\n                const fallback = document.createElement('img');\r\n                fallback.src = './img/sucher.png';\r\n                fallback.alt = app.name;\r\n                fallback.draggable = false;\r\n                iconContainer.appendChild(fallback);\r\n            }\r\n\r\n            const label = document.createElement('span');\r\n            label.className = 'launchpad-app-label';\r\n            label.textContent = app.name;\r\n\r\n            appButton.appendChild(iconContainer);\r\n            appButton.appendChild(label);\r\n\r\n            // No explicit click handler; ActionBus will handle via data-action\r\n\r\n            appsGrid.appendChild(appButton);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Open an application and close Launchpad\r\n     */\r\n    function openApp(windowId) {\r\n        if (!windowId) return;\r\n\r\n        // Close Launchpad\r\n        const launchpadModal = document.getElementById('launchpad-modal');\r\n        if (launchpadModal && global.dialogs && global.dialogs['launchpad-modal']) {\r\n            global.dialogs['launchpad-modal'].close();\r\n        } else if (launchpadModal) {\r\n            launchpadModal.classList.add('hidden');\r\n        }\r\n\r\n        // Open the selected app\r\n        if (global.WindowManager && typeof global.WindowManager.open === 'function') {\r\n            global.WindowManager.open(windowId);\r\n            return;\r\n        }\r\n        const dialog = global.dialogs && global.dialogs[windowId];\r\n        if (dialog && typeof dialog.open === 'function') {\r\n            dialog.open();\r\n        } else {\r\n            const modalElement = document.getElementById(windowId);\r\n            if (modalElement) {\r\n                modalElement.classList.remove('hidden');\r\n                if (typeof global.bringDialogToFront === 'function') {\r\n                    global.bringDialogToFront(windowId);\r\n                }\r\n                if (typeof global.updateProgramLabelByTopModal === 'function') {\r\n                    global.updateProgramLabelByTopModal();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refresh apps list (call when new apps are added)\r\n     */\r\n    function refresh() {\r\n        loadApps();\r\n    }\r\n\r\n    /**\r\n     * Clear search and reset to all apps\r\n     */\r\n    function clearSearch() {\r\n        if (searchInput) {\r\n            searchInput.value = '';\r\n        }\r\n        filteredApps = [...allApps];\r\n        renderApps();\r\n    }\r\n\r\n    // Listen for language changes and refresh apps\r\n    global.addEventListener('languagePreferenceChange', () => {\r\n        if (container) {\r\n            loadApps();\r\n        }\r\n    });\r\n\r\n    // Export\r\n    // Register ActionBus action to open window and close launchpad\r\n    if (global.ActionBus && typeof global.ActionBus.register === 'function') {\r\n        global.ActionBus.register('launchpadOpenWindow', params => {\r\n            const id = params?.windowId || params?.windowid || params?.window || params?.id;\r\n            if (id) openApp(id);\r\n        });\r\n    }\r\n\r\n    global.LaunchpadSystem = {\r\n        init,\r\n        refresh,\r\n        clearSearch,\r\n        get container() {\r\n            return container;\r\n        },\r\n    };\r\n})(window);\r\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\r\n/**\r\n * Multi-Instance Modal Integration (TypeScript)\r\n * Integrates the tab system with existing modals (Terminal, TextEditor, Finder)\r\n * Wires up keyboard shortcuts and session management\r\n */\r\n\r\n(() => {\r\n    'use strict';\r\n\r\n    type Instance = { instanceId: string; show?: () => void; hide?: () => void };\r\n    type Manager = {\r\n        getAllInstances(): Instance[];\r\n        getActiveInstance(): Instance | null;\r\n        getAllInstanceIds?: () => string[];\r\n        getInstanceCount: () => number;\r\n        setActiveInstance(id: string): void;\r\n        createInstance(cfg?: { title?: string }): Instance | null;\r\n        destroyInstance(id: string): void;\r\n    };\r\n\r\n    type IntegrationRecord = {\r\n        manager: Manager;\r\n        tabManager: unknown;\r\n        modalId: string;\r\n        containerId: string;\r\n        unregisterShortcuts?: () => void;\r\n    };\r\n\r\n    class MultiInstanceIntegration {\r\n        private integrations: Map<string, IntegrationRecord> = new Map();\r\n        private isInitialized = false;\r\n\r\n        init() {\r\n            if (this.isInitialized) return;\r\n            if (document.readyState === 'loading') {\r\n                document.addEventListener('DOMContentLoaded', () => this.setup());\r\n            } else {\r\n                this.setup();\r\n            }\r\n        }\r\n\r\n        private setup() {\r\n            const W = window as unknown as Record<string, any>;\r\n            if (!W.InstanceManager || !W.WindowTabs || !W.KeyboardShortcuts) {\r\n                console.error('MultiInstanceIntegration: Required dependencies not loaded');\r\n                return;\r\n            }\r\n\r\n            if (W.TerminalInstanceManager) this.setupTerminalIntegration();\r\n            if (W.TextEditorInstanceManager) this.setupTextEditorIntegration();\r\n            if (W.FinderInstanceManager) this.setupFinderIntegration();\r\n\r\n            if (W.SessionManager) {\r\n                if (W.TerminalInstanceManager)\r\n                    W.SessionManager.registerManager('terminal', W.TerminalInstanceManager);\r\n                if (W.TextEditorInstanceManager)\r\n                    W.SessionManager.registerManager('text-editor', W.TextEditorInstanceManager);\r\n                if (W.FinderInstanceManager)\r\n                    W.SessionManager.registerManager('finder', W.FinderInstanceManager);\r\n\r\n                W.SessionManager.restoreAllSessions();\r\n\r\n                // Ensure tabs/controllers reflect restored state and show active instance\r\n                this.integrations.forEach((integration, type) => {\r\n                    const { manager, tabManager } = integration;\r\n                    // Support both legacy adapter ({controller: {refresh}}) and new controller ({refresh})\r\n                    try {\r\n                        const maybe = tabManager as any;\r\n                        const refreshFn =\r\n                            typeof maybe?.refresh === 'function'\r\n                                ? maybe.refresh.bind(maybe)\r\n                                : typeof maybe?.controller?.refresh === 'function'\r\n                                  ? maybe.controller.refresh.bind(maybe.controller)\r\n                                  : null;\r\n                        if (refreshFn) refreshFn();\r\n                    } catch {}\r\n                    const active = manager.getActiveInstance();\r\n                    if (active) this.showInstance(type, active.instanceId);\r\n                });\r\n\r\n                W.SessionManager.startAutoSave();\r\n            }\r\n\r\n            // Scope keyboard shortcuts by top window\r\n            if (\r\n                W.KeyboardShortcuts &&\r\n                typeof W.KeyboardShortcuts.setContextResolver === 'function'\r\n            ) {\r\n                W.KeyboardShortcuts.setContextResolver(() => {\r\n                    try {\r\n                        const wm = W.WindowManager;\r\n                        const top =\r\n                            wm && typeof wm.getTopWindow === 'function' ? wm.getTopWindow() : null;\r\n                        const topId = top?.id || '';\r\n                        let match = 'global';\r\n                        this.integrations.forEach((val, key) => {\r\n                            if (val && val.modalId === topId) match = key;\r\n                        });\r\n                        return match;\r\n                    } catch {\r\n                        return 'global';\r\n                    }\r\n                });\r\n            }\r\n\r\n            this.isInitialized = true;\r\n        }\r\n\r\n        private setupTerminalIntegration() {\r\n            const W = window as unknown as Record<string, any>;\r\n            const manager = W.TerminalInstanceManager as Manager;\r\n            // Hook active switch to also update visibility\r\n            const origSetActive = manager.setActiveInstance.bind(manager);\r\n            manager.setActiveInstance = (id: string) => {\r\n                origSetActive(id);\r\n                this.showInstance('terminal', id);\r\n            };\r\n            // Hook destroy to ensure visibility and state stay consistent\r\n            const origDestroy = manager.destroyInstance.bind(manager);\r\n            manager.destroyInstance = (id: string) => {\r\n                origDestroy(id);\r\n                const remaining = manager.getAllInstances().length;\r\n                if (remaining > 0) {\r\n                    const active = manager.getActiveInstance();\r\n                    if (active) this.showInstance('terminal', active.instanceId);\r\n                }\r\n            };\r\n\r\n            const mount = document.getElementById('terminal-tabs-container');\r\n            if (!mount) return;\r\n            const controller = W.WindowTabs.create(manager, mount, {\r\n                addButton: true,\r\n                onCreateInstanceTitle: () =>\r\n                    `Terminal ${(manager.getInstanceCount?.() || manager.getAllInstances().length) + 1}`,\r\n            });\r\n\r\n            this.integrations.set('terminal', {\r\n                manager,\r\n                tabManager: controller,\r\n                modalId: 'terminal-modal',\r\n                containerId: 'terminal-container',\r\n            });\r\n\r\n            this.registerShortcutsForType('terminal', manager);\r\n            // Ensure the current active instance is visible in the UI\r\n            this.updateInstanceVisibility('terminal');\r\n            // Ensure visibility after future instance creations\r\n            this.setupInstanceListeners('terminal');\r\n        }\r\n\r\n        private setupTextEditorIntegration() {\r\n            const W = window as unknown as Record<string, any>;\r\n            const manager = W.TextEditorInstanceManager as Manager;\r\n            const origSetActive = manager.setActiveInstance.bind(manager);\r\n            manager.setActiveInstance = (id: string) => {\r\n                origSetActive(id);\r\n                this.showInstance('text-editor', id);\r\n            };\r\n            const origDestroy = manager.destroyInstance.bind(manager);\r\n            manager.destroyInstance = (id: string) => {\r\n                origDestroy(id);\r\n                const remaining = manager.getAllInstances().length;\r\n                if (remaining > 0) {\r\n                    const active = manager.getActiveInstance();\r\n                    if (active) this.showInstance('text-editor', active.instanceId);\r\n                }\r\n            };\r\n\r\n            const mount = document.getElementById('text-editor-tabs-container');\r\n            if (!mount) return;\r\n            const controller = W.WindowTabs.create(manager, mount, {\r\n                addButton: true,\r\n                onCreateInstanceTitle: () =>\r\n                    `Editor ${(manager.getInstanceCount?.() || manager.getAllInstances().length) + 1}`,\r\n            });\r\n\r\n            this.integrations.set('text-editor', {\r\n                manager,\r\n                tabManager: controller,\r\n                modalId: 'text-modal',\r\n                containerId: 'text-editor-container',\r\n            });\r\n\r\n            this.registerShortcutsForType('text-editor', manager);\r\n            this.updateInstanceVisibility('text-editor');\r\n            this.setupInstanceListeners('text-editor');\r\n        }\r\n\r\n        private setupFinderIntegration() {\r\n            const W = window as unknown as Record<string, any>;\r\n            const manager = W.FinderInstanceManager as Manager;\r\n            const origSetActive = manager.setActiveInstance.bind(manager);\r\n            manager.setActiveInstance = (id: string) => {\r\n                origSetActive(id);\r\n                this.showInstance('finder', id);\r\n            };\r\n            const origDestroy = manager.destroyInstance.bind(manager);\r\n            manager.destroyInstance = (id: string) => {\r\n                origDestroy(id);\r\n                const remaining = manager.getAllInstances().length;\r\n                if (remaining === 0) {\r\n                    try {\r\n                        const API = (window as any).API;\r\n                        if (API?.window?.close) API.window.close('finder-modal');\r\n                        else document.getElementById('finder-modal')?.classList.add('hidden');\r\n                    } catch {}\r\n                } else {\r\n                    const active = manager.getActiveInstance();\r\n                    if (active) this.showInstance('finder', active.instanceId);\r\n                }\r\n            };\r\n\r\n            const mount = document.getElementById('finder-tabs-container');\r\n            if (!mount) return;\r\n            const controller = W.WindowTabs.create(manager, mount, {\r\n                addButton: true,\r\n                onCreateInstanceTitle: () =>\r\n                    `Finder ${(manager.getInstanceCount?.() || manager.getAllInstances().length) + 1}`,\r\n            });\r\n\r\n            this.integrations.set('finder', {\r\n                manager,\r\n                tabManager: controller,\r\n                modalId: 'finder-modal',\r\n                containerId: 'finder-container',\r\n            });\r\n\r\n            this.registerShortcutsForType('finder', manager);\r\n            this.updateInstanceVisibility('finder');\r\n            this.setupInstanceListeners('finder');\r\n        }\r\n\r\n        private setupInstanceListeners(type: string) {\r\n            const integration = this.integrations.get(type);\r\n            if (!integration) return;\r\n            const { manager } = integration;\r\n\r\n            const originalCreate = manager.createInstance.bind(manager);\r\n            manager.createInstance = (config?: { title?: string }) => {\r\n                const instance = originalCreate(config);\r\n                // After create, prefer showing the active; otherwise show the created one\r\n                const active = manager.getActiveInstance();\r\n                if (active) {\r\n                    this.showInstance(type, active.instanceId);\r\n                } else if (instance) {\r\n                    this.showInstance(type, instance.instanceId);\r\n                }\r\n                return instance;\r\n            };\r\n        }\r\n\r\n        showInstance(type: string, instanceId: string) {\r\n            const integration = this.integrations.get(type);\r\n            if (!integration) return;\r\n            const instances = integration.manager.getAllInstances();\r\n            instances.forEach(inst => {\r\n                if (inst.instanceId === instanceId) inst.show?.();\r\n                else inst.hide?.();\r\n            });\r\n        }\r\n\r\n        updateInstanceVisibility(type: string) {\r\n            const integration = this.integrations.get(type);\r\n            if (!integration) return;\r\n            const active = integration.manager.getActiveInstance();\r\n            if (active) {\r\n                this.showInstance(type, active.instanceId);\r\n            } else {\r\n                const all = integration.manager.getAllInstances();\r\n                if (all.length > 0) {\r\n                    const firstId = all[0]?.instanceId;\r\n                    if (firstId) {\r\n                        // Ensure a consistent active selection\r\n                        integration.manager.setActiveInstance(firstId);\r\n                        this.showInstance(type, firstId);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        private registerShortcutsForType(type: string, manager: Manager) {\r\n            const W = window as unknown as Record<string, any>;\r\n            const modalId = this.integrations.get(type)?.modalId;\r\n            const modalEl = modalId ? document.getElementById(modalId) : null;\r\n            if (!modalEl) {\r\n                console.error(`Cannot register shortcuts for ${type}: modal ${modalId} not found`);\r\n                return;\r\n            }\r\n            const unregister = W.KeyboardShortcuts.register(manager, {\r\n                scope: document,\r\n                newTitleFactory: () => `${type} ${manager.getInstanceCount() + 1}`,\r\n            });\r\n            const rec = this.integrations.get(type);\r\n            if (rec) rec.unregisterShortcuts = unregister;\r\n        }\r\n    }\r\n\r\n    // Create and expose singleton (retain both names for compatibility)\r\n    const integration = new MultiInstanceIntegration();\r\n    (window as any).MultiInstanceIntegration = integration;\r\n    (window as any).multiInstanceIntegration = integration;\r\n    integration.init();\r\n})();\r\n\r\n", "/*\r\n LEGACY JS: This file is part of the repository's legacy JavaScript sources.\r\n Maintained in-place. Prefer editing corresponding TypeScript sources in src/ts when available.\r\n Last edited (lint-maintenance): 2025-10-27\r\n*/\r\n// Desktop icons and selection logic\r\n// Exports: window.DesktopSystem\r\n(function (global) {\r\n    'use strict';\r\n\r\n    // Local translate helper (doesn't depend on app.js)\r\n    function translate(key, fallback) {\r\n        if (!global.appI18n || typeof global.appI18n.translate !== 'function') {\r\n            return fallback || key;\r\n        }\r\n        const result = global.appI18n.translate(key);\r\n        if (result === key && fallback) return fallback;\r\n        return result;\r\n    }\r\n\r\n    const DESKTOP_ITEMS = [\r\n        // { id: 'about', modalId: 'about-modal', icon: './img/profil.jpg', labelKey: 'desktop.about', fallbackLabel: '\u00DCber Marvin' },\r\n        // Shortcut: Photos App\r\n        {\r\n            id: 'photos',\r\n            modalId: 'image-modal',\r\n            icon: './img/photos-app-icon.svg',\r\n            labelKey: 'desktop.photos',\r\n            fallbackLabel: 'Fotos',\r\n        },\r\n        // Shortcut: GitHub \"Ordner\" \u00F6ffnet den Finder direkt in der GitHub-Ansicht\r\n        {\r\n            id: 'github',\r\n            // Verwende Emoji-Icon f\u00FCr den Ordner, bis ein spezielles Icon vorhanden ist\r\n            emoji: '\uD83D\uDCC2',\r\n            labelKey: 'desktop.github',\r\n            fallbackLabel: 'GitHub Projekte',\r\n            onOpen: () => {\r\n                // \u00D6ffne Finder-Modal (neues Fenster-System)\r\n                if (window.API?.window?.open) {\r\n                    window.API.window.open('finder-modal');\r\n                } else {\r\n                    const modal = document.getElementById('finder-modal');\r\n                    if (modal) modal.classList.remove('hidden');\r\n                }\r\n\r\n                // Multi-Instance bevorzugt\r\n                if (window.FinderInstanceManager) {\r\n                    // Stelle sicher, dass mindestens eine Instanz existiert\r\n                    if (!window.FinderInstanceManager.hasInstances()) {\r\n                        window.FinderInstanceManager.createInstance({ title: 'Finder' });\r\n                    }\r\n                    const active =\r\n                        window.FinderInstanceManager.getActiveInstance() ||\r\n                        window.FinderInstanceManager.getAllInstances()[0];\r\n                    if (active && typeof active.switchView === 'function') {\r\n                        active.switchView('github');\r\n                        // Bringe die Instanz in den Vordergrund\r\n                        window.FinderInstanceManager.setActiveInstance(active.instanceId);\r\n                        if (window.MultiInstanceIntegration?.showInstance) {\r\n                            window.MultiInstanceIntegration.showInstance(\r\n                                'finder',\r\n                                active.instanceId\r\n                            );\r\n                        } else if (typeof active.show === 'function') {\r\n                            active.show();\r\n                        }\r\n                    }\r\n                    return true;\r\n                }\r\n\r\n                // Fallback auf Legacy FinderSystem\r\n                if (window.FinderSystem && typeof window.FinderSystem.navigateTo === 'function') {\r\n                    window.FinderSystem.navigateTo([], 'github');\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            },\r\n        },\r\n    ];\r\n\r\n    const desktopItemsById = new Map();\r\n    const desktopButtons = new Map();\r\n    let desktopSelectedItemId = null;\r\n    const desktopSelectedIds = new Set();\r\n    let desktopLastFocusedIndex = -1;\r\n    let desktopSuppressBackgroundClick = false;\r\n\r\n    function updateDesktopSelectionUI() {\r\n        if (desktopLastFocusedIndex >= 0 && DESKTOP_ITEMS[desktopLastFocusedIndex]) {\r\n            desktopSelectedItemId = DESKTOP_ITEMS[desktopLastFocusedIndex].id;\r\n        } else {\r\n            desktopSelectedItemId =\r\n                desktopSelectedIds.size === 1 ? Array.from(desktopSelectedIds)[0] : null;\r\n        }\r\n        desktopButtons.forEach((btn, id) => {\r\n            if (desktopSelectedIds.has(id)) {\r\n                btn.dataset.selected = 'true';\r\n                btn.setAttribute('aria-selected', 'true');\r\n            } else {\r\n                btn.removeAttribute('data-selected');\r\n                btn.setAttribute('aria-selected', 'false');\r\n            }\r\n        });\r\n    }\r\n\r\n    function getDesktopAreaElement() {\r\n        return document.getElementById('desktop');\r\n    }\r\n    function getDesktopContainerElement() {\r\n        return document.getElementById('desktop-icons');\r\n    }\r\n\r\n    function createDesktopButton(item, index) {\r\n        const button = document.createElement('button');\r\n        button.type = 'button';\r\n        button.className = 'desktop-icon-button no-select';\r\n        button.dataset.desktopItemId = item.id;\r\n        button.dataset.desktopIndex = String(index);\r\n        // Use ActionBus for double-click to open; keep single-tap logic locally for touch/pen\r\n        button.setAttribute('data-action-dblclick', 'openDesktopItem');\r\n        button.setAttribute('data-item-id', item.id);\r\n        button.setAttribute('role', 'option');\r\n        button.setAttribute('aria-selected', 'false');\r\n        button.setAttribute('data-i18n-title', item.labelKey);\r\n        button.setAttribute('data-i18n-aria-label', item.labelKey);\r\n        const labelText = translate(item.labelKey, item.fallbackLabel);\r\n        button.title = labelText;\r\n        button.setAttribute('aria-label', labelText);\r\n        button.draggable = false;\r\n\r\n        const graphic = document.createElement('span');\r\n        graphic.className = 'desktop-icon-graphic';\r\n        if (item.icon) {\r\n            const img = document.createElement('img');\r\n            img.src = item.icon;\r\n            img.alt = '';\r\n            img.decoding = 'async';\r\n            img.referrerPolicy = 'no-referrer';\r\n            img.draggable = false;\r\n            graphic.appendChild(img);\r\n        } else if (item.emoji) {\r\n            graphic.textContent = item.emoji;\r\n        }\r\n        button.appendChild(graphic);\r\n\r\n        const label = document.createElement('span');\r\n        label.className = 'desktop-icon-label no-select';\r\n        label.textContent = labelText;\r\n        label.setAttribute('data-i18n', item.labelKey);\r\n        button.appendChild(label);\r\n\r\n        button.addEventListener('pointerdown', event => {\r\n            if (!event) return;\r\n            if (event.pointerType) {\r\n                button.dataset.activePointerType = event.pointerType;\r\n            } else {\r\n                delete button.dataset.activePointerType;\r\n            }\r\n        });\r\n        button.addEventListener(\r\n            'touchstart',\r\n            () => {\r\n                button.dataset.activePointerType = 'touch';\r\n            },\r\n            { passive: true }\r\n        );\r\n        button.addEventListener('mousedown', () => {\r\n            button.dataset.activePointerType = 'mouse';\r\n        });\r\n\r\n        button.addEventListener('click', event => {\r\n            event.preventDefault();\r\n            const index = Number(button.dataset.desktopIndex || 0);\r\n            const isMeta = event.ctrlKey || event.metaKey;\r\n            const isShift = event.shiftKey;\r\n\r\n            if (isShift && desktopLastFocusedIndex >= 0) {\r\n                const start = Math.min(desktopLastFocusedIndex, index);\r\n                const end = Math.max(desktopLastFocusedIndex, index);\r\n                for (let i = start; i <= end; i++) {\r\n                    const id = (DESKTOP_ITEMS[i] && DESKTOP_ITEMS[i].id) || null;\r\n                    if (id) desktopSelectedIds.add(id);\r\n                }\r\n                desktopLastFocusedIndex = index;\r\n                updateDesktopSelectionUI();\r\n            } else if (isMeta) {\r\n                if (desktopSelectedIds.has(item.id)) desktopSelectedIds.delete(item.id);\r\n                else desktopSelectedIds.add(item.id);\r\n                desktopLastFocusedIndex = index;\r\n                updateDesktopSelectionUI();\r\n            } else {\r\n                desktopSelectedIds.clear();\r\n                desktopSelectedIds.add(item.id);\r\n                desktopLastFocusedIndex = index;\r\n                updateDesktopSelectionUI();\r\n            }\r\n\r\n            const pointerType = button.dataset.activePointerType || '';\r\n            const shouldOpenOnSingleTap = pointerType === 'touch' || pointerType === 'pen';\r\n            // Double-click open is handled by ActionBus via data-action-dblclick\r\n            if (shouldOpenOnSingleTap) {\r\n                openDesktopItemById(item.id);\r\n            }\r\n            delete button.dataset.activePointerType;\r\n        });\r\n\r\n        button.addEventListener('keydown', handleDesktopKeydown);\r\n        button.addEventListener('focus', () => {\r\n            selectDesktopItem(item.id, { focus: false });\r\n        });\r\n\r\n        return button;\r\n    }\r\n\r\n    function renderDesktopIcons() {\r\n        const container = getDesktopContainerElement();\r\n        if (!container) return;\r\n        container.innerHTML = '';\r\n        desktopItemsById.clear();\r\n        desktopButtons.clear();\r\n        DESKTOP_ITEMS.forEach((item, index) => {\r\n            desktopItemsById.set(item.id, item);\r\n            const button = createDesktopButton(item, index);\r\n            desktopButtons.set(item.id, button);\r\n            container.appendChild(button);\r\n        });\r\n        if (global.appI18n && typeof global.appI18n.applyTranslations === 'function') {\r\n            global.appI18n.applyTranslations(container);\r\n        }\r\n    }\r\n\r\n    function selectDesktopItem(itemId, options = {}) {\r\n        const { focus = true } = options;\r\n        if (desktopSelectedItemId && desktopSelectedItemId === itemId) {\r\n            if (focus && desktopButtons.has(itemId)) {\r\n                const btn = desktopButtons.get(itemId);\r\n                if (typeof btn.focus === 'function') {\r\n                    try {\r\n                        btn.focus({ preventScroll: true });\r\n                    } catch {\r\n                        btn.focus();\r\n                    }\r\n                }\r\n            }\r\n            return;\r\n        }\r\n        if (desktopSelectedItemId && desktopButtons.has(desktopSelectedItemId)) {\r\n            const previousButton = desktopButtons.get(desktopSelectedItemId);\r\n            previousButton.removeAttribute('data-selected');\r\n            previousButton.setAttribute('aria-selected', 'false');\r\n        }\r\n        desktopSelectedIds.clear();\r\n        if (itemId) desktopSelectedIds.add(itemId);\r\n        desktopLastFocusedIndex = DESKTOP_ITEMS.findIndex(entry => entry.id === itemId);\r\n        updateDesktopSelectionUI();\r\n        if (focus && itemId && desktopButtons.has(itemId)) {\r\n            const nextButton = desktopButtons.get(itemId);\r\n            if (typeof nextButton.focus === 'function') {\r\n                try {\r\n                    nextButton.focus({ preventScroll: true });\r\n                } catch {\r\n                    nextButton.focus();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function clearDesktopSelection(options = {}) {\r\n        const { blur = false } = options;\r\n        const hadSelection = desktopSelectedIds.size > 0 || desktopSelectedItemId !== null;\r\n        desktopSelectedIds.clear();\r\n        desktopLastFocusedIndex = -1;\r\n        desktopSelectedItemId = null;\r\n        desktopButtons.forEach(btn => {\r\n            btn.removeAttribute('data-selected');\r\n            btn.setAttribute('aria-selected', 'false');\r\n        });\r\n        if (!hadSelection) return;\r\n        if (blur) {\r\n            const prev = document.querySelector('.desktop-icon-button[aria-selected=\"true\"]');\r\n            if (prev && typeof prev.blur === 'function') prev.blur();\r\n        }\r\n    }\r\n\r\n    function focusDesktopItemByIndex(index) {\r\n        if (!Array.isArray(DESKTOP_ITEMS) || DESKTOP_ITEMS.length === 0) return;\r\n        if (index < 0) index = 0;\r\n        if (index >= DESKTOP_ITEMS.length) index = DESKTOP_ITEMS.length - 1;\r\n        const item = DESKTOP_ITEMS[index];\r\n        if (!item) return;\r\n        selectDesktopItem(item.id, { focus: true });\r\n    }\r\n\r\n    function moveDesktopSelection(offset) {\r\n        if (!offset) return;\r\n        if (!Array.isArray(DESKTOP_ITEMS) || DESKTOP_ITEMS.length === 0) return;\r\n        const currentIndex = desktopSelectedItemId\r\n            ? DESKTOP_ITEMS.findIndex(entry => entry.id === desktopSelectedItemId)\r\n            : -1;\r\n        let targetIndex;\r\n        if (currentIndex === -1) {\r\n            targetIndex = offset > 0 ? 0 : DESKTOP_ITEMS.length - 1;\r\n        } else {\r\n            targetIndex = currentIndex + offset;\r\n            if (targetIndex < 0) targetIndex = 0;\r\n            if (targetIndex >= DESKTOP_ITEMS.length) targetIndex = DESKTOP_ITEMS.length - 1;\r\n        }\r\n        focusDesktopItemByIndex(targetIndex);\r\n    }\r\n\r\n    function openDesktopItem(item) {\r\n        if (!item) return false;\r\n        if (typeof item.onOpen === 'function') return !!item.onOpen(item);\r\n        if (item.modalId) {\r\n            const dialog = global.dialogs && global.dialogs[item.modalId];\r\n            if (dialog && typeof dialog.open === 'function') {\r\n                dialog.open();\r\n                return true;\r\n            }\r\n            const modalElement = document.getElementById(item.modalId);\r\n            if (modalElement) {\r\n                modalElement.classList.remove('hidden');\r\n                if (typeof global.bringDialogToFront === 'function') {\r\n                    global.bringDialogToFront(item.modalId);\r\n                }\r\n                if (typeof global.updateProgramLabelByTopModal === 'function') {\r\n                    global.updateProgramLabelByTopModal();\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        if (item.href) {\r\n            const target = item.target || '_blank';\r\n            global.open(item.href, target, 'noopener');\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    function openDesktopItemById(itemId) {\r\n        if (!itemId) return false;\r\n        const item = desktopItemsById.get(itemId);\r\n        if (!item) return false;\r\n        selectDesktopItem(itemId, { focus: true });\r\n        return openDesktopItem(item);\r\n    }\r\n\r\n    function handleDesktopKeydown(event) {\r\n        const { key } = event;\r\n        const target = event.currentTarget;\r\n        if (!target || !target.dataset) return;\r\n        const itemId = target.dataset.desktopItemId;\r\n        if (!itemId) return;\r\n        switch (key) {\r\n            case 'Enter':\r\n            case ' ':\r\n                event.preventDefault();\r\n                openDesktopItemById(itemId);\r\n                return;\r\n            case 'ArrowDown':\r\n            case 'ArrowRight':\r\n                event.preventDefault();\r\n                moveDesktopSelection(1);\r\n                return;\r\n            case 'ArrowUp':\r\n            case 'ArrowLeft':\r\n                event.preventDefault();\r\n                moveDesktopSelection(-1);\r\n                return;\r\n            case 'Home':\r\n                event.preventDefault();\r\n                focusDesktopItemByIndex(0);\r\n                return;\r\n            case 'End':\r\n                event.preventDefault();\r\n                focusDesktopItemByIndex(DESKTOP_ITEMS.length - 1);\r\n                return;\r\n            case 'Escape':\r\n                event.preventDefault();\r\n                clearDesktopSelection({ blur: true });\r\n                return;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleDesktopBackgroundPointer(event) {\r\n        if (event && typeof event.button === 'number' && event.button !== 0) return;\r\n        if (desktopSuppressBackgroundClick) return;\r\n        if (event && event.target && event.target.closest('.desktop-icon-button')) return;\r\n        clearDesktopSelection({ blur: true });\r\n    }\r\n\r\n    function initDesktop() {\r\n        renderDesktopIcons();\r\n        const desktopArea = getDesktopAreaElement();\r\n        if (desktopArea) {\r\n            desktopArea.addEventListener('click', handleDesktopBackgroundPointer);\r\n            desktopArea.addEventListener('touchstart', handleDesktopBackgroundPointer, {\r\n                passive: true,\r\n            });\r\n\r\n            let rubber = null;\r\n            let rubberStart = null;\r\n            const onPointerMove = e => {\r\n                if (!rubber || !rubberStart) return;\r\n                const x1 = Math.min(rubberStart.x, e.clientX);\r\n                const y1 = Math.min(rubberStart.y, e.clientY);\r\n                const x2 = Math.max(rubberStart.x, e.clientX);\r\n                const y2 = Math.max(rubberStart.y, e.clientY);\r\n                rubber.style.left = x1 + 'px';\r\n                rubber.style.top = y1 + 'px';\r\n                rubber.style.width = x2 - x1 + 'px';\r\n                rubber.style.height = y2 - y1 + 'px';\r\n                desktopButtons.forEach(btn => {\r\n                    const rect = btn.getBoundingClientRect();\r\n                    const intersects = !(\r\n                        rect.right < x1 ||\r\n                        rect.left > x2 ||\r\n                        rect.bottom < y1 ||\r\n                        rect.top > y2\r\n                    );\r\n                    if (intersects) btn.classList.add('rubber-selected');\r\n                    else btn.classList.remove('rubber-selected');\r\n                });\r\n            };\r\n\r\n            const onPointerUp = e => {\r\n                if (!rubber || !rubberStart) return;\r\n                const selected = [];\r\n                desktopButtons.forEach((btn, id) => {\r\n                    if (btn.classList.contains('rubber-selected')) {\r\n                        selected.push(id);\r\n                        btn.classList.remove('rubber-selected');\r\n                    }\r\n                });\r\n                if (e.ctrlKey || e.metaKey) {\r\n                    selected.forEach(id => {\r\n                        if (desktopSelectedIds.has(id)) desktopSelectedIds.delete(id);\r\n                        else desktopSelectedIds.add(id);\r\n                    });\r\n                } else {\r\n                    desktopSelectedIds.clear();\r\n                    selected.forEach(id => desktopSelectedIds.add(id));\r\n                }\r\n                if (selected.length > 0) {\r\n                    const lastId = selected[selected.length - 1];\r\n                    desktopLastFocusedIndex = DESKTOP_ITEMS.findIndex(entry => entry.id === lastId);\r\n                }\r\n                updateDesktopSelectionUI();\r\n                cleanupRubber();\r\n            };\r\n\r\n            const onPointerCancel = () => cleanupRubber();\r\n            const onWindowBlur = () => cleanupRubber();\r\n            const onVisibilityChange = () => {\r\n                if (document.visibilityState !== 'visible') cleanupRubber();\r\n            };\r\n\r\n            const cleanupRubber = () => {\r\n                if (!rubber) return;\r\n                desktopButtons.forEach(btn => btn.classList.remove('rubber-selected'));\r\n                try {\r\n                    rubber.remove();\r\n                } catch {\r\n                    /* ignore */\r\n                }\r\n                rubber = null;\r\n                rubberStart = null;\r\n                window.removeEventListener('pointermove', onPointerMove);\r\n                window.removeEventListener('pointerup', onPointerUp);\r\n                window.removeEventListener('pointercancel', onPointerCancel);\r\n                window.removeEventListener('blur', onWindowBlur);\r\n                document.removeEventListener('visibilitychange', onVisibilityChange);\r\n                desktopSuppressBackgroundClick = true;\r\n                setTimeout(() => {\r\n                    desktopSuppressBackgroundClick = false;\r\n                }, 120);\r\n            };\r\n\r\n            desktopArea.addEventListener('pointerdown', e => {\r\n                if (e.button !== 0) return;\r\n                if (e.target && e.target.closest && e.target.closest('.desktop-icon-button'))\r\n                    return;\r\n                rubberStart = { x: e.clientX, y: e.clientY };\r\n                rubber = document.createElement('div');\r\n                rubber.className = 'desktop-rubberband';\r\n                Object.assign(rubber.style, {\r\n                    position: 'fixed',\r\n                    left: rubberStart.x + 'px',\r\n                    top: rubberStart.y + 'px',\r\n                    width: '0px',\r\n                    height: '0px',\r\n                    zIndex: 99999,\r\n                    border: '1px dashed rgba(255,255,255,0.6)',\r\n                    background: 'rgba(59,130,246,0.12)',\r\n                    pointerEvents: 'none',\r\n                });\r\n                document.body.appendChild(rubber);\r\n                desktopSuppressBackgroundClick = true;\r\n                window.addEventListener('pointermove', onPointerMove);\r\n                window.addEventListener('pointerup', onPointerUp);\r\n                window.addEventListener('pointercancel', onPointerCancel);\r\n                window.addEventListener('blur', onWindowBlur);\r\n                document.addEventListener('visibilitychange', onVisibilityChange);\r\n            });\r\n        }\r\n    }\r\n\r\n    global.DesktopSystem = {\r\n        initDesktop,\r\n        renderDesktopIcons,\r\n        selectDesktopItem,\r\n        moveDesktopSelection,\r\n        openDesktopItemById,\r\n        clearDesktopSelection,\r\n    };\r\n})(window);\r\n", "// ============================================================================\r\n// js/system.js \u2014 System Status UI Module\r\n// ============================================================================\r\n// Manages:\r\n// - WiFi, Bluetooth, Focus, Dark Mode, Battery status\r\n// - Volume, Brightness sliders\r\n// - Audio device selection\r\n// - Network and Bluetooth device selection\r\n// - Icon updates and UI state synchronization\r\n//\r\n// Exports window.SystemUI with API:\r\n// - initSystemStatusControls()\r\n// - updateAllSystemStatusUI()\r\n// - handleSystemToggle(toggleKey)\r\n// - handleSystemAction(actionKey)\r\n// - handleSystemSliderInput(type, value)\r\n// - setConnectedNetwork(network, options)\r\n// - setBluetoothDevice(deviceName, options)\r\n// - setAudioDevice(deviceKey, options)\r\n// - getSystemStatus() \u2014 returns current state object\r\n// ============================================================================\r\n\r\n(function () {\r\n    'use strict';\r\n\r\n    console.log('\u2705 SystemUI loaded');\r\n\r\n    // ===== Module Dependencies =====\r\n    const appI18n = window.appI18n || {\r\n        translate: key => key,\r\n        applyTranslations: () => {},\r\n        getActiveLanguage: () => 'en',\r\n    };\r\n\r\n    const IconSystem = window.IconSystem || {};\r\n    const SYSTEM_ICONS = IconSystem.SYSTEM_ICONS || {};\r\n    const ensureSvgNamespace = IconSystem.ensureSvgNamespace || (svg => svg);\r\n    const renderIconIntoElement = IconSystem.renderIconIntoElement || (() => {});\r\n\r\n    const ThemeSystem = window.ThemeSystem || {};\r\n    const setThemePreference = ThemeSystem.setThemePreference || (() => {});\r\n\r\n    // Helper to hide all menu dropdowns (expected to be in app.js or global)\r\n    const hideMenuDropdowns =\r\n        window.hideMenuDropdowns ||\r\n        (() => {\r\n            document.querySelectorAll('.menu-dropdown').forEach(dropdown => {\r\n                if (!dropdown.classList.contains('hidden')) {\r\n                    dropdown.classList.add('hidden');\r\n                }\r\n            });\r\n            document.querySelectorAll('[data-menubar-trigger-button=\"true\"]').forEach(button => {\r\n                button.setAttribute('aria-expanded', 'false');\r\n            });\r\n            document.querySelectorAll('[data-system-menu-trigger]').forEach(button => {\r\n                button.setAttribute('aria-expanded', 'false');\r\n            });\r\n        });\r\n\r\n    // ===== System State =====\r\n    const systemStatus = {\r\n        wifi: true,\r\n        bluetooth: true,\r\n        focus: false,\r\n        darkMode: document.documentElement.classList.contains('dark'),\r\n        brightness: 80,\r\n        volume: 65,\r\n        audioDevice: 'speakers',\r\n        network: 'HomeLAN',\r\n        battery: 100,\r\n        connectedBluetoothDevice: 'AirPods',\r\n    };\r\n\r\n    // ===== UI Helper Functions =====\r\n\r\n    function applySystemIcon(iconToken, iconKey) {\r\n        const svg = SYSTEM_ICONS[iconKey];\r\n        const markup = svg ? ensureSvgNamespace(svg) : '';\r\n        document.querySelectorAll(`[data-icon=\"${iconToken}\"]`).forEach(el => {\r\n            renderIconIntoElement(el, markup, iconToken);\r\n        });\r\n    }\r\n\r\n    /*\r\n     LEGACY JS: System UI helpers maintained in JS. If a TypeScript source exists, prefer edits there.\r\n     Last edited (lint-maintenance): 2025-10-27\r\n    */\r\n    function updateSystemStateText(stateKey, text) {\r\n        document.querySelectorAll(`[data-state=\"${stateKey}\"]`).forEach(el => {\r\n            el.textContent = text !== null && text !== undefined ? String(text) : '';\r\n        });\r\n    }\r\n\r\n    function updateSystemToggleState(toggleKey, active) {\r\n        const toggle = document.querySelector(`[data-system-toggle=\"${toggleKey}\"]`);\r\n        if (toggle) {\r\n            toggle.classList.toggle('is-active', !!active);\r\n            toggle.setAttribute('aria-pressed', active ? 'true' : 'false');\r\n        }\r\n    }\r\n\r\n    function updateSystemMenuCheckbox(actionKey, checked) {\r\n        const checkbox = document.querySelector(`[data-system-action=\"${actionKey}\"]`);\r\n        if (checkbox) {\r\n            checkbox.setAttribute('aria-pressed', checked ? 'true' : 'false');\r\n            checkbox.classList.toggle('is-active', !!checked);\r\n        }\r\n    }\r\n\r\n    function updateSystemSliderValue(type, value) {\r\n        document.querySelectorAll(`[data-system-slider=\"${type}\"]`).forEach(slider => {\r\n            if (Number(slider.value) !== value) {\r\n                slider.value = value;\r\n            }\r\n        });\r\n        document.querySelectorAll(`[data-state=\"${type}\"]`).forEach(label => {\r\n            label.textContent = `${value}%`;\r\n        });\r\n    }\r\n\r\n    // ===== Status Update Functions =====\r\n\r\n    function updateWifiUI() {\r\n        const iconKey = systemStatus.wifi ? 'wifiOn' : 'wifiOff';\r\n        applySystemIcon('wifi', iconKey);\r\n        updateSystemStateText(\r\n            'wifi',\r\n            appI18n.translate(systemStatus.wifi ? 'menubar.state.on' : 'menubar.state.off')\r\n        );\r\n        updateSystemToggleState('wifi', systemStatus.wifi);\r\n        updateSystemMenuCheckbox('toggle-wifi', systemStatus.wifi);\r\n        document.querySelectorAll('#wifi-menu [data-network]').forEach(btn => {\r\n            const disabled = !systemStatus.wifi;\r\n            if (disabled) {\r\n                btn.setAttribute('aria-disabled', 'true');\r\n            } else {\r\n                btn.removeAttribute('aria-disabled');\r\n            }\r\n        });\r\n        setConnectedNetwork(systemStatus.network, { silent: true });\r\n    }\r\n\r\n    function updateBluetoothUI() {\r\n        const iconKey = systemStatus.bluetooth ? 'bluetoothOn' : 'bluetoothOff';\r\n        applySystemIcon('bluetooth', iconKey);\r\n        updateSystemStateText(\r\n            'bluetooth',\r\n            appI18n.translate(systemStatus.bluetooth ? 'menubar.state.on' : 'menubar.state.off')\r\n        );\r\n        updateSystemToggleState('bluetooth', systemStatus.bluetooth);\r\n        updateSystemMenuCheckbox('toggle-bluetooth', systemStatus.bluetooth);\r\n        const devices = document.querySelectorAll('#bluetooth-menu [data-device]');\r\n        devices.forEach(btn => {\r\n            const indicator = btn.querySelector('.system-network-indicator');\r\n            if (indicator && !indicator.dataset.default) {\r\n                indicator.dataset.default = indicator.textContent || '';\r\n            }\r\n            const disabled = !systemStatus.bluetooth;\r\n            if (disabled) {\r\n                btn.setAttribute('aria-disabled', 'true');\r\n            } else {\r\n                btn.removeAttribute('aria-disabled');\r\n            }\r\n        });\r\n        setBluetoothDevice(systemStatus.connectedBluetoothDevice, {\r\n            silent: true,\r\n            syncAudio: false,\r\n        });\r\n    }\r\n\r\n    function updateFocusUI() {\r\n        updateSystemToggleState('focus', systemStatus.focus);\r\n        updateSystemStateText(\r\n            'focus',\r\n            appI18n.translate(systemStatus.focus ? 'menubar.state.active' : 'menubar.state.off')\r\n        );\r\n    }\r\n\r\n    function updateDarkModeUI() {\r\n        const isDark = systemStatus.darkMode;\r\n        updateSystemToggleState('dark-mode', isDark);\r\n        updateSystemStateText(\r\n            'dark-mode',\r\n            appI18n.translate(isDark ? 'menubar.state.active' : 'menubar.state.off')\r\n        );\r\n        applySystemIcon('appearance', isDark ? 'appearanceDark' : 'appearanceLight');\r\n    }\r\n\r\n    function updateVolumeUI() {\r\n        const value = Math.max(0, Math.min(100, Number(systemStatus.volume) || 0));\r\n        systemStatus.volume = value;\r\n        let iconKey = 'volumeMute';\r\n        if (value === 0) {\r\n            iconKey = 'volumeMute';\r\n        } else if (value <= 33) {\r\n            iconKey = 'volumeLow';\r\n        } else if (value <= 66) {\r\n            iconKey = 'volumeMedium';\r\n        } else {\r\n            iconKey = 'volumeHigh';\r\n        }\r\n        applySystemIcon('volume', iconKey);\r\n        updateSystemSliderValue('volume', value);\r\n    }\r\n\r\n    function updateBrightnessUI() {\r\n        const value = Math.max(0, Math.min(100, Number(systemStatus.brightness) || 0));\r\n        systemStatus.brightness = value;\r\n        updateSystemSliderValue('brightness', value);\r\n    }\r\n\r\n    function updateBatteryUI() {\r\n        applySystemIcon('battery', 'batteryFull');\r\n        updateSystemStateText('battery', `${systemStatus.battery}%`);\r\n    }\r\n\r\n    function updateAudioDeviceUI() {\r\n        const active = systemStatus.audioDevice;\r\n        document.querySelectorAll('[data-audio-device]').forEach(btn => {\r\n            const isActive = btn.dataset.audioDevice === active;\r\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\r\n            btn.classList.toggle('is-active', isActive);\r\n        });\r\n    }\r\n\r\n    // ===== Device Selection Functions =====\r\n\r\n    function setConnectedNetwork(network, options = {}) {\r\n        if (network) {\r\n            systemStatus.network = network;\r\n        }\r\n        const activeNetwork = systemStatus.network;\r\n        document.querySelectorAll('#wifi-menu [data-network]').forEach(btn => {\r\n            const indicator = btn.querySelector('.system-network-indicator');\r\n            if (indicator && !indicator.dataset.default) {\r\n                indicator.dataset.default = indicator.textContent || '';\r\n            }\r\n            const isActive =\r\n                !btn.hasAttribute('aria-disabled') &&\r\n                btn.dataset.network === activeNetwork &&\r\n                systemStatus.wifi;\r\n            btn.classList.toggle('is-active', isActive);\r\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\r\n            if (indicator) {\r\n                if (!systemStatus.wifi) {\r\n                    indicator.textContent = indicator.dataset.default || '';\r\n                } else if (isActive) {\r\n                    indicator.textContent = appI18n.translate('menubar.state.connected');\r\n                } else {\r\n                    indicator.textContent = indicator.dataset.default || '';\r\n                }\r\n            }\r\n        });\r\n        if (!options.silent) {\r\n            hideMenuDropdowns();\r\n        }\r\n    }\r\n\r\n    function setBluetoothDevice(deviceName, options = {}) {\r\n        const syncAudio = options.syncAudio !== false;\r\n        if (deviceName) {\r\n            systemStatus.connectedBluetoothDevice = deviceName;\r\n            if (syncAudio && deviceName === 'AirPods') {\r\n                systemStatus.audioDevice = 'airpods';\r\n            }\r\n        }\r\n        const activeDevice = systemStatus.connectedBluetoothDevice;\r\n        document.querySelectorAll('#bluetooth-menu [data-device]').forEach(btn => {\r\n            const indicator = btn.querySelector('.system-network-indicator');\r\n            if (indicator && !indicator.dataset.default) {\r\n                indicator.dataset.default = indicator.textContent || '';\r\n            }\r\n            const isActive = systemStatus.bluetooth && btn.dataset.device === activeDevice;\r\n            btn.classList.toggle('is-active', isActive);\r\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\r\n            if (indicator) {\r\n                if (!systemStatus.bluetooth) {\r\n                    indicator.textContent = indicator.dataset.default || '';\r\n                } else if (isActive) {\r\n                    indicator.textContent = appI18n.translate('menubar.state.connected');\r\n                } else {\r\n                    indicator.textContent = indicator.dataset.default || '';\r\n                }\r\n            }\r\n        });\r\n        updateAudioDeviceUI();\r\n        if (!options.silent) {\r\n            hideMenuDropdowns();\r\n        }\r\n    }\r\n\r\n    function setAudioDevice(deviceKey, options = {}) {\r\n        if (!deviceKey) return;\r\n        systemStatus.audioDevice = deviceKey;\r\n        if (deviceKey === 'airpods') {\r\n            systemStatus.connectedBluetoothDevice = 'AirPods';\r\n        }\r\n        updateAudioDeviceUI();\r\n        updateBluetoothUI();\r\n        if (!options.silent) {\r\n            hideMenuDropdowns();\r\n        }\r\n    }\r\n\r\n    // ===== Toggle and Action Handlers =====\r\n\r\n    function handleSystemToggle(toggleKey) {\r\n        switch (toggleKey) {\r\n            case 'wifi':\r\n                systemStatus.wifi = !systemStatus.wifi;\r\n                updateWifiUI();\r\n                break;\r\n            case 'bluetooth':\r\n                systemStatus.bluetooth = !systemStatus.bluetooth;\r\n                updateBluetoothUI();\r\n                break;\r\n            case 'focus':\r\n                systemStatus.focus = !systemStatus.focus;\r\n                updateFocusUI();\r\n                break;\r\n            case 'dark-mode': {\r\n                const next = !document.documentElement.classList.contains('dark');\r\n                systemStatus.darkMode = next;\r\n                if (typeof setThemePreference === 'function') {\r\n                    setThemePreference(next ? 'dark' : 'light');\r\n                } else {\r\n                    document.documentElement.classList.toggle('dark', next);\r\n                }\r\n                updateDarkModeUI();\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleSystemAction(actionKey) {\r\n        switch (actionKey) {\r\n            case 'toggle-wifi':\r\n                handleSystemToggle('wifi');\r\n                break;\r\n            case 'toggle-bluetooth':\r\n                handleSystemToggle('bluetooth');\r\n                break;\r\n            case 'open-network':\r\n            case 'open-bluetooth':\r\n            case 'open-sound':\r\n                if (window.dialogs && window.dialogs['settings-modal']) {\r\n                    window.dialogs['settings-modal'].open();\r\n                } else {\r\n                    console.info(`Aktion \"${actionKey}\" w\u00FCrde Einstellungen \u00F6ffnen.`);\r\n                }\r\n                hideMenuDropdowns();\r\n                break;\r\n            case 'open-spotlight':\r\n            case 'open-siri':\r\n                console.info(`Aktion \"${actionKey}\" ausgel\u00F6st.`);\r\n                hideMenuDropdowns();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    function handleSystemSliderInput(type, value) {\r\n        if (!Number.isFinite(value)) return;\r\n        if (type === 'volume') {\r\n            systemStatus.volume = value;\r\n            updateVolumeUI();\r\n        } else if (type === 'brightness') {\r\n            systemStatus.brightness = value;\r\n            updateBrightnessUI();\r\n        }\r\n    }\r\n\r\n    // ===== Main Update Function =====\r\n\r\n    function updateAllSystemStatusUI() {\r\n        applySystemIcon('sun', 'sun');\r\n        applySystemIcon('moon', 'moon');\r\n        updateWifiUI();\r\n        updateBluetoothUI();\r\n        updateFocusUI();\r\n        updateDarkModeUI();\r\n        updateVolumeUI();\r\n        updateBrightnessUI();\r\n        updateBatteryUI();\r\n        updateAudioDeviceUI();\r\n    }\r\n\r\n    // ===== Initialization =====\r\n\r\n    function initSystemStatusControls() {\r\n        document.querySelectorAll('.system-network-indicator').forEach(indicator => {\r\n            indicator.dataset.default = indicator.textContent || '';\r\n        });\r\n\r\n        document.querySelectorAll('[data-system-menu-trigger]').forEach(trigger => {\r\n            // bindDropdownTrigger is expected in app.js or global scope\r\n            if (typeof window.bindDropdownTrigger === 'function') {\r\n                window.bindDropdownTrigger(trigger, {\r\n                    hoverRequiresOpen: true,\r\n                });\r\n            }\r\n        });\r\n\r\n        // Route toggles through ActionBus\r\n        document.querySelectorAll('[data-system-toggle]').forEach(toggle => {\r\n            toggle.dataset.action = 'system:toggle';\r\n            // ActionBus will stop propagation and execute\r\n        });\r\n\r\n        document.querySelectorAll('[data-system-slider]').forEach(slider => {\r\n            ['pointerdown', 'mousedown', 'touchstart'].forEach(evt => {\r\n                slider.addEventListener(evt, e => e.stopPropagation());\r\n            });\r\n            slider.addEventListener('input', event => {\r\n                event.stopPropagation();\r\n                const value = Number(slider.value);\r\n                handleSystemSliderInput(slider.dataset.systemSlider, value);\r\n            });\r\n        });\r\n\r\n        document.querySelectorAll('[data-system-action]').forEach(btn => {\r\n            btn.dataset.action = 'system:action';\r\n        });\r\n\r\n        document.querySelectorAll('[data-audio-device]').forEach(btn => {\r\n            btn.dataset.action = 'system:setAudioDevice';\r\n        });\r\n\r\n        document.querySelectorAll('[data-network]').forEach(btn => {\r\n            btn.dataset.action = 'system:setNetwork';\r\n        });\r\n\r\n        document.querySelectorAll('[data-device]').forEach(btn => {\r\n            btn.dataset.action = 'system:setBluetoothDevice';\r\n        });\r\n\r\n        updateAllSystemStatusUI();\r\n    }\r\n\r\n    // ===== Public API =====\r\n\r\n    window.SystemUI = {\r\n        initSystemStatusControls,\r\n        updateAllSystemStatusUI,\r\n        handleSystemToggle,\r\n        handleSystemAction,\r\n        handleSystemSliderInput,\r\n        setConnectedNetwork,\r\n        setBluetoothDevice,\r\n        setAudioDevice,\r\n        getSystemStatus: () => Object.assign({}, systemStatus),\r\n    };\r\n})();\r\n", "/**\r\n * Application Initialization Module\r\n * Handles DOMContentLoaded setup and modal initialization.\r\n *\r\n * This module centralizes application bootstrap logic that was previously\r\n * in the DOMContentLoaded handler in app.js.\r\n *\r\n * @module app-init\r\n */\r\n\r\n// Export to make this a proper module for global augmentation\r\nexport {};\r\n\r\n/**\r\n * Global window interface extensions for app initialization\r\n */\r\ndeclare global {\r\n    interface Window {\r\n        initApp?: () => void;\r\n    }\r\n}\r\n\r\n/**\r\n * Type helper for WindowManager\r\n */\r\ninterface IWindowManager {\r\n    getAllWindowIds?: () => string[];\r\n    getTransientWindowIds?: () => string[];\r\n    setDialogInstance?: (id: string, instance: unknown) => void;\r\n}\r\n\r\n/**\r\n * Type helper for Dialog class\r\n */\r\ninterface IDialog {\r\n    new (id: string): unknown;\r\n}\r\n\r\n/**\r\n * Type helper for external module functions\r\n */\r\ninterface GlobalModules {\r\n    ActionBus?: {\r\n        init?: () => void;\r\n    };\r\n    Dialog?: IDialog;\r\n    FinderSystem?: {\r\n        init?: () => void;\r\n    };\r\n    SettingsSystem?: {\r\n        init?: (container: HTMLElement) => void;\r\n    };\r\n    TextEditorSystem?: {\r\n        init?: (container: HTMLElement) => void;\r\n    };\r\n    TerminalSystem?: {\r\n        init?: (container: HTMLElement) => void;\r\n    };\r\n    TerminalInstanceManager?: unknown;\r\n    DockSystem?: {\r\n        initDockDragDrop?: () => void;\r\n    };\r\n    SessionManager?: {\r\n        init?: () => void;\r\n        restoreSession?: () => boolean;\r\n    };\r\n}\r\n\r\n/**\r\n * Initialize modal IDs from WindowManager or fallback to default list\r\n * @returns Object containing modalIds array and transientModalIds set\r\n */\r\nfunction initModalIds(): { modalIds: string[]; transientModalIds: Set<string> } {\r\n    const win = window as Window & {\r\n        WindowManager?: IWindowManager;\r\n        APP_CONSTANTS?: { MODAL_IDS?: string[]; TRANSIENT_MODAL_IDS?: Set<string> };\r\n    };\r\n\r\n    if (win.WindowManager) {\r\n        const modalIds = win.WindowManager.getAllWindowIds?.() || [];\r\n        const transientIds = win.WindowManager.getTransientWindowIds?.() || [];\r\n        return {\r\n            modalIds,\r\n            transientModalIds: new Set(transientIds),\r\n        };\r\n    } else {\r\n        // Fallback\r\n        const modalIds = win.APP_CONSTANTS?.MODAL_IDS || [\r\n            'finder-modal',\r\n            'projects-modal',\r\n            'about-modal',\r\n            'settings-modal',\r\n            'text-modal',\r\n            'terminal-modal',\r\n            'image-modal',\r\n            'program-info-modal',\r\n        ];\r\n        const transientModalIds =\r\n            win.APP_CONSTANTS?.TRANSIENT_MODAL_IDS || new Set(['program-info-modal']);\r\n        return { modalIds, transientModalIds };\r\n    }\r\n}\r\n\r\n/**\r\n * Main application initialization function.\r\n * Called automatically on DOMContentLoaded.\r\n * Sets up dialog instances, ActionBus, and initializes all subsystems.\r\n */\r\nfunction initApp(): void {\r\n    const win = window as Window & GlobalModules & { WindowManager?: IWindowManager };\r\n    const funcs = window as Window & {\r\n        hideMenuDropdowns?: () => void;\r\n        bringDialogToFront?: (id: string) => void;\r\n        updateProgramLabelByTopModal?: () => void;\r\n        syncTopZIndexWithDOM?: () => void;\r\n        restoreWindowPositions?: () => void;\r\n        restoreOpenModals?: () => void;\r\n        initSystemStatusControls?: () => void;\r\n        initDesktop?: () => void;\r\n        initDockMagnification?: () => void;\r\n    };\r\n\r\n    // Modal-IDs initialisieren\r\n    const { modalIds } = initModalIds();\r\n\r\n    // ActionBus initialisieren\r\n    if (win.ActionBus) {\r\n        win.ActionBus.init?.();\r\n    }\r\n\r\n    // Wenn auf einen sichtbaren Modalcontainer geklickt wird, hole das Fenster in den Vordergrund\r\n    document.querySelectorAll('.modal').forEach(modal => {\r\n        modal.addEventListener('click', function (e) {\r\n            // Verhindere, dass Klicks auf interaktive Elemente im Modal den Fokuswechsel st\u00F6ren.\r\n            const target = e.target as Node;\r\n            if (e.target === modal || modal.contains(target)) {\r\n                funcs.hideMenuDropdowns?.();\r\n                funcs.bringDialogToFront?.(modal.id);\r\n                funcs.updateProgramLabelByTopModal?.();\r\n            }\r\n        });\r\n    });\r\n\r\n    // Dialog-Instanzen erstellen und im WindowManager registrieren\r\n    const dialogs = window.dialogs || {};\r\n    window.dialogs = dialogs;\r\n    if (modalIds && Array.isArray(modalIds)) {\r\n        modalIds.forEach(id => {\r\n            const modal = document.getElementById(id);\r\n            if (!modal || !win.Dialog) return;\r\n            const dialogInstance = new win.Dialog(id);\r\n            dialogs[id] = dialogInstance as unknown as Record<string, unknown>;\r\n\r\n            // Im WindowManager registrieren\r\n            if (win.WindowManager) {\r\n                win.WindowManager.setDialogInstance?.(id, dialogInstance);\r\n            }\r\n        });\r\n    }\r\n\r\n    // Add click-outside-to-close functionality for launchpad\r\n    const launchpadModal = document.getElementById('launchpad-modal');\r\n    if (launchpadModal) {\r\n        // Primary: close when clicking outside the inner content within the modal wrapper.\r\n        launchpadModal.addEventListener('click', function (e) {\r\n            try {\r\n                const inner = launchpadModal.querySelector('.launchpad-modal-inner');\r\n                const target = e.target as Node;\r\n                if (inner ? !inner.contains(target) : target === launchpadModal) {\r\n                    const launchpadDialog = dialogs['launchpad-modal'] as { close?: () => void };\r\n                    launchpadDialog?.close?.();\r\n                }\r\n            } catch {\r\n                /* ignore */\r\n            }\r\n        });\r\n\r\n        // Fallback: capture-phase handler to close even when the wrapper has pointer-events:none\r\n        // and clicks are dispatched to underlying elements (e.g., tests using page.mouse.click).\r\n        document.addEventListener(\r\n            'click',\r\n            function (e) {\r\n                try {\r\n                    // Only act if launchpad is currently visible\r\n                    if (launchpadModal.classList.contains('hidden')) return;\r\n                    const inner = launchpadModal.querySelector('.launchpad-modal-inner');\r\n                    const target = e.target as Node;\r\n                    if (inner && inner.contains(target)) return; // clicked inside \u2192 ignore\r\n                    const launchpadDialog = dialogs['launchpad-modal'] as { close?: () => void };\r\n                    launchpadDialog?.close?.();\r\n                } catch {\r\n                    /* ignore */\r\n                }\r\n            },\r\n            true\r\n        );\r\n    }\r\n\r\n    funcs.syncTopZIndexWithDOM?.();\r\n    funcs.restoreWindowPositions?.();\r\n    funcs.restoreOpenModals?.();\r\n    funcs.initSystemStatusControls?.();\r\n    funcs.initDesktop?.();\r\n\r\n    // Finder initialisieren nach Dialog-Setup\r\n    if (win.FinderSystem && typeof win.FinderSystem.init === 'function') {\r\n        win.FinderSystem.init();\r\n    }\r\n\r\n    // Initialize settings module\r\n    if (win.SettingsSystem) {\r\n        const settingsContainer = document.getElementById('settings-container');\r\n        if (settingsContainer) {\r\n            win.SettingsSystem.init?.(settingsContainer);\r\n        }\r\n    }\r\n\r\n    // Initialize text editor module\r\n    if (win.TextEditorSystem) {\r\n        const textEditorContainer = document.getElementById('text-editor-container');\r\n        if (textEditorContainer) {\r\n            win.TextEditorSystem.init?.(textEditorContainer);\r\n        }\r\n    }\r\n\r\n    // Initialize terminal module (legacy) only when multi\u2011instance is not available\r\n    // Prevents duplicate inputs causing E2E strict-mode locator conflicts\r\n    if (!win.TerminalInstanceManager && win.TerminalSystem) {\r\n        const terminalContainer = document.getElementById('terminal-container');\r\n        if (terminalContainer) {\r\n            win.TerminalSystem.init?.(terminalContainer);\r\n        }\r\n    }\r\n\r\n    funcs.initDockMagnification?.();\r\n    if (win.DockSystem && typeof win.DockSystem.initDockDragDrop === 'function') {\r\n        win.DockSystem.initDockDragDrop();\r\n    }\r\n    \r\n    // Initialize SessionManager for auto-save and restore session if available\r\n    if (win.SessionManager) {\r\n        try {\r\n            win.SessionManager.init?.();\r\n            // Attempt to restore session after all managers are initialized\r\n            // This happens after Terminal/TextEditor managers are ready\r\n            setTimeout(() => {\r\n                if (win.SessionManager?.restoreSession) {\r\n                    win.SessionManager.restoreSession();\r\n                }\r\n            }, 100); // Small delay to ensure all managers are ready\r\n        } catch (err) {\r\n            console.warn('SessionManager initialization failed:', err);\r\n        }\r\n    }\r\n\r\n    // Defensive: ensure the dock is visible. Some environments or timing races\r\n    // can leave the dock with hidden/display styles that make it \"invisible\"\r\n    // to Playwright checks. Remove any accidental 'hidden' class and reset\r\n    // inline visibility/display so tests can interact reliably.\r\n    try {\r\n        const dockEl = document.getElementById('dock');\r\n        if (dockEl) {\r\n            if (dockEl.classList.contains('hidden')) dockEl.classList.remove('hidden');\r\n            // Reset common inline properties that may hide the element\r\n            dockEl.style.display = dockEl.style.display || '';\r\n            dockEl.style.visibility = dockEl.style.visibility || 'visible';\r\n        }\r\n    } catch {\r\n        // non-fatal; continue startup\r\n    }\r\n\r\n    // Defensive DOM fix: if the dock has been accidentally placed inside a\r\n    // modal wrapper (for example due to malformed HTML or runtime reparenting),\r\n    // move it to document.body so it isn't affected by ancestor display:none\r\n    // which makes it invisible to Playwright. This is a low-risk, idempotent\r\n    // operation and keeps tests deterministic while the underlying HTML is\r\n    // corrected.\r\n    try {\r\n        const dockEl = document.getElementById('dock');\r\n        if (dockEl && dockEl.parentElement && dockEl.parentElement !== document.body) {\r\n            document.body.appendChild(dockEl);\r\n            console.info('[APP-INIT] moved #dock to document.body to avoid hidden ancestor(s)');\r\n        }\r\n    } catch {\r\n        /* ignore */\r\n    }\r\n\r\n    // Defensive: ensure all modal wrappers are direct children of <body>.\r\n    // This helps when malformed HTML accidentally nests modal wrappers\r\n    // inside each other which in turn causes computed display:none on\r\n    // ancestors and zero-sized geometry for centered content.\r\n    try {\r\n        const ensureModalsInBody = () => {\r\n            try {\r\n                const modals = Array.from(document.querySelectorAll('.modal')) as HTMLElement[];\r\n                let moved = false;\r\n                modals.forEach(m => {\r\n                    if (m.parentElement && m.parentElement !== document.body) {\r\n                        document.body.appendChild(m);\r\n                        moved = true;\r\n                    }\r\n                });\r\n                if (moved)\r\n                    console.info(\r\n                        '[APP-INIT] reparented misplaced .modal elements to document.body'\r\n                    );\r\n                return moved;\r\n            } catch {\r\n                return false;\r\n            }\r\n        };\r\n\r\n        ensureModalsInBody();\r\n        setTimeout(ensureModalsInBody, 50);\r\n        setTimeout(ensureModalsInBody, 200);\r\n        setTimeout(ensureModalsInBody, 500);\r\n    } catch {\r\n        /* ignore */\r\n    }\r\n\r\n    // Debugging: log some runtime info about the dock so E2E traces show why\r\n    // Playwright may mark it hidden; include computed styles and dimensions.\r\n    try {\r\n        const dockEl = document.getElementById('dock');\r\n        if (dockEl) {\r\n            const rect = dockEl.getBoundingClientRect();\r\n            const cs = window.getComputedStyle(dockEl);\r\n            console.info('[APP-INIT] Dock debug:', {\r\n                className: dockEl.className,\r\n                display: cs.display,\r\n                visibility: cs.visibility,\r\n                opacity: cs.opacity,\r\n                width: rect.width,\r\n                height: rect.height,\r\n                top: rect.top,\r\n                left: rect.left,\r\n                inViewport: rect.top < (window.innerHeight || 0) && rect.bottom > 0,\r\n            });\r\n            // Also write these values into a data attribute so E2E snapshots and\r\n            // traces (which may not include console output) can inspect the\r\n            // runtime state of the dock element.\r\n            try {\r\n                const dbg = JSON.stringify({\r\n                    className: dockEl.className,\r\n                    display: cs.display,\r\n                    visibility: cs.visibility,\r\n                    opacity: cs.opacity,\r\n                    width: Math.round(rect.width),\r\n                    height: Math.round(rect.height),\r\n                    top: Math.round(rect.top),\r\n                    left: Math.round(rect.left),\r\n                    inViewport: rect.top < (window.innerHeight || 0) && rect.bottom > 0,\r\n                });\r\n                dockEl.setAttribute('data-dock-debug', dbg);\r\n            } catch {\r\n                /* swallow */\r\n            }\r\n        } else {\r\n            console.info('[APP-INIT] Dock debug: element not found');\r\n        }\r\n    } catch (e) {\r\n        console.warn('[APP-INIT] Dock debug failed', e);\r\n    }\r\n\r\n    // Signal that the app is ready for E2E tests.\r\n    // Important: delay setting __APP_READY until the full page load event\r\n    // so that later scripts (for example the legacy `app.js` included\r\n    // after this file) have a chance to run and not hide UI elements\r\n    // after tests consider the app ready.\r\n    const gw = window as Window & { __APP_READY?: boolean };\r\n    function markReady() {\r\n        try {\r\n            // At load time, ensure the dock is placed under document.body so\r\n            // any legacy scripts that reparent early don't leave it inside a\r\n            // hidden modal. Do this right before signaling readiness so tests\r\n            // observe the final DOM state.\r\n            const ensureDockInBody = () => {\r\n                try {\r\n                    const dockEl = document.getElementById('dock');\r\n                    if (dockEl && dockEl.parentElement && dockEl.parentElement !== document.body) {\r\n                        document.body.appendChild(dockEl);\r\n                        console.info('[APP-INIT] moved #dock to document.body (ensured at load)');\r\n                        return true;\r\n                    }\r\n                } catch {\r\n                    /* ignore */\r\n                }\r\n                return false;\r\n            };\r\n\r\n            // Try immediately and a few times after small delays to survive other\r\n            // scripts that may reparent DOM nodes during startup.\r\n            ensureDockInBody();\r\n            setTimeout(ensureDockInBody, 50);\r\n            setTimeout(ensureDockInBody, 200);\r\n            setTimeout(ensureDockInBody, 500);\r\n\r\n            gw.__APP_READY = true;\r\n            console.info('[APP-INIT] __APP_READY=true');\r\n        } catch {\r\n            /* swallow */\r\n        }\r\n    }\r\n\r\n    if (document.readyState === 'complete') {\r\n        // load already fired\r\n        markReady();\r\n    } else {\r\n        window.addEventListener('load', markReady, { once: true });\r\n        // Fallback: if the load event doesn't fire (e.g., due to a blocked resource)\r\n        // make sure tests can proceed by marking ready after a short grace period.\r\n        setTimeout(() => {\r\n            if (!gw.__APP_READY) {\r\n                console.warn('[APP-INIT] load event not observed within timeout; forcing __APP_READY');\r\n                markReady();\r\n            }\r\n        }, 4000);\r\n    }\r\n}\r\n\r\n// ============================================================================\r\n// IIFE Export Pattern - Expose initApp globally and auto-attach to DOMContentLoaded\r\n// ============================================================================\r\n\r\n(() => {\r\n    if (typeof window.initApp !== 'function') {\r\n        window.initApp = initApp;\r\n    }\r\n\r\n    // Auto-attach to DOMContentLoaded\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', initApp);\r\n    } else {\r\n        // DOMContentLoaded already fired, run immediately\r\n        initApp();\r\n    }\r\n})();\r\n", "/*\r\n * src/ts/compat/expose-globals.ts\r\n * Central adapter to expose modern TS modules on window for legacy consumers.\r\n * This file is used as the single esbuild entry to produce an IIFE bundle.\r\n */\r\n\r\nconsole.log('[BUNDLE] expose-globals.ts loading...');\r\n\r\n// Import the modern module(s) we want to expose explicitly\r\nimport * as DOMUtils from '../dom-utils';\r\n\r\n// Import core constants first (needed by storage, app-init, etc.)\r\nimport '../constants';\r\n\r\n// Import legacy/global modules for their side effects so they register on window.*\r\nimport '../api';\r\nimport '../window-manager';\r\nimport '../action-bus';\r\nimport '../dialog-utils';\r\nimport '../snap-utils';\r\nimport '../program-actions';\r\nimport '../program-menu-sync';\r\nimport '../menu';\r\nimport '../dock';\r\nimport '../dialog';\r\nimport '../menubar-utils';\r\nimport '../context-menu';\r\nimport '../storage';\r\nimport '../session-manager'; // Auto-save system for instances\r\nimport '../theme';\r\nimport '../base-window-instance'; // Must come before instance types\r\nimport '../instance-manager';\r\nimport '../window-chrome';\r\nimport '../window-tabs';\r\nimport '../terminal-instance';\r\nimport '../text-editor-instance';\r\nimport '../text-editor';\r\nimport '../image-viewer-utils';\r\nimport '../logger';\r\nimport '../keyboard-shortcuts';\r\nimport '../github-api';\r\n// Include compiled Photos App JS into the bundle to expose window.PhotosApp\r\n// Using the compiled JS avoids TS encoding issues and ensures identical runtime behavior\r\nimport '../photos-app';\r\n\r\n// Legacy JS modules (copied to src/ts/legacy/ for esbuild compatibility)\r\nimport '../legacy/window-configs.js'; // Must load before windows are registered\r\nimport '../legacy/finder-instance.js';\r\nimport '../legacy/launchpad.js';\r\nimport '../multi-instance-integration';\r\nimport '../legacy/desktop.js';\r\nimport '../legacy/system.js';\r\n\r\n// Finally, include the TypeScript app initialization to bootstrap and signal readiness\r\n// This sets window.__APP_READY = true when the app finishes loading. It must come\r\n// AFTER all side-effect imports above so that globals like WindowManager/Dialog exist.\r\nimport '../app-init';\r\n\r\n// Guarded attach for modern modules not yet on window\r\ntype WindowWithBundle = Window & { __BUNDLE_READY__?: boolean; initApp?: () => void } & Record<\r\n        string,\r\n        unknown\r\n    >;\r\nconst w = window as unknown as WindowWithBundle;\r\n\r\nif (!('DOMUtils' in w)) {\r\n    w['DOMUtils'] = DOMUtils;\r\n}\r\n\r\n// Trigger app initialization manually since the IIFE in app-init.ts\r\n// runs in module scope and may not execute due to esbuild bundling\r\nif (typeof w.initApp === 'function') {\r\n    console.log('[BUNDLE] Triggering initApp; readyState:', document.readyState);\r\n    if (document.readyState === 'loading') {\r\n        document.addEventListener('DOMContentLoaded', w.initApp);\r\n    } else {\r\n        w.initApp();\r\n    }\r\n} else {\r\n    console.error('[BUNDLE] window.initApp is not defined; app initialization failed');\r\n}\r\n\r\n// Optional ready flag for tests\r\nw.__BUNDLE_READY__ = true;\r\n\r\n"],
  "mappings": "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",
  "names": ["module", "translate", "getDockReservedBottom", "sendTextEditorMenuAction", "translate", "renderApplicationMenu", "info", "r", "BASE_Z_INDEX", "_a", "_b", "_c", "minTop", "openModal", "toggleDarkMode", "getMenuItemsForTarget", "clearMenu", "renderMenu", "clampPosition", "showContextMenu", "buildAndOpenAt", "hideContextMenu", "bindAutoClose", "unbindAutoClose", "APP_CONSTANTS", "getModalIds", "updateDockIndicators", "syncTopZIndexWithDOM", "APP_CONSTANTS", "BaseWindowInstance", "_a", "_a", "w", "translate", "_a", "_a", "items", "repo", "translate", "query", "integration", "translate", "index", "toggle", "_a", "_b", "_c"]
}
