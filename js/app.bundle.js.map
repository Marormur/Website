{
  "version": 3,
  "sources": ["../src/ts/dom-utils.ts", "../src/ts/api.ts", "../src/ts/window-manager.ts", "../src/ts/action-bus.ts", "../src/ts/dialog-utils.ts", "../src/ts/snap-utils.ts", "../src/ts/program-actions.ts", "../src/ts/program-menu-sync.ts", "../src/ts/menu.ts", "../src/ts/dock.ts", "../src/ts/dialog.ts", "../src/ts/menubar-utils.ts", "../src/ts/context-menu.ts", "../src/ts/storage.ts", "../src/ts/theme.ts", "../src/ts/base-window-instance.ts", "../src/ts/instance-manager.ts", "../src/ts/window-chrome.ts", "../src/ts/window-tabs.ts", "../src/ts/terminal-instance.ts", "../src/ts/text-editor-instance.ts", "../src/ts/text-editor.ts", "../src/ts/image-viewer-utils.ts", "../src/ts/logger.ts", "../src/ts/keyboard-shortcuts.ts", "../src/ts/github-api.ts", "../src/ts/legacy/window-configs.js", "../src/ts/legacy/finder-instance.js", "../src/ts/legacy/launchpad.js", "../src/ts/legacy/multi-instance-integration.js", "../src/ts/legacy/desktop.js", "../src/ts/legacy/system.js", "../src/ts/app-init.ts", "../src/ts/compat/expose-globals.ts"],
  "sourcesContent": ["/**\n * DOM Utility Functions\n * Centralized helpers for common DOM manipulations\n * \n * @module dom-utils\n */\n\n/**\n * Show an element by removing the 'hidden' class\n * @param element - The element to show (null-safe)\n */\nexport function show(element: HTMLElement | null): void {\n    if (!element) return;\n    element.classList.remove('hidden');\n}\n\n/**\n * Hide an element by adding the 'hidden' class\n * @param element - The element to hide (null-safe)\n */\nexport function hide(element: HTMLElement | null): void {\n    if (!element) return;\n    element.classList.add('hidden');\n}\n\n/**\n * Toggle element visibility\n * @param element - The element to toggle (null-safe)\n * @param visible - Optional boolean to force visible (true) or hidden (false)\n */\nexport function toggle(element: HTMLElement | null, visible?: boolean): void {\n    if (!element) return;\n    if (visible === undefined) {\n        element.classList.toggle('hidden');\n    } else {\n        element.classList.toggle('hidden', !visible);\n    }\n}\n\n/**\n * Check if an element is currently visible\n * @param element - The element to check (null-safe)\n * @returns true if element exists and does not have 'hidden' class\n */\nexport function isVisible(element: HTMLElement | null): boolean {\n    if (!element) return false;\n    return !element.classList.contains('hidden');\n}\n\n/**\n * Set element visibility explicitly\n * @param element - The element to update (null-safe)\n * @param visible - true to show, false to hide\n */\nexport function setVisibility(element: HTMLElement | null, visible: boolean): void {\n    if (!element) return;\n    element.classList.toggle('hidden', !visible);\n}\n\n/**\n * Show multiple elements at once\n * @param elements - Array of elements to show\n */\nexport function showAll(elements: (HTMLElement | null)[]): void {\n    elements.forEach(show);\n}\n\n/**\n * Hide multiple elements at once\n * @param elements - Array of elements to hide\n */\nexport function hideAll(elements: (HTMLElement | null)[]): void {\n    elements.forEach(hide);\n}\n\n/**\n * Get element by ID with type safety\n * @param id - Element ID\n * @returns The element or null if not found\n */\nexport function getById(id: string): HTMLElement | null {\n    return document.getElementById(id);\n}\n\n/**\n * Query selector with type assertion\n * @param selector - CSS selector\n * @param parent - Optional parent element (defaults to document)\n * @returns The first matching element or null\n */\nexport function query<T extends HTMLElement = HTMLElement>(\n    selector: string,\n    parent: ParentNode = document\n): T | null {\n    return parent.querySelector<T>(selector);\n}\n\n/**\n * Query selector all with type assertion\n * @param selector - CSS selector\n * @param parent - Optional parent element (defaults to document)\n * @returns NodeList of matching elements\n */\nexport function queryAll<T extends HTMLElement = HTMLElement>(\n    selector: string,\n    parent: ParentNode = document\n): NodeListOf<T> {\n    return parent.querySelectorAll<T>(selector);\n}\n\n// Attach to window for compatibility with legacy code\nif (typeof window !== 'undefined') {\n    (window as Window & { DOMUtils?: typeof import('./dom-utils') }).DOMUtils = {\n        show,\n        hide,\n        toggle,\n        isVisible,\n        setVisibility,\n        showAll,\n        hideAll,\n        getById,\n        query,\n        queryAll,\n    };\n}\n\nconsole.log('\u2705 DOMUtils loaded');\n", "console.log('API loaded');\n\n(function () {\n  'use strict';\n\n  type ModuleMethod = (...args: unknown[]) => unknown;\n\n  type ModuleProxy<T extends string[]> = {\n    [K in T[number]]: ModuleMethod;\n  };\n\n  // Helper to safely access window properties\n  function getWindowProp(propName: string): unknown {\n    return (window as unknown as Record<string, unknown>)[propName];\n  }\n\n  // Helper to call a method on a window property\n  function callWindowMethod(objName: string, methodName: string, ...args: unknown[]): unknown {\n    const obj = getWindowProp(objName);\n    if (obj && typeof (obj as Record<string, unknown>)[methodName] === 'function') {\n      return ((obj as Record<string, unknown>)[methodName] as ModuleMethod)(...args);\n    }\n    return undefined;\n  }\n\n  function createModuleProxy<T extends string[]>(\n    moduleName: string,\n    methods: T,\n  ): ModuleProxy<T> {\n    const proxy = {} as ModuleProxy<T>;\n\n    methods.forEach((method) => {\n      (proxy as Record<string, ModuleMethod>)[method] = function (...args: unknown[]): unknown {\n        const module = getWindowProp(moduleName);\n        if (module && typeof (module as Record<string, unknown>)[method] === 'function') {\n          return ((module as Record<string, unknown>)[method] as ModuleMethod)(...args);\n        }\n        console.warn(`${moduleName}.${method} ist nicht verf\u00FCgbar`);\n        return undefined;\n      };\n    });\n\n    return proxy;\n  }\n\n  const API = {\n    error: createModuleProxy('ErrorHandler', [\n      'enable',\n      'disable',\n      'getLogs',\n      'clearLogs',\n      'exportLogs',\n    ] as const),\n\n    performance: createModuleProxy('PerfMonitor', [\n      'enable',\n      'disable',\n      'toggle',\n      'mark',\n      'measure',\n      'report',\n    ] as const),\n\n    theme: createModuleProxy('ThemeSystem', [\n      'setThemePreference',\n      'getThemePreference',\n      'applyTheme',\n      'initTheme',\n    ] as const),\n\n    icon: createModuleProxy('IconSystem', [\n      'ensureSvgNamespace',\n      'getMenuIconSvg',\n      'renderIconIntoElement',\n    ] as const),\n\n    dock: createModuleProxy('DockSystem', [\n      'getDockReservedBottom',\n      'initDockMagnification',\n      'updateDockIndicators',\n    ] as const),\n\n    menu: createModuleProxy('MenuSystem', [\n      'renderApplicationMenu',\n      'handleMenuActionActivation',\n      'registerMenuAction',\n      'hideMenuDropdowns',\n      'toggleMenuDropdown',\n      'isAnyDropdownOpen',\n    ] as const),\n\n    desktop: createModuleProxy('DesktopSystem', [\n      'initDesktop',\n      'openDesktopItemById',\n    ] as const),\n\n    system: createModuleProxy('SystemUI', [\n      'initSystemStatusControls',\n      'updateAllSystemStatusUI',\n      'handleSystemToggle',\n      'setConnectedNetwork',\n      'setBluetoothDevice',\n      'setAudioDevice',\n    ] as const),\n\n    storage: createModuleProxy('StorageSystem', [\n      'readFinderState',\n      'writeFinderState',\n      'clearFinderState',\n      'saveOpenModals',\n      'restoreOpenModals',\n      'saveWindowPositions',\n      'restoreWindowPositions',\n      'resetWindowLayout',\n      'getDialogWindowElement',\n    ] as const),\n\n    finder: createModuleProxy('FinderSystem', ['init', 'openFinder', 'closeFinder'] as const),\n\n    textEditor: {\n      init: (container: unknown) => callWindowMethod('TextEditorSystem', 'init', container),\n      loadRemoteFile: (payload: unknown) => callWindowMethod('TextEditorSystem', 'loadRemoteFile', payload),\n      showLoading: (payload: unknown) => callWindowMethod('TextEditorSystem', 'showLoading', payload),\n      showLoadError: (payload: unknown) => callWindowMethod('TextEditorSystem', 'showLoadError', payload),\n      clearEditor: () => callWindowMethod('TextEditorSystem', 'clearEditor'),\n      saveFile: () => callWindowMethod('TextEditorSystem', 'saveFile'),\n      openFile: () => callWindowMethod('TextEditorSystem', 'openFile'),\n      handleMenuAction: (action: unknown) => callWindowMethod('TextEditorSystem', 'handleMenuAction', action),\n    },\n\n    settings: {\n      init: (container: unknown) => callWindowMethod('SettingsSystem', 'init', container),\n      showSection: (section: unknown) => callWindowMethod('SettingsSystem', 'showSection', section),\n      syncThemePreference: () => callWindowMethod('SettingsSystem', 'syncThemePreference'),\n      syncLanguagePreference: () => callWindowMethod('SettingsSystem', 'syncLanguagePreference'),\n    },\n\n    window: {\n      register: (config: unknown) => callWindowMethod('WindowManager', 'register', config),\n      registerAll: (configs: unknown) => callWindowMethod('WindowManager', 'registerAll', configs),\n      getConfig: (id: unknown) => callWindowMethod('WindowManager', 'getConfig', id),\n      open: (id: unknown) => callWindowMethod('WindowManager', 'open', id),\n      close: (id: unknown) => callWindowMethod('WindowManager', 'close', id),\n      bringToFront: (id: unknown) => callWindowMethod('WindowManager', 'bringToFront', id),\n      getTopWindow: () => callWindowMethod('WindowManager', 'getTopWindow'),\n      getProgramInfo: (id: unknown) => callWindowMethod('WindowManager', 'getProgramInfo', id),\n      getAllWindowIds: (): string[] => (callWindowMethod('WindowManager', 'getAllWindowIds') as string[]) || [],\n      getPersistentWindowIds: (): string[] =>\n        (callWindowMethod('WindowManager', 'getPersistentWindowIds') as string[]) || [],\n      getDialogInstance: (id: unknown) => callWindowMethod('WindowManager', 'getDialogInstance', id),\n      syncZIndexWithDOM: () => callWindowMethod('WindowManager', 'syncZIndexWithDOM'),\n    },\n\n    action: {\n      register: (name: unknown, handler: unknown) => callWindowMethod('ActionBus', 'register', name, handler),\n      registerAll: (actions: unknown) => callWindowMethod('ActionBus', 'registerAll', actions),\n      execute: (name: unknown, params: unknown, element: unknown) =>\n        callWindowMethod('ActionBus', 'execute', name, params, element),\n    },\n\n    i18n: {\n      translate: (key: string, fallback?: string): string => {\n        const appI18n = getWindowProp('appI18n');\n        if (appI18n && typeof (appI18n as Record<string, unknown>)['translate'] === 'function') {\n          const result = ((appI18n as Record<string, unknown>)['translate'] as (k: string) => string)(key);\n          return result === key && fallback ? fallback : result;\n        }\n        return fallback || key;\n      },\n      setLanguagePreference: (lang: unknown) => callWindowMethod('appI18n', 'setLanguagePreference', lang),\n      getLanguagePreference: (): string => (callWindowMethod('appI18n', 'getLanguagePreference') as string) || 'system',\n      getActiveLanguage: (): string => (callWindowMethod('appI18n', 'getActiveLanguage') as string) || 'en',\n      applyTranslations: () => callWindowMethod('appI18n', 'applyTranslations'),\n    },\n\n    helpers: {\n      getMenuBarBottom: (): number => {\n        const header = document.querySelector('body > header');\n        if (!header) return 0;\n        return header.getBoundingClientRect().bottom;\n      },\n\n      clampWindowToMenuBar: (target: unknown): unknown => {\n        const fn = getWindowProp('clampWindowToMenuBar');\n        if (typeof fn === 'function') {\n          return (fn as (t: unknown) => unknown)(target);\n        }\n        return undefined;\n      },\n\n      computeSnapMetrics: (side: unknown): unknown => {\n        const fn = getWindowProp('computeSnapMetrics');\n        if (typeof fn === 'function') {\n          return (fn as (s: unknown) => unknown)(side);\n        }\n        return undefined;\n      },\n\n      showSnapPreview: (side: unknown): void => {\n        const fn = getWindowProp('showSnapPreview');\n        if (typeof fn === 'function') {\n          (fn as (s: unknown) => void)(side);\n        }\n      },\n\n      hideSnapPreview: (): void => {\n        const fn = getWindowProp('hideSnapPreview');\n        if (typeof fn === 'function') {\n          (fn as () => void)();\n        }\n      },\n    },\n  } as const;\n\n  (window as unknown as { API: typeof API }).API = API;\n\n  // Legacy compatibility wrappers\n  const createLegacyWrapper = (apiPath: string): ((...args: unknown[]) => unknown) => {\n    return function (...args: unknown[]): unknown {\n      const parts = apiPath.split('.');\n      let fn: unknown = API;\n      for (const part of parts) {\n        fn = (fn as Record<string, unknown>)[part];\n        if (!fn) {\n          console.warn(`Legacy wrapper: ${apiPath} nicht gefunden`);\n          return undefined;\n        }\n      }\n      if (typeof fn === 'function') {\n        return (fn as (...a: unknown[]) => unknown)(...args);\n      }\n      return fn;\n    };\n  };\n\n  const w = window as unknown as Record<string, unknown>;\n\n  // Theme\n  w.setThemePreference = createLegacyWrapper('theme.setThemePreference');\n  w.getThemePreference = createLegacyWrapper('theme.getThemePreference');\n\n  // Icon\n  w.ensureSvgNamespace = createLegacyWrapper('icon.ensureSvgNamespace');\n  w.getMenuIconSvg = createLegacyWrapper('icon.getMenuIconSvg');\n  w.renderIconIntoElement = createLegacyWrapper('icon.renderIconIntoElement');\n\n  // Dock\n  w.getDockReservedBottom = createLegacyWrapper('dock.getDockReservedBottom');\n  w.initDockMagnification = createLegacyWrapper('dock.initDockMagnification');\n\n  // Menu\n  w.renderApplicationMenu = createLegacyWrapper('menu.renderApplicationMenu');\n  w.handleMenuActionActivation = createLegacyWrapper('menu.handleMenuActionActivation');\n\n  // Desktop\n  w.initDesktop = createLegacyWrapper('desktop.initDesktop');\n  w.openDesktopItemById = createLegacyWrapper('desktop.openDesktopItemById');\n\n  // System\n  w.initSystemStatusControls = createLegacyWrapper('system.initSystemStatusControls');\n  w.updateAllSystemStatusUI = createLegacyWrapper('system.updateAllSystemStatusUI');\n  w.handleSystemToggle = createLegacyWrapper('system.handleSystemToggle');\n  w.setConnectedNetwork = createLegacyWrapper('system.setConnectedNetwork');\n  w.setBluetoothDevice = createLegacyWrapper('system.setBluetoothDevice');\n  w.setAudioDevice = createLegacyWrapper('system.setAudioDevice');\n\n  // Storage\n  w.readFinderState = createLegacyWrapper('storage.readFinderState');\n  w.writeFinderState = createLegacyWrapper('storage.writeFinderState');\n  w.clearFinderState = createLegacyWrapper('storage.clearFinderState');\n  w.saveOpenModals = createLegacyWrapper('storage.saveOpenModals');\n  w.restoreOpenModals = createLegacyWrapper('storage.restoreOpenModals');\n  w.saveWindowPositions = createLegacyWrapper('storage.saveWindowPositions');\n  w.restoreWindowPositions = createLegacyWrapper('storage.restoreWindowPositions');\n  w.resetWindowLayout = createLegacyWrapper('storage.resetWindowLayout');\n})();\n", "/**\n * WindowManager - Central registry for windows/modals with z-index and program metadata (TypeScript).\n * Mirrors js/window-manager.js behavior while adding types and preserving global API.\n */\n\n(() => {\n    'use strict';\n\n    type WindowType = 'persistent' | 'transient';\n\n    type DialogLike = {\n        open?: () => void;\n        close?: () => void;\n        bringToFront?: () => void;\n    } | null;\n\n    type WindowConfigOptions = {\n        id: string;\n        type?: WindowType;\n        programKey?: string;\n        icon?: string;\n        closeButtonId?: string | null;\n        metadata?: Record<string, unknown>;\n    };\n\n    type ProgramInfo = {\n        modalId: string | null;\n        programLabel: string;\n        infoLabel: string;\n        fallbackInfoModalId: string;\n        icon: string;\n        about: Record<string, string>;\n    };\n\n    class WindowConfig {\n        id: string;\n        type: WindowType;\n        programKey: string;\n        icon: string;\n        closeButtonId: string | null;\n        dialogInstance: DialogLike;\n        metadata: Record<string, unknown>;\n\n        constructor(options: WindowConfigOptions) {\n            this.id = options.id;\n            this.type = options.type || 'persistent';\n            this.programKey = options.programKey || 'programs.default';\n            this.icon = options.icon || './img/sucher.png';\n            this.closeButtonId = options.closeButtonId ?? null;\n            this.dialogInstance = null;\n            this.metadata = options.metadata || {};\n        }\n\n        isTransient(): boolean {\n            return this.type === 'transient';\n        }\n\n        getProgramInfo(): ProgramInfo {\n            const w = window as unknown as Record<string, unknown>;\n            const i18n =\n                (w['appI18n'] as { translate?: (k: string) => string } | undefined) || undefined;\n            const translate = i18n?.translate || ((key: string) => key);\n\n            const aboutFields = ['name', 'tagline', 'version', 'copyright'];\n            const info: ProgramInfo = {\n                modalId: this.id,\n                programLabel: translate(`${this.programKey}.label`),\n                infoLabel: translate(`${this.programKey}.infoLabel`),\n                fallbackInfoModalId:\n                    (this.metadata.fallbackInfoModalId as string) || 'program-info-modal',\n                icon: this.icon,\n                about: {},\n            };\n            aboutFields.forEach(field => {\n                info.about[field] = translate(`${this.programKey}.about.${field}`);\n            });\n            return info;\n        }\n    }\n\n    const windowRegistry = new Map<string, WindowConfig>();\n    const baseZIndex = 1000;\n    let topZIndex = 1000;\n\n    const WindowManager = {\n        register(config: WindowConfigOptions): WindowConfig {\n            const windowConfig = new WindowConfig(config);\n            windowRegistry.set(config.id, windowConfig);\n            return windowConfig;\n        },\n\n        registerAll(configs: WindowConfigOptions[]): void {\n            configs.forEach(c => this.register(c));\n        },\n\n        getConfig(windowId: string): WindowConfig | null {\n            return windowRegistry.get(windowId) || null;\n        },\n\n        getAllWindowIds(): string[] {\n            return Array.from(windowRegistry.keys());\n        },\n\n        getPersistentWindowIds(): string[] {\n            return this.getAllWindowIds().filter(id => {\n                const config = this.getConfig(id);\n                return !!config && !config.isTransient();\n            });\n        },\n\n        getTransientWindowIds(): string[] {\n            return this.getAllWindowIds().filter(id => {\n                const config = this.getConfig(id);\n                return !!config && config.isTransient();\n            });\n        },\n\n        setDialogInstance(windowId: string, instance: DialogLike): void {\n            const config = this.getConfig(windowId);\n            if (config) {\n                config.dialogInstance = instance;\n            }\n        },\n\n        getDialogInstance(windowId: string): DialogLike {\n            const config = this.getConfig(windowId);\n            return (config && config.dialogInstance) || null;\n        },\n\n        getAllDialogInstances(): Record<string, DialogLike> {\n            const dialogs: Record<string, DialogLike> = {};\n            windowRegistry.forEach((config, id) => {\n                if (config.dialogInstance) {\n                    dialogs[id] = config.dialogInstance;\n                }\n            });\n            return dialogs;\n        },\n\n        getTopWindow(): HTMLElement | null {\n            let topModal: HTMLElement | null = null;\n            let highestZ = 0;\n            this.getAllWindowIds().forEach(id => {\n                const modal = document.getElementById(id);\n                if (modal && !modal.classList.contains('hidden')) {\n                    const zIndex = parseInt(getComputedStyle(modal).zIndex, 10) || 0;\n                    if (zIndex > highestZ) {\n                        highestZ = zIndex;\n                        topModal = modal;\n                    }\n                }\n            });\n            return topModal;\n        },\n\n        bringToFront(windowId: string): void {\n            const instance = this.getDialogInstance(windowId);\n            if (instance && typeof instance.bringToFront === 'function') {\n                instance.bringToFront();\n            } else {\n                console.warn(`Keine Dialog-Instanz f\u00FCr ${windowId} gefunden.`);\n            }\n        },\n\n        open(windowId: string): void {\n            const config = this.getConfig(windowId);\n            // Run the configured initHandler on every open. Some windows rely on\n            // per-open initialization (e.g., Finder multi-instance recreation).\n            if (\n                config &&\n                config.metadata &&\n                typeof (config.metadata as Record<string, unknown>).initHandler === 'function'\n            ) {\n                try {\n                    const md = config.metadata as Record<string, unknown> & {\n                        initHandler?: () => void;\n                    };\n                    if (typeof md.initHandler === 'function') md.initHandler();\n                } catch (e) {\n                    console.warn(`Init handler for ${windowId} threw:`, e);\n                }\n            }\n            const instance = this.getDialogInstance(windowId);\n            if (instance && typeof instance.open === 'function') {\n                instance.open();\n            } else {\n                const modal = document.getElementById(windowId);\n                if (modal) {\n                    const domUtils = (window as any).DOMUtils;\n                    if (domUtils && typeof domUtils.show === 'function') {\n                        domUtils.show(modal);\n                    } else {\n                        modal.classList.remove('hidden');\n                    }\n                    this.bringToFront(windowId);\n                }\n            }\n        },\n\n        close(windowId: string): void {\n            const instance = this.getDialogInstance(windowId);\n            if (instance && typeof instance.close === 'function') {\n                instance.close();\n            } else {\n                const modal = document.getElementById(windowId);\n                if (modal) {\n                    const domUtils = (window as any).DOMUtils;\n                    if (domUtils && typeof domUtils.hide === 'function') {\n                        domUtils.hide(modal);\n                    } else {\n                        modal.classList.add('hidden');\n                    }\n                }\n            }\n        },\n\n        getNextZIndex(): number {\n            topZIndex++;\n            return topZIndex;\n        },\n\n        syncZIndexWithDOM(): number {\n            let maxZ = baseZIndex;\n            this.getAllWindowIds().forEach(id => {\n                const modal = document.getElementById(id);\n                if (!modal) return;\n                const modalZ = parseInt(window.getComputedStyle(modal).zIndex, 10);\n                if (!Number.isNaN(modalZ)) maxZ = Math.max(maxZ, modalZ);\n                const windowEl = this.getDialogWindowElement(modal);\n                if (windowEl) {\n                    const contentZ = parseInt(window.getComputedStyle(windowEl).zIndex, 10);\n                    if (!Number.isNaN(contentZ)) maxZ = Math.max(maxZ, contentZ);\n                }\n            });\n            topZIndex = maxZ;\n            return maxZ;\n        },\n\n        getDialogWindowElement(modal: HTMLElement | null): HTMLElement | null {\n            if (!modal) return null;\n            return (modal.querySelector('.autopointer') as HTMLElement | null) || modal;\n        },\n\n        getProgramInfo(windowId: string): ProgramInfo {\n            const config = this.getConfig(windowId);\n            if (config) return config.getProgramInfo();\n            return this.getDefaultProgramInfo();\n        },\n\n        getDefaultProgramInfo(): ProgramInfo {\n            const w = window as unknown as Record<string, unknown>;\n            const i18n =\n                (w['appI18n'] as { translate?: (k: string) => string } | undefined) || undefined;\n            const translate = i18n?.translate || ((key: string) => key);\n            const programKey = 'programs.default';\n            return {\n                modalId: null,\n                programLabel: translate(`${programKey}.label`),\n                infoLabel: translate(`${programKey}.infoLabel`),\n                fallbackInfoModalId: 'program-info-modal',\n                icon: './img/sucher.png',\n                about: {\n                    name: translate(`${programKey}.about.name`),\n                    tagline: translate(`${programKey}.about.tagline`),\n                    version: translate(`${programKey}.about.version`),\n                    copyright: translate(`${programKey}.about.copyright`),\n                },\n            };\n        },\n\n        get topZIndex(): number {\n            return topZIndex;\n        },\n        set topZIndex(value: number) {\n            topZIndex = value;\n        },\n        get baseZIndex(): number {\n            return baseZIndex;\n        },\n    };\n\n    (window as unknown as { WindowManager: typeof WindowManager }).WindowManager = WindowManager;\n\n    Object.defineProperty(window, 'topZIndex', {\n        get: () => WindowManager.topZIndex,\n        set: (value: number) => {\n            WindowManager.topZIndex = value;\n        },\n    });\n})();\n", "/**\n * ActionBus - Declarative event system to wire UI actions via data-action attributes.\n *\n * Example:\n *   <button data-action=\"closeWindow\" data-window-id=\"finder-modal\">Close</button>\n *   ActionBus.register('closeWindow', (params, el) => { ... })\n */\nconsole.log('ActionBus loaded');\n\n(function () {\n  'use strict';\n\n  type Params = Record<string, string | undefined>;\n  type Handler = (params: Params, element: HTMLElement | null) => void;\n\n  // Narrowly typed window surface we rely on\n  type GlobalExtras = {\n    dialogs?: Record<string, { open?: () => void; close?: () => void }>;\n    hideMenuDropdowns?: () => void;\n    resetWindowLayout?: () => void;\n    openProgramInfoDialog?: (arg: unknown) => void;\n    updateProgramLabelByTopModal?: () => void;\n    saveOpenModals?: () => void;\n    updateDockIndicators?: () => void;\n    openDesktopItemById?: (id: string) => void;\n  };\n\n  // Helper type to access the subset of FinderSystem APIs we call here\n  type FinderSystemLite = {\n    navigateUp?: () => void;\n    getState?: () => { currentView: string };\n    navigateTo?: (parts: string[], view?: string) => void;\n    setViewMode?: (mode: string) => void;\n    setSortBy?: (field: string) => void;\n    openItem?: (name: string, type: string) => void;\n  };\n  type WF = Window & { FinderSystem?: FinderSystemLite };\n\n  const actionHandlers = new Map<string, Handler>();\n  const eventDelegates: Array<{ eventType: string; delegate: (e: Event) => void }> = [];\n\n  const ActionBus = {\n    /**\n     * Registriert einen Action-Handler\n     * @param {string} actionName - Name der Action\n     * @param {Function} handler - Handler-Funktion (params, element) => void\n     */\n    register(actionName: string, handler: Handler) {\n      if (!actionName || typeof handler !== 'function') {\n        console.error('Invalid action registration:', actionName);\n        return;\n      }\n      actionHandlers.set(actionName, handler);\n    },\n\n    /**\n     * Registriert mehrere Actions auf einmal\n     * @param {Object} actions - Object mit actionName: handler Paaren\n     */\n    registerAll(actions: Record<string, Handler>) {\n      Object.entries(actions).forEach(([name, handler]) => {\n        this.register(name, handler);\n      });\n    },\n\n    /**\n     * F\u00FChrt eine Action aus\n     * @param {string} actionName - Name der Action\n     * @param {Object} params - Parameter f\u00FCr die Action\n     * @param {HTMLElement|null} element - Element das die Action ausgel\u00F6st hat\n     */\n    execute(actionName: string, params: Params = {}, element: HTMLElement | null = null) {\n      const handler = actionHandlers.get(actionName);\n      if (!handler) {\n        console.warn(`No handler registered for action: ${actionName}`);\n        return;\n      }\n\n      try {\n        handler(params, element);\n      } catch (error) {\n        console.error(`Error executing action ${actionName}:`, error);\n      }\n    },\n\n    /**\n     * Initialisiert das Event-Delegation System\n     * Sucht alle Elemente mit data-action und bindet sie\n     */\n    init() {\n      // Click-Events\n      this.delegateEvent('click', '[data-action]', (element, event) => {\n        const actionName = element.getAttribute('data-action') as string;\n        const params = this.extractParams(element);\n\n        // Prevent default for buttons and links\n        if (element.tagName === 'BUTTON' || element.tagName === 'A') {\n          event.preventDefault();\n        }\n        event.stopPropagation();\n\n        this.execute(actionName, params, element);\n      });\n\n      // Double-click support for data-action-dblclick\n      this.delegateEvent('dblclick', '[data-action-dblclick]', (element, event) => {\n        const actionName = element.getAttribute('data-action-dblclick') as string;\n        const params = this.extractParams(element);\n        if (element.tagName === 'BUTTON' || element.tagName === 'A') {\n          event.preventDefault();\n        }\n        event.stopPropagation();\n        this.execute(actionName, params, element);\n      });\n\n      // Support f\u00FCr data-action-hover\n      this.delegateEvent('mouseenter', '[data-action-hover]', (element) => {\n        const actionName = element.getAttribute('data-action-hover') as string;\n        const params = this.extractParams(element);\n        this.execute(actionName, params, element);\n      });\n\n      console.log('ActionBus initialized');\n    },\n\n    /**\n     * Event-Delegation Helper\n     */\n    delegateEvent(eventType: string, selector: string, handler: (element: HTMLElement, event: Event) => void) {\n      const delegate = (event: Event) => {\n        const target = event.target;\n        if (!(target instanceof Element)) return;\n\n        const element = target.closest(selector) as HTMLElement | null;\n        if (element) {\n          handler(element, event);\n        }\n      };\n\n      document.addEventListener(eventType, delegate as EventListener);\n      eventDelegates.push({ eventType, delegate });\n    },\n\n    /**\n     * Extrahiert Parameter aus data-* Attributen\n     */\n    extractParams(element: HTMLElement): Params {\n      const params: Params = {};\n      const dataset = element.dataset;\n\n      // Alle data-* Attribute durchgehen, au\u00DFer data-action selbst\n      for (const key in dataset) {\n        if (key !== 'action' && key !== 'actionHover') {\n          params[key] = dataset[key];\n        }\n      }\n\n      return params;\n    },\n\n    /**\n     * Cleanup - entfernt alle Event-Listener\n     */\n    destroy() {\n      eventDelegates.forEach(({ eventType, delegate }) => {\n        document.removeEventListener(eventType, delegate as EventListener);\n      });\n      eventDelegates.length = 0;\n      actionHandlers.clear();\n    },\n  } as const;\n\n  // Standard-Actions registrieren\n  ActionBus.registerAll({\n    // Fenster schlie\u00DFen\n    closeWindow: (params: Params) => {\n      const windowId = params.windowId;\n      if (!windowId) {\n        console.warn('closeWindow: missing windowId');\n        return;\n      }\n\n      const g = window as unknown as Window & GlobalExtras;\n      const wm = (window as Window & { WindowManager?: { close?: (id: string) => void } }).WindowManager;\n      if (wm && typeof wm.close === 'function') {\n        wm.close(windowId);\n      }\n\n      // Callbacks\n      g.saveOpenModals?.();\n      g.updateDockIndicators?.();\n      g.updateProgramLabelByTopModal?.();\n    },\n\n    // Fenster \u00F6ffnen\n    openWindow: (params: Params) => {\n      const windowId = params.windowId;\n      if (!windowId) {\n        console.warn('openWindow: missing windowId');\n        return;\n      }\n\n      // Close launchpad if it's open (clicking dock icon while launchpad is visible)\n      const launchpadModal = document.getElementById('launchpad-modal');\n      if (launchpadModal && !launchpadModal.classList.contains('hidden')) {\n        const g = window as unknown as Window & GlobalExtras;\n        g.dialogs?.['launchpad-modal']?.close?.();\n      }\n\n      (window as Window & { WindowManager?: { open?: (id: string) => void } }).WindowManager?.open?.(windowId);\n\n      // Callbacks\n      (window as unknown as Window & GlobalExtras).updateProgramLabelByTopModal?.();\n    },\n\n    // Aktuelles (oberstes) Fenster schlie\u00DFen\n    closeTopWindow: () => {\n      const g = window as unknown as Window & GlobalExtras & { WindowManager?: { getTopWindow?: () => unknown; close?: (id: string) => void } };\n      g.hideMenuDropdowns?.();\n\n      const maybeTop = g.WindowManager?.getTopWindow?.();\n      let topId: string | null = null;\n      if (typeof maybeTop === 'string') {\n        topId = maybeTop;\n      } else if (maybeTop && typeof maybeTop === 'object') {\n        const obj = maybeTop as Record<string, unknown>;\n        if (typeof obj.id === 'string') topId = obj.id;\n      }\n      if (!topId) return;\n\n      g.WindowManager?.close?.(topId);\n\n      g.saveOpenModals?.();\n      g.updateDockIndicators?.();\n      g.updateProgramLabelByTopModal?.();\n    },\n\n    // Window-Layout zur\u00FCcksetzen\n    resetWindowLayout: () => {\n      const g = window as unknown as Window & GlobalExtras;\n      g.hideMenuDropdowns?.();\n      g.resetWindowLayout?.();\n    },\n\n    // Program-Info Dialog \u00F6ffnen\n    openProgramInfo: (_params: Params, _element: HTMLElement | null) => {\n      const g = window as unknown as Window & GlobalExtras;\n      g.hideMenuDropdowns?.();\n      g.openProgramInfoDialog?.(null);\n    },\n\n    // \u00DCber-Dialog \u00F6ffnen (aus Apple-Men\u00FC)\n    openAbout: () => {\n      const g = window as unknown as Window & GlobalExtras;\n      g.hideMenuDropdowns?.();\n      g.dialogs?.['about-modal']?.open?.();\n      g.updateProgramLabelByTopModal?.();\n    },\n\n    // Settings \u00F6ffnen\n    openSettings: () => {\n      const g = window as unknown as Window & GlobalExtras;\n      g.hideMenuDropdowns?.();\n      g.dialogs?.['settings-modal']?.open?.();\n      g.updateProgramLabelByTopModal?.();\n    },\n\n    // Desktop-Item \u00F6ffnen (f\u00FCr Dock-Icons)\n    openDesktopItem: (params: Params) => {\n      const itemId = params.itemId;\n      if (!itemId) {\n        console.warn('openDesktopItem: missing itemId');\n        return;\n      }\n      const g = window as unknown as Window & GlobalExtras;\n      g.openDesktopItemById?.(itemId);\n    },\n\n    // Finder: eine Ebene nach oben\n    'finder:navigateUp': () => {\n      const wf = window as unknown as WF;\n      wf.FinderSystem?.navigateUp?.();\n    },\n\n    // Finder: zur Root der aktuellen Ansicht\n    'finder:goRoot': () => {\n      const wf = window as unknown as WF;\n      if (wf.FinderSystem?.navigateTo && wf.FinderSystem?.getState) {\n        const view = wf.FinderSystem.getState().currentView;\n        wf.FinderSystem.navigateTo([], view);\n      }\n    },\n\n    // Finder: Ansicht wechseln (computer/github/favorites/recent)\n    'finder:switchView': (params: Params) => {\n  const view = params['finderView'] || params.view;\n      if (!view) {\n        console.warn('finder:switchView: missing finderView');\n        return;\n      }\n      const wf = window as unknown as WF;\n      wf.FinderSystem?.navigateTo?.([], view as string);\n    },\n\n    // Finder: View-Mode setzen (list/grid/columns)\n    'finder:setViewMode': (params: Params) => {\n  const mode = params['viewMode'] || params['mode'];\n      if (!mode) {\n        console.warn('finder:setViewMode: missing viewMode');\n        return;\n      }\n      const wf = window as unknown as WF;\n      wf.FinderSystem?.setViewMode?.(mode as string);\n    },\n\n    // Finder: Sortierung setzen\n    'finder:setSortBy': (params: Params) => {\n  const field = params['sortBy'] || params['field'];\n      if (!field) {\n        console.warn('finder:setSortBy: missing sortBy');\n        return;\n      }\n      const wf = window as unknown as WF;\n      wf.FinderSystem?.setSortBy?.(field as string);\n    },\n\n    // Finder: In Pfad navigieren (data-path=\"A/B/C\")\n    'finder:navigateToPath': (params: Params) => {\n      const raw = params.path || '';\n      const parts = typeof raw === 'string' && raw.length ? raw.split('/') : [];\n      const wf = window as unknown as WF;\n      wf.FinderSystem?.navigateTo?.(parts);\n    },\n\n    // Finder: Item \u00F6ffnen (Datei oder Ordner)\n    'finder:openItem': (params: Params) => {\n  const name = params['itemName'] || params['name'];\n  const type = params['itemType'] || params['type'];\n      if (!name || !type) {\n        console.warn('finder:openItem: missing name/type');\n        return;\n      }\n      const wf = window as unknown as WF;\n      wf.FinderSystem?.openItem?.(name as string, type as string);\n    },\n  });\n\n  // Globaler Export\n  (window as unknown as { ActionBus: typeof ActionBus }).ActionBus = ActionBus;\n})();\n", "/**\n * Dialog Utilities Module\n * Provides window/dialog z-index management and focus control functions.\n *\n * This module centralizes dialog utility functions that were previously scattered\n * in app.js, providing typed interfaces for better maintainability.\n *\n * @module dialog-utils\n */\n\n// Export to make this a proper module for global augmentation\nexport {};\n\n/**\n * Global window interface extensions for dialog utilities\n * Note: APP_CONSTANTS and topZIndex are defined in types/index.d.ts\n */\ndeclare global {\n    interface Window {\n        dialogs?: {\n            [key: string]: {\n                modal?: HTMLElement;\n                bringToFront?: () => void;\n            };\n        };\n        syncTopZIndexWithDOM?: () => void;\n        bringDialogToFront?: (dialogId: string) => void;\n        bringAllWindowsToFront?: () => void;\n    }\n}\n\n/**\n * Type helper for WindowManager (defined in types/window-manager.d.ts)\n */\ninterface IWindowManager {\n    syncZIndexWithDOM?: () => void;\n    getAllWindowIds?: () => string[];\n}\n\n/**\n * Get all modal IDs from WindowManager or fallback to APP_CONSTANTS\n * @returns Array of modal element IDs\n */\nfunction getModalIds(): string[] {\n    const win = window as Window & { WindowManager?: IWindowManager };\n    if (win.WindowManager && typeof win.WindowManager.getAllWindowIds === 'function') {\n        return win.WindowManager.getAllWindowIds();\n    }\n    // Cast window to access APP_CONSTANTS (defined in types/index.d.ts)\n    const w = window as Window & { APP_CONSTANTS?: Record<string, unknown> };\n    const appConstants = w.APP_CONSTANTS as { MODAL_IDS?: string[] } | undefined;\n    return appConstants?.MODAL_IDS || [];\n}\n\n/**\n * Synchronize the global topZIndex counter with the actual DOM z-index values.\n * Scans all registered modals and updates the topZIndex to match the highest z-index found.\n *\n * Delegates to WindowManager.syncZIndexWithDOM if available, otherwise uses fallback implementation.\n */\nfunction syncTopZIndexWithDOM(): void {\n    const win = window as Window & { WindowManager?: IWindowManager };\n    if (\n        win.WindowManager &&\n        typeof win.WindowManager.syncZIndexWithDOM === 'function'\n    ) {\n        win.WindowManager.syncZIndexWithDOM();\n        return;\n    }\n\n    // Fallback implementation\n    let maxZ = 1000;\n    const modalIds = getModalIds();\n\n    modalIds.forEach((id) => {\n        const modal = document.getElementById(id);\n        if (!modal) return;\n        const modalZ = parseInt(window.getComputedStyle(modal).zIndex, 10);\n        if (!Number.isNaN(modalZ)) {\n            maxZ = Math.max(maxZ, modalZ);\n        }\n    });\n\n    // Cast window to access topZIndex (defined in types/index.d.ts)\n    // Note: topZIndex is required in the type definition, but may not exist at runtime\n    const w = window as unknown as Window & { topZIndex?: number };\n    if (w.topZIndex !== undefined) {\n        w.topZIndex = maxZ;\n    }\n}\n\n/**\n * Bring a specific dialog/window to front by calling its bringToFront method.\n * This is the recommended way to change window focus programmatically.\n *\n * @param dialogId - The ID of the dialog element to bring to front\n */\nfunction bringDialogToFront(dialogId: string): void {\n    if (window.dialogs?.[dialogId]) {\n        window.dialogs[dialogId].bringToFront?.();\n    } else {\n        console.error('Kein Dialog mit der ID ' + dialogId + ' gefunden.');\n    }\n}\n\n/**\n * Bring all currently visible (non-hidden) windows to front.\n * Used by menu system to refresh z-index stack of all open windows.\n * Iterates through all registered dialogs and calls bringToFront on visible ones.\n */\nfunction bringAllWindowsToFront(): void {\n    const modalIds = getModalIds();\n    if (!window.dialogs || !modalIds || !Array.isArray(modalIds)) return;\n\n    modalIds.forEach((id) => {\n        const dialog = window.dialogs?.[id];\n        if (\n            dialog &&\n            dialog.modal &&\n            !dialog.modal.classList.contains('hidden') &&\n            typeof dialog.bringToFront === 'function'\n        ) {\n            dialog.bringToFront();\n        }\n    });\n}\n\n// ============================================================================\n// IIFE Export Pattern - Expose functions globally with guard to prevent redeclaration\n// ============================================================================\n\n(() => {\n    if (typeof window.syncTopZIndexWithDOM !== 'function') {\n        window.syncTopZIndexWithDOM = syncTopZIndexWithDOM;\n    }\n    if (typeof window.bringDialogToFront !== 'function') {\n        window.bringDialogToFront = bringDialogToFront;\n    }\n    if (typeof window.bringAllWindowsToFront !== 'function') {\n        window.bringAllWindowsToFront = bringAllWindowsToFront;\n    }\n})();\n", "(function () {\n    'use strict';\n\n    // ============================================================================\n    // Snap & Window Utilities\n    // ============================================================================\n\n    /**\n     * Get the bottom position of the menu bar (header element).\n     * @returns The bottom edge of the menu bar in pixels.\n     */\n    function getMenuBarBottom(): number {\n        const header = document.querySelector('body > header');\n        if (!header) {\n            return 0;\n        }\n        const rect = header.getBoundingClientRect();\n        return rect.bottom;\n    }\n\n    /**\n     * Clamp a window element so it doesn't overlap the menu bar.\n     * @param target - The element to clamp (e.g., a modal or dialog window).\n     */\n    function clampWindowToMenuBar(target: HTMLElement | null): void {\n        if (!target) return;\n        const minTop = getMenuBarBottom();\n        if (minTop <= 0) return;\n        const computed = window.getComputedStyle(target);\n        if (computed.position === 'static') {\n            target.style.position = 'fixed';\n        }\n        const currentTop = parseFloat(target.style.top);\n        const numericTop = Number.isNaN(currentTop)\n            ? parseFloat(computed.top)\n            : currentTop;\n        if (!Number.isNaN(numericTop) && numericTop < minTop) {\n            target.style.top = `${minTop}px`;\n        } else if (Number.isNaN(numericTop)) {\n            const rect = target.getBoundingClientRect();\n            if (rect.top < minTop) {\n                if (!target.style.left) {\n                    target.style.left = `${rect.left}px`;\n                }\n                target.style.top = `${minTop}px`;\n            }\n        }\n    }\n\n    /**\n     * Compute snap metrics for window snapping (left or right side).\n     * @param side - The side to snap to ('left' or 'right').\n     * @returns Snap metrics (left, top, width, height) or null if invalid.\n     */\n    function computeSnapMetrics(\n        side: 'left' | 'right'\n    ): { left: number; top: number; width: number; height: number } | null {\n        if (side !== 'left' && side !== 'right') return null;\n        const minTop = Math.round(getMenuBarBottom());\n        const viewportWidth = Math.max(window.innerWidth || 0, 0);\n        const viewportHeight = Math.max(window.innerHeight || 0, 0);\n        if (viewportWidth <= 0 || viewportHeight <= 0) return null;\n        const minWidth = Math.min(320, viewportWidth);\n        const halfWidth = Math.round(viewportWidth / 2);\n        const width = Math.max(Math.min(halfWidth, viewportWidth), minWidth);\n        const left = side === 'left' ? 0 : Math.max(0, viewportWidth - width);\n        const top = minTop;\n\n        // Fetch dock reserved bottom height\n        const getDockReservedBottom =\n            (window as unknown as { getDockReservedBottom?: () => number }).getDockReservedBottom;\n        const dockReserve = typeof getDockReservedBottom === 'function' ? getDockReservedBottom() : 0;\n\n        const height = Math.max(0, viewportHeight - top - dockReserve);\n        return { left, top, width, height };\n    }\n\n    let snapPreviewElement: HTMLElement | null = null;\n\n    /**\n     * Ensure the snap preview overlay element exists in the DOM.\n     * @returns The snap preview element or null if DOM is unavailable.\n     */\n    function ensureSnapPreviewElement(): HTMLElement | null {\n        if (snapPreviewElement && snapPreviewElement.isConnected) {\n            return snapPreviewElement;\n        }\n        if (!document || !document.body) {\n            return null;\n        }\n        snapPreviewElement = document.getElementById('snap-preview-overlay');\n        if (!snapPreviewElement) {\n            snapPreviewElement = document.createElement('div');\n            snapPreviewElement.id = 'snap-preview-overlay';\n            snapPreviewElement.setAttribute('aria-hidden', 'true');\n            document.body.appendChild(snapPreviewElement);\n        }\n        return snapPreviewElement;\n    }\n\n    /**\n     * Show a snap preview overlay on the specified side.\n     * @param side - The side to preview snapping ('left' or 'right').\n     */\n    function showSnapPreview(side: 'left' | 'right'): void {\n        const metrics = computeSnapMetrics(side);\n        if (!metrics) {\n            hideSnapPreview();\n            return;\n        }\n        const el = ensureSnapPreviewElement();\n        if (!el) return;\n        el.style.left = `${metrics.left}px`;\n        el.style.top = `${metrics.top}px`;\n        el.style.width = `${metrics.width}px`;\n        el.style.height = `${metrics.height}px`;\n        el.setAttribute('data-side', side);\n        el.classList.add('snap-preview-visible');\n    }\n\n    /**\n     * Hide the snap preview overlay.\n     */\n    function hideSnapPreview(): void {\n        if (!snapPreviewElement || !snapPreviewElement.isConnected) {\n            return;\n        }\n        snapPreviewElement.classList.remove('snap-preview-visible');\n        snapPreviewElement.removeAttribute('data-side');\n    }\n\n    // ============================================================================\n    // Expose globally (guarded to avoid redeclare)\n    // ============================================================================\n\n    type GlobalWindow = typeof window & {\n        getMenuBarBottom?: typeof getMenuBarBottom;\n        clampWindowToMenuBar?: typeof clampWindowToMenuBar;\n        computeSnapMetrics?: typeof computeSnapMetrics;\n        showSnapPreview?: typeof showSnapPreview;\n        hideSnapPreview?: typeof hideSnapPreview;\n    };\n\n    const g = window as GlobalWindow;\n\n    if (typeof g.getMenuBarBottom !== 'function') {\n        g.getMenuBarBottom = getMenuBarBottom;\n    }\n    if (typeof g.clampWindowToMenuBar !== 'function') {\n        g.clampWindowToMenuBar = clampWindowToMenuBar;\n    }\n    if (typeof g.computeSnapMetrics !== 'function') {\n        g.computeSnapMetrics = computeSnapMetrics;\n    }\n    if (typeof g.showSnapPreview !== 'function') {\n        g.showSnapPreview = showSnapPreview;\n    }\n    if (typeof g.hideSnapPreview !== 'function') {\n        g.hideSnapPreview = hideSnapPreview;\n    }\n})();\n", "(function () {\n    'use strict';\n\n    type EditorMessage = { type: string; command?: string; payload?: unknown };\n    type GlobalWindow = {\n        dialogs?: Record<string, { modal?: HTMLElement | null } | undefined>;\n        postToTextEditor?: (msg: EditorMessage) => void;\n        getImageViewerState?: () => { hasImage: boolean; src: string };\n        openActiveImageInNewTab?: () => void;\n        downloadActiveImage?: () => void;\n        sendTextEditorMenuAction?: (command: string) => void;\n    } & Window;\n\n    const gw = (window as unknown as GlobalWindow);\n\n    // --- Text Editor Menu Action Bridge ---\n    function getTextEditorIframe(): HTMLIFrameElement | null {\n        const dialogs = gw.dialogs;\n        const dialog = dialogs ? dialogs['text-modal'] : null;\n        if (!dialog || !dialog.modal) return null;\n        return dialog.modal.querySelector('iframe');\n    }\n\n    function postToTextEditor(message: EditorMessage, attempt = 0): void {\n        if (!message || typeof message !== 'object') return;\n        // Prefer legacy global if available\n        const legacy = gw.postToTextEditor;\n        if (typeof legacy === 'function') {\n            legacy(message);\n            return;\n        }\n        const iframe = getTextEditorIframe();\n        if (iframe && iframe.contentWindow) {\n            let targetOrigin = '*';\n            if (\n                window.location &&\n                typeof window.location.origin === 'string' &&\n                window.location.origin !== 'null'\n            ) {\n                targetOrigin = window.location.origin;\n            }\n            iframe.contentWindow.postMessage(message, targetOrigin);\n            return;\n        }\n        if (attempt < 10) {\n            setTimeout(() => postToTextEditor(message, attempt + 1), 120);\n        } else {\n            console.warn('Texteditor iframe nicht verf\u00FCgbar, Nachricht verworfen.', message);\n        }\n    }\n\n    function sendTextEditorMenuAction(command: string): void {\n        if (!command) return;\n        postToTextEditor({ type: 'textEditor:menuAction', command });\n    }\n\n    // --- Image Viewer Helpers ---\n    function getImageViewerState(): { hasImage: boolean; src: string } {\n        const viewer = document.getElementById('image-viewer') as HTMLImageElement | null;\n        if (!viewer) return { hasImage: false, src: '' };\n        const hidden = viewer.classList.contains('hidden');\n        const src = viewer.getAttribute('src') || viewer.src || '';\n        const hasImage = Boolean(src && src.trim() && !hidden);\n        return { hasImage, src };\n    }\n\n    function openActiveImageInNewTab(): void {\n        const state = getImageViewerState();\n        if (!state.hasImage || !state.src) return;\n        window.open(state.src, '_blank', 'noopener');\n    }\n\n    function downloadActiveImage(): void {\n        const state = getImageViewerState();\n        if (!state.hasImage || !state.src) return;\n        const link = document.createElement('a');\n        link.href = state.src;\n        let fileName = 'bild';\n        try {\n            const url = new URL(state.src, window.location.href);\n            fileName = url.pathname.split('/').pop() || fileName;\n        } catch {\n            fileName = 'bild';\n        }\n        link.download = fileName || 'bild';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n    }\n\n    // Export globals (do not override if already present)\n    if (typeof gw.getImageViewerState !== 'function') gw.getImageViewerState = getImageViewerState;\n    if (typeof gw.openActiveImageInNewTab !== 'function') gw.openActiveImageInNewTab = openActiveImageInNewTab;\n    if (typeof gw.downloadActiveImage !== 'function') gw.downloadActiveImage = downloadActiveImage;\n    if (typeof gw.sendTextEditorMenuAction !== 'function') gw.sendTextEditorMenuAction = sendTextEditorMenuAction;\n})();\n", "(function () {\n    'use strict';\n\n    type ProgramInfo = {\n        modalId: string | null;\n        programLabel: string;\n        infoLabel: string;\n        fallbackInfoModalId?: string;\n        icon?: string;\n        about?: { name?: string; tagline?: string; version?: string; copyright?: string };\n    };\n\n    // Resolve Program Info via WindowManager or fallback\n    function resolveProgramInfo(modalId: string | null): ProgramInfo {\n        const wm = (window as unknown as { WindowManager?: { getProgramInfo: (id: string | null) => ProgramInfo } }).WindowManager;\n        if (wm && typeof wm.getProgramInfo === 'function') {\n            return wm.getProgramInfo(modalId);\n        }\n        const translate = (window as unknown as { translate?: (k: string, fb?: string) => string }).translate;\n        const t = (k: string, fb?: string) => (translate ? translate(k, fb) : fb || k);\n        return {\n            modalId: modalId || null,\n            programLabel: t('programs.default.label'),\n            infoLabel: t('programs.default.infoLabel'),\n            fallbackInfoModalId: 'program-info-modal',\n            icon: './img/sucher.png',\n            about: {},\n        };\n    }\n\n    function updateProgramLabel(newLabel: string): void {\n        const programLabel = document.getElementById('program-label');\n        if (programLabel) programLabel.textContent = newLabel;\n    }\n\n    function getTopModal(): HTMLElement | null {\n        const wm = (window as unknown as { WindowManager?: { getTopWindow: () => HTMLElement | null } }).WindowManager;\n        if (wm && typeof wm.getTopWindow === 'function') {\n            return wm.getTopWindow();\n        }\n        let top: HTMLElement | null = null;\n        let highest = 0;\n        document.querySelectorAll<HTMLElement>('.modal:not(.hidden)').forEach((modal) => {\n            const z = parseInt(getComputedStyle(modal).zIndex, 10) || 0;\n            if (z > highest) {\n                highest = z;\n                top = modal;\n            }\n        });\n        return top;\n    }\n\n    function updateProgramInfoMenu(info: ProgramInfo): void {\n        const infoLink = document.getElementById('about-program');\n        if (!infoLink) return;\n        const fallbackInfo = resolveProgramInfo(null);\n        infoLink.textContent = info.infoLabel || fallbackInfo.infoLabel;\n        const el = infoLink as HTMLElement & { dataset: { fallbackInfoModalId?: string } };\n        if (info.fallbackInfoModalId) {\n            el.dataset.fallbackInfoModalId = info.fallbackInfoModalId;\n        } else if (el.dataset) {\n            delete el.dataset.fallbackInfoModalId;\n        }\n    }\n\n    function renderProgramInfo(info: ProgramInfo): void {\n        const modal = document.getElementById('program-info-modal');\n        if (!modal) return;\n        (modal as HTMLElement & { dataset: { infoTarget?: string } }).dataset.infoTarget = info.modalId || '';\n        const fallbackInfo = resolveProgramInfo(null);\n        const about = info.about || fallbackInfo.about || {};\n        const iconEl = modal.querySelector('#program-info-icon') as HTMLImageElement | null;\n        if (iconEl) {\n            if (info.icon) {\n                iconEl.src = info.icon;\n                iconEl.alt = about.name || info.programLabel || 'Programm';\n                iconEl.classList.remove('hidden');\n            } else {\n                iconEl.classList.add('hidden');\n            }\n        }\n        const nameEl = modal.querySelector('#program-info-name');\n        if (nameEl) {\n            nameEl.textContent = about.name || info.programLabel || fallbackInfo.programLabel;\n        }\n        const taglineEl = modal.querySelector('#program-info-tagline');\n        if (taglineEl) {\n            const tagline = about.tagline || '';\n            taglineEl.textContent = tagline;\n            taglineEl.classList.toggle('hidden', !tagline);\n        }\n        const versionEl = modal.querySelector('#program-info-version');\n        if (versionEl) {\n            const version = about.version || '';\n            versionEl.textContent = version;\n            versionEl.classList.toggle('hidden', !version);\n        }\n        const copyrightEl = modal.querySelector('#program-info-copyright');\n        if (copyrightEl) {\n            const copyright = about.copyright || '';\n            copyrightEl.textContent = copyright;\n            copyrightEl.classList.toggle('hidden', !copyright);\n        }\n    }\n\n    function renderApplicationMenu(modalId: string | null): void {\n        const MenuSystem = (window as unknown as { MenuSystem?: { renderApplicationMenu?: (id: string | null) => void } }).MenuSystem;\n        if (MenuSystem && typeof MenuSystem.renderApplicationMenu === 'function') {\n            MenuSystem.renderApplicationMenu(modalId);\n        }\n    }\n\n    function getProgramInfo(modalId: string | null): ProgramInfo {\n        return resolveProgramInfo(modalId);\n    }\n\n    function openProgramInfoDialog(event: Event | null, infoOverride?: ProgramInfo): void {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const hideMenus = (window as unknown as { hideMenuDropdowns?: () => void }).hideMenuDropdowns;\n        if (hideMenus) hideMenus();\n        const info = infoOverride || currentProgramInfo || getProgramInfo(null);\n        currentProgramInfo = info;\n        const infoEvent = new CustomEvent('programInfoRequested', {\n            detail: { modalId: info.modalId, info },\n            cancelable: true,\n        });\n        const dispatchResult = window.dispatchEvent(infoEvent);\n        if (!dispatchResult) return;\n        const fallbackId = info.fallbackInfoModalId;\n        if (!fallbackId) return;\n        if (fallbackId === 'program-info-modal') {\n            renderProgramInfo(info);\n        }\n        const dialogs = (window as unknown as { dialogs?: Record<string, { open?: () => void }> }).dialogs;\n        const dialogInstance = dialogs && dialogs[fallbackId];\n        if (dialogInstance && typeof dialogInstance.open === 'function') {\n            dialogInstance.open();\n        } else {\n            const modalElement = document.getElementById(fallbackId);\n            if (modalElement) {\n                modalElement.classList.remove('hidden');\n                const bringToFront = (window as unknown as { dialogs?: Record<string, { bringToFront?: () => void }> }).dialogs?.[fallbackId]?.bringToFront;\n                if (bringToFront) bringToFront();\n                updateProgramLabelByTopModal();\n            }\n        }\n    }\n\n    function openProgramInfoFromMenu(targetModalId?: string | null): void {\n        const info = resolveProgramInfo(targetModalId || null);\n        openProgramInfoDialog(null, info);\n    }\n\n    let currentProgramInfo: ProgramInfo = resolveProgramInfo(null);\n\n    function updateProgramLabelByTopModal(): ProgramInfo {\n        const topModal = getTopModal();\n        const wm = (window as unknown as { WindowManager?: { getConfig: (id: string) => { metadata?: { skipMenubarUpdate?: boolean } } | null } }).WindowManager;\n        if (topModal && wm) {\n            const config = wm.getConfig(topModal.id);\n            if (config && config.metadata && config.metadata.skipMenubarUpdate) {\n                const all = Array.from(document.querySelectorAll<HTMLElement>('.modal:not(.hidden)'));\n                const sorted = all.sort((a, b) => (parseInt(getComputedStyle(b).zIndex, 10) || 0) - (parseInt(getComputedStyle(a).zIndex, 10) || 0));\n                let next: HTMLElement | null = null;\n                for (const m of sorted) {\n                    const mc = wm.getConfig(m.id);\n                    if (!mc || !mc.metadata || !mc.metadata.skipMenubarUpdate) {\n                        next = m;\n                        break;\n                    }\n                }\n                if (next) {\n                    const info = getProgramInfo(next.id);\n                    currentProgramInfo = info;\n                    updateProgramLabel(info.programLabel);\n                    updateProgramInfoMenu(info);\n                    renderApplicationMenu(next.id);\n                    return info;\n                }\n            }\n        }\n        let info: ProgramInfo;\n        if (topModal && topModal.id === 'program-info-modal' && currentProgramInfo && currentProgramInfo.modalId) {\n            info = resolveProgramInfo(currentProgramInfo.modalId);\n            currentProgramInfo = info;\n        } else {\n            info = getProgramInfo(topModal ? topModal.id : null);\n            currentProgramInfo = info;\n        }\n        updateProgramLabel(info.programLabel);\n        updateProgramInfoMenu(info);\n        renderApplicationMenu(topModal ? topModal.id : null);\n        return info;\n    }\n\n    // React to language/theme changes similar to legacy\n    // Avoid double-binding if legacy already wired these listeners\n    const alreadyWired = (window as unknown as { __programMenuSyncWired?: boolean }).__programMenuSyncWired;\n    if (!alreadyWired) {\n        (window as unknown as { __programMenuSyncWired?: boolean }).__programMenuSyncWired = true;\n    }\n\n    if (!alreadyWired) window.addEventListener('languagePreferenceChange', () => {\n        const info = updateProgramLabelByTopModal();\n        const programInfoModal = document.getElementById('program-info-modal') as HTMLElement | null;\n        if (programInfoModal && !programInfoModal.classList.contains('hidden')) {\n            const ds: DOMStringMap = programInfoModal.dataset;\n            const targetId = ds['infoTarget'] || (info ? info.modalId : null) || null;\n            const infoForDialog = resolveProgramInfo(targetId);\n            renderProgramInfo(infoForDialog);\n            if (info && info.modalId === infoForDialog.modalId) {\n                currentProgramInfo = infoForDialog;\n            }\n        }\n        const updateAllSystemStatusUI = (window as unknown as { updateAllSystemStatusUI?: () => void }).updateAllSystemStatusUI;\n        if (updateAllSystemStatusUI) updateAllSystemStatusUI();\n    });\n    if (!alreadyWired) window.addEventListener('themePreferenceChange', () => {\n        const updateAllSystemStatusUI = (window as unknown as { updateAllSystemStatusUI?: () => void }).updateAllSystemStatusUI;\n        if (updateAllSystemStatusUI) updateAllSystemStatusUI();\n    });\n\n    // Export legacy globals for compatibility\n    (window as unknown as { updateProgramLabelByTopModal: typeof updateProgramLabelByTopModal }).updateProgramLabelByTopModal = updateProgramLabelByTopModal;\n    (window as unknown as { openProgramInfoFromMenu: typeof openProgramInfoFromMenu }).openProgramInfoFromMenu = openProgramInfoFromMenu;\n})();\n", "/*\n * src/ts/menu.ts\n * Typed port of js/menu.js\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// Allow dynamic access on window via string keys for legacy globals\ndeclare global {\n    interface Window {\n        [key: string]: any;\n    }\n}\n\ntype MenuHandler = (...args: any[]) => unknown;\nconst menuActionHandlers = new Map<string, MenuHandler>();\nlet menuActionIdCounter = 0;\n\ntype MenuContext = {\n    modalId?: string;\n    dialog?: { close?: () => void; minimize?: () => void; toggleMaximize?: () => void } | null;\n} | null;\n\nexport function registerMenuAction(handler: MenuHandler) {\n    if (typeof handler !== 'function') return null;\n    const actionId = `menu-action-${++menuActionIdCounter}`;\n    menuActionHandlers.set(actionId, handler);\n    return actionId;\n}\n\nexport function normalizeMenuItems(items: unknown[], context: MenuContext) {\n    if (!Array.isArray(items)) return [];\n    const normalized: Record<string, unknown>[] = [];\n    let previousWasSeparator = true;\n    items.forEach(raw => {\n        const item = raw as any;\n        if (!item) return;\n        if (item.type === 'separator') {\n            if (previousWasSeparator) return;\n            normalized.push({ type: 'separator' });\n            previousWasSeparator = true;\n            return;\n        }\n        const clone = Object.assign({}, item) as Record<string, unknown>;\n        if (typeof item.disabled === 'function')\n            (clone.disabled as unknown) = (item.disabled as (ctx: MenuContext) => boolean)(context);\n        if (typeof item.label === 'function')\n            (clone.label as unknown) = (item.label as (ctx: MenuContext) => string)(context);\n        if (typeof item.shortcut === 'function')\n            (clone.shortcut as unknown) = (item.shortcut as (ctx: MenuContext) => string)(context);\n        normalized.push(clone);\n        previousWasSeparator = false;\n    });\n    while (normalized.length && normalized[normalized.length - 1]?.type === 'separator')\n        normalized.pop();\n    return normalized;\n}\n\n// --- Menu builders (ported functions simplified to reference window helpers) ---\nfunction buildDefaultMenuDefinition(context: MenuContext) {\n    return buildFinderMenuDefinition(context);\n}\n\nfunction buildFinderMenuDefinition(context: MenuContext) {\n    return [\n        {\n            id: 'file',\n            label: () => translate('menu.sections.file'),\n            items: [\n                {\n                    id: 'finder-new-window',\n                    label: () => translate('menu.finder.newWindow'),\n                    shortcut: '\u2318N',\n                    icon: 'new',\n                    action: () => {\n                        const mgr = window['FinderInstanceManager'];\n                        if (mgr && typeof mgr.createInstance === 'function') {\n                            const count = mgr.getInstanceCount\n                                ? mgr.getInstanceCount()\n                                : mgr.getAllInstances?.().length || 0;\n                            mgr.createInstance({ title: `Finder ${count + 1}` });\n                        }\n                    },\n                },\n                {\n                    id: 'finder-reload',\n                    label: () => translate('menu.finder.reload'),\n                    shortcut: '\u2318R',\n                    icon: 'reload',\n                    action: () => {\n                        if (\n                            window['FinderSystem'] &&\n                            typeof window['FinderSystem'].navigateTo === 'function'\n                        ) {\n                            try {\n                                const st =\n                                    window['FinderSystem'].getState &&\n                                    window['FinderSystem'].getState();\n                                if (st && Array.isArray(st.githubRepos)) st.githubRepos = [];\n                                window['FinderSystem'].navigateTo([], 'github');\n                            } catch (e) {\n                                console.warn('Finder reload failed', e);\n                            }\n                        }\n                    },\n                },\n                { type: 'separator' },\n                {\n                    id: 'finder-close',\n                    label: () => translate('menu.finder.close'),\n                    shortcut: '\u2318W',\n                    disabled: () => !(context && context.dialog),\n                    icon: 'close',\n                    action: () => closeContextWindow(context),\n                },\n            ],\n        },\n        createWindowMenuSection(context),\n        createHelpMenuSection(context, {\n            itemKey: 'menu.finder.help',\n            infoModalId: 'finder-modal',\n            itemIcon: 'help',\n        }),\n    ];\n}\n\nfunction buildSettingsMenuDefinition(context: MenuContext) {\n    return [\n        {\n            id: 'file',\n            label: () => translate('menu.sections.file'),\n            items: [\n                {\n                    id: 'settings-close',\n                    label: () => translate('menu.settings.close'),\n                    shortcut: '\u2318W',\n                    disabled: () => !(context && context.dialog),\n                    icon: 'close',\n                    action: () => closeContextWindow(context),\n                },\n            ],\n        },\n        createWindowMenuSection(context),\n        createHelpMenuSection(context, {\n            itemKey: 'menu.settings.help',\n            infoModalId: 'settings-modal',\n            itemIcon: 'help',\n        }),\n    ];\n}\n\nfunction buildTextEditorMenuDefinition(context: MenuContext) {\n    return [\n        {\n            id: 'file',\n            label: () => translate('menu.sections.file'),\n            items: [\n                {\n                    id: 'text-new',\n                    label: () => translate('menu.text.newFile'),\n                    shortcut: '\u2318N',\n                    icon: 'newFile',\n                    action: () => sendTextEditorMenuAction('file:new'),\n                },\n                {\n                    id: 'text-open',\n                    label: () => translate('menu.text.open'),\n                    shortcut: '\u2318O',\n                    icon: 'open',\n                    action: () => sendTextEditorMenuAction('file:open'),\n                },\n                {\n                    id: 'text-save',\n                    label: () => translate('menu.text.save'),\n                    shortcut: '\u2318S',\n                    icon: 'save',\n                    action: () => sendTextEditorMenuAction('file:save'),\n                },\n            ],\n        },\n        {\n            id: 'edit',\n            label: () => translate('menu.sections.edit'),\n            items: [\n                {\n                    id: 'text-undo',\n                    label: () => translate('menu.text.undo'),\n                    shortcut: '\u2318Z',\n                    icon: 'undo',\n                    action: () => sendTextEditorMenuAction('edit:undo'),\n                },\n                {\n                    id: 'text-redo',\n                    label: () => translate('menu.text.redo'),\n                    shortcut: '\u21E7\u2318Z',\n                    icon: 'redo',\n                    action: () => sendTextEditorMenuAction('edit:redo'),\n                },\n                { type: 'separator' },\n                {\n                    id: 'text-cut',\n                    label: () => translate('menu.text.cut'),\n                    shortcut: '\u2318X',\n                    icon: 'cut',\n                    action: () => sendTextEditorMenuAction('edit:cut'),\n                },\n                {\n                    id: 'text-copy',\n                    label: () => translate('menu.text.copy'),\n                    shortcut: '\u2318C',\n                    icon: 'copy',\n                    action: () => sendTextEditorMenuAction('edit:copy'),\n                },\n                {\n                    id: 'text-paste',\n                    label: () => translate('menu.text.paste'),\n                    shortcut: '\u2318V',\n                    icon: 'paste',\n                    action: () => sendTextEditorMenuAction('edit:paste'),\n                },\n                { type: 'separator' },\n                {\n                    id: 'text-select-all',\n                    label: () => translate('menu.text.selectAll'),\n                    shortcut: '\u2318A',\n                    icon: 'selectAll',\n                    action: () => sendTextEditorMenuAction('edit:selectAll'),\n                },\n            ],\n        },\n        {\n            id: 'view',\n            label: () => translate('menu.sections.view'),\n            items: [\n                {\n                    id: 'text-toggle-wrap',\n                    label: () => translate('menu.text.toggleWrap'),\n                    shortcut: '\u2325\u2318W',\n                    icon: 'wrap',\n                    action: () => sendTextEditorMenuAction('view:toggleWrap'),\n                },\n            ],\n        },\n        createWindowMenuSection(context),\n        createHelpMenuSection(context, {\n            itemKey: 'menu.text.help',\n            infoModalId: 'text-modal',\n            itemIcon: 'help',\n        }),\n    ];\n}\n\nfunction buildImageViewerMenuDefinition(context: MenuContext) {\n    const state = window['getImageViewerState']\n        ? window['getImageViewerState']()\n        : { hasImage: false };\n    return [\n        {\n            id: 'file',\n            label: () => translate('menu.sections.file'),\n            items: [\n                {\n                    id: 'image-open-tab',\n                    label: () => translate('menu.image.openInTab'),\n                    disabled: !state.hasImage,\n                    icon: 'imageOpen',\n                    action: () => {\n                        if (window['openActiveImageInNewTab']) window['openActiveImageInNewTab']();\n                    },\n                },\n                {\n                    id: 'image-download',\n                    label: () => translate('menu.image.saveImage'),\n                    disabled: !state.hasImage,\n                    icon: 'download',\n                    action: () => {\n                        if (window['downloadActiveImage']) window['downloadActiveImage']();\n                    },\n                },\n                { type: 'separator' },\n                {\n                    id: 'image-close',\n                    label: () => translate('menu.image.close'),\n                    shortcut: '\u2318W',\n                    disabled: () => !(context && context.dialog),\n                    icon: 'close',\n                    action: () => closeContextWindow(context),\n                },\n            ],\n        },\n        createWindowMenuSection(context),\n        createHelpMenuSection(context, {\n            itemKey: 'menu.image.help',\n            infoModalId: 'image-modal',\n            itemIcon: 'help',\n        }),\n    ];\n}\n\nfunction buildAboutMenuDefinition(context: MenuContext) {\n    return [\n        {\n            id: 'file',\n            label: () => translate('menu.sections.file'),\n            items: [\n                {\n                    id: 'about-close',\n                    label: () => translate('menu.about.close'),\n                    shortcut: '\u2318W',\n                    disabled: () => !(context && context.dialog),\n                    icon: 'close',\n                    action: () => closeContextWindow(context),\n                },\n            ],\n        },\n        createWindowMenuSection(context),\n        createHelpMenuSection(context, {\n            itemKey: 'menu.about.help',\n            infoModalId: 'about-modal',\n            itemIcon: 'info',\n        }),\n    ];\n}\n\nfunction buildProgramInfoMenuDefinition(context: MenuContext) {\n    return [\n        {\n            id: 'file',\n            label: () => translate('menu.sections.file'),\n            items: [\n                {\n                    id: 'program-info-close',\n                    label: () => translate('menu.programInfo.close'),\n                    shortcut: '\u2318W',\n                    disabled: () => !(context && context.dialog),\n                    icon: 'close',\n                    action: () => closeContextWindow(context),\n                },\n            ],\n        },\n        createWindowMenuSection(context),\n    ];\n}\n\nfunction buildTerminalMenuDefinition(context: any) {\n    return [\n        {\n            id: 'file',\n            label: () => translate('menu.sections.file'),\n            items: [\n                {\n                    id: 'terminal-new-window',\n                    label: () => translate('menu.terminal.newWindow'),\n                    shortcut: '\u2318N',\n                    icon: 'terminal',\n                    action: () => {\n                        if (\n                            window['TerminalInstanceManager'] &&\n                            typeof window['TerminalInstanceManager'].createInstance === 'function'\n                        )\n                            window['TerminalInstanceManager'].createInstance();\n                    },\n                },\n                { type: 'separator' },\n                {\n                    id: 'terminal-close',\n                    label: () => translate('menu.terminal.close'),\n                    shortcut: '\u2318W',\n                    disabled: () => !(context && context.dialog),\n                    icon: 'close',\n                    action: () => closeContextWindow(context),\n                },\n            ],\n        },\n        {\n            id: 'edit',\n            label: () => translate('menu.sections.edit'),\n            items: [\n                {\n                    id: 'terminal-clear',\n                    label: () => translate('menu.terminal.clear'),\n                    shortcut: '\u2318K',\n                    icon: 'clear',\n                    action: () => {\n                        if (context && context.instanceId && window['TerminalInstanceManager']) {\n                            const instance = window['TerminalInstanceManager'].getInstance(\n                                context.instanceId\n                            );\n                            if (instance && instance.clearOutput) instance.clearOutput();\n                        }\n                    },\n                },\n            ],\n        },\n        createWindowMenuSection(context),\n        createHelpMenuSection(context, {\n            itemKey: 'menu.terminal.help',\n            infoModalId: 'terminal-modal',\n            itemIcon: 'help',\n        }),\n    ];\n}\n\nfunction createWindowMenuSection(context: MenuContext) {\n    return {\n        id: 'window',\n        label: () => translate('menu.sections.window'),\n        items: getWindowMenuItems(context),\n    };\n}\n\nfunction getWindowMenuItems(context: MenuContext) {\n    const dialog = context && (context.dialog as any);\n    const hasDialog = Boolean(dialog && typeof dialog.close === 'function');\n    const items: any[] = [\n        {\n            id: 'window-minimize',\n            label: () => translate('menu.window.minimize'),\n            shortcut: '\u2318M',\n            disabled: !hasDialog,\n            icon: 'windowMinimize',\n            action: () => {\n                if (dialog && typeof dialog.minimize === 'function') dialog.minimize();\n            },\n        },\n        {\n            id: 'window-zoom',\n            label: () => translate('menu.window.zoom'),\n            shortcut: '\u2303\u2318F',\n            disabled: !hasDialog,\n            icon: 'windowZoom',\n            action: () => {\n                if (dialog && typeof dialog.toggleMaximize === 'function') dialog.toggleMaximize();\n            },\n        },\n    ];\n    const multiInstanceItems = getMultiInstanceMenuItems(context);\n    if (multiInstanceItems.length > 0) {\n        items.push({ type: 'separator' });\n        items.push(...multiInstanceItems);\n    }\n    items.push(\n        { type: 'separator' },\n        {\n            id: 'window-all-front',\n            label: () => translate('menu.window.bringToFront'),\n            disabled: !hasAnyVisibleDialog(),\n            icon: 'windowFront',\n            action: () => {\n                if (window['bringAllWindowsToFront']) window['bringAllWindowsToFront']();\n            },\n        },\n        { type: 'separator' },\n        {\n            id: 'window-close',\n            label: () => translate('menu.window.close'),\n            shortcut: '\u2318W',\n            disabled: !hasDialog,\n            icon: 'close',\n            action: () => closeContextWindow(context),\n        }\n    );\n    return items;\n}\n\nfunction getMultiInstanceMenuItems(context: MenuContext) {\n    const items: any[] = [];\n    let manager: any = null;\n    let typeLabel: string | null = null;\n    let newInstanceKey: string | null = null;\n    const modalId = context?.modalId;\n    if (\n        (modalId === 'finder-modal' || modalId === 'projects-modal') &&\n        window['FinderInstanceManager']\n    ) {\n        manager = window['FinderInstanceManager'];\n        typeLabel = 'Finder';\n        newInstanceKey = 'menu.window.newFinder';\n    } else if (modalId === 'terminal-modal' && window['TerminalInstanceManager']) {\n        manager = window['TerminalInstanceManager'];\n        typeLabel = 'Terminal';\n        newInstanceKey = 'menu.window.newTerminal';\n    } else if (modalId === 'text-modal' && window['TextEditorInstanceManager']) {\n        manager = window['TextEditorInstanceManager'];\n        typeLabel = 'Editor';\n        newInstanceKey = 'menu.window.newEditor';\n    }\n    if (!manager) return items;\n    items.push({\n        id: 'window-new-instance',\n        label: () => translate(newInstanceKey || 'menu.window.newWindow'),\n        shortcut: '\u2318N',\n        icon: 'new',\n        action: () => {\n            const count = manager.getInstanceCount();\n            manager.createInstance({ title: `${typeLabel} ${count + 1}` } as any);\n        },\n    });\n    const instances = manager.getAllInstances();\n    if (instances.length > 1) {\n        items.push({ type: 'separator' });\n        instances.forEach((instance: any, index: number) => {\n            const isActive = manager.getActiveInstance()?.instanceId === instance.instanceId;\n            // Normalize label to always include index-based numbering for stable UI/test selection\n            const numberLabel = `${typeLabel} ${index + 1}`;\n            items.push({\n                id: `window-instance-${instance.instanceId}`,\n                label: () => `${isActive ? '\u2713 ' : ''}${numberLabel}`,\n                shortcut: index < 9 ? `\u2318${index + 1}` : undefined,\n                action: () => {\n                    manager.setActiveInstance(instance.instanceId);\n                    // Also update visibility via MultiInstanceIntegration\n                    const integration = (window as any).multiInstanceIntegration;\n                    if (integration && typeof integration.updateInstanceVisibility === 'function') {\n                        // Determine type based on manager\n                        let type: string | null = null;\n                        if (manager === (window as any).FinderInstanceManager) type = 'finder';\n                        else if (manager === (window as any).TerminalInstanceManager)\n                            type = 'terminal';\n                        else if (manager === (window as any).TextEditorInstanceManager)\n                            type = 'text-editor';\n\n                        if (type) {\n                            integration.updateInstanceVisibility(type);\n                        }\n                    }\n                },\n            });\n        });\n        items.push(\n            { type: 'separator' },\n            {\n                id: 'window-close-all',\n                label: () => translate('menu.window.closeAll'),\n                icon: 'close',\n                action: () => {\n                    const base = translate('menu.window.closeAllConfirm');\n                    const confirmMsg =\n                        typeof base === 'string' && base !== 'menu.window.closeAllConfirm'\n                            ? base\n                            : `Close all ${typeLabel} (${instances.length})?`;\n                    if (confirm(confirmMsg)) {\n                        manager.destroyAllInstances();\n                        // If we closed all instances for a modal-backed window, also hide the modal\n                        const targetModal = (context as any)?.modalId;\n                        if (targetModal) {\n                            if (typeof window['API']?.window?.close === 'function') {\n                                window['API'].window.close(targetModal);\n                            } else {\n                                const el = document.getElementById(targetModal);\n                                if (el && !el.classList.contains('hidden')) {\n                                    const domUtils = (window as any).DOMUtils;\n                                    if (domUtils && typeof domUtils.hide === 'function') {\n                                        domUtils.hide(el);\n                                    } else {\n                                        el.classList.add('hidden');\n                                    }\n                                }\n                            }\n                        }\n                    }\n                },\n            }\n        );\n    }\n    return items;\n}\n\nfunction createHelpMenuSection(context: any, overrides: any = {}) {\n    const sectionKey = overrides.sectionKey || 'menu.sections.help';\n    const itemKey = overrides.itemKey || 'menu.help.showHelp';\n    const infoModalId = overrides.infoModalId || context.modalId || null;\n    return {\n        id: overrides.id || 'help',\n        label: () => translate(sectionKey),\n        items: [\n            {\n                id: 'help-show-info',\n                label: () => translate(itemKey),\n                icon: overrides.itemIcon || 'help',\n                action: () => {\n                    if (window['openProgramInfoFromMenu'])\n                        window['openProgramInfoFromMenu'](infoModalId);\n                },\n            },\n        ],\n    };\n}\n\n// --- Rendering ---\nconst menuDefinitions: any = {\n    default: buildDefaultMenuDefinition,\n    'finder-modal': buildFinderMenuDefinition,\n    'projects-modal': buildFinderMenuDefinition,\n    'settings-modal': buildSettingsMenuDefinition,\n    'text-modal': buildTextEditorMenuDefinition,\n    'image-modal': buildImageViewerMenuDefinition,\n    'about-modal': buildAboutMenuDefinition,\n    'program-info-modal': buildProgramInfoMenuDefinition,\n    'terminal-modal': buildTerminalMenuDefinition,\n};\n\nlet currentMenuModalId: string | null = null;\n\nexport function renderApplicationMenu(activeModalId?: string | null) {\n    const container = document.getElementById('menubar-links');\n    if (!container) return;\n    const modalKey = activeModalId && menuDefinitions[activeModalId] ? activeModalId : 'default';\n    const builder = menuDefinitions[modalKey] || menuDefinitions.default;\n    const context = createMenuContext(activeModalId || null);\n    const sections =\n        typeof builder === 'function' ? builder(context) : Array.isArray(builder) ? builder : [];\n    container.innerHTML = '';\n    menuActionHandlers.clear();\n    menuActionIdCounter = 0;\n    currentMenuModalId = activeModalId || null;\n    if (!Array.isArray(sections) || sections.length === 0) return;\n    sections.forEach((section: any, sectionIndex: number) => {\n        if (!section) return;\n        const items = normalizeMenuItems(section.items, context);\n        if (!items.length) return;\n        const trigger = document.createElement('div');\n        trigger.className = 'menubar-trigger';\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.className = 'menubar-item';\n        button.dataset.menubarTriggerButton = 'true';\n        const label = typeof section.label === 'function' ? section.label(context) : section.label;\n        button.textContent = label || '';\n        const sectionId = section.id || `section-${sectionIndex}`;\n        const buttonId = `menubar-menu-${sectionId}`;\n        const dropdownId = `menu-dropdown-${sectionId}`;\n        button.id = buttonId;\n        button.setAttribute('aria-haspopup', 'menu');\n        button.setAttribute('aria-expanded', 'false');\n        button.setAttribute('aria-controls', dropdownId);\n        const dropdown = document.createElement('ul');\n        dropdown.id = dropdownId;\n        dropdown.className = 'menu-dropdown hidden';\n        dropdown.setAttribute('role', 'menu');\n        dropdown.setAttribute('aria-labelledby', buttonId);\n        items.forEach(item => {\n            if (item.type === 'separator') {\n                const separator = document.createElement('li');\n                separator.className = 'menu-separator';\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-hidden', 'true');\n                dropdown.appendChild(separator);\n                return;\n            }\n            const li = document.createElement('li');\n            li.setAttribute('role', 'none');\n            const tagName = item.href ? 'a' : 'button';\n            const actionEl = document.createElement(tagName) as any;\n            actionEl.className = 'menu-item';\n            if (tagName === 'button') actionEl.type = 'button';\n            else {\n                actionEl.href = item.href;\n                if (item.external) {\n                    actionEl.rel = 'noopener noreferrer';\n                    actionEl.target = '_blank';\n                }\n            }\n            const itemLabel =\n                item.label !== null\n                    ? typeof item.label === 'function'\n                        ? item.label(context)\n                        : item.label\n                    : '';\n            const labelSpan = document.createElement('span');\n            labelSpan.className = 'menu-item-label';\n            if (item.icon && (window as any).IconSystem) {\n                const iconSpan = document.createElement('span');\n                iconSpan.className = 'menu-item-icon';\n                const iconSvg = (window as any).IconSystem.getMenuIconSvg\n                    ? (window as any).IconSystem.getMenuIconSvg(item.icon)\n                    : '';\n                if ((window as any).IconSystem.renderIconIntoElement)\n                    (window as any).IconSystem.renderIconIntoElement(iconSpan, iconSvg, item.icon);\n                labelSpan.appendChild(iconSpan);\n            }\n            labelSpan.appendChild(document.createTextNode(itemLabel));\n            actionEl.appendChild(labelSpan);\n            if (item.shortcut) {\n                const shortcutSpan = document.createElement('span');\n                shortcutSpan.className = 'menu-item-shortcut';\n                shortcutSpan.textContent =\n                    typeof item.shortcut === 'function' ? item.shortcut() : item.shortcut;\n                actionEl.appendChild(shortcutSpan);\n            }\n            actionEl.setAttribute('role', 'menuitem');\n            if (item.title) actionEl.title = item.title;\n            const isDisabled = Boolean(item.disabled);\n            if (isDisabled) {\n                actionEl.setAttribute('aria-disabled', 'true');\n                if (tagName === 'button') actionEl.disabled = true;\n            } else if (typeof item.action === 'function') {\n                const actionId = registerMenuAction(item.action as MenuHandler);\n                if (actionId) actionEl.dataset.menuAction = actionId;\n            }\n            if (item.href && typeof item.onClick === 'function') {\n                actionEl.addEventListener('click', (event: Event) => {\n                    const result = (item.onClick as (e: Event) => boolean | void)(event);\n                    if (result === false) event.preventDefault();\n                });\n            }\n            li.appendChild(actionEl);\n            dropdown.appendChild(li);\n        });\n        if (!dropdown.childElementCount) return;\n        trigger.appendChild(button);\n        trigger.appendChild(dropdown);\n        container.appendChild(trigger);\n        if ((window as any).bindDropdownTrigger)\n            (window as any).bindDropdownTrigger(button, { hoverRequiresOpen: true });\n    });\n}\n\nexport function handleMenuActionActivation(event: Event) {\n    const target =\n        event.target instanceof Element\n            ? (event.target as Element).closest('[data-menu-action]')\n            : null;\n    if (!target) return;\n    const actionId = target.getAttribute('data-menu-action');\n    const handler = actionId ? menuActionHandlers.get(actionId) : null;\n    if (typeof handler !== 'function') return;\n    event.preventDefault();\n    event.stopPropagation();\n    if ((window as any).hideMenuDropdowns) (window as any).hideMenuDropdowns();\n    try {\n        handler();\n    } catch (err) {\n        console.error('Error executing menu action:', err);\n    }\n}\n\nfunction closeContextWindow(context: any) {\n    const dialog = context && context.dialog;\n    if (dialog && typeof dialog.close === 'function') dialog.close();\n}\n\nfunction hasAnyVisibleDialog() {\n    if (!window['dialogs']) return false;\n    return Object.values(window['dialogs']).some((d: any) =>\n        d && typeof d.isOpen === 'function' ? d.isOpen() : Boolean(d && d.isOpen)\n    );\n}\n\nfunction sendTextEditorMenuAction(actionType: string) {\n    if ((window as any).sendTextEditorMenuAction)\n        (window as any).sendTextEditorMenuAction(actionType);\n}\n\nfunction createMenuContext(modalId: string | null) {\n    const w = window as any;\n    // Allow external override but avoid self-recursion when this function is\n    // hoisted onto window as a global in non-module script context.\n    if (w.createMenuContext && w.createMenuContext !== (createMenuContext as any)) {\n        try {\n            return w.createMenuContext(modalId);\n        } catch (e) {\n            console.warn('[Menu] createMenuContext override threw; falling back', e);\n        }\n    }\n    return { modalId: modalId, dialog: null };\n}\n\nfunction translate(key: string, fallback?: string) {\n    if ((window as any).appI18n && typeof (window as any).appI18n.translate === 'function') {\n        const result = (window as any).appI18n.translate(key);\n        if (result === key && fallback) return fallback;\n        return result;\n    }\n    return fallback || key;\n}\n\nexport function refreshCurrentMenu() {\n    renderApplicationMenu(currentMenuModalId);\n}\n\nexport function setupInstanceManagerListeners() {\n    const managers = [\n        window['FinderInstanceManager'],\n        window['TerminalInstanceManager'],\n        window['TextEditorInstanceManager'],\n    ];\n    managers.forEach(manager => {\n        if (!manager || !manager.getAllInstances) return;\n        const originalCreate = manager.createInstance;\n        const originalDestroy = manager.destroyInstance;\n        const originalDestroyAll = manager.destroyAllInstances;\n        if (originalCreate)\n            manager.createInstance = function (...args: any[]) {\n                const result = originalCreate.apply(this, args);\n                if (result) setTimeout(refreshCurrentMenu, 50);\n                return result;\n            };\n        if (originalDestroy)\n            manager.destroyInstance = function (...args: any[]) {\n                const result = originalDestroy.apply(this, args);\n                setTimeout(refreshCurrentMenu, 50);\n                return result;\n            };\n        if (originalDestroyAll)\n            manager.destroyAllInstances = function (...args: any[]) {\n                const result = originalDestroyAll.apply(this, args);\n                setTimeout(refreshCurrentMenu, 50);\n                return result;\n            };\n    });\n}\n\nif (document.readyState === 'loading')\n    document.addEventListener('DOMContentLoaded', setupInstanceManagerListeners);\nelse setTimeout(setupInstanceManagerListeners, 100);\n\n// Export\ndeclare global {\n    interface Window {\n        MenuSystem?: any;\n    }\n}\n(window as any).MenuSystem = {\n    renderApplicationMenu,\n    handleMenuActionActivation,\n    menuDefinitions,\n    getCurrentMenuModalId: () => currentMenuModalId,\n};\nconsole.log('\u2705 MenuSystem loaded');\n\nexport default {};\n\n", "/*\n * src/ts/dock.ts\n * Typed port of js/dock.js\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n// getDockReservedBottom\nexport function getDockReservedBottom(): number {\n    try {\n        const dock = document.getElementById('dock');\n        if (!dock || dock.classList.contains('hidden')) return 0;\n        const rect = dock.getBoundingClientRect();\n        const vh = Math.max(window.innerHeight || 0, 0);\n        if (vh <= 0) return 0;\n        return Math.round(Math.max(0, vh - rect.top));\n    } catch {\n        return 0;\n    }\n}\n\n// Dock magnification\nexport function initDockMagnification(): void {\n    const dock = document.getElementById('dock');\n    if (!dock) return;\n\n    const icons = Array.from(dock.querySelectorAll<HTMLElement>('.dock-icon'));\n    if (!icons.length) return;\n\n    const items = icons.map(icon => {\n        const parent = icon.parentElement as HTMLElement | null;\n        const tooltip = parent\n            ? (parent.querySelector('.dock-tooltip') as HTMLElement | null)\n            : null;\n        return {\n            icon,\n            tooltip,\n            baseHeight: icon.offsetHeight || 0,\n        };\n    });\n\n    let rafId: number | null = null;\n    let pointerX: number | null = null;\n\n    const maxScale = 1.6;\n    const minScale = 1.0;\n    const radius = 120;\n    const sigma = radius / 3;\n\n    const apply = () => {\n        rafId = null;\n        if (pointerX === null) {\n            items.forEach(({ icon, tooltip }) => {\n                icon.style.transform = '';\n                icon.style.zIndex = '';\n                if (tooltip) {\n                    tooltip.style.transform = '';\n                    tooltip.style.zIndex = '';\n                }\n            });\n            return;\n        }\n\n        items.forEach(({ icon, tooltip, baseHeight }) => {\n            const rect = icon.getBoundingClientRect();\n            const centerX = rect.left + rect.width / 2;\n            const dx = Math.abs(pointerX! - centerX);\n            const influence = Math.exp(-(dx * dx) / (2 * sigma * sigma));\n            const scale = Math.max(\n                minScale,\n                Math.min(maxScale, minScale + (maxScale - minScale) * influence)\n            );\n\n            const base = baseHeight || icon.offsetHeight || 0;\n            const translateY = Math.max(0, (scale - 1) * base * 0.5);\n\n            icon.style.transform = `translateY(-${translateY.toFixed(1)}px) scale(${scale.toFixed(3)})`;\n            icon.style.zIndex = scale > 1.01 ? '300' : '';\n\n            if (tooltip) {\n                const lift = Math.max(0, base * (scale - 1) - translateY);\n                const gap = 12;\n                tooltip.style.transform = `translateY(-${(lift + gap).toFixed(1)}px)`;\n                tooltip.style.zIndex = '400';\n            }\n        });\n    };\n\n    const onMove = (e: MouseEvent) => {\n        pointerX = e.clientX;\n        if (!rafId) rafId = requestAnimationFrame(apply) as unknown as number;\n    };\n    const onLeave = () => {\n        pointerX = null;\n        if (!rafId) rafId = requestAnimationFrame(apply) as unknown as number;\n    };\n\n    dock.addEventListener('mousemove', onMove);\n    dock.addEventListener('mouseleave', onLeave);\n}\n\n// Dock drag & drop order persistence\nconst DOCK_ORDER_STORAGE_KEY = 'dock:order:v1';\n\nexport function loadDockOrder(): string[] | null {\n    try {\n        const raw = localStorage.getItem(DOCK_ORDER_STORAGE_KEY);\n        const parsed = raw ? JSON.parse(raw) : null;\n        return Array.isArray(parsed) ? parsed : null;\n    } catch {\n        return null;\n    }\n}\n\nexport function saveDockOrder(order: string[] | null | undefined): void {\n    try {\n        localStorage.setItem(DOCK_ORDER_STORAGE_KEY, JSON.stringify(order || []));\n    } catch {\n        // ignore\n    }\n}\n\nexport function getDockItemId(item: Element | null): string | null {\n    if (!item) return null;\n    return (item.getAttribute('data-window-id') as string) || null;\n}\n\nexport function getCurrentDockOrder(): string[] {\n    const tray = document.querySelector('#dock .dock-tray');\n    if (!tray) return [];\n    return Array.from(tray.querySelectorAll('.dock-item'))\n        .map(it => getDockItemId(it))\n        .filter(Boolean) as string[];\n}\n\nexport function applyDockOrder(order: string[] | null | undefined): void {\n    if (!Array.isArray(order) || !order.length) return;\n    const tray = document.querySelector('#dock .dock-tray');\n    if (!tray) return;\n    const items = Array.from(tray.querySelectorAll<HTMLElement>('.dock-item'));\n    const map = new Map(items.map(it => [getDockItemId(it), it]));\n    const fragment = document.createDocumentFragment();\n    order.forEach(id => {\n        const el = map.get(id as unknown as string);\n        if (el) {\n            fragment.appendChild(el);\n            map.delete(id as unknown as string);\n        }\n    });\n    for (const [, el] of map) fragment.appendChild(el);\n    tray.appendChild(fragment);\n}\n\nexport function createPlaceholder(width?: number, height?: number): HTMLElement {\n    const ph = document.createElement('div');\n    ph.className = 'dock-placeholder';\n    ph.setAttribute('aria-hidden', 'true');\n    ph.style.width = Math.max(1, Math.round(width || 48)) + 'px';\n    ph.style.height = Math.max(1, Math.round(height || 48)) + 'px';\n    ph.style.opacity = '0';\n    ph.style.pointerEvents = 'none';\n    return ph;\n}\n\nexport function initDockDragDrop(): void {\n    const dock = document.getElementById('dock');\n    const tray = dock ? (dock.querySelector('.dock-tray') as HTMLElement | null) : null;\n    if (!dock || !tray) return;\n\n    const persisted = loadDockOrder();\n    if (persisted && persisted.length) applyDockOrder(persisted);\n\n    let draggedItem: HTMLElement | null = null;\n    let placeholder: HTMLElement | null = null;\n    let prevUserSelect = '';\n    let suppressClicksUntil = 0;\n\n    const updatePlaceholderSize = (ref: HTMLElement | null) => {\n        if (!placeholder || !ref) return;\n        try {\n            const r = ref.getBoundingClientRect();\n            placeholder.style.width = r.width + 'px';\n            placeholder.style.height = r.height + 'px';\n        } catch {\n            // ignore\n        }\n    };\n\n    const placeRelativeTo = (targetItem: HTMLElement, clientX: number) => {\n        if (!tray || !targetItem) return;\n        if (!placeholder) placeholder = createPlaceholder();\n        updatePlaceholderSize(draggedItem || targetItem);\n        const rect = targetItem.getBoundingClientRect();\n        const insertBefore = clientX < rect.left + rect.width / 2;\n        tray.insertBefore(placeholder, insertBefore ? targetItem : targetItem.nextSibling);\n    };\n\n    const handleTrayDragOver = (e: DragEvent) => {\n        if (!draggedItem) return;\n        e.preventDefault();\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'move';\n        const items = Array.from(tray.querySelectorAll<HTMLElement>('.dock-item')).filter(\n            it => it !== draggedItem\n        );\n        if (!placeholder) placeholder = createPlaceholder();\n        if (items.length === 0) {\n            tray.appendChild(placeholder);\n            return;\n        }\n        let target: HTMLElement | null = null;\n        for (const it of items) {\n            const r = it.getBoundingClientRect();\n            if (e.clientX < r.left + r.width / 2) {\n                target = it;\n                break;\n            }\n        }\n        updatePlaceholderSize(draggedItem || items[0]);\n        if (target) tray.insertBefore(placeholder, target);\n        else tray.appendChild(placeholder);\n    };\n\n    const onDragStart = function (this: HTMLElement, e: DragEvent) {\n        const item = (this as HTMLElement).closest('.dock-item') as HTMLElement | null;\n        if (!item) return;\n        draggedItem = item;\n        prevUserSelect = document.body.style.userSelect || '';\n        document.body.style.userSelect = 'none';\n        suppressClicksUntil = Date.now() + 250;\n        try {\n            const icon = (item.querySelector('.dock-icon') as HTMLElement) || item;\n            const r = icon.getBoundingClientRect();\n            if (e.dataTransfer) {\n                e.dataTransfer.setData('text/plain', getDockItemId(item) || '');\n                e.dataTransfer.effectAllowed = 'move';\n                e.dataTransfer.setDragImage(icon as Element, r.width / 2, r.height / 2);\n            }\n        } catch {\n            // ignore\n        }\n        const r = item.getBoundingClientRect();\n        placeholder = createPlaceholder(r.width, r.height);\n        tray.insertBefore(placeholder, item.nextSibling);\n    };\n\n    const onDragOver = (e: DragEvent) => {\n        if (!draggedItem) return;\n        e.preventDefault();\n        if (e.dataTransfer) e.dataTransfer.dropEffect = 'move';\n        const target = (e.target as Element).closest('.dock-item') as HTMLElement | null;\n        if (!target || target === draggedItem) {\n            handleTrayDragOver(e);\n            return;\n        }\n        placeRelativeTo(target, e.clientX);\n    };\n\n    const finalizeDrop = () => {\n        if (!draggedItem || !placeholder) return;\n        tray.insertBefore(draggedItem, placeholder);\n        placeholder.remove();\n        placeholder = null;\n        const order = getCurrentDockOrder();\n        saveDockOrder(order);\n    };\n\n    const onDrop = (e: DragEvent) => {\n        if (!draggedItem) return;\n        e.preventDefault();\n        const phDidNotMove =\n            placeholder &&\n            placeholder.isConnected &&\n            (placeholder.previousSibling === draggedItem ||\n                placeholder.nextSibling === draggedItem);\n        if (!placeholder || !placeholder.isConnected || phDidNotMove) {\n            const x = e.clientX;\n            const items = Array.from(tray.querySelectorAll<HTMLElement>('.dock-item')).filter(\n                it => it !== draggedItem\n            );\n            let inserted = false;\n            for (const it of items) {\n                const r = it.getBoundingClientRect();\n                if (x < r.left + r.width / 2) {\n                    tray.insertBefore(draggedItem, it);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) tray.appendChild(draggedItem);\n            const order = getCurrentDockOrder();\n            saveDockOrder(order);\n            cleanup();\n            return;\n        }\n        finalizeDrop();\n    };\n\n    const cleanup = () => {\n        if (placeholder && placeholder.isConnected) placeholder.remove();\n        placeholder = null;\n        draggedItem = null;\n        document.body.style.userSelect = prevUserSelect;\n    };\n\n    const onDragEnd = () => {\n        cleanup();\n    };\n\n    dock.addEventListener(\n        'click',\n        ev => {\n            if (Date.now() < suppressClicksUntil || draggedItem) {\n                ev.stopPropagation();\n                ev.preventDefault();\n            }\n        },\n        true\n    );\n\n    window.addEventListener('blur', cleanup);\n\n    const enableDraggable = () => {\n        tray.querySelectorAll<HTMLElement>('.dock-item').forEach(it => {\n            it.setAttribute('draggable', 'true');\n            it.addEventListener('dragstart', onDragStart);\n        });\n    };\n    enableDraggable();\n\n    tray.addEventListener('dragover', onDragOver as EventListener);\n    tray.addEventListener('drop', onDrop as EventListener);\n    tray.addEventListener('dragend', onDragEnd as EventListener);\n}\n\nexport function updateDockIndicators(): void {\n    const indicatorMappings = [\n        { modalId: 'finder-modal', indicatorId: 'finder-indicator' },\n        { modalId: 'projects-modal', indicatorId: 'projects-indicator' },\n        { modalId: 'settings-modal', indicatorId: 'settings-indicator' },\n        { modalId: 'text-modal', indicatorId: 'text-indicator' },\n        { modalId: 'image-modal', indicatorId: 'image-indicator' },\n    ];\n\n    indicatorMappings.forEach(mapping => {\n        const modal = document.getElementById(mapping.modalId);\n        const indicator = document.getElementById(mapping.indicatorId);\n        if (modal && indicator) {\n            const minimized = modal.dataset && modal.dataset.minimized === 'true';\n            const domUtils = (window as any).DOMUtils;\n            if (!modal.classList.contains('hidden') || minimized) {\n                if (domUtils && typeof domUtils.show === 'function') {\n                    domUtils.show(indicator);\n                } else {\n                    indicator.classList.remove('hidden');\n                }\n            } else {\n                if (domUtils && typeof domUtils.hide === 'function') {\n                    domUtils.hide(indicator);\n                } else {\n                    indicator.classList.add('hidden');\n                }\n            }\n        }\n    });\n}\n\n// Global export for legacy compatibility\ndeclare global {\n    interface Window {\n        DockSystem?: any;\n        updateDockIndicators?: any;\n    }\n}\nif (typeof window !== 'undefined') {\n    (window as any).DockSystem = {\n        getDockReservedBottom,\n        initDockMagnification,\n        initDockDragDrop,\n        updateDockIndicators,\n        getCurrentDockOrder,\n        loadDockOrder,\n        saveDockOrder,\n        applyDockOrder,\n    };\n\n    if (typeof (window as any).updateDockIndicators !== 'function') {\n        (window as any).updateDockIndicators = updateDockIndicators;\n    }\n}\n\nexport default {};\n", "/*\n * src/ts/dialog.ts\n * Typed port of js/dialog.js\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport class Dialog {\n    modal: HTMLElement;\n    windowEl: HTMLElement | null;\n    lastDragPointerX: number | null;\n\n    constructor(modalId: string) {\n        const el = document.getElementById(modalId);\n        if (!el) throw new Error(`No dialog with id ${modalId}`);\n        this.modal = el as HTMLElement;\n        // Legacy helper may provide an element wrapper\n        const helper = (window as any).StorageSystem?.getDialogWindowElement;\n        this.windowEl = helper\n            ? helper(this.modal)\n            : (this.modal.querySelector('.autopointer') as HTMLElement) || this.modal;\n        this.lastDragPointerX = null;\n        this.init();\n    }\n\n    init() {\n        this.makeDraggable();\n        this.makeResizable();\n        const closeButton = this.modal.querySelector(\n            '.draggable-header button[id^=\"close-\"]'\n        ) as HTMLElement | null;\n        if (closeButton) {\n            closeButton.style.cursor = 'pointer';\n            (closeButton as any).dataset.dialogAction = 'close';\n            if (!(closeButton as any).dataset.dialogBoundClose) {\n                (closeButton as any).dataset.dialogBoundClose = 'true';\n                closeButton.addEventListener('click', e => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.close();\n                });\n            }\n        }\n\n        const minimizeEl = this.modal.querySelector(\n            '.draggable-header .bg-yellow-500.rounded-full'\n        ) as HTMLElement | null;\n        const maximizeEl = this.modal.querySelector(\n            '.draggable-header .bg-green-500.rounded-full'\n        ) as HTMLElement | null;\n        if (minimizeEl) {\n            minimizeEl.style.cursor = 'pointer';\n            minimizeEl.title = minimizeEl.title || 'Minimieren';\n            (minimizeEl as any).dataset.dialogAction = 'minimize';\n            minimizeEl.addEventListener('click', e => {\n                e.stopPropagation();\n                this.minimize();\n            });\n        }\n        if (maximizeEl) {\n            maximizeEl.style.cursor = 'pointer';\n            maximizeEl.title = maximizeEl.title || 'Maximieren';\n            (maximizeEl as any).dataset.dialogAction = 'maximize';\n            maximizeEl.addEventListener('click', e => {\n                e.stopPropagation();\n                this.toggleMaximize();\n            });\n        }\n    }\n\n    open() {\n        if (!this.modal) {\n            console.error('Cannot open dialog: modal element is undefined');\n            return;\n        }\n        // preserve original behavior\n        (window as any).hideMenuDropdowns?.();\n        \n        // Use DOMUtils if available, fallback to classList\n        const domUtils = (window as any).DOMUtils;\n        if (domUtils && typeof domUtils.show === 'function') {\n            domUtils.show(this.modal);\n        } else {\n            this.modal.classList.remove('hidden');\n        }\n        \n        if (this.modal.dataset) delete (this.modal.dataset as any).minimized;\n        this.bringToFront();\n        this.enforceMenuBarBoundary();\n        (window as any).saveOpenModals?.();\n        (window as any).updateDockIndicators?.();\n        (window as any).updateProgramLabelByTopModal?.();\n    }\n\n    close() {\n        if (this.modal.classList.contains('hidden')) return;\n        \n        // Use DOMUtils if available, fallback to classList\n        const domUtils = (window as any).DOMUtils;\n        if (domUtils && typeof domUtils.hide === 'function') {\n            domUtils.hide(this.modal);\n        } else {\n            this.modal.classList.add('hidden');\n        }\n\n        // Remove from z-index manager stack\n        const zIndexManager = (window as any).__zIndexManager;\n        if (zIndexManager && typeof zIndexManager.removeWindow === 'function') {\n            zIndexManager.removeWindow(this.modal.id);\n        }\n\n        (window as any).saveOpenModals?.();\n        (window as any).updateDockIndicators?.();\n        (window as any).updateProgramLabelByTopModal?.();\n    }\n\n    minimize() {\n        if (this.modal.dataset) (this.modal.dataset as any).minimized = 'true';\n        \n        // Use DOMUtils if available, fallback to classList\n        const domUtils = (window as any).DOMUtils;\n        if (domUtils && typeof domUtils.hide === 'function') {\n            if (!this.modal.classList.contains('hidden')) {\n                domUtils.hide(this.modal);\n            }\n        } else {\n            if (!this.modal.classList.contains('hidden')) {\n                this.modal.classList.add('hidden');\n            }\n        }\n        \n        (window as any).saveOpenModals?.();\n        (window as any).updateDockIndicators?.();\n        (window as any).updateProgramLabelByTopModal?.();\n    }\n\n    toggleMaximize() {\n        const target = this.windowEl || this.modal;\n        if (!target) return;\n        this.unsnap({ silent: true });\n        const ds = (this.modal.dataset as any) || {};\n        const isMax = ds.maximized === 'true';\n        if (isMax) {\n            if (ds.prevLeft !== undefined) target.style.left = ds.prevLeft;\n            if (ds.prevTop !== undefined) target.style.top = ds.prevTop;\n            if (ds.prevWidth !== undefined) target.style.width = ds.prevWidth;\n            if (ds.prevHeight !== undefined) target.style.height = ds.prevHeight;\n            if (ds.prevPosition !== undefined) target.style.position = ds.prevPosition;\n            delete ds.maximized;\n            delete ds.prevLeft;\n            delete ds.prevTop;\n            delete ds.prevWidth;\n            delete ds.prevHeight;\n            delete ds.prevPosition;\n            this.enforceMenuBarBoundary();\n            (window as any).saveWindowPositions?.();\n            return;\n        }\n        const computed = window.getComputedStyle(target);\n        (this.modal.dataset as any).prevLeft = target.style.left || computed.left || '';\n        (this.modal.dataset as any).prevTop = target.style.top || computed.top || '';\n        (this.modal.dataset as any).prevWidth = target.style.width || computed.width || '';\n        (this.modal.dataset as any).prevHeight = target.style.height || computed.height || '';\n        (this.modal.dataset as any).prevPosition = target.style.position || computed.position || '';\n        const minTop = Math.round((window as any).getMenuBarBottom?.() || 0);\n        target.style.position = 'fixed';\n        target.style.left = '0px';\n        target.style.top = `${minTop}px`;\n        target.style.width = '100vw';\n        target.style.height = `calc(100vh - ${minTop}px)`;\n        try {\n            const __dockReserve = (window as any).getDockReservedBottom?.() || 0;\n            const __maxHeight = Math.max(0, (window.innerHeight || 0) - minTop - __dockReserve);\n            target.style.height = `${__maxHeight}px`;\n        } catch {}\n        (this.modal.dataset as any).maximized = 'true';\n        this.bringToFront();\n        (window as any).saveWindowPositions?.();\n    }\n\n    snapTo(side: 'left' | 'right', options: any = {}) {\n        const target = this.windowEl || this.modal;\n        if (!target) return null;\n        if (side !== 'left' && side !== 'right') return null;\n        const { silent = false } = options;\n        const ds = (this.modal.dataset as any) || {};\n        const alreadySnapped = ds.snapped;\n        if (!alreadySnapped) {\n            const computed = window.getComputedStyle(target);\n            ds.prevSnapLeft = target.style.left || computed.left || '';\n            ds.prevSnapTop = target.style.top || computed.top || '';\n            ds.prevSnapWidth = target.style.width || computed.width || '';\n            ds.prevSnapHeight = target.style.height || computed.height || '';\n            ds.prevSnapPosition = target.style.position || computed.position || '';\n            ds.prevSnapRight = target.style.right || computed.right || '';\n            ds.prevSnapBottom = target.style.bottom || computed.bottom || '';\n        }\n        const metrics = (window as any).computeSnapMetrics?.(side);\n        if (!metrics) {\n            this.unsnap({ silent: true });\n            return null;\n        }\n        target.style.position = 'fixed';\n        target.style.top = `${metrics.top}px`;\n        target.style.left = `${metrics.left}px`;\n        target.style.width = `${metrics.width}px`;\n        target.style.height = `${metrics.height}px`;\n        target.style.right = '';\n        target.style.bottom = '';\n        (this.modal.dataset as any).snapped = side;\n        this.bringToFront();\n        (window as any).hideSnapPreview?.();\n        if (!silent) (window as any).saveWindowPositions?.();\n        return side;\n    }\n\n    unsnap(options: any = {}) {\n        const target = this.windowEl || this.modal;\n        if (!target) return false;\n        const { silent = false } = options;\n        const ds = (this.modal.dataset as any) || {};\n        if (!ds.snapped) return false;\n        const restore = (key: string, prop: string) => {\n            if (Object.prototype.hasOwnProperty.call(ds, key)) {\n                const value = ds[key];\n                if (value === '') target.style[prop as any] = '';\n                else target.style[prop as any] = value;\n                delete ds[key];\n            } else {\n                target.style[prop as any] = '';\n            }\n        };\n        restore('prevSnapLeft', 'left');\n        restore('prevSnapTop', 'top');\n        restore('prevSnapWidth', 'width');\n        restore('prevSnapHeight', 'height');\n        restore('prevSnapPosition', 'position');\n        restore('prevSnapRight', 'right');\n        restore('prevSnapBottom', 'bottom');\n        delete ds.snapped;\n        (window as any).hideSnapPreview?.();\n        this.enforceMenuBarBoundary();\n        if (!silent) (window as any).saveWindowPositions?.();\n        return true;\n    }\n\n    applySnapAfterDrag(target: HTMLElement | null, pointerX: number | null) {\n        if (!target) {\n            (window as any).hideSnapPreview?.();\n            return null;\n        }\n        const candidate = this.getSnapCandidate(target, pointerX);\n        if (candidate) {\n            this.snapTo(candidate, { silent: true });\n            (window as any).hideSnapPreview?.();\n            return candidate;\n        }\n        this.unsnap({ silent: true });\n        (window as any).hideSnapPreview?.();\n        return null;\n    }\n\n    getSnapCandidate(target: HTMLElement | null, pointerX: number | null) {\n        if (!target) return null;\n        const viewportWidth = Math.max(window.innerWidth || 0, 0);\n        if (viewportWidth <= 0) return null;\n        const threshold = Math.max(3, Math.min(14, viewportWidth * 0.0035));\n        const rect = target.getBoundingClientRect();\n        const pointerDistLeft =\n            typeof pointerX === 'number' ? Math.max(0, pointerX) : Math.abs(rect.left);\n        if (Math.abs(rect.left) <= threshold || pointerDistLeft <= threshold) return 'left';\n        const distRight = viewportWidth - rect.right;\n        const pointerDistRight =\n            typeof pointerX === 'number'\n                ? Math.max(0, viewportWidth - pointerX)\n                : Math.abs(distRight);\n        if (Math.abs(distRight) <= threshold || pointerDistRight <= threshold) return 'right';\n        return null;\n    }\n\n    bringToFront() {\n        // Use a robust z-index management system that maintains a sorted window stack\n        // and reassigns z-indexes to prevent reaching the maximum\n        const zIndexManager = (window as any).__zIndexManager || this.initZIndexManager();\n        zIndexManager.bringToFront(this.modal.id, this.modal, this.windowEl);\n    }\n\n    private initZIndexManager() {\n        // Initialize global z-index manager if not exists\n        if ((window as any).__zIndexManager) {\n            return (window as any).__zIndexManager;\n        }\n\n        const BASE_Z_INDEX = 1000;\n        const MAX_WINDOW_Z_INDEX = 2147483500; // Below Dock (2147483550) and Launchpad (2147483600)\n        const windowStack: string[] = []; // Ordered list of window IDs (bottom to top)\n\n        (window as any).__zIndexManager = {\n            bringToFront(windowId: string, _modal: HTMLElement, _windowEl?: HTMLElement | null) {\n                // Remove from current position if exists\n                const currentIndex = windowStack.indexOf(windowId);\n                if (currentIndex !== -1) {\n                    windowStack.splice(currentIndex, 1);\n                }\n\n                // Add to top of stack\n                windowStack.push(windowId);\n\n                // Reassign z-indexes to all windows in stack\n                // This prevents z-index from growing indefinitely\n                windowStack.forEach((id, index) => {\n                    const zIndex = BASE_Z_INDEX + index;\n                    const element = document.getElementById(id);\n\n                    if (element) {\n                        // Clamp to maximum to ensure critical UI elements stay on top\n                        const clampedZIndex = Math.min(zIndex, MAX_WINDOW_Z_INDEX);\n                        element.style.zIndex = clampedZIndex.toString();\n\n                        // Also update windowEl if it's a separate element\n                        const win = element.querySelector('.window-container') as HTMLElement;\n                        if (win) {\n                            win.style.zIndex = clampedZIndex.toString();\n                        }\n                    }\n                });\n\n                // Update legacy topZIndex for compatibility\n                (window as any).topZIndex = Math.min(\n                    BASE_Z_INDEX + windowStack.length,\n                    MAX_WINDOW_Z_INDEX\n                );\n            },\n\n            removeWindow(windowId: string) {\n                const index = windowStack.indexOf(windowId);\n                if (index !== -1) {\n                    windowStack.splice(index, 1);\n                }\n            },\n\n            getWindowStack() {\n                return [...windowStack];\n            },\n\n            reset() {\n                windowStack.length = 0;\n                (window as any).topZIndex = BASE_Z_INDEX;\n            },\n        };\n\n        return (window as any).__zIndexManager;\n    }\n\n    refocus() {\n        this.bringToFront();\n        (window as any).hideMenuDropdowns?.();\n        (window as any).saveOpenModals?.();\n        (window as any).updateProgramLabelByTopModal?.();\n    }\n\n    makeDraggable() {\n        const header = this.modal.querySelector('.draggable-header') as HTMLElement | null;\n        const target = this.windowEl || this.modal;\n        if (!header || !target) return;\n        header.style.cursor = 'move';\n        let offsetX = 0,\n            offsetY = 0;\n        header.addEventListener('mousedown', (e: MouseEvent) => {\n            this.refocus();\n            if (\n                (e.target as Element).closest &&\n                (e.target as Element).closest('button[id^=\"close-\"]')\n            )\n                return;\n            if (\n                (e.target as Element).closest &&\n                (e.target as Element).closest('[data-dialog-action]')\n            )\n                return;\n            if (this.modal.dataset && (this.modal.dataset as any).maximized === 'true') return;\n            const pointerX = e.clientX;\n            const pointerY = e.clientY;\n            const initialSnapSide = this.modal.dataset ? (this.modal.dataset as any).snapped : null;\n            let rect = target.getBoundingClientRect();\n            let localOffsetX = pointerX - rect.left;\n            let localOffsetY = pointerY - rect.top;\n            if (initialSnapSide) {\n                const preservedOffsetX = localOffsetX;\n                const preservedOffsetY = localOffsetY;\n                this.unsnap({ silent: true });\n                const minTopAfterUnsnap = (window as any).getMenuBarBottom?.() || 0;\n                target.style.position = 'fixed';\n                target.style.left = `${pointerX - preservedOffsetX}px`;\n                target.style.top = `${Math.max(minTopAfterUnsnap, pointerY - preservedOffsetY)}px`;\n                rect = target.getBoundingClientRect();\n                localOffsetX = pointerX - rect.left;\n                localOffsetY = pointerY - rect.top;\n            }\n            const computedPosition = window.getComputedStyle(target).position;\n            if (computedPosition === 'static' || computedPosition === 'relative') {\n                target.style.position = 'fixed';\n            } else if (!target.style.position) {\n                target.style.position = computedPosition;\n            }\n            const minTop = (window as any).getMenuBarBottom?.() || 0;\n            target.style.left = `${pointerX - localOffsetX}px`;\n            target.style.top = `${Math.max(minTop, pointerY - localOffsetY)}px`;\n            (window as any).clampWindowToMenuBar?.(target);\n            const adjustedRect = target.getBoundingClientRect();\n            offsetX = pointerX - adjustedRect.left;\n            offsetY = pointerY - adjustedRect.top;\n            this.lastDragPointerX = pointerX;\n            const overlay = document.createElement('div');\n            overlay.style.position = 'fixed';\n            overlay.style.top = '0';\n            overlay.style.left = '0';\n            overlay.style.width = '100%';\n            overlay.style.height = '100%';\n            overlay.style.zIndex = '9999';\n            overlay.style.cursor = 'move';\n            overlay.style.backgroundColor = 'transparent';\n            document.body.appendChild(overlay);\n            let isDragging = true;\n            let moved = false;\n            const cleanup = (shouldSave = true) => {\n                if (!isDragging) return;\n                isDragging = false;\n                overlay.remove();\n                overlay.removeEventListener('mousemove', mouseMoveHandler);\n                overlay.removeEventListener('mouseup', mouseUpHandler);\n                window.removeEventListener('mouseup', mouseUpHandler);\n                window.removeEventListener('blur', blurHandler);\n                window.removeEventListener('mousemove', mouseMoveHandler);\n                (window as any).hideSnapPreview?.();\n                if (shouldSave) {\n                    if (moved) {\n                        this.applySnapAfterDrag(target, this.lastDragPointerX);\n                    } else if (initialSnapSide) {\n                        this.snapTo(initialSnapSide, { silent: true });\n                    }\n                    (window as any).saveWindowPositions?.();\n                }\n                this.lastDragPointerX = null;\n            };\n            const mouseMoveHandler = (e2: MouseEvent) => {\n                moved = true;\n                window.requestAnimationFrame(() => {\n                    const newLeft = e2.clientX - offsetX;\n                    const newTop = e2.clientY - offsetY;\n                    const minTop = (window as any).getMenuBarBottom?.() || 0;\n                    target.style.left = newLeft + 'px';\n                    target.style.top = Math.max(minTop, newTop) + 'px';\n                    this.lastDragPointerX = e2.clientX;\n                    const candidate = this.getSnapCandidate(target, this.lastDragPointerX);\n                    if (candidate) (window as any).showSnapPreview?.(candidate);\n                    else (window as any).hideSnapPreview?.();\n                });\n            };\n            const mouseUpHandler = () => cleanup(true);\n            const blurHandler = () => cleanup(true);\n            overlay.addEventListener('mousemove', mouseMoveHandler);\n            overlay.addEventListener('mouseup', mouseUpHandler);\n            window.addEventListener('mousemove', mouseMoveHandler);\n            window.addEventListener('mouseup', mouseUpHandler);\n            window.addEventListener('blur', blurHandler);\n            e.preventDefault();\n        });\n    }\n\n    makeResizable() {\n        if ((this.modal.dataset as any).noResize === 'true') return;\n        const target = this.windowEl || this.modal;\n        if (!target) return;\n        const existingHandles = target.querySelectorAll('.resizer');\n        existingHandles.forEach(handle => handle.remove());\n        const computedPosition = window.getComputedStyle(target).position;\n        if (!computedPosition || computedPosition === 'static') target.style.position = 'relative';\n\n        const ensureFixedPosition = () => {\n            const computed = window.getComputedStyle(target);\n            const rect = target.getBoundingClientRect();\n            if (computed.position === 'static' || computed.position === 'relative') {\n                target.style.position = 'fixed';\n                target.style.left = rect.left + 'px';\n                target.style.top = rect.top + 'px';\n            } else {\n                if (!target.style.left) target.style.left = rect.left + 'px';\n                if (!target.style.top) target.style.top = rect.top + 'px';\n            }\n        };\n\n        const createHandle = (handle: any) => {\n            const resizer = document.createElement('div');\n            resizer.classList.add('resizer', `resizer-${handle.name}`);\n            Object.assign(resizer.style, {\n                position: 'absolute',\n                zIndex: '9999',\n                backgroundColor: 'transparent',\n                pointerEvents: 'auto',\n                touchAction: 'none',\n                cursor: handle.cursor,\n                ...(handle.style || {}),\n            });\n            target.appendChild(resizer);\n            const startResize = (event: MouseEvent) => {\n                event.preventDefault();\n                event.stopPropagation();\n                this.refocus();\n                ensureFixedPosition();\n                const startX = event.clientX;\n                const startY = event.clientY;\n                const rect = target.getBoundingClientRect();\n                const computed = window.getComputedStyle(target);\n                const minWidth = parseFloat(computed.minWidth as any) || 240;\n                const minHeight = parseFloat(computed.minHeight as any) || 160;\n                let startLeft = parseFloat(computed.left as any);\n                let startTop = parseFloat(computed.top as any);\n                if (!Number.isFinite(startLeft)) startLeft = rect.left;\n                if (!Number.isFinite(startTop)) startTop = rect.top;\n                const startWidth = rect.width;\n                const startHeight = rect.height;\n                const overlay = document.createElement('div');\n                Object.assign(overlay.style, {\n                    position: 'fixed',\n                    top: '0',\n                    left: '0',\n                    width: '100%',\n                    height: '100%',\n                    zIndex: '9999',\n                    cursor: handle.cursor,\n                    backgroundColor: 'transparent',\n                    touchAction: 'none',\n                });\n                document.body.appendChild(overlay);\n                let resizing = true;\n                const applySize = (clientX: number, clientY: number) => {\n                    if (!resizing) return;\n                    window.requestAnimationFrame(() => {\n                        const dx = clientX - startX;\n                        const dy = clientY - startY;\n                        let newWidth = startWidth;\n                        let newHeight = startHeight;\n                        let newLeft = startLeft;\n                        let newTop = startTop;\n                        if (handle.directions.includes('e')) newWidth = startWidth + dx;\n                        if (handle.directions.includes('s')) newHeight = startHeight + dy;\n                        if (handle.directions.includes('w')) {\n                            newWidth = startWidth - dx;\n                            newLeft = startLeft + dx;\n                        }\n                        if (handle.directions.includes('n')) {\n                            newHeight = startHeight - dy;\n                            newTop = startTop + dy;\n                        }\n                        if (newWidth < minWidth) {\n                            const deficit = minWidth - newWidth;\n                            if (handle.directions.includes('w')) newLeft -= deficit;\n                            newWidth = minWidth;\n                        }\n                        if (newHeight < minHeight) {\n                            const deficit = minHeight - newHeight;\n                            if (handle.directions.includes('n')) newTop -= deficit;\n                            newHeight = minHeight;\n                        }\n                        const minTop = (window as any).getMenuBarBottom?.() || 0;\n                        if (handle.directions.includes('n') && newTop < minTop) {\n                            const overshoot = minTop - newTop;\n                            newTop = minTop;\n                            newHeight = Math.max(minHeight, newHeight - overshoot);\n                        }\n                        if (handle.directions.includes('w') || handle.directions.includes('e'))\n                            target.style.width = Math.max(minWidth, newWidth) + 'px';\n                        if (handle.directions.includes('s') || handle.directions.includes('n'))\n                            target.style.height = Math.max(minHeight, newHeight) + 'px';\n                        if (handle.directions.includes('w')) target.style.left = newLeft + 'px';\n                        if (handle.directions.includes('n')) target.style.top = newTop + 'px';\n                    });\n                };\n                const stopResize = () => {\n                    if (!resizing) return;\n                    resizing = false;\n                    overlay.remove();\n                    overlay.removeEventListener('mousemove', overlayMouseMove);\n                    overlay.removeEventListener('mouseup', overlayMouseUp);\n                    window.removeEventListener('mousemove', windowMouseMove);\n                    window.removeEventListener('mouseup', windowMouseUp);\n                    window.removeEventListener('blur', onBlur);\n                    (window as any).clampWindowToMenuBar?.(target);\n                    (window as any).saveWindowPositions?.();\n                };\n                const overlayMouseMove = (moveEvent: MouseEvent) =>\n                    applySize(moveEvent.clientX, moveEvent.clientY);\n                const windowMouseMove = (moveEvent: MouseEvent) =>\n                    applySize(moveEvent.clientX, moveEvent.clientY);\n                const overlayMouseUp = () => stopResize();\n                const windowMouseUp = () => stopResize();\n                const onBlur = () => stopResize();\n                overlay.addEventListener('mousemove', overlayMouseMove);\n                overlay.addEventListener('mouseup', overlayMouseUp);\n                window.addEventListener('mousemove', windowMouseMove);\n                window.addEventListener('mouseup', windowMouseUp);\n                window.addEventListener('blur', onBlur);\n            };\n            resizer.addEventListener('mousedown', startResize);\n        };\n\n        target.style.overflow = 'visible';\n        const handles = [\n            {\n                name: 'top',\n                cursor: 'n-resize',\n                directions: ['n'],\n                style: { top: '-4px', left: '12px', right: '12px', height: '8px' },\n            },\n            {\n                name: 'bottom',\n                cursor: 's-resize',\n                directions: ['s'],\n                style: { bottom: '-4px', left: '12px', right: '12px', height: '8px' },\n            },\n            {\n                name: 'left',\n                cursor: 'w-resize',\n                directions: ['w'],\n                style: { left: '-4px', top: '12px', bottom: '12px', width: '8px' },\n            },\n            {\n                name: 'right',\n                cursor: 'e-resize',\n                directions: ['e'],\n                style: { right: '-4px', top: '12px', bottom: '12px', width: '8px' },\n            },\n            {\n                name: 'top-left',\n                cursor: 'nw-resize',\n                directions: ['n', 'w'],\n                style: { top: '-6px', left: '-6px', width: '14px', height: '14px' },\n            },\n            {\n                name: 'top-right',\n                cursor: 'ne-resize',\n                directions: ['n', 'e'],\n                style: { top: '-6px', right: '-6px', width: '14px', height: '14px' },\n            },\n            {\n                name: 'bottom-left',\n                cursor: 'sw-resize',\n                directions: ['s', 'w'],\n                style: { bottom: '-6px', left: '-6px', width: '14px', height: '14px' },\n            },\n            {\n                name: 'bottom-right',\n                cursor: 'se-resize',\n                directions: ['s', 'e'],\n                style: { bottom: '-6px', right: '-6px', width: '14px', height: '14px' },\n            },\n        ];\n        handles.forEach(createHandle);\n    }\n\n    enforceMenuBarBoundary() {\n        (window as any).clampWindowToMenuBar?.(this.windowEl || this.modal);\n    }\n\n    loadIframe(url: string) {\n        let contentArea = this.modal.querySelector('.dialog-content') as HTMLElement | null;\n        if (!contentArea) {\n            contentArea = document.createElement('div');\n            contentArea.classList.add('dialog-content');\n            contentArea.style.width = '100%';\n            contentArea.style.height = '100%';\n            this.modal.appendChild(contentArea);\n        }\n        contentArea.innerHTML = '';\n        const iframe = document.createElement('iframe');\n        iframe.src = url;\n        iframe.style.width = '100%';\n        iframe.style.height = '100%';\n        iframe.style.border = 'none';\n        iframe.setAttribute('allow', 'fullscreen');\n        contentArea.appendChild(iframe);\n        iframe.addEventListener('load', () => {\n            try {\n                const cw = (iframe as any).contentWindow as Window | null;\n                if (cw && (cw as any).document) {\n                    const handler = () =>\n                        requestAnimationFrame(() => {\n                            this.refocus();\n                        });\n                    ['mousedown', 'click', 'touchstart'].forEach(evt => {\n                        (cw as any).document.addEventListener(evt, handler);\n                    });\n                } else if (cw) {\n                    ['mousedown', 'click', 'touchstart'].forEach(evt => {\n                        (cw as any).addEventListener(evt, () =>\n                            requestAnimationFrame(() => {\n                                this.refocus();\n                            })\n                        );\n                    });\n                }\n            } catch (err) {\n                console.error('Could not attach mousedown event in iframe:', err);\n            }\n        });\n    }\n\n    saveState() {\n        return {\n            left: this.modal.style.left,\n            top: this.modal.style.top,\n            width: this.modal.style.width,\n            height: this.modal.style.height,\n            zIndex: this.modal.style.zIndex,\n        };\n    }\n\n    restoreState(state: any) {\n        if (!state) return;\n        if (state.left) this.modal.style.left = state.left;\n        if (state.top) this.modal.style.top = state.top;\n        if (state.width) this.modal.style.width = state.width;\n        if (state.height) this.modal.style.height = state.height;\n        if (state.zIndex) this.modal.style.zIndex = state.zIndex;\n    }\n}\n// Note: Type declaration is in types/index.d.ts\n(window as any).Dialog = Dialog;\nexport default Dialog;\n\n", "(function () {\n    'use strict';\n\n    type TriggerOptions = { hoverRequiresOpen?: boolean; forceOpen?: boolean };\n\n    // Avoid redefining if legacy already provided these\n    if (\n        (window as unknown as { bindDropdownTrigger?: unknown }).bindDropdownTrigger &&\n        (window as unknown as { hideMenuDropdowns?: unknown }).hideMenuDropdowns\n    ) {\n        return;\n    }\n\n    function hideMenuDropdowns(): void {\n        const domUtils = (window as any).DOMUtils;\n        \n        document.querySelectorAll('.menu-dropdown').forEach(dropdown => {\n            if (!dropdown.classList.contains('hidden')) {\n                if (domUtils && typeof domUtils.hide === 'function') {\n                    domUtils.hide(dropdown);\n                } else {\n                    dropdown.classList.add('hidden');\n                }\n            }\n        });\n        document.querySelectorAll('[data-menubar-trigger-button=\"true\"]').forEach(button => {\n            (button as HTMLElement).setAttribute('aria-expanded', 'false');\n        });\n        document.querySelectorAll('[data-system-menu-trigger]').forEach(button => {\n            (button as HTMLElement).setAttribute('aria-expanded', 'false');\n        });\n    }\n\n    function isAnyDropdownOpen(): boolean {\n        return Boolean(document.querySelector('.menu-dropdown:not(.hidden)'));\n    }\n\n    function toggleMenuDropdown(trigger: HTMLElement, options: TriggerOptions = {}): void {\n        if (!trigger) return;\n        const menuId = trigger.getAttribute('aria-controls');\n        if (!menuId) return;\n\n        const forceOpen = Boolean(options.forceOpen);\n        let menu = document.getElementById(menuId);\n        if (!menu) return;\n\n        const wasOpen = !menu.classList.contains('hidden');\n        const shouldOpen = forceOpen || !wasOpen;\n        hideMenuDropdowns();\n\n        if (shouldOpen) {\n            // Only re-render menu if it was NOT already open (i.e., we're opening it fresh)\n            // This prevents re-rendering during hover events when menu is already visible\n            if (!wasOpen) {\n                const MenuSystem = (\n                    window as unknown as {\n                        MenuSystem?: { renderApplicationMenu?: (modalId?: string | null) => void };\n                    }\n                ).MenuSystem;\n                if (MenuSystem && typeof MenuSystem.renderApplicationMenu === 'function') {\n                    // Get the current active modal to pass to menu renderer\n                    const topModal = Array.from(\n                        document.querySelectorAll('.modal:not(.hidden)')\n                    ).sort((a, b) => {\n                        const zA = parseInt(getComputedStyle(a).zIndex, 10) || 0;\n                        const zB = parseInt(getComputedStyle(b).zIndex, 10) || 0;\n                        return zB - zA;\n                    })[0];\n                    const activeModalId = topModal?.id || null;\n                    MenuSystem.renderApplicationMenu(activeModalId);\n                }\n\n                // Re-get menu element after rendering (it may have been recreated)\n                menu = document.getElementById(menuId);\n                if (!menu) return;\n            }\n\n            const domUtils = (window as any).DOMUtils;\n            if (domUtils && typeof domUtils.show === 'function') {\n                domUtils.show(menu);\n            } else {\n                menu.classList.remove('hidden');\n            }\n            \n            trigger.setAttribute('aria-expanded', 'true');\n        }\n    }\n\n    function bindDropdownTrigger(el: HTMLElement | null, options: TriggerOptions = {}): void {\n        if (!el) return;\n        const hoverRequiresExisting =\n            options.hoverRequiresOpen !== undefined ? options.hoverRequiresOpen : true;\n        let clickJustOccurred = false;\n\n        el.addEventListener('click', event => {\n            event.stopPropagation();\n            clickJustOccurred = true;\n            const now = Date.now();\n            (window as unknown as { __lastMenuInteractionAt?: number }).__lastMenuInteractionAt =\n                now;\n            const menuId = el.getAttribute('aria-controls');\n            const menu = menuId ? document.getElementById(menuId) : null;\n            const isOpen = menu ? !menu.classList.contains('hidden') : false;\n            const sinceFocus =\n                now -\n                ((window as unknown as { __lastMenuFocusAt?: number }).__lastMenuFocusAt || 0);\n            if (isOpen && sinceFocus > 200) {\n                hideMenuDropdowns();\n                el.setAttribute('aria-expanded', 'false');\n            } else {\n                toggleMenuDropdown(el, { forceOpen: true });\n            }\n            setTimeout(() => {\n                clickJustOccurred = false;\n            }, 200);\n        });\n\n        el.addEventListener('mouseenter', () => {\n            if (clickJustOccurred) return;\n            (window as unknown as { __lastMenuInteractionAt?: number }).__lastMenuInteractionAt =\n                Date.now();\n            if (hoverRequiresExisting && !isAnyDropdownOpen()) return;\n            toggleMenuDropdown(el, { forceOpen: true });\n        });\n\n        el.addEventListener('focus', () => {\n            const now = Date.now();\n            (window as unknown as { __lastMenuInteractionAt?: number }).__lastMenuInteractionAt =\n                now;\n            (window as unknown as { __lastMenuFocusAt?: number }).__lastMenuFocusAt = now;\n            toggleMenuDropdown(el, { forceOpen: true });\n        });\n    }\n\n    function handleDocumentClickToCloseMenus(event: Event): void {\n        const last = (window as unknown as { __lastMenuInteractionAt?: number })\n            .__lastMenuInteractionAt;\n        if (last && Date.now() - last < 200) {\n            return;\n        }\n        const target = event.target instanceof Element ? (event.target as Element) : null;\n        if (!target) return;\n        if (target.closest('.menubar-trigger') || target.closest('.menu-dropdown')) return;\n        hideMenuDropdowns();\n    }\n\n    function initMenubarWiring() {\n        if ((window as unknown as { __menubarWired?: boolean }).__menubarWired) return;\n        (window as unknown as { __menubarWired?: boolean }).__menubarWired = true;\n\n        const appleMenuTrigger = document.getElementById('apple-menu-trigger');\n        const programLabel = document.getElementById('program-label');\n        bindDropdownTrigger(appleMenuTrigger, { hoverRequiresOpen: true });\n        bindDropdownTrigger(programLabel, { hoverRequiresOpen: true });\n\n        // Menu action activation from menu.js\n        document.addEventListener('click', event => {\n            const MenuSystem = (\n                window as unknown as {\n                    MenuSystem?: { handleMenuActionActivation?: (e: Event) => void };\n                }\n            ).MenuSystem;\n            if (MenuSystem && typeof MenuSystem.handleMenuActionActivation === 'function') {\n                MenuSystem.handleMenuActionActivation(event);\n            }\n        });\n\n        document.addEventListener('click', handleDocumentClickToCloseMenus);\n        document.addEventListener('pointerdown', handleDocumentClickToCloseMenus, {\n            capture: true,\n        });\n        document.addEventListener('keydown', event => {\n            if ((event as KeyboardEvent).key === 'Escape') hideMenuDropdowns();\n        });\n    }\n\n    // Expose API\n    (\n        window as unknown as {\n            hideMenuDropdowns: typeof hideMenuDropdowns;\n            bindDropdownTrigger: typeof bindDropdownTrigger;\n        }\n    ).hideMenuDropdowns = hideMenuDropdowns;\n    (window as unknown as { bindDropdownTrigger: typeof bindDropdownTrigger }).bindDropdownTrigger =\n        bindDropdownTrigger;\n\n    // Initialize on DOMContentLoaded (idempotent)\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', initMenubarWiring, { once: true });\n    } else {\n        initMenubarWiring();\n    }\n})();\n\n", "/*\n * src/ts/context-menu.ts\n * Typed port of js/context-menu.js\n */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nconst guardKey = '__customContextMenuInit';\nif ((window as any)[guardKey]) {\n    // already initialized\n} else {\n    (window as any)[guardKey] = true;\n\n    const i18n =\n        (window as any).appI18n ||\n        ({\n            translate: (k: string) => k,\n            applyTranslations: (_el?: Element) => {},\n        } as { translate: (k: string) => string; applyTranslations: (el?: Element) => void });\n\n    const hideAllDropdowns =\n        typeof (window as any).hideMenuDropdowns === 'function'\n            ? (window as any).hideMenuDropdowns\n            : () => {\n                  const domUtils = (window as any).DOMUtils;\n                  document\n                      .querySelectorAll('.menu-dropdown')\n                      .forEach(d => {\n                          if (domUtils && typeof domUtils.hide === 'function') {\n                              domUtils.hide(d);\n                          } else {\n                              d.classList.add('hidden');\n                          }\n                      });\n                  document\n                      .querySelectorAll('[aria-expanded=\"true\"]')\n                      .forEach(b => b.setAttribute('aria-expanded', 'false'));\n              };\n\n    function openModal(id: string) {\n        const el = document.getElementById(id);\n        if (!el) return;\n        if (!(window as any).dialogs) (window as any).dialogs = {};\n        if (!(window as any).dialogs[id] && typeof (window as any).Dialog === 'function') {\n            try {\n                (window as any).dialogs[id] = new (window as any).Dialog(id);\n            } catch {\n                // noop\n            }\n        }\n        const dlg = (window as any).dialogs[id];\n        if (dlg && typeof dlg.open === 'function') {\n            dlg.open();\n        } else {\n            const domUtils = (window as any).DOMUtils;\n            if (domUtils && typeof domUtils.show === 'function') {\n                domUtils.show(el);\n            } else {\n                el.classList.remove('hidden');\n            }\n            if (typeof (window as any).bringDialogToFront === 'function') {\n                (window as any).bringDialogToFront(id);\n            }\n        }\n        if (typeof (window as any).updateProgramLabelByTopModal === 'function') {\n            (window as any).updateProgramLabelByTopModal();\n        }\n    }\n\n    function toggleDarkMode() {\n        if (\n            (window as any).SystemUI &&\n            typeof (window as any).SystemUI.handleSystemToggle === 'function'\n        ) {\n            (window as any).SystemUI.handleSystemToggle('dark-mode');\n        } else {\n            const next = !document.documentElement.classList.contains('dark');\n            document.documentElement.classList.toggle('dark', next);\n            if (\n                (window as any).ThemeSystem &&\n                typeof (window as any).ThemeSystem.setThemePreference === 'function'\n            ) {\n                (window as any).ThemeSystem.setThemePreference(next ? 'dark' : 'light');\n            }\n        }\n    }\n\n    function getMenuItemsForTarget(target: Element | null) {\n        const items: Array<any> = [];\n        const inDesktop = !!(\n            target &&\n            (target as Element).closest &&\n            (target as Element).closest('#desktop')\n        );\n        const inDockItem = !!(\n            target &&\n            (target as Element).closest &&\n            (target as Element).closest('#dock .dock-item')\n        );\n        const inImageModal = !!(\n            target &&\n            (target as Element).closest &&\n            (target as Element).closest('#image-modal')\n        );\n        const inFinderModal = !!(\n            target &&\n            (target as Element).closest &&\n            (target as Element).closest('#finder-modal')\n        );\n\n        if (inDockItem) {\n            const dockItem = (target as Element).closest('#dock .dock-item') as Element | null;\n            const winId = dockItem && dockItem.getAttribute('data-window-id');\n            if (winId) {\n                items.push({\n                    id: 'open-dock-window',\n                    label: i18n.translate('context.open') || '\u00D6ffnen',\n                    action: () => openModal(winId),\n                });\n                items.push({ type: 'separator' });\n            }\n        }\n\n        if (inImageModal && typeof (window as any).getImageViewerState === 'function') {\n            const st = (window as any).getImageViewerState();\n            if (st && st.hasImage) {\n                items.push({\n                    id: 'image-open-tab',\n                    label:\n                        i18n.translate('context.image.openInTab') ||\n                        i18n.translate('menu.image.openInTab') ||\n                        'Bild in neuem Tab \u00F6ffnen',\n                    action: () => {\n                        if (typeof (window as any).openActiveImageInNewTab === 'function')\n                            (window as any).openActiveImageInNewTab();\n                    },\n                });\n                items.push({\n                    id: 'image-save',\n                    label:\n                        i18n.translate('context.image.save') ||\n                        i18n.translate('menu.image.saveImage') ||\n                        'Bild sichern \u2026',\n                    action: () => {\n                        if (typeof (window as any).downloadActiveImage === 'function')\n                            (window as any).downloadActiveImage();\n                    },\n                });\n                items.push({ type: 'separator' });\n            }\n        }\n\n        if (inFinderModal) {\n            const finderItem =\n                target &&\n                (target as Element).closest &&\n                (target as Element).closest('.finder-list-item, .finder-grid-item');\n            if (finderItem) {\n                const itemName = (finderItem as Element).getAttribute('data-item-name');\n                const itemType = (finderItem as Element).getAttribute('data-item-type');\n                if (itemName && itemType) {\n                    items.push({\n                        id: 'finder-open-item',\n                        label: i18n.translate('context.finder.openItem') || '\u00D6ffnen',\n                        action: () => {\n                            if (\n                                (window as any).FinderSystem &&\n                                typeof (window as any).FinderSystem.openItem === 'function'\n                            )\n                                (window as any).FinderSystem.openItem(itemName, itemType);\n                        },\n                    });\n                    items.push({ type: 'separator' });\n                    items.push({\n                        id: 'finder-get-info',\n                        label: i18n.translate('context.finder.getInfo') || 'Informationen',\n                        action: () => {\n                            console.log('Get info for:', itemName, itemType);\n                        },\n                    });\n                    return items;\n                }\n            }\n\n            items.push({\n                id: 'finder-refresh',\n                label: i18n.translate('context.finder.refresh') || 'Aktualisieren',\n                action: () => {\n                    if (\n                        (window as any).FinderSystem &&\n                        typeof (window as any).FinderSystem.navigateTo === 'function'\n                    ) {\n                        const state = (window as any).FinderSystem.getState();\n                        if (state) {\n                            (window as any).FinderSystem.navigateTo(\n                                state.currentPath,\n                                state.currentView\n                            );\n                        }\n                    }\n                },\n            });\n            items.push({ type: 'separator' });\n\n            const currentViewMode =\n                (window as any).FinderSystem && (window as any).FinderSystem.getState\n                    ? (window as any).FinderSystem.getState().viewMode\n                    : 'list';\n            if (currentViewMode !== 'list') {\n                items.push({\n                    id: 'finder-view-list',\n                    label: i18n.translate('context.finder.viewList') || 'Als Liste',\n                    action: () => {\n                        if (\n                            (window as any).FinderSystem &&\n                            typeof (window as any).FinderSystem.setViewMode === 'function'\n                        )\n                            (window as any).FinderSystem.setViewMode('list');\n                    },\n                });\n            }\n            if (currentViewMode !== 'grid') {\n                items.push({\n                    id: 'finder-view-grid',\n                    label: i18n.translate('context.finder.viewGrid') || 'Als Raster',\n                    action: () => {\n                        if (\n                            (window as any).FinderSystem &&\n                            typeof (window as any).FinderSystem.setViewMode === 'function'\n                        )\n                            (window as any).FinderSystem.setViewMode('grid');\n                    },\n                });\n            }\n            items.push({ type: 'separator' });\n\n            items.push({\n                id: 'finder-sort-name',\n                label: i18n.translate('context.finder.sortByName') || 'Nach Name sortieren',\n                action: () => {\n                    if (\n                        (window as any).FinderSystem &&\n                        typeof (window as any).FinderSystem.setSortBy === 'function'\n                    )\n                        (window as any).FinderSystem.setSortBy('name');\n                },\n            });\n            items.push({\n                id: 'finder-sort-date',\n                label: i18n.translate('context.finder.sortByDate') || 'Nach Datum sortieren',\n                action: () => {\n                    if (\n                        (window as any).FinderSystem &&\n                        typeof (window as any).FinderSystem.setSortBy === 'function'\n                    )\n                        (window as any).FinderSystem.setSortBy('date');\n                },\n            });\n            items.push({\n                id: 'finder-sort-size',\n                label: i18n.translate('context.finder.sortBySize') || 'Nach Gr\u00F6\u00DFe sortieren',\n                action: () => {\n                    if (\n                        (window as any).FinderSystem &&\n                        typeof (window as any).FinderSystem.setSortBy === 'function'\n                    )\n                        (window as any).FinderSystem.setSortBy('size');\n                },\n            });\n\n            return items;\n        }\n\n        if (inDesktop) {\n            items.push({\n                id: 'open-finder',\n                label: i18n.translate('context.openFinder') || 'Finder \u00F6ffnen',\n                action: () => openModal('finder-modal'),\n            });\n            items.push({\n                id: 'open-text',\n                label: i18n.translate('context.openTextEditor') || 'Texteditor \u00F6ffnen',\n                action: () => openModal('text-modal'),\n            });\n            items.push({\n                id: 'open-projects',\n                label: i18n.translate('context.openProjects') || 'Projekte \u00F6ffnen',\n                action: () => openModal('projects-modal'),\n            });\n            items.push({ type: 'separator' });\n            items.push({\n                id: 'toggle-dark',\n                label: i18n.translate('context.toggleDarkMode') || 'Dark Mode umschalten',\n                action: toggleDarkMode,\n            });\n            items.push({\n                id: 'open-settings',\n                label: i18n.translate('context.openSettings') || 'Systemeinstellungen \u2026',\n                action: () => openModal('settings-modal'),\n            });\n            items.push({ type: 'separator' });\n            items.push({\n                id: 'about',\n                label: i18n.translate('context.about') || '\u00DCber Marvin',\n                action: () => openModal('about-modal'),\n            });\n            return items;\n        }\n\n        items.push({\n            id: 'open-finder',\n            label: i18n.translate('context.openFinder') || 'Finder \u00F6ffnen',\n            action: () => openModal('finder-modal'),\n        });\n        items.push({\n            id: 'open-text',\n            label: i18n.translate('context.openTextEditor') || 'Texteditor \u00F6ffnen',\n            action: () => openModal('text-modal'),\n        });\n        items.push({ type: 'separator' });\n        items.push({\n            id: 'toggle-dark',\n            label: i18n.translate('context.toggleDarkMode') || 'Dark Mode umschalten',\n            action: toggleDarkMode,\n        });\n        items.push({\n            id: 'open-settings',\n            label: i18n.translate('context.openSettings') || 'Systemeinstellungen \u2026',\n            action: () => openModal('settings-modal'),\n        });\n        items.push({ type: 'separator' });\n        items.push({\n            id: 'about',\n            label: i18n.translate('context.about') || '\u00DCber Marvin',\n            action: () => openModal('about-modal'),\n        });\n        return items;\n    }\n\n    // Create DOM once\n    const menu = document.createElement('ul');\n    menu.id = 'context-menu';\n    menu.className = 'menu-dropdown context-menu hidden';\n    menu.setAttribute('role', 'menu');\n    menu.setAttribute('aria-label', i18n.translate('context.menuLabel') || 'Kontextmen\u00FC');\n\n    document.addEventListener('DOMContentLoaded', () => {\n        if (!document.body.contains(menu)) document.body.appendChild(menu);\n        try {\n            i18n.applyTranslations(menu);\n        } catch {}\n    });\n\n    function clearMenu() {\n        while (menu.firstChild) menu.removeChild(menu.firstChild);\n    }\n\n    function renderMenu(items: Array<any>) {\n        clearMenu();\n        const fragment = document.createDocumentFragment();\n        let firstFocusable: HTMLElement | null = null;\n        items.forEach((it: any, idx: number) => {\n            if (it.type === 'separator') {\n                const sep = document.createElement('li');\n                sep.className = 'menu-separator';\n                sep.setAttribute('role', 'separator');\n                fragment.appendChild(sep);\n                return;\n            }\n            const li = document.createElement('li');\n            const btn = document.createElement('button');\n            btn.type = 'button';\n            btn.className = 'menu-item';\n            btn.setAttribute('role', 'menuitem');\n            btn.tabIndex = -1;\n            btn.dataset.itemId = it.id || 'item-' + idx;\n            const labelSpan = document.createElement('span');\n            labelSpan.className = 'menu-item-label';\n            labelSpan.textContent = it.label || '';\n            btn.appendChild(labelSpan);\n            btn.addEventListener('click', ev => {\n                ev.stopPropagation();\n                hideContextMenu();\n                try {\n                    if (it.action) {\n                        it.action();\n                    }\n                } catch (e) {\n                    console.warn('Context action failed', e);\n                }\n            });\n            li.appendChild(btn);\n            fragment.appendChild(li);\n            if (!firstFocusable) firstFocusable = btn;\n        });\n        menu.appendChild(fragment);\n        try {\n            i18n.applyTranslations(menu);\n        } catch {}\n        return firstFocusable;\n    }\n\n    function clampPosition(x: number, y: number) {\n        const rect = menu.getBoundingClientRect();\n        const vw = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n        const vh = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\n        const margin = 6;\n        const nx = Math.min(Math.max(margin, x), Math.max(margin, vw - rect.width - margin));\n        const ny = Math.min(Math.max(margin, y), Math.max(margin, vh - rect.height - margin));\n        return { x: nx, y: ny };\n    }\n\n    function showContextMenu(ev: MouseEvent) {\n        const target = ev.target instanceof Element ? ev.target : null;\n        if (!target) return;\n        if (target.closest('input, textarea, [contenteditable=\"true\"]')) return;\n        ev.preventDefault();\n        ev.stopPropagation();\n        hideAllDropdowns();\n        buildAndOpenAt(ev.clientX, ev.clientY, target);\n    }\n\n    function buildAndOpenAt(x: number, y: number, target: Element | null) {\n        const items = getMenuItemsForTarget(target);\n        const firstFocusable = renderMenu(items);\n        if (document.body && menu.parentElement !== document.body) {\n            document.body.appendChild(menu);\n        } else if (document.body && document.body.lastElementChild !== menu) {\n            document.body.appendChild(menu);\n        }\n        const domUtils = (window as any).DOMUtils;\n        if (domUtils && typeof domUtils.show === 'function') {\n            domUtils.show(menu);\n        } else {\n            menu.classList.remove('hidden');\n        }\n        menu.style.left = Math.max(0, x) + 'px';\n        menu.style.top = Math.max(0, y) + 'px';\n        const clamped = clampPosition(x, y);\n        menu.style.left = clamped.x + 'px';\n        menu.style.top = clamped.y + 'px';\n        if (lastInvokeWasKeyboard && firstFocusable) {\n            (firstFocusable as HTMLElement).focus();\n        }\n        bindAutoClose();\n    }\n\n    function hideContextMenu() {\n        const domUtils = (window as any).DOMUtils;\n        if (!menu.classList.contains('hidden')) {\n            if (domUtils && typeof domUtils.hide === 'function') {\n                domUtils.hide(menu);\n            } else {\n                menu.classList.add('hidden');\n            }\n        }\n        unbindAutoClose();\n    }\n\n    let onDocClick: ((e: Event) => void) | null = null;\n    let onDocScroll: (() => void) | null = null;\n    let onResize: (() => void) | null = null;\n    let onKeyDown: ((e: KeyboardEvent) => void) | null = null;\n\n    function bindAutoClose() {\n        unbindAutoClose();\n        onDocClick = (e: Event) => {\n            const t = e.target instanceof Element ? e.target : null;\n            if (!t) {\n                hideContextMenu();\n                return;\n            }\n            if (t.closest('#context-menu')) return;\n            hideContextMenu();\n        };\n        onDocScroll = () => hideContextMenu();\n        onResize = () => hideContextMenu();\n        onKeyDown = (e: KeyboardEvent) => {\n            const items = Array.from(menu.querySelectorAll('.menu-item')) as HTMLElement[];\n            const focusIdx = items.findIndex(el => el === document.activeElement);\n            if (e.key === 'Escape') {\n                e.preventDefault();\n                hideContextMenu();\n                return;\n            }\n            if (!items.length) return;\n            if (e.key === 'ArrowDown') {\n                e.preventDefault();\n                const next = items[(Math.max(0, focusIdx) + 1) % items.length];\n                if (next) next.focus();\n            } else if (e.key === 'ArrowUp') {\n                e.preventDefault();\n                const next = items[(focusIdx > 0 ? focusIdx : items.length) - 1];\n                if (next) next.focus();\n            } else if (e.key === 'Home') {\n                e.preventDefault();\n                items[0]?.focus();\n            } else if (e.key === 'End') {\n                e.preventDefault();\n                items[items.length - 1]?.focus();\n            } else if (e.key === 'Enter' || e.key === ' ') {\n                if (\n                    document.activeElement &&\n                    (document.activeElement as Element).classList.contains('menu-item')\n                ) {\n                    e.preventDefault();\n                    (document.activeElement as HTMLElement).click();\n                }\n            }\n        };\n        document.addEventListener('click', onDocClick as EventListener, { capture: true });\n        document.addEventListener('contextmenu', onDocClick as EventListener, { capture: true });\n        document.addEventListener('scroll', onDocScroll as EventListener, { capture: true });\n        window.addEventListener('resize', onResize as EventListener);\n        document.addEventListener('keydown', onKeyDown as EventListener);\n    }\n\n    function unbindAutoClose() {\n        if (onDocClick)\n            document.removeEventListener('click', onDocClick as EventListener, { capture: true });\n        if (onDocClick)\n            document.removeEventListener('contextmenu', onDocClick as EventListener, {\n                capture: true,\n            });\n        if (onDocScroll)\n            document.removeEventListener('scroll', onDocScroll as EventListener, { capture: true });\n        if (onResize) window.removeEventListener('resize', onResize as EventListener);\n        if (onKeyDown) document.removeEventListener('keydown', onKeyDown as EventListener);\n        onDocClick = onDocScroll = onResize = onKeyDown = null;\n    }\n\n    let lastInvokeWasKeyboard = false;\n    document.addEventListener('keydown', e => {\n        if (e.key === 'ContextMenu' || (e.shiftKey && e.key === 'F10')) {\n            lastInvokeWasKeyboard = true;\n        }\n    });\n    document.addEventListener(\n        'keyup',\n        () => {\n            lastInvokeWasKeyboard = false;\n        },\n        { capture: true }\n    );\n\n    document.addEventListener('contextmenu', showContextMenu);\n\n    if (typeof (window as any).bindDropdownTrigger === 'function') {\n        document.querySelectorAll('[data-menubar-trigger-button=\"true\"]').forEach(btn => {\n            btn.addEventListener('click', () => hideContextMenu());\n        });\n    }\n}\n\nexport {};\n", "// ============================================================================\n// src/ts/storage.ts \u2014 Persistence & State Management Module (TypeScript)\n// Mirrors js/storage.js API and preserves global export window.StorageSystem\n// ============================================================================\n\n(() => {\n  'use strict';\n\n  console.log('\u2705 StorageSystem (TS) loaded');\n\n  // ===== Types =====\n  type FinderState = { repo: string; path?: string } | null;\n  type Positions = Record<\n    string,\n    { left: string; top: string; width: string; height: string; position: string }\n  >;\n\n  // ===== Module Dependencies / Constants =====\n  const w = window as unknown as Record<string, unknown>;\n  const APP_CONSTANTS = (w.APP_CONSTANTS as Record<string, unknown>) || {};\n\n  const FINDER_STATE_KEY =\n    (APP_CONSTANTS.FINDER_STATE_STORAGE_KEY as string) || 'finderState';\n  const OPEN_MODALS_KEY = 'openModals';\n  const MODAL_POSITIONS_KEY = 'modalPositions';\n\n  const getModalIds = (): string[] => {\n    const ac = (w.APP_CONSTANTS as Record<string, unknown> | undefined) || undefined;\n    const v = ac && (ac['MODAL_IDS'] as unknown);\n    return Array.isArray(v) ? (v as string[]) : [];\n  };\n  const getTransientModalIds = (): Set<string> => {\n    const ac = (w.APP_CONSTANTS as Record<string, unknown> | undefined) || undefined;\n    const v = ac && (ac['TRANSIENT_MODAL_IDS'] as unknown);\n    return v instanceof Set ? (v as Set<string>) : new Set<string>();\n  };\n\n  // ===== Finder State Persistence =====\n\n  function readFinderState(): FinderState {\n    try {\n      const raw = localStorage.getItem(FINDER_STATE_KEY);\n      if (!raw) return null;\n      const parsed = JSON.parse(raw);\n      if (!parsed || typeof parsed !== 'object') return null;\n      const po = parsed as Record<string, unknown>;\n      const repo = typeof po.repo === 'string' ? po.repo.trim() : '';\n      if (!repo) return null;\n      return {\n        repo,\n        path: typeof po.path === 'string' ? po.path : '',\n      };\n    } catch (err) {\n      console.warn('Finder state konnte nicht gelesen werden:', err);\n      return null;\n    }\n  }\n\n  function writeFinderState(state: { repo: string; path?: string } | null | undefined): void {\n    if (!state || typeof state.repo !== 'string' || !state.repo) {\n      clearFinderState();\n      return;\n    }\n    const payload = {\n      repo: state.repo,\n      path: typeof state.path === 'string' ? state.path : '',\n    };\n    try {\n      localStorage.setItem(FINDER_STATE_KEY, JSON.stringify(payload));\n    } catch (err) {\n      console.warn('Finder state konnte nicht gespeichert werden:', err);\n    }\n  }\n\n  function clearFinderState(): void {\n    try {\n      localStorage.removeItem(FINDER_STATE_KEY);\n    } catch (err) {\n      console.warn('Finder state konnte nicht gel\u00F6scht werden:', err);\n    }\n  }\n\n  // ===== Open Modals Persistence =====\n\n  function saveOpenModals(): void {\n    const modalIds = getModalIds();\n    const transientModalIds = getTransientModalIds();\n\n    const openModals = modalIds.filter((id) => {\n      if (transientModalIds.has(id)) return false;\n      const el = document.getElementById(id) as HTMLElement | null;\n      if (!el) return false;\n      const minimized = el.dataset && el.dataset.minimized === 'true';\n      return !el.classList.contains('hidden') || minimized;\n    });\n\n    try {\n      localStorage.setItem(OPEN_MODALS_KEY, JSON.stringify(openModals));\n    } catch (err) {\n      console.warn('Open modals konnte nicht gespeichert werden:', err);\n    }\n  }\n\n  function restoreOpenModals(): void {\n    const transientModalIds = getTransientModalIds();\n    let openModals: string[] = [];\n\n    try {\n      openModals = JSON.parse(localStorage.getItem(OPEN_MODALS_KEY) || '[]');\n    } catch (err) {\n      console.warn('Open modals konnte nicht gelesen werden:', err);\n      return;\n    }\n\n    openModals.forEach((id) => {\n      // Skip transient modals\n      if (transientModalIds.has(id)) return;\n\n      // Validate modal exists in DOM\n      const el = document.getElementById(id);\n      if (!el) {\n        console.warn(`Skipping restore of modal \"${id}\": element not found in DOM`);\n        return;\n      }\n\n      // Validate modal is registered in WindowManager (if available)\n      const WindowManager = w['WindowManager'] as { getConfig?: (id: string) => unknown } | undefined;\n      if (WindowManager && typeof WindowManager.getConfig === 'function') {\n        const config = WindowManager.getConfig(id);\n        if (!config) {\n          console.warn(`Skipping restore of modal \"${id}\": not registered in WindowManager`);\n          return;\n        }\n      }\n\n      // Attempt to restore via dialog instance\n      const dialogs = w['dialogs'] as Record<string, unknown> | undefined;\n      const dialogInstance = dialogs && (dialogs[id] as Record<string, unknown> | null);\n      const openFn = dialogInstance && (dialogInstance['open'] as (() => void) | undefined);\n\n      if (typeof openFn === 'function') {\n        try {\n          openFn();\n        } catch (err) {\n          console.warn(`Error restoring modal \"${id}\":`, err);\n          // Fallback: try to show element directly\n          const domUtils = (w as unknown as { DOMUtils?: { show?: (el: Element) => void } })\n            .DOMUtils;\n          if (domUtils && typeof domUtils.show === 'function') {\n            domUtils.show(el);\n          } else {\n            el.classList.remove('hidden');\n          }\n        }\n      } else {\n        // Fallback: no dialog instance, just show the element\n        const domUtils = (w as unknown as { DOMUtils?: { show?: (el: Element) => void } })\n          .DOMUtils;\n        if (domUtils && typeof domUtils.show === 'function') {\n          domUtils.show(el);\n        } else {\n          el.classList.remove('hidden');\n        }\n      }\n    });\n\n    // Update dock indicators and program label (if available)\n    const updateDockIndicators = w['updateDockIndicators'] as (() => void) | undefined;\n    if (typeof updateDockIndicators === 'function') updateDockIndicators();\n    const updateProgramLabelByTopModal = w['updateProgramLabelByTopModal'] as (() => void) | undefined;\n    if (typeof updateProgramLabelByTopModal === 'function') updateProgramLabelByTopModal();\n  }\n\n  // ===== Window Positions & Sizes =====\n\n  function getDialogWindowElement(modal: HTMLElement | null): HTMLElement | null {\n    if (!modal) return null;\n    return (modal.querySelector('.autopointer') as HTMLElement | null) || modal;\n  }\n\n  function saveWindowPositions(): void {\n    const modalIds = getModalIds();\n    const transientModalIds = getTransientModalIds();\n    const positions: Positions = {};\n\n    modalIds.forEach((id) => {\n      if (transientModalIds.has(id)) return;\n      const el = document.getElementById(id) as HTMLElement | null;\n      const windowEl = getDialogWindowElement(el);\n      if (el && windowEl) {\n        positions[id] = {\n          left: (windowEl.style.left || ''),\n          top: (windowEl.style.top || ''),\n          width: (windowEl.style.width || ''),\n          height: (windowEl.style.height || ''),\n          position: (windowEl.style.position || ''),\n        };\n      }\n    });\n\n    try {\n      localStorage.setItem(MODAL_POSITIONS_KEY, JSON.stringify(positions));\n    } catch (err) {\n      console.warn('Window positions konnte nicht gespeichert werden:', err);\n    }\n  }\n\n  function restoreWindowPositions(): void {\n    const transientModalIds = getTransientModalIds();\n    let positions: Positions = {};\n\n    try {\n      positions = JSON.parse(localStorage.getItem(MODAL_POSITIONS_KEY) || '{}');\n    } catch (err) {\n      console.warn('Window positions konnte nicht gelesen werden:', err);\n      return;\n    }\n\n    Object.keys(positions).forEach((id) => {\n      if (transientModalIds.has(id)) return;\n      const el = document.getElementById(id) as HTMLElement | null;\n      const windowEl = getDialogWindowElement(el);\n      if (el && windowEl) {\n        const stored = positions[id];\n        // noUncheckedIndexedAccess: positions[id] may be undefined\n        if (!stored) return;\n\n        if (stored.position) {\n          windowEl.style.position = stored.position;\n        } else if (stored.left || stored.top) {\n          windowEl.style.position = 'fixed';\n        }\n        if (stored.left) windowEl.style.left = stored.left;\n        if (stored.top) windowEl.style.top = stored.top;\n        if (stored.width) windowEl.style.width = stored.width;\n        if (stored.height) windowEl.style.height = stored.height;\n      }\n\n      const clampWindowToMenuBar = w['clampWindowToMenuBar'] as ((el: HTMLElement | null) => void) | undefined;\n      if (typeof clampWindowToMenuBar === 'function') {\n        clampWindowToMenuBar(windowEl);\n      }\n    });\n  }\n\n  // ===== Layout Reset =====\n\n  function resetWindowLayout(): void {\n    const modalIds = getModalIds();\n\n    modalIds.forEach((id) => {\n      const modal = document.getElementById(id) as HTMLElement | null;\n      const windowEl = getDialogWindowElement(modal);\n      if (modal) {\n        modal.style.zIndex = '';\n      }\n      if (windowEl) {\n        windowEl.style.left = '';\n        windowEl.style.top = '';\n        windowEl.style.width = '';\n        windowEl.style.height = '';\n        windowEl.style.position = '';\n        windowEl.style.zIndex = '';\n      }\n    });\n\n    if (typeof w['topZIndex'] !== 'undefined') {\n      w['topZIndex'] = 1000 as unknown;\n    }\n\n    try {\n      localStorage.removeItem(MODAL_POSITIONS_KEY);\n    } catch (err) {\n      console.warn('Modal positions konnte nicht gel\u00F6scht werden:', err);\n    }\n\n    const hideMenuDropdowns = w['hideMenuDropdowns'] as (() => void) | undefined;\n    if (typeof hideMenuDropdowns === 'function') hideMenuDropdowns();\n\n    const syncTopZIndexWithDOM = w['syncTopZIndexWithDOM'] as (() => void) | undefined;\n    if (typeof syncTopZIndexWithDOM === 'function') syncTopZIndexWithDOM();\n\n    const dialogs = w['dialogs'] as Record<string, unknown> | undefined;\n    if (dialogs) {\n      Object.values(dialogs).forEach((dialog) => {\n        const enforce = (dialog as Record<string, unknown>)['enforceMenuBarBoundary'] as\n          | (() => void)\n          | undefined;\n        if (typeof enforce === 'function') enforce();\n      });\n    }\n\n    // Clear finder state\n    clearFinderState();\n\n    const updateProgramLabelByTopModal = w['updateProgramLabelByTopModal'] as (() => void) | undefined;\n    if (typeof updateProgramLabelByTopModal === 'function') updateProgramLabelByTopModal();\n  }\n\n  // ===== Public API (global) =====\n\n  const api = {\n    // Finder state\n    readFinderState,\n    writeFinderState,\n    clearFinderState,\n\n    // Open modals\n    saveOpenModals,\n    restoreOpenModals,\n\n    // Window positions\n    saveWindowPositions,\n    restoreWindowPositions,\n    getDialogWindowElement,\n\n    // Layout reset\n    resetWindowLayout,\n  };\n\n  w['StorageSystem'] = api;\n})();\n", "/**\n * src/ts/theme.ts\n * Theme management (dark/light/system) with safe typing and legacy compatibility.\n */\n\n(() => {\n  'use strict';\n\n  type ThemePref = 'system' | 'light' | 'dark';\n\n  // Constants from global config if available\n  const win = window as unknown as Record<string, unknown>;\n  const APP_CONSTANTS = (win.APP_CONSTANTS as Record<string, unknown>) || {};\n\n  const THEME_KEY =\n    (APP_CONSTANTS.THEME_PREFERENCE_KEY as string) || 'themePreference';\n\n  const validThemePreferences: ThemePref[] = ['system', 'light', 'dark'];\n\n  const systemDarkQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n  let themePreference: ThemePref = (() => {\n    const fromStorage = localStorage.getItem(THEME_KEY) as ThemePref | null;\n    return (fromStorage && validThemePreferences.includes(fromStorage)\n      ? fromStorage\n      : 'system') as ThemePref;\n  })();\n\n  function updateThemeFromPreference(): void {\n    const useDark =\n      themePreference === 'dark' ||\n      (themePreference === 'system' && systemDarkQuery.matches);\n    document.documentElement.classList.toggle('dark', useDark);\n  }\n\n  function setThemePreference(pref: ThemePref): void {\n    if (!validThemePreferences.includes(pref)) return;\n    themePreference = pref;\n    localStorage.setItem(THEME_KEY, pref);\n    updateThemeFromPreference();\n\n    // Notify other modules\n    window.dispatchEvent(\n      new CustomEvent('themePreferenceChange', {\n        detail: { preference: pref },\n      })\n    );\n  }\n\n  function getThemePreference(): ThemePref {\n    return themePreference;\n  }\n\n  // Initialize\n  updateThemeFromPreference();\n\n  const handleSystemThemeChange = () => {\n    updateThemeFromPreference();\n  };\n\n  type MQLLegacy = MediaQueryList & {\n    addListener?: (listener: (this: MediaQueryList, ev: MediaQueryListEvent) => void) => void;\n    removeListener?: (listener: (this: MediaQueryList, ev: MediaQueryListEvent) => void) => void;\n  };\n  const mql = systemDarkQuery as MQLLegacy;\n  if (typeof mql.addEventListener === 'function') {\n    mql.addEventListener('change', handleSystemThemeChange as EventListener);\n  } else if (typeof mql.addListener === 'function') {\n    mql.addListener(handleSystemThemeChange as (this: MediaQueryList, ev: MediaQueryListEvent) => void);\n  }\n\n  // Global export\n  const w = window as unknown as Record<string, unknown>;\n  w['ThemeSystem'] = {\n    setThemePreference,\n    getThemePreference,\n    updateThemeFromPreference,\n  };\n\n  // Legacy wrappers\n  w['setThemePreference'] = setThemePreference;\n  w['getThemePreference'] = getThemePreference;\n})();\n", "/**\n * src/ts/base-window-instance.ts\n * Typed port of js/base-window-instance.js\n */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport type EventCallback = (data?: any) => void;\n\nexport interface BaseWindowConfig {\n    id?: string;\n    type?: string;\n    title?: string;\n    initialState?: Record<string, any>;\n    metadata?: Record<string, any>;\n}\n\nexport class BaseWindowInstance {\n    instanceId: string;\n    type: string;\n    title: string;\n    container: HTMLElement | null;\n    windowElement: HTMLElement | null;\n    state: Record<string, any>;\n    eventListeners: Map<string, EventCallback[]>;\n    isInitialized: boolean;\n    isVisible: boolean;\n    metadata: Record<string, any>;\n\n    constructor(config: BaseWindowConfig) {\n        this.instanceId = config.id || this._generateId();\n        this.type = config.type || 'unknown';\n        this.title = config.title || 'Untitled';\n        this.container = null;\n        this.windowElement = null;\n        this.state = this._initializeState(config.initialState || {});\n        this.eventListeners = new Map();\n        this.isInitialized = false;\n        this.isVisible = false;\n        this.metadata = config.metadata || {};\n    }\n\n    private _generateId(): string {\n        return `${this.type}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n    }\n\n    private _initializeState(initialState: Record<string, any>): Record<string, any> {\n        return {\n            ...initialState,\n            created: Date.now(),\n            modified: Date.now(),\n        };\n    }\n\n    init(container: HTMLElement) {\n        if (this.isInitialized) {\n            console.warn(`Instance ${this.instanceId} already initialized`);\n            return;\n        }\n        this.container = container;\n        this.render();\n        this.attachEventListeners();\n        this.isInitialized = true;\n        this.emit('initialized');\n    }\n\n    // Subclasses must implement render\n    render(): void {\n        throw new Error('render() must be implemented by subclass');\n    }\n\n    attachEventListeners(): void {\n        // optional override by subclasses\n    }\n\n    show(): void {\n        if (this.container) {\n            this.container.classList.remove('hidden');\n            this.isVisible = true;\n            this.emit('shown');\n        }\n    }\n\n    hide(): void {\n        if (this.container) {\n            this.container.classList.add('hidden');\n            this.isVisible = false;\n            this.emit('hidden');\n        }\n    }\n\n    destroy(): void {\n        this.emit('beforeDestroy');\n        this.removeAllEventListeners();\n        if (this.container) {\n            try {\n                if (typeof (this.container as any).remove === 'function') {\n                    (this.container as any).remove();\n                } else if (this.container.parentNode) {\n                    this.container.parentNode.removeChild(this.container);\n                }\n            } catch {\n                try {\n                    this.container.innerHTML = '';\n                    this.container.classList.add('hidden');\n                } catch {\n                    /* ignore */\n                }\n            }\n            this.container = null;\n        }\n        this.windowElement = null;\n        this.isInitialized = false;\n        this.emit('destroyed');\n    }\n\n    updateState(updates: Record<string, any>): void {\n        const oldState = { ...this.state };\n        this.state = {\n            ...this.state,\n            ...updates,\n            modified: Date.now(),\n        };\n        this.emit('stateChanged', { oldState, newState: this.state });\n    }\n\n    getState(): Record<string, any> {\n        return { ...this.state };\n    }\n\n    serialize() {\n        return {\n            instanceId: this.instanceId,\n            type: this.type,\n            title: this.title,\n            state: this.getState(),\n            metadata: this.metadata,\n        };\n    }\n\n    deserialize(data: any) {\n        if (data.state) this.state = data.state;\n        if (data.title) this.title = data.title;\n        if (data.metadata) this.metadata = { ...this.metadata, ...data.metadata };\n        this.emit('deserialized');\n    }\n\n    emit(eventName: string, data?: any): void {\n        const listeners = this.eventListeners.get(eventName) || [];\n        listeners.forEach(callback => {\n            try {\n                callback.call(this, data);\n            } catch (error) {\n                console.error(`Error in event listener for ${eventName}:`, error);\n            }\n        });\n    }\n\n    on(eventName: string, callback: EventCallback): void {\n        if (!this.eventListeners.has(eventName)) this.eventListeners.set(eventName, []);\n        this.eventListeners.get(eventName)!.push(callback);\n    }\n\n    off(eventName: string, callback: EventCallback): void {\n        if (!this.eventListeners.has(eventName)) return;\n        const listeners = this.eventListeners.get(eventName)!;\n        const index = listeners.indexOf(callback);\n        if (index > -1) listeners.splice(index, 1);\n    }\n\n    removeAllEventListeners(): void {\n        this.eventListeners.clear();\n    }\n\n    focus(): void {\n        if (this.container && this.isVisible) this.emit('focused');\n    }\n\n    blur(): void {\n        this.emit('blurred');\n    }\n}\n\n// Attach to window for legacy compatibility\n// Note: Type declaration is in types/index.d.ts\nif (typeof window !== 'undefined') {\n    (window as any).BaseWindowInstance = BaseWindowInstance;\n}\n\nexport default BaseWindowInstance;\nconsole.log('BaseWindowInstance loaded');\n\n(function () {\n    'use strict';\n\n    type InstanceConfig = {\n        id?: string;\n        type?: string;\n        title?: string;\n        initialState?: Record<string, unknown>;\n        metadata?: Record<string, unknown>;\n    };\n\n    type StateChangeEvent = {\n        oldState: Record<string, unknown>;\n        newState: Record<string, unknown>;\n    };\n\n    type SerializedInstance = {\n        instanceId: string;\n        type: string;\n        title: string;\n        state: Record<string, unknown>;\n        metadata: Record<string, unknown>;\n    };\n\n    type EventCallback = (data?: unknown) => void;\n\n    class BaseWindowInstance {\n        instanceId: string;\n        type: string;\n        title: string;\n        container: HTMLElement | null;\n        windowElement: HTMLElement | null;\n        state: Record<string, unknown>;\n        eventListeners: Map<string, EventCallback[]>;\n        isInitialized: boolean;\n        isVisible: boolean;\n        metadata: Record<string, unknown>;\n\n        constructor(config: InstanceConfig) {\n            this.instanceId = config.id || this._generateId();\n            this.type = config.type || 'unknown';\n            this.title = config.title || 'Untitled';\n            this.container = null;\n            this.windowElement = null;\n            this.state = this._initializeState(config.initialState || {});\n            this.eventListeners = new Map();\n            this.isInitialized = false;\n            this.isVisible = false;\n            this.metadata = config.metadata || {};\n        }\n\n        protected _generateId(): string {\n            return `${this.type}-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n        }\n\n        protected _initializeState(initialState: Record<string, unknown>): Record<string, unknown> {\n            return {\n                ...initialState,\n                created: Date.now(),\n                modified: Date.now(),\n            };\n        }\n\n        init(container: HTMLElement): void {\n            if (this.isInitialized) {\n                console.warn(`Instance ${this.instanceId} already initialized`);\n                return;\n            }\n\n            this.container = container;\n            this.render();\n            this.attachEventListeners();\n            this.isInitialized = true;\n            this.emit('initialized');\n        }\n\n        protected render(): void {\n            throw new Error('render() must be implemented by subclass');\n        }\n\n        protected attachEventListeners(): void {\n            // To be implemented by subclasses\n        }\n\n        show(): void {\n            if (this.container) {\n                this.container.classList.remove('hidden');\n                this.isVisible = true;\n                this.emit('shown');\n            }\n        }\n\n        hide(): void {\n            if (this.container) {\n                this.container.classList.add('hidden');\n                this.isVisible = false;\n                this.emit('hidden');\n            }\n        }\n\n        destroy(): void {\n            this.emit('beforeDestroy');\n            this.removeAllEventListeners();\n\n            if (this.container) {\n                try {\n                    // Remove container element from DOM to avoid orphaned visible nodes\n                    if (typeof (this.container as HTMLElement).remove === 'function') {\n                        (this.container as HTMLElement).remove();\n                    } else if ((this.container as HTMLElement).parentNode) {\n                        (this.container as HTMLElement).parentNode!.removeChild(\n                            this.container as HTMLElement\n                        );\n                    }\n                } catch {\n                    // Fallback: clear contents and hide\n                    try {\n                        this.container.innerHTML = '';\n                        this.container.classList.add('hidden');\n                    } catch {\n                        /* ignore */\n                    }\n                }\n                this.container = null;\n            }\n\n            this.windowElement = null;\n            this.isInitialized = false;\n            this.emit('destroyed');\n        }\n\n        updateState(updates: Record<string, unknown>): void {\n            const oldState = { ...this.state };\n            this.state = {\n                ...this.state,\n                ...updates,\n                modified: Date.now(),\n            };\n            this.emit('stateChanged', { oldState, newState: this.state } as StateChangeEvent);\n        }\n\n        getState(): Record<string, unknown> {\n            return { ...this.state };\n        }\n\n        serialize(): SerializedInstance {\n            return {\n                instanceId: this.instanceId,\n                type: this.type,\n                title: this.title,\n                state: this.getState(),\n                metadata: this.metadata,\n            };\n        }\n\n        deserialize(data: Partial<SerializedInstance>): void {\n            if (data.state) {\n                this.state = data.state;\n            }\n            if (data.title) {\n                this.title = data.title;\n            }\n            if (data.metadata) {\n                this.metadata = { ...this.metadata, ...data.metadata };\n            }\n            this.emit('deserialized');\n        }\n\n        emit(eventName: string, data?: unknown): void {\n            const listeners = this.eventListeners.get(eventName) || [];\n            listeners.forEach(callback => {\n                try {\n                    callback.call(this, data);\n                } catch (error) {\n                    console.error(`Error in event listener for ${eventName}:`, error);\n                }\n            });\n        }\n\n        on(eventName: string, callback: EventCallback): void {\n            if (!this.eventListeners.has(eventName)) {\n                this.eventListeners.set(eventName, []);\n            }\n            this.eventListeners.get(eventName)!.push(callback);\n        }\n\n        off(eventName: string, callback: EventCallback): void {\n            if (!this.eventListeners.has(eventName)) return;\n\n            const listeners = this.eventListeners.get(eventName)!;\n            const index = listeners.indexOf(callback);\n            if (index > -1) {\n                listeners.splice(index, 1);\n            }\n        }\n\n        removeAllEventListeners(): void {\n            this.eventListeners.clear();\n        }\n\n        focus(): void {\n            if (this.container && this.isVisible) {\n                this.emit('focused');\n            }\n        }\n\n        blur(): void {\n            this.emit('blurred');\n        }\n    }\n\n    (window as unknown as { BaseWindowInstance: typeof BaseWindowInstance }).BaseWindowInstance =\n        BaseWindowInstance;\n})();\n", "console.log('InstanceManager loaded');\n\n(function () {\n  'use strict';\n\n  type BaseInstanceLike = {\n    instanceId: string;\n    init: (container: HTMLElement) => void;\n    destroy: () => void;\n    blur: () => void;\n    focus: () => void;\n    serialize: () => Record<string, unknown>;\n    deserialize: (data: Record<string, unknown>) => void;\n    on: (event: string, callback: (data?: unknown) => void) => void;\n  };\n\n  type InstanceConstructor = new (config: Record<string, unknown>) => BaseInstanceLike;\n\n  type ManagerConfig = {\n    type: string;\n    instanceClass: InstanceConstructor;\n    maxInstances?: number;\n    createContainer?: (instanceId: string) => HTMLElement | null;\n  };\n\n  type CreateInstanceConfig = {\n    id?: string;\n    title?: string;\n    initialState?: Record<string, unknown>;\n    metadata?: Record<string, unknown>;\n  };\n\n  class InstanceManager {\n    type: string;\n    instanceClass: InstanceConstructor;\n    maxInstances: number;\n    createContainer: (instanceId: string) => HTMLElement | null;\n    instances: Map<string, BaseInstanceLike>;\n    activeInstanceId: string | null;\n    instanceCounter: number;\n\n    constructor(config: ManagerConfig) {\n      this.type = config.type;\n      this.instanceClass = config.instanceClass;\n      this.maxInstances = config.maxInstances || 0;\n      this.createContainer = config.createContainer || this._defaultCreateContainer.bind(this);\n\n      this.instances = new Map();\n      this.activeInstanceId = null;\n      this.instanceCounter = 0;\n    }\n\n    createInstance(config: CreateInstanceConfig = {}): BaseInstanceLike | null {\n      if (this.maxInstances > 0 && this.instances.size >= this.maxInstances) {\n        console.warn(`Maximum instances (${this.maxInstances}) reached for ${this.type}`);\n        return null;\n      }\n\n      this.instanceCounter++;\n      const instanceId = config.id || `${this.type}-${this.instanceCounter}`;\n\n      const container = this.createContainer(instanceId);\n      if (!container) {\n        console.error('Failed to create container for instance');\n        return null;\n      }\n\n      const instanceConfig = {\n        id: instanceId,\n        type: this.type,\n        title: config.title || `${this.type} ${this.instanceCounter}`,\n        initialState: config.initialState || {},\n        metadata: config.metadata || {},\n      };\n\n      const instance = new this.instanceClass(instanceConfig);\n\n      try {\n        instance.init(container);\n        this.instances.set(instanceId, instance);\n        this.activeInstanceId = instanceId;\n\n        this._setupInstanceEvents(instance);\n\n        console.log(`Created instance: ${instanceId}`);\n        return instance;\n      } catch (error) {\n        console.error('Failed to initialize instance:', error);\n        container.remove();\n        return null;\n      }\n    }\n\n    getInstance(instanceId: string): BaseInstanceLike | null {\n      return this.instances.get(instanceId) || null;\n    }\n\n    getActiveInstance(): BaseInstanceLike | null {\n      return this.activeInstanceId ? this.instances.get(this.activeInstanceId) || null : null;\n    }\n\n    setActiveInstance(instanceId: string): void {\n      if (this.instances.has(instanceId)) {\n        const previousId = this.activeInstanceId;\n\n        // Guard: avoid recursion if already active\n        if (previousId === instanceId) {\n          return;\n        }\n\n        this.activeInstanceId = instanceId;\n\n        // Blur previous instance\n        if (previousId) {\n          const previousInstance = this.instances.get(previousId);\n          if (previousInstance) {\n            previousInstance.blur();\n          }\n        }\n\n        // Focus new instance\n        const instance = this.instances.get(instanceId);\n        if (instance) {\n          instance.focus();\n        }\n      }\n    }\n\n    getAllInstances(): BaseInstanceLike[] {\n      return Array.from(this.instances.values());\n    }\n\n    getAllInstanceIds(): string[] {\n      return Array.from(this.instances.keys());\n    }\n\n    destroyInstance(instanceId: string): void {\n      const instance = this.instances.get(instanceId);\n      if (!instance) {\n        console.warn(`Instance ${instanceId} not found`);\n        return;\n      }\n\n      instance.destroy();\n      this.instances.delete(instanceId);\n\n      // Update active instance if needed\n      if (this.activeInstanceId === instanceId) {\n        const remainingIds = this.getAllInstanceIds();\n        // noUncheckedIndexedAccess: array access returns T | undefined\n        const lastId = remainingIds.length > 0 ? remainingIds[remainingIds.length - 1] : undefined;\n        this.activeInstanceId = lastId ?? null;\n      }\n\n      console.log(`Destroyed instance: ${instanceId}`);\n    }\n\n    destroyAllInstances(): void {\n      this.instances.forEach((instance) => {\n        instance.destroy();\n      });\n      this.instances.clear();\n      this.activeInstanceId = null;\n    }\n\n    hasInstances(): boolean {\n      return this.instances.size > 0;\n    }\n\n    getInstanceCount(): number {\n      return this.instances.size;\n    }\n\n    serializeAll(): Record<string, unknown>[] {\n      return this.getAllInstances().map((instance) => instance.serialize());\n    }\n\n    deserializeAll(data: unknown): void {\n      if (!Array.isArray(data)) return;\n\n      data.forEach((instanceData: Record<string, unknown>) => {\n        const instance = this.createInstance({\n          id: instanceData.instanceId as string | undefined,\n          title: instanceData.title as string | undefined,\n          metadata: instanceData.metadata as Record<string, unknown> | undefined,\n        });\n\n        if (instance && instanceData.state) {\n          instance.deserialize(instanceData);\n        }\n      });\n    }\n\n    /**\n     * Reorder instances to match the provided array of instance IDs\n     * @param newOrder - Array of instance IDs in the desired order\n     */\n    reorderInstances(newOrder: string[]): void {\n      // Validate that all IDs exist\n      const validIds = newOrder.filter(id => this.instances.has(id));\n      if (validIds.length !== this.instances.size) {\n        console.warn('Invalid reorder: not all instance IDs provided or some IDs do not exist');\n        return;\n      }\n\n      // Create a new Map with the desired order\n      const newMap = new Map<string, BaseInstanceLike>();\n      validIds.forEach(id => {\n        const instance = this.instances.get(id);\n        if (instance) {\n          newMap.set(id, instance);\n        }\n      });\n\n      // Replace the instances map\n      this.instances = newMap;\n      console.log('Instances reordered:', validIds);\n    }\n\n    private _defaultCreateContainer(instanceId: string): HTMLElement {\n      const container = document.createElement('div');\n      container.id = `${instanceId}-container`;\n      container.className = 'instance-container';\n      document.body.appendChild(container);\n      return container;\n    }\n\n    private _setupInstanceEvents(instance: BaseInstanceLike): void {\n      instance.on('focused', () => {\n        this.setActiveInstance(instance.instanceId);\n      });\n\n      instance.on('destroyed', () => {\n        this.instances.delete(instance.instanceId);\n      });\n    }\n  }\n\n  (window as unknown as { InstanceManager: typeof InstanceManager }).InstanceManager = InstanceManager;\n})();\n", "console.log('WindowChrome loaded');\n\n(function () {\n  'use strict';\n\n  type ControlType = 'close' | 'minimize' | 'maximize';\n\n  type TitlebarConfig = {\n    title?: string;\n    icon?: string;\n    showClose?: boolean;\n    showMinimize?: boolean;\n    showMaximize?: boolean;\n    onClose?: () => void;\n    onMinimize?: () => void;\n    onMaximize?: () => void;\n  };\n\n  type ToolbarSeparator = { type: 'separator' };\n  type ToolbarButtonCfg = {\n    label?: string;\n    icon?: string;\n    title?: string;\n    action?: string;\n    onClick?: (e: MouseEvent) => void;\n  };\n  type ToolbarItem = ToolbarSeparator | ToolbarButtonCfg;\n\n  type StatusBarConfig = {\n    leftContent?: string;\n    rightContent?: string;\n  };\n\n  type WindowFrameConfig = TitlebarConfig & {\n    toolbar?: ToolbarItem[];\n    showStatusBar?: boolean;\n    statusBarLeft?: string;\n    statusBarRight?: string;\n  };\n\n  type WindowFrameParts = {\n    frame: HTMLElement;\n    titlebar: HTMLElement;\n    content: HTMLElement;\n    statusbar: HTMLElement | null;\n  };\n\n  function createControlButton(type: ControlType, symbol: string, callback?: () => void): HTMLButtonElement {\n    const btn = document.createElement('button');\n    btn.type = 'button';\n    btn.className = `window-control-btn window-${type}-btn`;\n    btn.innerHTML = symbol;\n    btn.style.cssText =\n      'width: 24px; height: 24px; display: flex; align-items: center; justify-content: center; border-radius: 4px; transition: background-color 0.2s;';\n\n    btn.addEventListener('mouseenter', () => {\n      if (type === 'close') {\n        btn.style.backgroundColor = '#ef4444';\n        btn.style.color = '#ffffff';\n      } else {\n        btn.style.backgroundColor = 'rgba(0, 0, 0, 0.1)';\n      }\n    });\n\n    btn.addEventListener('mouseleave', () => {\n      btn.style.backgroundColor = 'transparent';\n      btn.style.color = '';\n    });\n\n    if (callback) {\n      btn.addEventListener('click', () => callback());\n    }\n\n    return btn;\n  }\n\n  function createToolbarButton(config: ToolbarButtonCfg): HTMLButtonElement {\n    const btn = document.createElement('button');\n    btn.type = 'button';\n    btn.className = 'toolbar-btn px-2 py-1 text-sm rounded hover:bg-gray-200 dark:hover:bg-gray-800 transition';\n\n    if (config.icon) {\n      btn.innerHTML = config.icon;\n    } else if (config.label) {\n      btn.textContent = config.label;\n    }\n\n    if (config.title) btn.title = config.title;\n    if (config.action) btn.dataset.action = config.action;\n    if (config.onClick) btn.addEventListener('click', config.onClick);\n\n    return btn;\n  }\n\n  const WindowChrome = {\n    createTitlebar(config: TitlebarConfig): HTMLElement {\n      const titlebar = document.createElement('div');\n      titlebar.className =\n        'window-titlebar flex items-center justify-between px-3 py-2 bg-gray-200 dark:bg-gray-800 border-b border-gray-300 dark:border-gray-700';\n      titlebar.style.cssText = 'height: 32px; cursor: move; user-select: none;';\n\n      const leftSide = document.createElement('div');\n      leftSide.className = 'flex items-center gap-2';\n\n      if (config.icon) {\n        const iconEl = document.createElement('span');\n        iconEl.className = 'window-icon';\n\n        if (config.icon.startsWith('http') || config.icon.startsWith('./') || config.icon.startsWith('/')) {\n          const img = document.createElement('img');\n          img.src = config.icon;\n          img.alt = '';\n          img.style.cssText = 'width: 16px; height: 16px; object-fit: contain;';\n          iconEl.appendChild(img);\n        } else {\n          iconEl.textContent = config.icon;\n          iconEl.style.fontSize = '16px';\n        }\n\n        leftSide.appendChild(iconEl);\n      }\n\n      const titleEl = document.createElement('span');\n      titleEl.className = 'window-title font-medium text-sm text-gray-800 dark:text-gray-200';\n      titleEl.textContent = config.title || 'Untitled';\n      (titleEl as HTMLElement).dataset.titleTarget = 'true';\n      leftSide.appendChild(titleEl);\n\n      titlebar.appendChild(leftSide);\n\n      const rightSide = document.createElement('div');\n      rightSide.className = 'flex items-center gap-1';\n\n      if (config.showMinimize) {\n        rightSide.appendChild(createControlButton('minimize', '\u2212', config.onMinimize));\n      }\n      if (config.showMaximize) {\n        rightSide.appendChild(createControlButton('maximize', '\u25A1', config.onMaximize));\n      }\n      if (config.showClose !== false) {\n        rightSide.appendChild(createControlButton('close', '\u00D7', config.onClose));\n      }\n\n      titlebar.appendChild(rightSide);\n\n      return titlebar;\n    },\n\n    createToolbar(buttons: ToolbarItem[]): HTMLElement {\n      const toolbar = document.createElement('div');\n      toolbar.className =\n        'window-toolbar flex items-center gap-2 px-3 py-2 bg-gray-100 dark:bg-gray-900 border-b border-gray-300 dark:border-gray-700';\n\n      buttons.forEach((btn) => {\n        if ((btn as ToolbarSeparator).type === 'separator') {\n          const separator = document.createElement('div');\n          separator.className = 'toolbar-separator';\n          separator.style.cssText = 'width: 1px; height: 20px; background: currentColor; opacity: 0.2;';\n          toolbar.appendChild(separator);\n        } else {\n          toolbar.appendChild(createToolbarButton(btn as ToolbarButtonCfg));\n        }\n      });\n\n      return toolbar;\n    },\n\n    createStatusBar(config: StatusBarConfig): HTMLElement {\n      const statusBar = document.createElement('div');\n      statusBar.className =\n        'window-statusbar flex items-center justify-between px-3 py-1 bg-gray-100 dark:bg-gray-900 border-t border-gray-300 dark:border-gray-700 text-xs text-gray-600 dark:text-gray-400';\n      statusBar.style.cssText = 'height: 24px;';\n\n      const leftEl = document.createElement('span');\n      leftEl.className = 'statusbar-left';\n      leftEl.textContent = config.leftContent || '';\n      statusBar.appendChild(leftEl);\n\n      const rightEl = document.createElement('span');\n      rightEl.className = 'statusbar-right';\n      rightEl.textContent = config.rightContent || '';\n      statusBar.appendChild(rightEl);\n\n      return statusBar;\n    },\n\n    updateTitle(titlebar: HTMLElement, newTitle: string): void {\n      const titleEl = titlebar.querySelector('[data-title-target=\"true\"]');\n      if (titleEl) (titleEl as HTMLElement).textContent = newTitle;\n    },\n\n    updateStatusBar(statusBar: HTMLElement, side: 'left' | 'right', content: string): void {\n      const target = statusBar.querySelector(`.statusbar-${side}`);\n      if (target) (target as HTMLElement).textContent = content;\n    },\n\n    createWindowFrame(config: WindowFrameConfig): WindowFrameParts {\n      const frame = document.createElement('div');\n      frame.className = 'window-frame flex flex-col h-full bg-white dark:bg-gray-900 rounded-lg shadow-lg overflow-hidden';\n\n      const titlebar = this.createTitlebar({\n        title: config.title || 'Untitled',\n        icon: config.icon,\n        showClose: config.showClose,\n        showMinimize: config.showMinimize,\n        showMaximize: config.showMaximize,\n        onClose: config.onClose,\n        onMinimize: config.onMinimize,\n        onMaximize: config.onMaximize,\n      });\n      frame.appendChild(titlebar);\n\n      if (config.toolbar) {\n        const toolbar = this.createToolbar(config.toolbar);\n        frame.appendChild(toolbar);\n      }\n\n      const content = document.createElement('div');\n      content.className = 'window-content flex-1 overflow-auto';\n      frame.appendChild(content);\n\n      let statusbar: HTMLElement | null = null;\n      if (config.showStatusBar) {\n        statusbar = this.createStatusBar({\n          leftContent: config.statusBarLeft || '',\n          rightContent: config.statusBarRight || '',\n        });\n        frame.appendChild(statusbar);\n      }\n\n      return { frame, titlebar, content, statusbar };\n    },\n  } as const;\n\n  (window as unknown as { WindowChrome: typeof WindowChrome }).WindowChrome = WindowChrome;\n})();\n", "(function () {\n    'use strict';\n\n    // Minimal structural types to avoid runtime coupling\n    type Instance = {\n        instanceId: string;\n        title: string;\n        focus?: () => void;\n        blur?: () => void;\n        destroy?: () => void;\n        show?: () => void;\n        hide?: () => void;\n    };\n\n    type InstanceConfig = {\n        id?: string;\n        type?: string;\n        title?: string;\n        initialState?: unknown;\n        metadata?: Record<string, unknown>;\n    };\n\n    type Manager = {\n        getAllInstances(): Instance[];\n        getActiveInstance(): Instance | null;\n        getAllInstanceIds(): string[];\n        getInstance(id: string): Instance | null;\n        setActiveInstance(id: string): void;\n        createInstance(config?: Partial<InstanceConfig>): Instance | null;\n        destroyInstance(id: string): void;\n        getInstanceCount?: () => number;\n        reorderInstances?: (newOrder: string[]) => void;\n    };\n\n    interface WindowTabsOptions {\n        addButton?: boolean;\n        onCreateInstanceTitle?: () => string | undefined;\n    }\n\n    interface WindowTabsController {\n        el: HTMLElement;\n        refresh(): void;\n        destroy(): void;\n        setTitle(instanceId: string, title: string): void;\n    }\n\n    // (reserved) helper could be added later to skip shortcuts in inputs\n\n    // Drag state for tab reordering\n    let draggedTab: HTMLElement | null = null;\n    let draggedInstanceId: string | null = null;\n\n    function createTabEl(instance: Instance, isActive: boolean): HTMLElement {\n        const tab = document.createElement('button');\n        tab.type = 'button';\n        tab.className = [\n            'wt-tab',\n            'px-3 py-1 text-sm rounded-t-md border border-b-0',\n            'transition-colors whitespace-nowrap flex items-center gap-2',\n            isActive\n                ? 'bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 border-gray-300 dark:border-gray-700'\n                : 'bg-gray-200/70 dark:bg-gray-800/70 text-gray-700 dark:text-gray-300 border-gray-300 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-800',\n        ].join(' ');\n        tab.dataset.instanceId = instance.instanceId;\n        tab.draggable = true;\n\n        const title = document.createElement('span');\n        title.className = 'wt-tab-title';\n        title.textContent = instance.title || instance.instanceId;\n        tab.appendChild(title);\n\n        const close = document.createElement('span');\n        close.className = 'wt-tab-close ml-1 text-xs opacity-70 hover:opacity-100';\n        close.textContent = '\u00D7';\n        close.setAttribute('aria-label', 'Tab schlie\u00DFen');\n        close.title = 'Tab schlie\u00DFen';\n        tab.appendChild(close);\n\n        return tab;\n    }\n\n    function renderTabs(\n        container: HTMLElement,\n        manager: Manager,\n        options: WindowTabsOptions,\n        onSelect: (id: string) => void,\n        onClose: (id: string) => void,\n        onNew?: () => void\n    ): void {\n        container.innerHTML = '';\n\n        const bar = document.createElement('div');\n        bar.className = 'window-tabs flex items-center gap-1 px-2 pt-2 select-none';\n\n        const instances = manager.getAllInstances();\n        const active = manager.getActiveInstance();\n        const activeId = active?.instanceId ?? null;\n\n        // Diagnostic: log all instance IDs being rendered as tabs\n        console.log(\n            '[WindowTabs] Rendering tabs for instance IDs:',\n            instances.map(i => i.instanceId)\n        );\n        instances.forEach((inst: Instance) => {\n            const tab = createTabEl(inst, inst.instanceId === activeId);\n            // Click handlers\n            tab.addEventListener('click', e => {\n                const target = e.target as HTMLElement;\n                if (target.closest('.wt-tab-close')) {\n                    onClose(inst.instanceId);\n                } else {\n                    onSelect(inst.instanceId);\n                }\n            });\n            // Middle-click closes on supported devices\n            tab.addEventListener('auxclick', (e: MouseEvent) => {\n                if (e.button === 1) {\n                    onClose(inst.instanceId);\n                }\n            });\n            // Drag and drop handlers for tab reordering\n            tab.addEventListener('dragstart', (e: DragEvent) => {\n                draggedTab = tab;\n                draggedInstanceId = inst.instanceId;\n                if (e.dataTransfer) {\n                    e.dataTransfer.effectAllowed = 'move';\n                    e.dataTransfer.setData('text/plain', inst.instanceId);\n                }\n                tab.style.opacity = '0.5';\n            });\n            tab.addEventListener('dragend', () => {\n                tab.style.opacity = '1';\n                draggedTab = null;\n                draggedInstanceId = null;\n                // Remove any drop indicators\n                const allTabs = bar.querySelectorAll('.wt-tab');\n                allTabs.forEach(t => {\n                    (t as HTMLElement).classList.remove('border-l-4', 'border-l-blue-500');\n                });\n            });\n            tab.addEventListener('dragover', (e: DragEvent) => {\n                e.preventDefault();\n                if (e.dataTransfer) {\n                    e.dataTransfer.dropEffect = 'move';\n                }\n                // Don't show indicator on the dragged tab itself\n                if (tab === draggedTab) {\n                    return;\n                }\n                // Show visual indicator\n                const allTabs = bar.querySelectorAll('.wt-tab');\n                allTabs.forEach(t => {\n                    (t as HTMLElement).classList.remove('border-l-4', 'border-l-blue-500');\n                });\n                tab.classList.add('border-l-4', 'border-l-blue-500');\n            });\n            tab.addEventListener('dragleave', () => {\n                tab.classList.remove('border-l-4', 'border-l-blue-500');\n            });\n            tab.addEventListener('drop', (e: DragEvent) => {\n                e.preventDefault();\n                e.stopPropagation();\n                // Remove visual indicators\n                tab.classList.remove('border-l-4', 'border-l-blue-500');\n                if (!draggedInstanceId || draggedInstanceId === inst.instanceId) {\n                    return;\n                }\n                // Get current order\n                const currentOrder = manager.getAllInstanceIds();\n                const draggedIdx = currentOrder.indexOf(draggedInstanceId);\n                const targetIdx = currentOrder.indexOf(inst.instanceId);\n                if (draggedIdx === -1 || targetIdx === -1) {\n                    return;\n                }\n                // Create new order by moving dragged item before target\n                const newOrder = [...currentOrder];\n                newOrder.splice(draggedIdx, 1);\n                const newTargetIdx = newOrder.indexOf(inst.instanceId);\n                newOrder.splice(newTargetIdx, 0, draggedInstanceId);\n                // Update instance order if manager supports it\n                if (manager.reorderInstances) {\n                    manager.reorderInstances(newOrder);\n                    // Re-render tabs to reflect new order\n                    renderTabs(container, manager, options, onSelect, onClose, onNew);\n                }\n            });\n            bar.appendChild(tab);\n        });\n\n        if (options.addButton !== false) {\n            const addBtn = document.createElement('button');\n            addBtn.type = 'button';\n            addBtn.className =\n                'wt-add px-2 py-1 text-sm rounded-md border bg-gray-100 dark:bg-gray-800 border-gray-300 dark:border-gray-700 hover:bg-gray-200 dark:hover:bg-gray-700';\n            addBtn.textContent = '+';\n            addBtn.title = 'Neue Instanz';\n            addBtn.addEventListener('click', () => {\n                if (onNew) {\n                    onNew();\n                } else {\n                    const title = options.onCreateInstanceTitle?.();\n                    manager.createInstance({ title });\n                }\n                // refresh will be triggered by wrapper\n            });\n            bar.appendChild(addBtn);\n        }\n\n        container.appendChild(bar);\n\n        // Bottom border under tabs\n        const underline = document.createElement('div');\n        underline.className = 'h-px bg-gray-300 dark:bg-gray-700';\n        container.appendChild(underline);\n    }\n\n    function wrapManager(manager: Manager, onChange: () => void): Manager {\n        const createOrig = manager.createInstance.bind(manager);\n        const destroyOrig = manager.destroyInstance.bind(manager);\n        const setActiveOrig = manager.setActiveInstance.bind(manager);\n\n        type MutableManager = Manager & { [key: string]: unknown };\n        (manager as MutableManager).createInstance = (cfg?: Partial<InstanceConfig>) => {\n            const inst = createOrig(cfg);\n            onChange();\n            return inst;\n        };\n        (manager as MutableManager).destroyInstance = (id: string) => {\n            destroyOrig(id);\n            onChange();\n        };\n        (manager as MutableManager).setActiveInstance = (id: string) => {\n            setActiveOrig(id);\n            onChange();\n        };\n        return manager;\n    }\n\n    function createController(\n        manager: Manager,\n        mountEl: HTMLElement,\n        options: WindowTabsOptions = {}\n    ): WindowTabsController {\n        const wrapped = wrapManager(manager, () => controller.refresh());\n\n        const controller: WindowTabsController = {\n            el: mountEl,\n            refresh() {\n                renderTabs(\n                    mountEl,\n                    wrapped,\n                    options,\n                    id => wrapped.setActiveInstance(id),\n                    id => wrapped.destroyInstance(id)\n                );\n            },\n            destroy() {\n                mountEl.innerHTML = '';\n            },\n            setTitle(instanceId: string, title: string) {\n                const inst = wrapped.getInstance(instanceId);\n                if (inst) {\n                    inst.title = title;\n                    this.refresh();\n                }\n            },\n        };\n\n        controller.refresh();\n        return controller;\n    }\n\n    const WindowTabs = {\n        /**\n         * Create a window tabs bar bound to a specific InstanceManager.\n         */\n        create(\n            manager: Manager,\n            mountEl: HTMLElement,\n            options?: WindowTabsOptions\n        ): WindowTabsController {\n            return createController(manager, mountEl, options);\n        },\n    };\n\n    // Adapter expected by legacy integration code: WindowTabManager\n    class WindowTabManager {\n        private manager: Manager;\n        private controller: WindowTabsController | null = null;\n        private opts: {\n            containerId: string;\n            onTabSwitch?: (id: string) => void;\n            onTabClose?: (id: string) => void;\n            onNewTab?: () => void;\n            onAllTabsClosed?: () => void;\n        };\n\n        constructor(config: {\n            containerId: string;\n            instanceManager: Manager;\n            onTabSwitch?: (id: string) => void;\n            onTabClose?: (id: string) => void;\n            onNewTab?: () => void;\n            onAllTabsClosed?: () => void;\n        }) {\n            this.manager = config.instanceManager;\n            this.opts = {\n                containerId: config.containerId,\n                onTabSwitch: config.onTabSwitch,\n                onTabClose: config.onTabClose,\n                onNewTab: config.onNewTab,\n                onAllTabsClosed: config.onAllTabsClosed,\n            };\n            const mount = document.getElementById(config.containerId);\n            if (mount) {\n                // Build controller with custom handlers\n                const refreshWithHooks = () => {\n                    renderTabs(\n                        mount,\n                        this.manager,\n                        { addButton: true },\n                        id => {\n                            this.manager.setActiveInstance(id);\n                            this.opts.onTabSwitch?.(id);\n                            // Refresh tabs to update visual state after switching\n                            refreshWithHooks();\n                        },\n                        id => {\n                            this.opts.onTabClose?.(id);\n                            this.manager.destroyInstance(id);\n\n                            // After destroying, get the new active instance and trigger onTabSwitch\n                            // to ensure its content is visible (fixes ghost tab / hidden content issue)\n                            const remaining = this.manager.getAllInstances();\n                            if (remaining.length === 0) {\n                                this.opts.onAllTabsClosed?.();\n                            } else {\n                                const newActive = this.manager.getActiveInstance();\n                                if (newActive) {\n                                    this.opts.onTabSwitch?.(newActive.instanceId);\n                                }\n                            }\n                        },\n                        () => {\n                            if (this.opts.onNewTab) {\n                                this.opts.onNewTab();\n                            } else {\n                                const next =\n                                    (this.manager.getInstanceCount?.() ||\n                                        this.manager.getAllInstances().length) + 1;\n                                this.manager.createInstance({ title: `Instance ${next}` });\n                            }\n                        }\n                    );\n                };\n\n                this.controller = {\n                    el: mount,\n                    refresh: refreshWithHooks,\n                    destroy() {\n                        mount.innerHTML = '';\n                    },\n                    setTitle: (instanceId: string, title: string) => {\n                        const inst = this.manager.getInstance(instanceId);\n                        if (inst) {\n                            inst.title = title;\n                        }\n                        refreshWithHooks();\n                    },\n                } as unknown as WindowTabsController;\n\n                // initial render\n                this.controller.refresh();\n            }\n        }\n\n        addTab(_instance: Instance): void {\n            // Our rendering reflects manager state; just refresh\n            this.controller?.refresh();\n        }\n\n        closeTab(instanceId: string): void {\n            this.opts.onTabClose?.(instanceId);\n            this.manager.destroyInstance(instanceId);\n\n            // After destroying, get the new active instance and trigger onTabSwitch\n            // to ensure its content is visible (fixes ghost tab / hidden content issue)\n            const remaining = this.manager.getAllInstances();\n            if (remaining.length === 0) {\n                this.opts.onAllTabsClosed?.();\n            } else {\n                const newActive = this.manager.getActiveInstance();\n                if (newActive) {\n                    this.opts.onTabSwitch?.(newActive.instanceId);\n                }\n            }\n\n            this.controller?.refresh();\n        }\n    }\n\n    (window as unknown as { [k: string]: unknown }).WindowTabs = WindowTabs;\n    (window as unknown as { [k: string]: unknown }).WindowTabManager = WindowTabManager;\n})();\n\n", "console.log('TerminalInstance (TS) loaded');\n\n/**\n * TerminalInstance - Multi-Instance capable terminal implementation\n * Ported to TypeScript with preserved global API and behavior.\n */\n(() => {\n  'use strict';\n\n  type DirEntry = {\n    type: 'directory';\n    contents: Record<string, FSNode>;\n  };\n  type FileEntry = {\n    type: 'file';\n    content: string;\n  };\n  type FSNode = DirEntry | FileEntry;\n\n  type BaseLike = {\n    container: HTMLElement | null;\n    updateState: (u: Record<string, unknown>) => void;\n  } & Record<string, unknown>;\n  type BaseCtor = new (cfg: Record<string, unknown>) => BaseLike & Record<string, unknown>;\n  const Base = (window as unknown as { BaseWindowInstance: BaseCtor }).BaseWindowInstance;\n\n  class TerminalInstance extends Base {\n    outputElement: HTMLElement | null;\n    inputElement: HTMLInputElement | null;\n    commandHistory: string[];\n    historyIndex: number;\n    currentPath: string;\n    fileSystem: Record<string, FSNode>;\n\n    constructor(config: Record<string, unknown>) {\n      super({\n        ...config,\n        type: 'terminal',\n      });\n\n      this.outputElement = null;\n      this.inputElement = null;\n      this.commandHistory = [];\n      this.historyIndex = -1;\n      this.currentPath = '~';\n\n      this.fileSystem = {\n        '~': {\n          type: 'directory',\n          contents: {\n            Desktop: { type: 'directory', contents: {} },\n            Documents: {\n              type: 'directory',\n              contents: {\n                'readme.txt': {\n                  type: 'file',\n                  content: 'Willkommen im Terminal!',\n                },\n              },\n            },\n            Downloads: { type: 'directory', contents: {} },\n            'welcome.txt': {\n              type: 'file',\n              content:\n                'Willkommen auf Marvins Portfolio-Website!\\n\\nGib \"help\" ein, um eine Liste verf\u00FCgbarer Befehle zu sehen.',\n            },\n          },\n        },\n      };\n    }\n\n    // No override of _initializeState to avoid type modifier conflicts\n\n    protected render(): void {\n      if (!this.container) return;\n\n      const html = `\n                <div class=\"terminal-wrapper h-full flex flex-col bg-gray-900 text-green-400 font-mono text-sm\">\n                    <div class=\"terminal-output flex-1 overflow-y-auto p-4 space-y-1\" data-terminal-output>\n                    </div>\n                    <div class=\"terminal-input-line flex items-center px-4 py-2 border-t border-gray-700\">\n                        <span class=\"terminal-prompt text-blue-400\">guest@marvin:${this.currentPath}$</span>\n                        <input\n                            type=\"text\"\n                            class=\"flex-1 ml-2 bg-transparent outline-none text-green-400 terminal-input\"\n                            autocomplete=\"off\"\n                            spellcheck=\"false\"\n                            aria-label=\"Terminal input\"\n                            data-terminal-input\n                        />\n                    </div>\n                </div>\n            `;\n\n      this.container.innerHTML = html;\n      this.outputElement = this.container.querySelector('[data-terminal-output]');\n      this.inputElement = this.container.querySelector('[data-terminal-input]');\n\n      try {\n        this.showWelcomeMessage();\n      } catch {\n        /* noop */\n      }\n      if (this.inputElement && typeof this.inputElement.focus === 'function') {\n        this.inputElement.focus();\n      }\n    }\n\n    protected attachEventListeners(): void {\n      if (!this.inputElement) return;\n\n      this.inputElement.addEventListener('keydown', (e: KeyboardEvent) => {\n        if (e.key === 'Enter') {\n          e.preventDefault();\n          const command = this.inputElement!.value.trim();\n          if (command) {\n            this.executeCommand(command);\n            this.commandHistory.push(command);\n            this.historyIndex = this.commandHistory.length;\n            this.updateState({ commandHistory: this.commandHistory });\n          }\n          this.inputElement!.value = '';\n          this.inputElement!.focus();\n        } else if (e.key === 'Tab') {\n          e.preventDefault();\n          this.handleTabCompletion();\n        } else if (e.key === 'ArrowUp') {\n          e.preventDefault();\n          if (this.historyIndex > 0) {\n            this.historyIndex--;\n            // noUncheckedIndexedAccess: array access may return undefined\n            const historyEntry = this.commandHistory[this.historyIndex];\n            if (historyEntry !== undefined) {\n              this.inputElement!.value = historyEntry;\n            }\n          }\n        } else if (e.key === 'ArrowDown') {\n          e.preventDefault();\n          if (this.historyIndex < this.commandHistory.length - 1) {\n            this.historyIndex++;\n            // noUncheckedIndexedAccess: array access may return undefined\n            const historyEntry = this.commandHistory[this.historyIndex];\n            if (historyEntry !== undefined) {\n              this.inputElement!.value = historyEntry;\n            }\n          } else {\n            this.historyIndex = this.commandHistory.length;\n            this.inputElement!.value = '';\n          }\n        }\n      });\n    }\n\n    showWelcomeMessage(): void {\n      this.addOutput('Willkommen im Terminal! Gib \"help\" ein f\u00FCr verf\u00FCgbare Befehle.', 'info');\n    }\n\n    handleTabCompletion(): void {\n      if (!this.inputElement) return;\n\n      const input = this.inputElement.value;\n      const [partialCmd, ...args] = input.split(' ');\n\n      // noUncheckedIndexedAccess: array destructuring may return undefined\n      if (partialCmd === undefined) return;\n\n      const availableCommands = ['help', 'clear', 'ls', 'pwd', 'cd', 'cat', 'echo', 'date', 'whoami'];\n\n      if (args.length === 0) {\n        const matches = availableCommands.filter((cmd) => cmd.startsWith(partialCmd));\n\n        if (matches.length === 1) {\n          const match = matches[0];\n          if (match !== undefined) {\n            this.inputElement.value = match + ' ';\n          }\n        } else if (matches.length > 1) {\n          this.addOutput(`guest@marvin:${this.currentPath}$ ${input}`, 'command');\n          this.addOutput(matches.join('  '), 'info');\n          const commonPrefix = this.findCommonPrefix(matches);\n          if (commonPrefix.length > partialCmd.length) {\n            this.inputElement.value = commonPrefix;\n          }\n        }\n      } else {\n        if (partialCmd === 'cd' || partialCmd === 'cat') {\n          this.completePathArgument(partialCmd, args[0] || '');\n        }\n      }\n    }\n\n    findCommonPrefix(strings: string[]): string {\n      if (!strings.length) return '';\n      // noUncheckedIndexedAccess: array access may return undefined\n      const firstString = strings[0];\n      if (strings.length === 1) return firstString ?? '';\n      if (firstString === undefined) return '';\n\n      let prefix: string = firstString;\n      for (let i = 1; i < strings.length; i++) {\n        const currentString = strings[i];\n        if (currentString === undefined) continue;\n\n        while (currentString.indexOf(prefix) !== 0) {\n          prefix = prefix.substring(0, prefix.length - 1);\n          if (!prefix) return '';\n        }\n      }\n      return prefix;\n    }\n\n    completePathArgument(cmd: 'cd' | 'cat', partial: string): void {\n      const currentDir = this.resolvePath(this.currentPath);\n      if (!currentDir || currentDir.type !== 'directory') return;\n\n      const items = Object.keys(currentDir.contents);\n      let matches: string[];\n      if (cmd === 'cd') {\n        matches = items.filter(\n          (item) => (currentDir.contents[item] as FSNode).type === 'directory' && item.startsWith(partial)\n        );\n      } else {\n        matches = items.filter(\n          (item) => (currentDir.contents[item] as FSNode).type === 'file' && item.startsWith(partial)\n        );\n      }\n\n      if (matches.length === 1) {\n        this.inputElement!.value = `${cmd} ${matches[0]}`;\n      } else if (matches.length > 1) {\n        this.addOutput(`guest@marvin:${this.currentPath}$ ${this.inputElement!.value}`, 'command');\n        const formatted = matches.map((item) => {\n          // noUncheckedIndexedAccess: dictionary access may return undefined\n          const itemObj = currentDir.contents[item] as FSNode | undefined;\n          if (!itemObj) return item;\n          const prefix = itemObj.type === 'directory' ? '\uD83D\uDCC1 ' : '\uD83D\uDCC4 ';\n          return prefix + item;\n        });\n        this.addOutput(formatted.join('  '), 'info');\n        const commonPrefix = this.findCommonPrefix(matches);\n        if (commonPrefix.length > partial.length) {\n          this.inputElement!.value = `${cmd} ${commonPrefix}`;\n        }\n      }\n    }\n\n    executeCommand(command: string): void {\n      this.addOutput(`guest@marvin:${this.currentPath}$ ${command}`, 'command');\n      const [cmd, ...args] = command.split(' ');\n\n      // noUncheckedIndexedAccess: array destructuring may return undefined\n      if (cmd === undefined) return;\n\n      const commands: Record<string, () => void> = {\n        help: () => this.showHelp(),\n        clear: () => this.clearOutput(),\n        ls: () => this.listDirectory(args[0]),\n        pwd: () => this.printWorkingDirectory(),\n        cd: () => this.changeDirectory(args[0]),\n        cat: () => this.catFile(args[0]),\n        echo: () => this.echo(args.join(' ')),\n        date: () => this.showDate(),\n        whoami: () => this.addOutput('guest', 'output'),\n      };\n\n      const commandFn = commands[cmd];\n      if (commandFn !== undefined) {\n        commandFn();\n      } else {\n        this.addOutput(`Befehl nicht gefunden: ${cmd}. Gib \"help\" ein f\u00FCr verf\u00FCgbare Befehle.`, 'error');\n      }\n    }\n\n    addOutput(text: string, type: 'command' | 'output' | 'error' | 'info' = 'output'): void {\n      if (!this.outputElement) return;\n      const line = document.createElement('div');\n      line.className = `terminal-line terminal-${type}`;\n      const colorMap: Record<string, string> = {\n        command: 'text-blue-400',\n        output: 'text-green-400',\n        error: 'text-red-400',\n        info: 'text-yellow-400',\n      };\n      line.className += ` ${colorMap[type] || 'text-green-400'}`;\n      line.textContent = text;\n      this.outputElement.appendChild(line);\n      this.outputElement.scrollTop = this.outputElement.scrollHeight;\n    }\n\n    clearOutput(): void {\n      if (this.outputElement) this.outputElement.innerHTML = '';\n    }\n\n    showHelp(): void {\n      const helpText = [\n        'Verf\u00FCgbare Befehle:',\n        '  help         - Zeige diese Hilfe',\n        '  clear        - L\u00F6sche Ausgabe',\n        '  ls [path]    - Liste Dateien (optional mit Pfad)',\n        '  pwd          - Zeige aktuelles Verzeichnis',\n        '  cd <dir>     - Wechsle Verzeichnis (., .., ~, relative/absolute Pfade)',\n        '  cat <file>   - Zeige Dateiinhalt (auch mit Pfad: cat ./file oder cat dir/file)',\n        '  echo <text>  - Gebe Text aus',\n        '  date         - Zeige Datum/Zeit',\n        '  whoami       - Zeige Benutzername',\n        '',\n        'Pfad-Beispiele:',\n        '  .            - Aktuelles Verzeichnis',\n        '  ..           - \u00DCbergeordnetes Verzeichnis',\n        '  ~            - Home-Verzeichnis',\n        '  ./file       - Datei im aktuellen Verzeichnis',\n        '  ../file      - Datei im \u00FCbergeordneten Verzeichnis',\n        '  dir/subdir   - Unterverzeichnis (relativ)',\n        '',\n        'Tipps:',\n        '  \u2191/\u2193          - Durchsuche Befehlshistorie',\n        '  Tab          - Vervollst\u00E4ndige Befehle und Pfade',\n      ];\n      helpText.forEach((l) => this.addOutput(l, 'info'));\n    }\n\n    listDirectory(path?: string): void {\n      const targetPath = path ? this.normalizePath(path) : this.currentPath;\n      const targetDir = this.resolvePath(targetPath);\n      if (!targetDir) {\n        this.addOutput(`Verzeichnis nicht gefunden: ${path || targetPath}`, 'error');\n        return;\n      }\n      if (targetDir.type !== 'directory') {\n        this.addOutput(`${path || targetPath} ist kein Verzeichnis`, 'error');\n        return;\n      }\n      const items = Object.keys(targetDir.contents);\n      if (items.length === 0) this.addOutput('(leer)', 'output');\n      else {\n        items.forEach((item) => {\n          // noUncheckedIndexedAccess: dictionary access may return undefined\n          const itemObj = targetDir.contents[item];\n          if (!itemObj) return;\n          const prefix = itemObj.type === 'directory' ? '\uD83D\uDCC1 ' : '\uD83D\uDCC4 ';\n          this.addOutput(prefix + item, 'output');\n        });\n      }\n    }\n\n    printWorkingDirectory(): void {\n      this.addOutput(this.currentPath, 'output');\n    }\n\n    changeDirectory(path?: string): void {\n      if (!path) {\n        this.currentPath = '~';\n        this.updatePrompt();\n        return;\n      }\n      const newPath = this.normalizePath(path);\n      const resolved = this.resolvePath(newPath);\n      if (!resolved) {\n        this.addOutput(`Verzeichnis nicht gefunden: ${path}`, 'error');\n        return;\n      }\n      if (resolved.type !== 'directory') {\n        this.addOutput(`${path} ist kein Verzeichnis`, 'error');\n        return;\n      }\n      this.currentPath = newPath;\n      this.updatePrompt();\n      this.updateState({ currentPath: this.currentPath });\n    }\n\n    catFile(filename?: string): void {\n      if (!filename) {\n        this.addOutput('Dateiname fehlt', 'error');\n        return;\n      }\n      if (filename.includes('/')) {\n        const normalizedPath = this.normalizePath(filename);\n        const pathParts = normalizedPath.split('/').filter((p) => p !== '');\n        const fileName = pathParts.pop()!;\n        const dirPath = pathParts.length > 0 ? pathParts.join('/') : '~';\n        const dir = this.resolvePath(dirPath);\n        if (!dir) {\n          this.addOutput(`Verzeichnis nicht gefunden: ${dirPath}`, 'error');\n          return;\n        }\n        const file = (dir as DirEntry).contents?.[fileName] as FSNode | undefined;\n        if (!file) this.addOutput(`Datei nicht gefunden: ${filename}`, 'error');\n        else if (file.type !== 'file') this.addOutput(`${filename} ist keine Datei`, 'error');\n        else this.addOutput(file.content, 'output');\n      } else {\n        const currentDir = this.resolvePath(this.currentPath) as DirEntry | null;\n        const file = currentDir?.contents?.[filename] as FSNode | undefined;\n        if (!file) this.addOutput(`Datei nicht gefunden: ${filename}`, 'error');\n        else if (file.type !== 'file') this.addOutput(`${filename} ist keine Datei`, 'error');\n        else this.addOutput(file.content, 'output');\n      }\n    }\n\n    echo(text: string): void {\n      this.addOutput(text, 'output');\n    }\n\n    showDate(): void {\n      this.addOutput(new Date().toString(), 'output');\n    }\n\n    updatePrompt(): void {\n      const prompt = this.container?.querySelector('.terminal-prompt') as HTMLElement | null;\n      if (prompt) {\n        prompt.textContent = `guest@marvin:${this.currentPath}$`;\n      }\n    }\n\n    resolvePath(path: string | undefined | null): FSNode | null {\n      if (!path) return null;\n      const normalizedPath = this.normalizePath(path);\n\n      // noUncheckedIndexedAccess: dictionary access may return undefined\n      const homeNode = this.fileSystem['~'];\n      if (normalizedPath === '~') return homeNode ?? null;\n      if (homeNode === undefined) return null;\n\n      let current: FSNode = homeNode;\n      const parts = normalizedPath\n        .replace(/^~\\/?/, '')\n        .split('/')\n        .filter((p) => p);\n      for (const part of parts) {\n        if ((current as DirEntry).type !== 'directory') return null;\n        if (!(current as DirEntry).contents || !(current as DirEntry).contents[part]) return null;\n        // noUncheckedIndexedAccess: dictionary access may return undefined\n        const nextNode = (current as DirEntry).contents[part];\n        if (nextNode === undefined) return null;\n        current = nextNode;\n      }\n      return current;\n    }\n\n    normalizePath(path: string): string {\n      if (!path || path === '~') return '~';\n      if (path === '.') return this.currentPath;\n      if (path === './') return this.currentPath;\n      let workingPath: string;\n      if (path.startsWith('~')) workingPath = path;\n      else if (path.startsWith('/')) workingPath = '~' + path;\n      else workingPath = this.currentPath === '~' ? `~/${path}` : `${this.currentPath}/${path}`;\n      const parts = workingPath.split('/').filter((p) => p !== '' && p !== '.');\n      const resolved: string[] = [];\n      for (const part of parts) {\n        if (part === '..') {\n          if (resolved.length > 0 && resolved[resolved.length - 1] !== '~') {\n            resolved.pop();\n          }\n        } else {\n          resolved.push(part);\n        }\n      }\n      if (resolved.length === 0 || (resolved.length === 1 && resolved[0] === '~')) return '~';\n      if (resolved[0] !== '~') resolved.unshift('~');\n      return resolved.join('/');\n    }\n\n    parentPath(path: string): string {\n      const parts = path.split('/').filter(Boolean);\n      parts.pop();\n      return parts.length > 0 ? '/' + parts.join('/') : '~';\n    }\n\n    serialize(): Record<string, unknown> {\n      const baseSerialize = (Base.prototype as unknown as {\n        serialize: () => Record<string, unknown>;\n      }).serialize;\n      const baseObj = baseSerialize.call(this) as Record<string, unknown>;\n      return {\n        ...baseObj,\n        currentPath: this.currentPath,\n        commandHistory: this.commandHistory,\n        fileSystem: this.fileSystem,\n      } as Record<string, unknown>;\n    }\n\n    deserialize(data: Record<string, unknown>): void {\n      const baseDeserialize = (Base.prototype as unknown as {\n        deserialize: (d: Record<string, unknown>) => void;\n      }).deserialize;\n      baseDeserialize.call(this, data);\n      const d = data as Record<string, unknown> & {\n        currentPath?: string;\n        commandHistory?: string[];\n        fileSystem?: Record<string, FSNode>;\n      };\n      if (d.currentPath) {\n        this.currentPath = d.currentPath;\n        this.updatePrompt();\n      }\n      if (d.commandHistory) {\n        this.commandHistory = d.commandHistory;\n        this.historyIndex = this.commandHistory.length;\n      }\n      if (d.fileSystem) {\n        this.fileSystem = d.fileSystem;\n      }\n    }\n\n    focus(): void {\n      const baseFocus = (Base.prototype as unknown as { focus: () => void }).focus;\n      baseFocus.call(this);\n      if (this.inputElement) this.inputElement.focus();\n    }\n  }\n\n  (window as unknown as { TerminalInstance: typeof TerminalInstance }).TerminalInstance = TerminalInstance;\n\n  // Create Terminal Instance Manager\n  const G = window as unknown as Record<string, unknown>;\n  type InstanceManagerCtor = new (cfg: Record<string, unknown>) => unknown;\n  const InstanceManager = (G['InstanceManager'] as unknown) as InstanceManagerCtor | undefined;\n  if (InstanceManager) {\n  (G['TerminalInstanceManager'] as unknown) = new (InstanceManager as InstanceManagerCtor)({\n      type: 'terminal',\n      instanceClass: TerminalInstance,\n      maxInstances: 0,\n      createContainer: function (instanceId: string): HTMLElement | null {\n        const terminalModalContainer = document.getElementById('terminal-container');\n        if (!terminalModalContainer) {\n          console.error('Terminal container not found');\n          return null;\n        }\n        const container = document.createElement('div');\n        container.id = `${instanceId}-container`;\n        container.className = 'terminal-instance-container h-full';\n        // Use DOMUtils if available to hide initially, else fallback\n        const domUtils = (window as unknown as { DOMUtils?: { hide?: (el: Element) => void } })\n          .DOMUtils;\n        if (domUtils && typeof domUtils.hide === 'function') {\n          domUtils.hide(container);\n        } else {\n          container.classList.add('hidden');\n        }\n        terminalModalContainer.appendChild(container);\n        return container;\n      },\n    });\n  }\n})();\n", "console.log('TextEditorInstance (TS) loaded');\n\n/**\n * TextEditorInstance - Multi-Instance capable text editor\n * TypeScript migration preserving global API and behavior.\n */\n(() => {\n  'use strict';\n\n  type WrapMode = 'off' | 'soft';\n\n  type BaseLike = {\n    container: HTMLElement | null;\n    updateState: (u: Record<string, unknown>) => void;\n  } & Record<string, unknown>;\n  type BaseCtor = new (cfg: Record<string, unknown>) => BaseLike;\n  const Base = (window as unknown as { BaseWindowInstance: BaseCtor }).BaseWindowInstance;\n\n  class TextEditorInstance extends Base {\n    editor: HTMLTextAreaElement | null;\n    statusBar: HTMLElement | null;\n    saveButton: HTMLElement | null;\n    fileInput: HTMLInputElement | null;\n    wordCountDisplay: HTMLElement | null;\n    lineColDisplay: HTMLElement | null;\n    findReplacePanel: HTMLElement | null;\n    findInput: HTMLInputElement | null;\n    replaceInput: HTMLInputElement | null;\n\n    wrapMode: WrapMode;\n    currentRemoteFile: string | null;\n    currentFilename: string;\n    isDirty: boolean;\n\n    constructor(config: Record<string, unknown>) {\n      super({\n        ...config,\n        type: 'text-editor',\n      });\n\n      this.editor = null;\n      this.statusBar = null;\n      this.saveButton = null;\n      this.fileInput = null;\n      this.wordCountDisplay = null;\n      this.lineColDisplay = null;\n      this.findReplacePanel = null;\n      this.findInput = null;\n      this.replaceInput = null;\n\n      this.wrapMode = 'off';\n      this.currentRemoteFile = null;\n      this.currentFilename = (config as Record<string, unknown>).filename as string || 'Untitled.txt';\n      this.isDirty = false;\n    }\n\n    protected render(): void {\n      if (!this.container) return;\n      const isDark = document.documentElement.classList.contains('dark');\n      this.container.innerHTML = `\n                <div class=\"text-editor-wrapper flex flex-col h-full\" style=\"background: ${isDark ? '#0f172a' : '#fafafa'}; color: ${isDark ? '#e5e7eb' : '#111827'};\">\n                    <!-- Toolbar -->\n                    <div class=\"text-editor-toolbar flex-none\" style=\"background: ${isDark ? '#1f2937' : '#f5f5f5'}; padding: 8px 12px; border-bottom: 1px solid ${isDark ? '#374151' : '#d1d5db'}; display: flex; gap: 8px; align-items: center; flex-wrap: wrap;\">\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"clear\" title=\"Neu\">Neu</button>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"open\" title=\"\u00D6ffnen\">\u00D6ffnen</button>\n                        <button type=\"button\" class=\"text-editor-btn text-save-btn\" data-action=\"save\" title=\"Speichern\">Speichern</button>\n                        <div class=\"toolbar-separator\"></div>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"bold\" title=\"Fett\" style=\"font-weight: bold;\">B</button>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"italic\" title=\"Kursiv\" style=\"font-style: italic;\">I</button>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"underline\" title=\"Unterstrichen\" style=\"text-decoration: underline;\">U</button>\n                        <div class=\"toolbar-separator\"></div>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"find\" title=\"Suchen & Ersetzen\">\uD83D\uDD0D</button>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"toggleWrap\" title=\"Zeilenumbruch\">\u23CE</button>\n                        <input type=\"file\" class=\"text-file-input\"\n                            accept=\".txt,.md,.markdown,.html,.css,.js,.json,.yml,.yaml,.xml\"\n                            style=\"display:none\">\n                    </div>\n\n                    <!-- Find/Replace Panel (hidden by default) -->\n                    <div class=\"find-replace-panel\" style=\"background: ${isDark ? '#1f2937' : '#f5f5f5'}; padding: 8px 12px; border-bottom: 1px solid ${isDark ? '#374151' : '#d1d5db'}; display: none; gap: 8px; align-items: center;\">\n                        <input type=\"text\" class=\"find-input\" placeholder=\"Suchen...\" style=\"padding: 4px 8px; border: 1px solid ${isDark ? '#475569' : '#d1d5db'}; border-radius: 4px; background: ${isDark ? '#111827' : '#ffffff'}; color: inherit;\">\n                        <input type=\"text\" class=\"replace-input\" placeholder=\"Ersetzen...\" style=\"padding: 4px 8px; border: 1px solid ${isDark ? '#475569' : '#d1d5db'}; border-radius: 4px; background: ${isDark ? '#111827' : '#ffffff'}; color: inherit;\">\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"findNext\">Weiter</button>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"replaceOne\">Ersetzen</button>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"replaceAll\">Alle ersetzen</button>\n                        <button type=\"button\" class=\"text-editor-btn\" data-action=\"closeFindReplace\">\u2715</button>\n                    </div>\n\n                    <!-- Status Bar for filename -->\n                    <div class=\"text-file-status\" style=\"padding: 6px 12px; border-bottom: 1px solid ${isDark ? '#374151' : '#d1d5db'}; background: ${isDark ? '#1f2937' : '#f5f5f5'}; font-size: 13px; opacity: 0.85; display: none;\"></div>\n\n                    <!-- Editor Textarea -->\n                    <textarea class=\"text-editor-textarea flex-1 w-full resize-none p-4 border-0 outline-none\"\n                        spellcheck=\"false\"\n                        wrap=\"off\"\n                        style=\"background: ${isDark ? '#111827' : '#ffffff'}; color: inherit; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Courier New', monospace; font-size: 14px; line-height: 1.6; tab-size: 4;\"\n                        placeholder=\"Text eingeben...\"></textarea>\n\n                    <!-- Status Bar -->\n                    <div class=\"text-editor-statusbar flex-none\" style=\"background: ${isDark ? '#1f2937' : '#f5f5f5'}; padding: 6px 12px; border-top: 1px solid ${isDark ? '#374151' : '#d1d5db'}; font-size: 12px; opacity: 0.75; display: flex; justify-content: space-between;\">\n                        <span class=\"word-count-display\">W\u00F6rter: 0 | Zeichen: 0</span>\n                        <span class=\"line-col-display\">Zeile 1, Spalte 1</span>\n                    </div>\n                </div>\n            `;\n      this._applyButtonStyles();\n    }\n\n    private _applyButtonStyles(): void {\n      if (!this.container) return;\n      const isDark = document.documentElement.classList.contains('dark');\n      const buttons = this.container.querySelectorAll('.text-editor-btn') as NodeListOf<HTMLButtonElement>;\n      buttons.forEach((btn) => {\n        (btn as HTMLElement).style.cssText = `\n                    padding: 6px 12px;\n                    font-size: 13px;\n                    border: 1px solid ${isDark ? '#475569' : '#d1d5db'};\n                    background: ${isDark ? '#111827' : '#ffffff'};\n                    color: inherit;\n                    border-radius: 6px;\n                    cursor: pointer;\n                    transition: background 0.2s;\n                `;\n      });\n      const separators = this.container.querySelectorAll('.toolbar-separator');\n      separators.forEach((sep) => {\n        (sep as HTMLElement).style.cssText = `\n                    width: 1px;\n                    height: 20px;\n                    background: ${isDark ? '#475569' : '#d1d5db'};\n                    margin: 0 4px;\n                `;\n      });\n    }\n\n    protected attachEventListeners(): void {\n      if (!this.container) return;\n      this.editor = this.container.querySelector('.text-editor-textarea') as HTMLTextAreaElement | null;\n      this.statusBar = this.container.querySelector('.text-file-status');\n      this.saveButton = this.container.querySelector('[data-action=\"save\"]');\n      this.fileInput = this.container.querySelector('.text-file-input') as HTMLInputElement | null;\n      this.wordCountDisplay = this.container.querySelector('.word-count-display');\n      this.lineColDisplay = this.container.querySelector('.line-col-display');\n      this.findReplacePanel = this.container.querySelector('.find-replace-panel');\n      this.findInput = this.container.querySelector('.find-input') as HTMLInputElement | null;\n      this.replaceInput = this.container.querySelector('.replace-input') as HTMLInputElement | null;\n\n      if (this.state && (this.state as Record<string, unknown>).content && this.editor) {\n        this.editor.value = (this.state as Record<string, unknown>).content as string;\n      }\n\n      this.editor?.addEventListener('input', () => this._handleInput());\n      this.editor?.addEventListener('click', () => this._updateCursorPosition());\n      this.editor?.addEventListener('keyup', () => this._updateCursorPosition());\n      this.editor?.addEventListener('select', () => this._updateCursorPosition());\n\n      this.container.addEventListener('click', (e) => {\n        const target = e.target as HTMLElement | null;\n        const btn = target?.closest('[data-action]') as HTMLElement | null;\n        if (!btn) return;\n        const action = btn.getAttribute('data-action') as string;\n        this._handleAction(action);\n      });\n\n      if (this.fileInput) {\n        this.fileInput.addEventListener('change', (e) => this._handleFileOpen(e as unknown as Event));\n      }\n\n      this._updateWordCount();\n      this._updateCursorPosition();\n      this._loadWrapPreference();\n    }\n\n    private _handleAction(action: string): void {\n      const actions: Record<string, () => void> = {\n        clear: () => this.clearContent(),\n        open: () => this.openFile(),\n        save: () => this.saveFile(),\n        bold: () => this._wrapSelection('**', '**'),\n        italic: () => this._wrapSelection('*', '*'),\n        underline: () => this._wrapSelection('<u>', '</u>'),\n        find: () => this.toggleFindReplace(),\n        toggleWrap: () => this.toggleWrapMode(),\n        findNext: () => this.findNext(),\n        replaceOne: () => this.replaceOne(),\n        replaceAll: () => this.replaceAll(),\n        closeFindReplace: () => this.closeFindReplace(),\n      };\n      if (actions[action]) actions[action]();\n    }\n\n    private _handleInput(): void {\n      this.isDirty = true;\n      if (this.editor) {\n        this.updateState({ content: this.editor.value });\n        this._updateWordCount();\n        this._updateSaveButton();\n        const emit = (Base.prototype as unknown as { emit: (this: unknown, ev: string, data?: unknown) => void }).emit;\n        emit.call(this, 'contentChanged', { content: this.editor.value });\n      }\n    }\n\n    private _updateWordCount(): void {\n      if (!this.editor || !this.wordCountDisplay) return;\n      const text = this.editor.value;\n      const words = text.trim() ? text.trim().split(/\\s+/).length : 0;\n      const chars = text.length;\n      this.wordCountDisplay.textContent = `W\u00F6rter: ${words} | Zeichen: ${chars}`;\n    }\n\n    private _updateCursorPosition(): void {\n      if (!this.editor || !this.lineColDisplay) return;\n      const pos = this.editor.selectionStart;\n      const textBeforeCursor = this.editor.value.substring(0, pos);\n      const line = (textBeforeCursor.match(/\\n/g) || []).length + 1;\n      const lastNewline = textBeforeCursor.lastIndexOf('\\n');\n      const col = pos - lastNewline;\n      this.lineColDisplay.textContent = `Zeile ${line}, Spalte ${col}`;\n      this.updateState({ cursorPosition: { line, col } });\n    }\n\n    private _updateSaveButton(): void {\n      if (!this.saveButton) return;\n      if (this.isDirty) {\n        (this.saveButton as HTMLElement).style.fontWeight = 'bold';\n        (this.saveButton as HTMLElement).setAttribute('title', '\u00C4nderungen speichern');\n      } else {\n        (this.saveButton as HTMLElement).style.fontWeight = 'normal';\n        (this.saveButton as HTMLElement).setAttribute('title', 'Speichern');\n      }\n    }\n\n    clearContent(): void {\n      if (this.isDirty && !confirm('Ungespeicherte \u00C4nderungen gehen verloren. Fortfahren?')) {\n        return;\n      }\n      if (this.editor) this.editor.value = '';\n      this.currentFilename = 'Untitled.txt';\n      this.isDirty = false;\n      this.updateState({ content: '', filename: this.currentFilename });\n      this._updateWordCount();\n      this._updateSaveButton();\n      this._hideStatusBar();\n      const emit = (Base.prototype as unknown as { emit: (this: unknown, ev: string, data?: unknown) => void }).emit;\n      emit.call(this, 'contentCleared');\n    }\n\n    openFile(): void {\n      this.fileInput?.click();\n    }\n\n    private _handleFileOpen(event: Event): void {\n      const target = event.target as HTMLInputElement | null;\n      const file = target?.files?.[0];\n      if (!file) return;\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        const result = (e.target as FileReader).result as string;\n        if (this.editor) this.editor.value = result;\n        this.currentFilename = file.name;\n        this.isDirty = false;\n        this.updateState({ content: result, filename: file.name });\n        this._updateWordCount();\n        this._updateSaveButton();\n        this._showStatusBar(`Ge\u00F6ffnet: ${file.name}`);\n        const emit = (Base.prototype as unknown as { emit: (this: unknown, ev: string, data?: unknown) => void }).emit;\n        emit.call(this, 'fileOpened', { filename: file.name });\n      };\n      reader.readAsText(file);\n    }\n\n    saveFile(): void {\n      const content = this.editor?.value || '';\n      const blob = new Blob([content], { type: 'text/plain' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = this.currentFilename;\n      a.click();\n      URL.revokeObjectURL(url);\n      this.isDirty = false;\n      this._updateSaveButton();\n      this._showStatusBar(`Gespeichert: ${this.currentFilename}`);\n      const emit = (Base.prototype as unknown as { emit: (this: unknown, ev: string, data?: unknown) => void }).emit;\n      emit.call(this, 'fileSaved', { filename: this.currentFilename });\n    }\n\n    private _wrapSelection(before: string, after: string): void {\n      if (!this.editor) return;\n      const start = this.editor.selectionStart;\n      const end = this.editor.selectionEnd;\n      const selectedText = this.editor.value.substring(start, end);\n      const replacement = before + selectedText + after;\n      this.editor.setRangeText(replacement, start, end, 'select');\n      this.editor.focus();\n      this._handleInput();\n    }\n\n    toggleWrapMode(): void {\n      this.wrapMode = this.wrapMode === 'soft' ? 'off' : 'soft';\n      if (this.editor) {\n        this.editor.wrap = this.wrapMode;\n        this.editor.style.whiteSpace = this.wrapMode === 'soft' ? 'pre-wrap' : 'pre';\n      }\n      try {\n        localStorage.setItem(`textEditorWrapMode_${(this as unknown as { instanceId: string }).instanceId}`, this.wrapMode);\n      } catch (e) {\n        console.warn('Could not save wrap mode', e);\n      }\n      this.updateState({ wrapMode: this.wrapMode });\n      this._showStatusBar(this.wrapMode === 'soft' ? 'Zeilenumbruch aktiviert' : 'Zeilenumbruch deaktiviert');\n    }\n\n    private _loadWrapPreference(): void {\n      try {\n        const id = (this as unknown as { instanceId: string }).instanceId;\n        const saved = localStorage.getItem(`textEditorWrapMode_${id}`) as WrapMode | null;\n        if (saved && this.editor) {\n          this.wrapMode = saved;\n          this.editor.wrap = this.wrapMode;\n          this.editor.style.whiteSpace = this.wrapMode === 'soft' ? 'pre-wrap' : 'pre';\n        }\n      } catch (e) {\n        console.warn('Could not load wrap mode', e);\n      }\n    }\n\n    toggleFindReplace(): void {\n      if (!this.findReplacePanel) return;\n      const isHidden = this.findReplacePanel.style.display === 'none';\n      this.findReplacePanel.style.display = isHidden ? 'flex' : 'none';\n      if (isHidden && this.findInput) this.findInput.focus();\n      else this.editor?.focus();\n    }\n\n    closeFindReplace(): void {\n      if (this.findReplacePanel) {\n        this.findReplacePanel.style.display = 'none';\n        this.editor?.focus();\n      }\n    }\n\n    findNext(): void {\n      if (!this.findInput || !this.editor) return;\n      const searchText = this.findInput.value;\n      if (!searchText) return;\n      const content = this.editor.value;\n      const currentPos = this.editor.selectionEnd;\n      const index = content.indexOf(searchText, currentPos);\n      if (index !== -1) {\n        this.editor.setSelectionRange(index, index + searchText.length);\n        this.editor.focus();\n      } else {\n        const firstIndex = content.indexOf(searchText);\n        if (firstIndex !== -1) {\n          this.editor.setSelectionRange(firstIndex, firstIndex + searchText.length);\n          this.editor.focus();\n        } else {\n          this._showStatusBar('Nicht gefunden');\n        }\n      }\n    }\n\n    replaceOne(): void {\n      if (!this.findInput || !this.replaceInput || !this.editor) return;\n      const searchText = this.findInput.value;\n      const replaceText = this.replaceInput.value;\n      if (!searchText) return;\n      const start = this.editor.selectionStart;\n      const end = this.editor.selectionEnd;\n      const selectedText = this.editor.value.substring(start, end);\n      if (selectedText === searchText) {\n        this.editor.setRangeText(replaceText, start, end, 'end');\n        this._handleInput();\n      }\n      this.findNext();\n    }\n\n    replaceAll(): void {\n      if (!this.findInput || !this.replaceInput || !this.editor) return;\n      const searchText = this.findInput.value;\n      const replaceText = this.replaceInput.value;\n      if (!searchText) return;\n      const newContent = this.editor.value.split(searchText).join(replaceText);\n      const count = (this.editor.value.match(new RegExp(searchText, 'g')) || []).length;\n      this.editor.value = newContent;\n      this._handleInput();\n      this._showStatusBar(`${count} Ersetzungen vorgenommen`);\n    }\n\n    private _showStatusBar(message: string): void {\n      if (!this.statusBar) return;\n      this.statusBar.textContent = message;\n      this.statusBar.style.display = 'block';\n      setTimeout(() => this._hideStatusBar(), 3000);\n    }\n\n    private _hideStatusBar(): void {\n      if (this.statusBar) this.statusBar.style.display = 'none';\n    }\n\n    focus(): void {\n      const baseFocus = (Base.prototype as unknown as { focus: () => void }).focus;\n      baseFocus.call(this);\n      this.editor?.focus();\n    }\n\n    serialize(): Record<string, unknown> {\n      const baseSerialize = (Base.prototype as unknown as {\n        serialize: () => Record<string, unknown>;\n      }).serialize;\n      const baseObj = baseSerialize.call(this) as Record<string, unknown>;\n      return {\n        ...baseObj,\n        content: this.editor?.value || '',\n        filename: this.currentFilename,\n        wrapMode: this.wrapMode,\n        isDirty: this.isDirty,\n      };\n    }\n\n    deserialize(data: Record<string, unknown>): void {\n      const baseDeserialize = (Base.prototype as unknown as {\n        deserialize: (d: Record<string, unknown>) => void;\n      }).deserialize;\n      baseDeserialize.call(this, data);\n\n      const d = data as {\n        content?: string;\n        filename?: string;\n        wrapMode?: WrapMode;\n        isDirty?: boolean;\n      };\n      if (d.content && this.editor) {\n        this.editor.value = d.content;\n        this._updateWordCount();\n      }\n      if (d.filename) this.currentFilename = d.filename;\n      if (d.wrapMode) {\n        this.wrapMode = d.wrapMode;\n        if (this.editor) {\n          this.editor.wrap = this.wrapMode;\n          this.editor.style.whiteSpace = this.wrapMode === 'soft' ? 'pre-wrap' : 'pre';\n        }\n      }\n      if (typeof d.isDirty !== 'undefined') {\n        this.isDirty = d.isDirty;\n        this._updateSaveButton();\n      }\n    }\n  }\n\n  (window as unknown as { TextEditorInstance: typeof TextEditorInstance }).TextEditorInstance = TextEditorInstance;\n\n  const G = window as unknown as Record<string, unknown>;\n  type InstanceManagerCtor = new (cfg: Record<string, unknown>) => unknown;\n  const InstanceManager = (G['InstanceManager'] as unknown) as InstanceManagerCtor | undefined;\n  if (InstanceManager) {\n    (G['TextEditorInstanceManager'] as unknown) = new (InstanceManager as InstanceManagerCtor)({\n      type: 'text-editor',\n      instanceClass: TextEditorInstance,\n      maxInstances: 0,\n      createContainer: function (instanceId: string): HTMLElement | null {\n        const editorModalContainer = document.getElementById('text-editor-container');\n        if (!editorModalContainer) {\n          console.error('Text editor container not found');\n          return null;\n        }\n        const container = document.createElement('div');\n        container.id = `${instanceId}-container`;\n        container.className = 'text-editor-instance-container h-full';\n        // Use DOMUtils if available to hide initially, else fallback\n        const domUtils = (window as unknown as { DOMUtils?: { hide?: (el: Element) => void } })\n          .DOMUtils;\n        if (domUtils && typeof domUtils.hide === 'function') {\n          domUtils.hide(container);\n        } else {\n          container.classList.add('hidden');\n        }\n        editorModalContainer.appendChild(container);\n        return container;\n      },\n    });\n  }\n})();\n", "/**\n * Text Editor Module\n * Replaces text.html iframe with inline text editor\n */\n\ntype WrapMode = 'soft' | 'off';\n\ninterface FileMeta {\n    fileName?: string;\n    repo?: string;\n    path?: string;\n}\n\ninterface RemoteFilePayload extends FileMeta {\n    content: string;\n}\n\ninterface LoadErrorPayload extends FileMeta {\n    message?: string;\n}\n\ntype StatusState =\n    | { type: 'plain'; text: string }\n    | { type: 'i18n'; key: string; params?: Record<string, unknown> };\n\ninterface TextEditorSystemInternal extends TextEditorSystemAPI {\n    container: HTMLElement | null;\n    editor: HTMLTextAreaElement | null;\n    statusBar: HTMLElement | null;\n    saveButton: HTMLButtonElement | null;\n    fileInput: HTMLInputElement | null;\n    wrapMode: WrapMode;\n    currentRemoteFile: RemoteFilePayload | null;\n    statusState: StatusState | null;\n    wordCountDisplay: HTMLElement | null;\n    lineColDisplay: HTMLElement | null;\n    findReplacePanel: HTMLElement | null;\n    findInput: HTMLInputElement | null;\n    replaceInput: HTMLInputElement | null;\n    toastContainer: HTMLElement | null;\n    \n    // Internal methods\n    init(containerOrId: HTMLElement | string): void;\n        render(): void;\n        cacheElements(): void;\n        loadWrapPreference(): void;\n        attachListeners(): void;\n        loadSavedContent(): void;\n        syncSaveButtonState(): void;\n        registerActions(): void;\n        updateCSSVariables(): void;\n        applyWrapMode(mode?: string): void;\n        setStatusPlain(msg: string): void;\n        focusEditor(): void;\n        handleEditorInput(): void;\n        updateWordCount(): void;\n        updateCursorPosition(): void;\n        handleFileSelect(event: Event): void;\n        updateDocumentTitle(): void;\n        clearStatus(): void;\n        toggleWrapMode(): void;\n        execCommand(cmd: string): void;\n            handlePaste(e?: Event): void;\n        selectAll(): void;\n        wrapSelection(before: string, after: string): void;\n        insertHeading(level: number): void;\n        insertList(type: string): void;\n        alignText(align: string): void;\n        insertLink(): void;\n        toggleFindReplace(): void;\n        findNext(): void;\n        replaceOne(): void;\n        replaceAll(): void;\n        closeFindReplace(): void;\n            formatFileLabel(meta?: unknown): string;\n        setStatusLocalized(key: string, params?: unknown): void;\n            resolveTranslation(key: string, params?: unknown): { text: string; translated: boolean };\n        showToast(msg: string, type?: string): void;\n        insertTextAtCursor(text: string): void;\n        showInputModal(title: string, defaultValue?: string, placeholder?: string): Promise<string | null>;\n            applyStatusState(state?: StatusState): void;\n            clearEditor(): void;\n            openFile(): void;\n            saveFile(): void;\n        loadRemoteFile(payload: Partial<RemoteFilePayload>): void;\n        showLoading(payload?: unknown): void;\n        showLoadError(payload?: unknown): void;\n        handleMenuAction(action: string): void;\n        destroy(): void;\n}\n\nconst TextEditorSystem: TextEditorSystemInternal = {\n    container: null,\n    editor: null,\n    statusBar: null,\n    saveButton: null,\n    fileInput: null,\n    wrapMode: 'off',\n    currentRemoteFile: null,\n    statusState: null,\n    wordCountDisplay: null,\n    lineColDisplay: null,\n    findReplacePanel: null,\n    findInput: null,\n    replaceInput: null,\n    toastContainer: null,\n\n        /**\n         * Initialize text editor in container\n         * @param {HTMLElement|string} containerOrId - Container element or ID\n         */\n        init(containerOrId: HTMLElement | string): void {\n            const container =\n                typeof containerOrId === 'string'\n                    ? document.getElementById(containerOrId)\n                    : containerOrId;\n\n            if (!container) {\n                console.error('Text editor container not found:', containerOrId);\n                return;\n            }\n\n            this.container = container;\n            this.render();\n            this.cacheElements();\n            this.loadWrapPreference();\n            this.attachListeners();\n            this.loadSavedContent();\n            this.syncSaveButtonState();\n\n            // Register text editor actions with ActionBus\n            if (window.ActionBus) {\n                this.registerActions();\n            }\n        },\n\n        /**\n         * Render text editor UI\n         */\n        render(): void {\n            if (!this.container) return;\n\n            this.container.innerHTML = `\n                <div class=\"dialog-content flex flex-col h-full\" style=\"background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827);\">\n                    <!-- File Operations Toolbar -->\n                    <div id=\"text-toolbar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: flex; gap: 8px; align-items: center; flex-wrap: wrap;\">\n                        <button type=\"button\" data-action=\"textEditor:clear\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.clear\" data-i18n-title=\"textEditor.toolbar.clear\">Neu</button>\n                        <button type=\"button\" data-action=\"textEditor:open\" class=\"text-editor-btn\" data-i18n=\"textEditor.toolbar.open\" data-i18n-title=\"textEditor.toolbar.open\">\u00D6ffnen</button>\n                        <button type=\"button\" data-action=\"textEditor:save\" class=\"text-editor-btn\" id=\"text-save-button\" data-i18n=\"textEditor.toolbar.save\" data-i18n-title=\"textEditor.toolbar.save\">Speichern</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:bold\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.bold\" style=\"font-weight: bold;\">B</button>\n                        <button type=\"button\" data-action=\"textEditor:italic\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.italic\" style=\"font-style: italic;\">I</button>\n                        <button type=\"button\" data-action=\"textEditor:underline\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.underline\" style=\"text-decoration: underline;\">U</button>\n                        <button type=\"button\" data-action=\"textEditor:strikethrough\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.strikeThrough\" style=\"text-decoration: line-through;\">S</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:heading1\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading1\">H1</button>\n                        <button type=\"button\" data-action=\"textEditor:heading2\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading2\">H2</button>\n                        <button type=\"button\" data-action=\"textEditor:heading3\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.heading3\">H3</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:unorderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.unorderedList\">\u2022 List</button>\n                        <button type=\"button\" data-action=\"textEditor:orderedList\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.orderedList\">1. List</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:alignLeft\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignLeft\">\u21E4</button>\n                        <button type=\"button\" data-action=\"textEditor:alignCenter\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignCenter\">\u2261</button>\n                        <button type=\"button\" data-action=\"textEditor:alignRight\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.alignRight\">\u21E5</button>\n                        <div style=\"width: 1px; height: 20px; background: var(--editor-toolbar-border, #d1d5db); margin: 0 4px;\"></div>\n                        <button type=\"button\" data-action=\"textEditor:insertLink\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.insertLink\">\uD83D\uDD17</button>\n                        <button type=\"button\" data-action=\"textEditor:findReplace\" class=\"text-editor-btn\" data-i18n-title=\"textEditor.toolbar.findReplace\">\uD83D\uDD0D</button>\n                        <input type=\"file\" id=\"text-file-input\"\n                            accept=\".txt,.md,.markdown,.html,.htm,.css,.scss,.js,.jsx,.ts,.tsx,.json,.yml,.yaml,.xml,.csv,.tsv,.ini,.cfg,.conf,.env,.gitignore,.log,.c,.h,.cpp,.hpp,.java,.kt,.swift,.cs,.py,.rb,.php,.rs,.go,.sh,.bash,.zsh,.fish,.ps1,.bat\"\n                            style=\"display:none\">\n                    </div>\n                    <!-- Find and Replace Panel (Hidden by default) -->\n                    <div id=\"find-replace-panel\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 8px 12px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); display: none; gap: 8px; align-items: center; flex-wrap: wrap;\">\n                        <input type=\"text\" id=\"find-input\" data-i18n-placeholder=\"textEditor.findReplace.find\" placeholder=\"Find...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\n                        <input type=\"text\" id=\"replace-input\" data-i18n-placeholder=\"textEditor.findReplace.replace\" placeholder=\"Replace...\" style=\"padding: 4px 8px; border: 1px solid var(--editor-toolbar-border, #d1d5db); border-radius: 4px; background: var(--editor-surface-bg, #ffffff); color: var(--editor-text, #111827); font-size: 13px;\">\n                        <button type=\"button\" data-action=\"textEditor:findNext\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.next\" data-i18n-title=\"textEditor.findReplace.next\" style=\"font-size: 12px;\">Next</button>\n                        <button type=\"button\" data-action=\"textEditor:replaceOne\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceOne\" data-i18n-title=\"textEditor.findReplace.replaceOne\" style=\"font-size: 12px;\">Replace</button>\n                        <button type=\"button\" data-action=\"textEditor:replaceAll\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.replaceAll\" data-i18n-title=\"textEditor.findReplace.replaceAll\" style=\"font-size: 12px;\">Replace All</button>\n                        <button type=\"button\" data-action=\"textEditor:closeFindReplace\" class=\"text-editor-btn\" data-i18n=\"textEditor.findReplace.close\" data-i18n-title=\"textEditor.findReplace.close\" style=\"font-size: 12px;\">\u2715</button>\n                    </div>\n                    <div id=\"text-file-status\" class=\"flex-none\" style=\"padding: 8px 16px; border-bottom: 1px solid var(--editor-toolbar-border, #d1d5db); background: var(--editor-body-bg, #fafafa); color: var(--editor-text, #111827); font-size: 14px; opacity: 0.75; display: none;\"></div>\n                    <textarea id=\"text-editor-textarea\" spellcheck=\"false\" wrap=\"off\" class=\"flex-1 w-full resize-none p-4 border-0 outline-none\"\n                        style=\"background: var(--editor-surface-bg, #ffffff); color: inherit; font-family: 'SFMono-Regular', Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace; font-size: 14px; line-height: 1.6; tab-size: 4;\"\n                        title=\"textarea\"></textarea>\n                    <!-- Status Bar with Word Count -->\n                    <div id=\"word-count-bar\" class=\"flex-none\" style=\"background: var(--editor-toolbar-bg, #f5f5f5); padding: 6px 12px; border-top: 1px solid var(--editor-toolbar-border, #d1d5db); font-size: 12px; color: var(--editor-text, #111827); opacity: 0.75; display: flex; justify-content: space-between;\">\n                        <span id=\"word-count-display\" data-i18n=\"textEditor.status.wordCount\" data-i18n-params='{\"words\":0,\"chars\":0}'>Words: 0 | Characters: 0</span>\n                        <span id=\"line-col-display\" data-i18n=\"textEditor.status.position\" data-i18n-params='{\"line\":1,\"col\":1}'>Line 1, Col 1</span>\n                    </div>\n                </div>\n            `;\n\n            // Apply CSS variables for dark mode support\n            this.updateCSSVariables();\n\n            // Apply i18n translations\n            if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\n                window.appI18n.applyTranslations();\n            }\n        },\n\n        /**\n         * Update CSS variables for dark mode\n         */\n        updateCSSVariables(): void {\n            if (!this.container) return;\n\n            const isDark = document.documentElement.classList.contains('dark');\n\n            this.container.style.setProperty('--editor-body-bg', isDark ? '#0f172a' : '#fafafa');\n            this.container.style.setProperty('--editor-text', isDark ? '#e5e7eb' : '#111827');\n            this.container.style.setProperty('--editor-toolbar-bg', isDark ? '#1f2937' : '#f5f5f5');\n            this.container.style.setProperty(\n                '--editor-toolbar-border',\n                isDark ? '#374151' : '#d1d5db'\n            );\n            this.container.style.setProperty(\n                '--editor-toolbar-button-bg',\n                isDark ? '#111827' : '#ffffff'\n            );\n            this.container.style.setProperty(\n                '--editor-toolbar-button-hover',\n                isDark ? '#1f2937' : '#e5e7eb'\n            );\n            this.container.style.setProperty(\n                '--editor-toolbar-button-border',\n                isDark ? '#475569' : '#d1d5db'\n            );\n            this.container.style.setProperty('--editor-surface-bg', isDark ? '#111827' : '#ffffff');\n\n            // Apply button styles\n            const buttons = this.container.querySelectorAll<HTMLElement>('.text-editor-btn');\n            buttons.forEach(btn => {\n                btn.style.margin = '0';\n                btn.style.padding = '6px 12px';\n                btn.style.fontSize = '14px';\n                btn.style.border = `1px solid ${isDark ? '#475569' : '#d1d5db'}`;\n                btn.style.background = isDark ? '#111827' : '#ffffff';\n                btn.style.cursor = 'pointer';\n                btn.style.color = 'inherit';\n                btn.style.borderRadius = '6px';\n            });\n        },\n\n        /**\n         * Cache DOM elements\n         */\n        cacheElements(): void {\n            if (!this.container) return;\n\n            this.editor = this.container.querySelector<HTMLTextAreaElement>(\n                '#text-editor-textarea'\n            );\n            this.statusBar = this.container.querySelector<HTMLElement>('#text-file-status');\n            this.saveButton = this.container.querySelector<HTMLButtonElement>('#text-save-button');\n            this.fileInput = this.container.querySelector<HTMLInputElement>('#text-file-input');\n            this.wordCountDisplay = this.container.querySelector<HTMLElement>(\n                '#word-count-display'\n            );\n            this.lineColDisplay = this.container.querySelector<HTMLElement>('#line-col-display');\n            this.findReplacePanel = this.container.querySelector<HTMLElement>(\n                '#find-replace-panel'\n            );\n            this.findInput = this.container.querySelector<HTMLInputElement>('#find-input');\n            this.replaceInput = this.container.querySelector<HTMLInputElement>('#replace-input');\n        },\n\n        /**\n         * Load wrap mode preference\n         */\n        loadWrapPreference(): void {\n            const storedWrapMode = localStorage.getItem('textEditorWrapMode');\n            this.wrapMode = storedWrapMode === 'soft' ? 'soft' : 'off';\n            this.applyWrapMode(this.wrapMode);\n        },\n\n        /**\n         * Apply wrap mode\n         * @param {string} mode - Wrap mode (soft|off)\n         */\n        applyWrapMode(mode?: string): void {\n            if (!this.editor) return;\n            const effective = mode ?? this.wrapMode;\n            const normalized = effective === 'soft' ? 'soft' : 'off';\n            this.wrapMode = normalized;\n            this.editor.wrap = normalized;\n            this.editor.style.whiteSpace = normalized === 'soft' ? 'pre-wrap' : 'pre';\n\n            try {\n                localStorage.setItem('textEditorWrapMode', normalized);\n            } catch (err) {\n                console.warn('Wrap preference could not be stored:', err);\n            }\n        },\n\n        /**\n         * Toggle wrap mode\n         */\n        toggleWrapMode(): void {\n            const next = this.wrapMode === 'soft' ? 'off' : 'soft';\n            this.applyWrapMode(next);\n            this.setStatusPlain(\n                next === 'soft' ? 'Zeilenumbruch aktiviert' : 'Zeilenumbruch deaktiviert'\n            );\n            this.focusEditor();\n        },\n\n        /**\n         * Attach event listeners\n         */\n        attachListeners(): void {\n            if (!this.editor || !this.fileInput) return;\n\n            // Editor input listener for auto-save and word count\n            this.editor.addEventListener('input', () => {\n                this.handleEditorInput();\n                this.updateWordCount();\n            });\n\n            // Editor selection and cursor listener\n            this.editor.addEventListener('click', () => {\n                this.updateCursorPosition();\n            });\n\n            this.editor.addEventListener('keyup', () => {\n                this.updateCursorPosition();\n            });\n\n            // File input change listener\n            this.fileInput.addEventListener('change', event => {\n                this.handleFileSelect(event);\n            });\n\n            // Listen for theme changes to update CSS variables\n            const themeObserver = new MutationObserver(() => {\n                this.updateCSSVariables();\n            });\n            themeObserver.observe(document.documentElement, {\n                attributes: true,\n                attributeFilter: ['class'],\n            });\n\n            // Listen for language changes\n            window.addEventListener('languagePreferenceChange', () => {\n                this.updateDocumentTitle();\n                this.applyStatusState();\n            });\n\n            // Initial word count and cursor position\n            this.updateWordCount();\n            this.updateCursorPosition();\n        },\n\n        /**\n         * Register actions with ActionBus\n         */\n        registerActions(): void {\n            if (!window.ActionBus) return;\n\n            window.ActionBus.registerAll({\n                'textEditor:clear': () => this.clearEditor(),\n                'textEditor:open': () => this.openFile(),\n                'textEditor:save': () => this.saveFile(),\n                'textEditor:toggleWrap': () => this.toggleWrapMode(),\n                'textEditor:undo': () => this.execCommand('undo'),\n                'textEditor:redo': () => this.execCommand('redo'),\n                'textEditor:cut': () => this.execCommand('cut'),\n                'textEditor:copy': () => this.execCommand('copy'),\n                'textEditor:paste': () => this.handlePaste(),\n                'textEditor:selectAll': () => this.selectAll(),\n                // New formatting actions\n                'textEditor:bold': () => this.wrapSelection('**', '**'),\n                'textEditor:italic': () => this.wrapSelection('*', '*'),\n                'textEditor:underline': () => this.wrapSelection('<u>', '</u>'),\n                'textEditor:strikethrough': () => this.wrapSelection('~~', '~~'),\n                'textEditor:heading1': () => this.insertHeading(1),\n                'textEditor:heading2': () => this.insertHeading(2),\n                'textEditor:heading3': () => this.insertHeading(3),\n                'textEditor:unorderedList': () => this.insertList('unordered'),\n                'textEditor:orderedList': () => this.insertList('ordered'),\n                'textEditor:alignLeft': () => this.alignText('left'),\n                'textEditor:alignCenter': () => this.alignText('center'),\n                'textEditor:alignRight': () => this.alignText('right'),\n                'textEditor:insertLink': () => this.insertLink(),\n                'textEditor:findReplace': () => this.toggleFindReplace(),\n                'textEditor:findNext': () => this.findNext(),\n                'textEditor:replaceOne': () => this.replaceOne(),\n                'textEditor:replaceAll': () => this.replaceAll(),\n                'textEditor:closeFindReplace': () => this.closeFindReplace(),\n            });\n        },\n\n        /**\n         * Handle editor input\n         */\n        handleEditorInput(): void {\n            if (!this.editor) return;\n\n            try {\n                localStorage.setItem('textEditorContent', this.editor.value);\n            } catch (err) {\n                console.warn('Could not save editor content to localStorage:', err);\n            }\n\n            this.syncSaveButtonState();\n        },\n\n        /**\n         * Handle file selection\n         */\n        handleFileSelect(event: Event): void {\n            const input = event.target as HTMLInputElement | null;\n            const file = input?.files?.[0];\n            if (!file) return;\n\n            const reader = new FileReader();\n            reader.onload = (e: ProgressEvent<FileReader>) => {\n                const content = e.target?.result;\n                if (typeof content === 'string' && this.editor) {\n                    this.editor.value = content;\n                    this.updateWordCount();\n                    this.updateCursorPosition();\n                }\n                    this.currentRemoteFile = { fileName: file.name, content: '' };\n                this.updateDocumentTitle();\n                this.setStatusPlain(file.name);\n                this.syncSaveButtonState();\n                this.focusEditor();\n            };\n            reader.readAsText(file);\n\n            // Reset input for future opens\n            if (input) {\n                input.value = '';\n            }\n        },\n\n        /**\n         * Load saved content from localStorage\n         */\n        loadSavedContent(): void {\n            if (!this.editor) return;\n\n            try {\n                const saved = localStorage.getItem('textEditorContent');\n                if (saved) {\n                    this.editor.value = saved;\n                    this.updateWordCount();\n                    this.updateCursorPosition();\n                }\n            } catch (err) {\n                console.warn('Could not load saved content:', err);\n            }\n        },\n\n        /**\n         * Sync save button state\n         */\n        syncSaveButtonState(): void {\n            if (!this.saveButton || !this.editor) return;\n\n            this.saveButton.disabled = this.editor.value.length === 0;\n        },\n\n        /**\n         * Focus editor\n         */\n        focusEditor(): void {\n            if (this.editor) {\n                this.editor.focus();\n            }\n        },\n\n        /**\n         * Clear editor\n         */\n        clearEditor(): void {\n            if (!this.editor) return;\n\n            this.editor.value = '';\n            this.updateWordCount();\n            this.updateCursorPosition();\n            localStorage.removeItem('textEditorContent');\n            this.currentRemoteFile = null;\n            this.updateDocumentTitle();\n            this.clearStatus();\n            this.syncSaveButtonState();\n            this.focusEditor();\n        },\n\n        /**\n         * Open file picker\n         */\n        openFile(): void {\n            if (this.fileInput) {\n                this.fileInput.click();\n            }\n        },\n\n        /**\n         * Save file\n         */\n        saveFile(): void {\n            if (!this.editor) return;\n\n            const content = this.editor.value;\n            const blob = new Blob([content], {\n                type: 'text/plain;charset=utf-8',\n            });\n            const url = URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.href = url;\n\n            const firstLine = content.split('\\n')[0] || 'text';\n            const sanitized =\n                firstLine\n                    .trim()\n                    .substring(0, 20)\n                    .replace(/[^a-zA-Z0-9-_]/g, '') || 'text';\n            a.download = `${sanitized}.txt`;\n\n            document.body.appendChild(a);\n            a.click();\n            document.body.removeChild(a);\n            URL.revokeObjectURL(url);\n        },\n\n        /**\n         * Execute document command\n         * @param {string} command - Command to execute\n         */\n        execCommand(command: string): void {\n            this.focusEditor();\n            try {\n                if (!document.execCommand(command)) {\n                    this.setStatusPlain(`Command ${command} not available`);\n                }\n            } catch (err) {\n                console.warn(`Command ${command} failed:`, err);\n                this.setStatusPlain(`Command ${command} failed`);\n            }\n        },\n\n        /**\n         * Handle paste operation\n         */\n    handlePaste(e?: Event): void {\n            this.focusEditor();\n\n            if (navigator.clipboard && typeof navigator.clipboard.readText === 'function') {\n                navigator.clipboard\n                    .readText()\n                    .then(text => {\n                        if (text && this.editor) {\n                            this.insertTextAtCursor(text);\n                        }\n                    })\n                    .catch(() => {\n                        this.execCommand('paste');\n                    });\n            } else {\n                this.execCommand('paste');\n            }\n        },\n\n        /**\n         * Select all text\n         */\n        selectAll(): void {\n            this.focusEditor();\n            if (this.editor) {\n                this.editor.select();\n            }\n        },\n\n        /**\n         * Insert text at cursor position\n         * @param {string} text - Text to insert\n         */\n        insertTextAtCursor(text: string): void {\n            if (!this.editor || typeof text !== 'string') return;\n\n            const start =\n                typeof this.editor.selectionStart === 'number'\n                    ? this.editor.selectionStart\n                    : this.editor.value.length;\n            const end =\n                typeof this.editor.selectionEnd === 'number' ? this.editor.selectionEnd : start;\n\n            this.editor.setRangeText(text, start, end, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n        },\n\n        /**\n         * Update document title\n         */\n        updateDocumentTitle(): void {\n            const titleKey =\n                this.currentRemoteFile && this.currentRemoteFile.fileName\n                    ? 'textEditor.documentTitleWithFile'\n                    : 'textEditor.documentTitle';\n\n            const params =\n                this.currentRemoteFile && this.currentRemoteFile.fileName\n                    ? { fileName: this.currentRemoteFile.fileName }\n                    : undefined;\n\n            const { text } = this.resolveTranslation(titleKey, params);\n            document.title = text;\n        },\n\n        /**\n         * Format file label for display\n         * @param {Object} meta - File metadata\n         * @returns {string} Formatted label\n         */\n        formatFileLabel(meta: FileMeta = {}): string {\n            const parts = [];\n            if (meta.repo) parts.push(meta.repo);\n            if (meta.path) {\n                parts.push(meta.path);\n            } else if (meta.fileName) {\n                parts.push(meta.fileName);\n            }\n            return parts.join(' / ');\n        },\n\n        /**\n         * Set plain text status\n         * @param {string} text - Status text\n         */\n        setStatusPlain(text: string | null | undefined): void {\n            if (!text) {\n                this.clearStatus();\n                return;\n            }\n            this.statusState = { type: 'plain', text };\n            this.applyStatusState();\n        },\n\n        /**\n         * Set localized status\n         * @param {string} key - Translation key\n         * @param {Object} params - Translation parameters\n         */\n        setStatusLocalized(key: string, params?: Record<string, unknown>): void {\n            this.statusState = {\n                type: 'i18n',\n                key,\n                params: params || undefined,\n            };\n            this.applyStatusState();\n        },\n\n        /**\n         * Clear status\n         */\n        clearStatus(): void {\n            this.statusState = null;\n            this.applyStatusState();\n        },\n\n        /**\n         * Apply status state to UI\n         */\n        applyStatusState(): void {\n            if (!this.statusBar) return;\n\n            if (!this.statusState) {\n                this.statusBar.textContent = '';\n                this.statusBar.style.display = 'none';\n                this.statusBar.removeAttribute('data-i18n');\n                this.statusBar.removeAttribute('data-i18n-params');\n                return;\n            }\n\n            if (this.statusState.type === 'i18n') {\n                const { text, translated } = this.resolveTranslation(\n                    this.statusState.key,\n                    this.statusState.params\n                );\n                this.statusBar.textContent = text;\n\n                if (translated) {\n                    this.statusBar.setAttribute('data-i18n', this.statusState.key);\n                    if (this.statusState.params) {\n                        this.statusBar.setAttribute(\n                            'data-i18n-params',\n                            JSON.stringify(this.statusState.params)\n                        );\n                    } else {\n                        this.statusBar.removeAttribute('data-i18n-params');\n                    }\n\n                    if (window.appI18n && typeof window.appI18n.applyTranslations === 'function') {\n                        window.appI18n.applyTranslations();\n                    }\n                } else {\n                    this.statusBar.removeAttribute('data-i18n');\n                    this.statusBar.removeAttribute('data-i18n-params');\n                }\n            } else {\n                this.statusBar.removeAttribute('data-i18n');\n                this.statusBar.removeAttribute('data-i18n-params');\n                this.statusBar.textContent = this.statusState.text;\n            }\n\n            this.statusBar.style.display = 'block';\n        },\n\n        /**\n         * Resolve translation\n         * @param {string} key - Translation key\n         * @param {Object} params - Translation parameters\n         * @returns {Object} Resolved translation\n         */\n        resolveTranslation(\n            key: string,\n            params?: Record<string, unknown>\n        ): { text: string; translated: boolean } {\n            if (!key) return { text: '', translated: false };\n\n            const fallbackMessages = {\n                'textEditor.documentTitle': () => 'Texteditor',\n                    'textEditor.documentTitleWithFile': (p: unknown) => {\n                        const fileName = p && (p as any).fileName ? (p as any).fileName : '';\n                    return fileName ? `Texteditor \u2013 ${fileName}` : 'Texteditor';\n                },\n                'textEditor.status.loading': () => 'Lade Datei \u2026',\n                    'textEditor.status.loadingWithLabel': (p: unknown) => {\n                        const label = p && (p as any).label ? (p as any).label : '';\n                    return label ? `${label} (l\u00E4dt \u2026)` : 'Lade Datei \u2026';\n                },\n                'textEditor.status.loadError': () => 'Datei konnte nicht geladen werden.',\n                'textEditor.status.rateLimit': () =>\n                    'GitHub Rate Limit erreicht. Bitte versuche es sp\u00E4ter erneut.',\n                    'textEditor.status.wordCount': (p: unknown) => {\n                        const words = p && typeof (p as any).words === 'number' ? (p as any).words : 0;\n                        const chars = p && typeof (p as any).chars === 'number' ? (p as any).chars : 0;\n                    return `Words: ${words} | Characters: ${chars}`;\n                },\n                    'textEditor.status.position': (p: unknown) => {\n                        const line = p && typeof (p as any).line === 'number' ? (p as any).line : 1;\n                        const col = p && typeof (p as any).col === 'number' ? (p as any).col : 1;\n                    return `Line ${line}, Col ${col}`;\n                },\n                'textEditor.findReplace.noMatch': () => 'No match found',\n                    'textEditor.findReplace.replacedCount': (p: unknown) => {\n                        const count = p && typeof (p as any).count === 'number' ? (p as any).count : 0;\n                    return `Replaced ${count} occurrence(s)`;\n                },\n                } as Record<string, ((...args: unknown[]) => string) | (() => string)>;\n\n            try {\n                if (window.appI18n && typeof window.appI18n.translate === 'function') {\n                    const translated = window.appI18n.translate(key);\n                    if (translated && translated !== key) {\n                        return { text: translated, translated: true };\n                    }\n                }\n            } catch (err) {\n                console.warn('Translation failed, falling back:', err);\n            }\n\n            const fallbackFn = fallbackMessages[key];\n            if (typeof fallbackFn === 'function') {\n                return { text: fallbackFn(params || {}), translated: false };\n            }\n\n            return { text: key, translated: false };\n        },\n\n        // ==================== Public API for Finder Integration ====================\n\n        /**\n         * Load remote file into editor\n         * @param {Object} payload - File payload\n         * @param {string} payload.content - File content\n         * @param {string} [payload.fileName] - File name\n         * @param {string} [payload.repo] - Repository name\n         * @param {string} [payload.path] - File path\n         */\n        loadRemoteFile(payload: Partial<RemoteFilePayload>): void {\n            if (typeof payload.content !== 'string') {\n                console.warn('Invalid payload for loadRemoteFile:', payload);\n                return;\n            }\n\n            const remotePayload: RemoteFilePayload = {\n                content: payload.content,\n                fileName: payload.fileName,\n                repo: payload.repo,\n                path: payload.path,\n            };\n\n            if (this.editor) {\n                this.editor.value = remotePayload.content;\n                this.updateWordCount();\n                this.updateCursorPosition();\n            }\n\n            this.currentRemoteFile = remotePayload;\n            const label = this.formatFileLabel(remotePayload);\n            this.updateDocumentTitle();\n            this.setStatusPlain(label);\n\n            try {\n                localStorage.setItem('textEditorContent', remotePayload.content);\n            } catch (err) {\n                console.warn('Could not save to localStorage:', err);\n            }\n\n            this.syncSaveButtonState();\n            this.focusEditor();\n        },\n\n        /**\n         * Show loading state\n         * @param {Object} payload - Loading payload\n         * @param {string} [payload.fileName] - File name\n         * @param {string} [payload.repo] - Repository name\n         * @param {string} [payload.path] - File path\n         */\n        showLoading(payload: FileMeta = {}): void {\n            const label = this.formatFileLabel(payload);\n            if (label) {\n                this.setStatusLocalized('textEditor.status.loadingWithLabel', {\n                    label,\n                });\n            } else {\n                this.setStatusLocalized('textEditor.status.loading');\n            }\n        },\n\n        /**\n         * Show load error\n         * @param {Object} payload - Error payload\n         * @param {string} [payload.message] - Error message\n         * @param {string} [payload.fileName] - File name\n         * @param {string} [payload.repo] - Repository name\n         * @param {string} [payload.path] - File path\n         */\n        showLoadError(payload: LoadErrorPayload = {}): void {\n            const label = this.formatFileLabel(payload);\n            const fallback = this.resolveTranslation('textEditor.status.loadError');\n            const message = payload && payload.message ? payload.message : fallback.text;\n\n            if (label) {\n                this.setStatusPlain(`${label} \u2014 ${message}`);\n            } else {\n                this.setStatusPlain(message);\n            }\n        },\n\n        /**\n         * Handle menu action\n         * @param {string} action - Action name\n         */\n        handleMenuAction(action: string): void {\n            if (!action) return;\n\n            const actionMap: Record<string, string> = {\n                'file:new': 'textEditor:clear',\n                'file:open': 'textEditor:open',\n                'file:save': 'textEditor:save',\n                'edit:undo': 'textEditor:undo',\n                'edit:redo': 'textEditor:redo',\n                'edit:cut': 'textEditor:cut',\n                'edit:copy': 'textEditor:copy',\n                'edit:paste': 'textEditor:paste',\n                'edit:selectAll': 'textEditor:selectAll',\n                'view:toggleWrap': 'textEditor:toggleWrap',\n            };\n\n            const mappedAction = actionMap[action];\n            if (mappedAction && window.ActionBus) {\n                window.ActionBus.execute(mappedAction);\n            } else {\n                console.warn('Unknown menu action:', action);\n            }\n        },\n\n        // ==================== New Formatting Methods ====================\n\n        /**\n         * Wrap selected text with prefix and suffix\n         * @param {string} prefix - Text to insert before selection\n         * @param {string} suffix - Text to insert after selection\n         */\n        wrapSelection(prefix: string, suffix: string): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const selectedText = this.editor.value.substring(start, end);\n            const wrappedText = prefix + selectedText + suffix;\n\n            this.editor.setRangeText(wrappedText, start, end, 'select');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Insert heading at current line\n         * @param {number} level - Heading level (1-3)\n         */\n        insertHeading(level: number): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const text = this.editor.value;\n\n            // Find the start of the current line\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\n            let lineEnd = text.indexOf('\\n', start);\n            if (lineEnd === -1) lineEnd = text.length;\n\n            const currentLine = text.substring(lineStart, lineEnd);\n            const prefix = '#'.repeat(level) + ' ';\n\n            // Check if line already starts with heading markers\n            const headingMatch = currentLine.match(/^#+\\s/);\n            let newLine;\n\n            if (headingMatch) {\n                // Replace existing heading\n                newLine = prefix + currentLine.substring(headingMatch[0].length);\n            } else {\n                // Add new heading\n                newLine = prefix + currentLine;\n            }\n\n            this.editor.setRangeText(newLine, lineStart, lineEnd, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Insert list at current line or for selected lines\n         * @param {string} type - List type ('ordered' or 'unordered')\n         */\n        insertList(type: 'ordered' | 'unordered'): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const text = this.editor.value;\n\n            // Find the start and end of affected lines\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\n            let lineEnd = text.indexOf('\\n', end);\n            if (lineEnd === -1) lineEnd = text.length;\n\n            const selectedLines = text.substring(lineStart, lineEnd).split('\\n');\n            const prefix = type === 'ordered' ? null : '- ';\n\n            const newLines = selectedLines.map((line, index) => {\n                // Remove existing list markers\n                const cleanLine = line.replace(/^(?:\\d+\\.\\s|-\\s|\\*\\s)/, '');\n\n                if (type === 'ordered') {\n                    return `${index + 1}. ${cleanLine}`;\n                }\n                // use prefix for unordered lists\n                return `${prefix}${cleanLine}`;\n            });\n\n            const newText = newLines.join('\\n');\n            this.editor.setRangeText(newText, lineStart, lineEnd, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Align text (add HTML alignment tags)\n         * @param {string} alignment - Alignment type ('left', 'center', 'right')\n         */\n        alignText(alignment: 'left' | 'center' | 'right'): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const text = this.editor.value;\n\n            // Find the start and end of affected lines\n            const lineStart = text.lastIndexOf('\\n', start - 1) + 1;\n            let lineEnd = text.indexOf('\\n', end);\n            if (lineEnd === -1) lineEnd = text.length;\n\n            const selectedText = text.substring(lineStart, lineEnd);\n            const alignedText = `<div style=\"text-align: ${alignment};\">\\n${selectedText}\\n</div>`;\n\n            this.editor.setRangeText(alignedText, lineStart, lineEnd, 'end');\n            this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n            this.focusEditor();\n        },\n\n        /**\n         * Insert link at cursor or wrap selection\n         */\n        insertLink(): void {\n            if (!this.editor) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const selectedText = this.editor.value.substring(start, end);\n\n            const urlLabel =\n                this.resolveTranslation('textEditor.insertLink.enterUrl').text || 'Enter URL:';\n            this.showInputModal(urlLabel, 'https://example.com', 'https://').then((url: string | null) => {\n                if (!url) return;\n\n                const linkText = selectedText || 'link text';\n                const markdown = `[${linkText}](${url})`;\n\n                this.editor?.setRangeText(markdown, start, end, 'end');\n                this.editor?.dispatchEvent(new Event('input', { bubbles: true }));\n                this.focusEditor();\n            });\n        },\n\n        /**\n         * Update word and character count\n         */\n        updateWordCount(): void {\n            if (!this.editor || !this.wordCountDisplay) return;\n\n            const text = this.editor.value;\n            const chars = text.length;\n            const trimmedText = text.trim();\n            const words = trimmedText === '' ? 0 : trimmedText.split(/\\s+/).length;\n\n            // Use internal resolver (handles fallback + params)\n            const wc = this.resolveTranslation('textEditor.status.wordCount', { words, chars });\n            if (wc.translated) {\n                this.wordCountDisplay.textContent = wc.text;\n                return;\n            }\n\n            // Fallback to English\n            this.wordCountDisplay.textContent = `Words: ${words} | Characters: ${chars}`;\n        },\n\n        /**\n         * Update cursor position display\n         */\n        updateCursorPosition(): void {\n            if (!this.editor || !this.lineColDisplay) return;\n\n            const text = this.editor.value;\n            const pos = this.editor.selectionStart;\n\n            const textBeforeCursor = text.substring(0, pos);\n            const lines = textBeforeCursor.split('\\n');\n            const line = lines.length;\n            const lastLine = lines[lines.length - 1] || '';\n            const col = lastLine.length + 1;\n\n            // Use internal resolver (handles fallback + params)\n            const posMsg = this.resolveTranslation('textEditor.status.position', { line, col });\n            if (posMsg.translated) {\n                this.lineColDisplay.textContent = posMsg.text;\n                return;\n            }\n\n            // Fallback to English\n            this.lineColDisplay.textContent = `Line ${line}, Col ${col}`;\n        },\n\n        /**\n         * Toggle find and replace panel\n         */\n        toggleFindReplace(): void {\n            if (!this.findReplacePanel) return;\n\n            if (this.findReplacePanel.style.display === 'none') {\n                this.findReplacePanel.style.display = 'flex';\n                if (this.findInput) {\n                    this.findInput.focus();\n                }\n            } else {\n                this.findReplacePanel.style.display = 'none';\n                this.focusEditor();\n            }\n        },\n\n        /**\n         * Close find and replace panel\n         */\n        closeFindReplace(): void {\n            if (!this.findReplacePanel) return;\n            this.findReplacePanel.style.display = 'none';\n            this.focusEditor();\n        },\n\n        /**\n         * Find next occurrence\n         */\n        findNext(): void {\n            if (!this.editor || !this.findInput) return;\n\n            const searchText = this.findInput.value;\n            if (!searchText) return;\n\n            const text = this.editor.value;\n            const start = this.editor.selectionEnd;\n            const index = text.indexOf(searchText, start);\n\n            if (index !== -1) {\n                this.editor.setSelectionRange(index, index + searchText.length);\n                this.editor.focus();\n            } else {\n                // Wrap around to beginning\n                const firstIndex = text.indexOf(searchText);\n                if (firstIndex !== -1) {\n                    this.editor.setSelectionRange(firstIndex, firstIndex + searchText.length);\n                    this.editor.focus();\n                } else {\n                    const message =\n                        this.resolveTranslation('textEditor.findReplace.noMatch').text ||\n                        'No match found';\n                    this.showToast(message, 'info');\n                }\n            }\n        },\n\n        /**\n         * Replace one occurrence\n         */\n        replaceOne(): void {\n            if (!this.editor || !this.findInput || !this.replaceInput) return;\n\n            const searchText = this.findInput.value;\n            const replaceText = this.replaceInput.value;\n\n            if (!searchText) return;\n\n            const start = this.editor.selectionStart;\n            const end = this.editor.selectionEnd;\n            const selectedText = this.editor.value.substring(start, end);\n\n            if (selectedText === searchText) {\n                this.editor.setRangeText(replaceText, start, end, 'end');\n                this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n                this.findNext(); // Find next occurrence\n            } else {\n                this.findNext(); // Find first occurrence\n            }\n        },\n\n        /**\n         * Replace all occurrences\n         */\n        replaceAll(): void {\n            if (!this.editor || !this.findInput || !this.replaceInput) return;\n\n            const searchText = this.findInput.value;\n            const replaceText = this.replaceInput.value;\n\n            if (!searchText) return;\n\n            const text = this.editor.value;\n            const parts = text.split(searchText);\n            const count = parts.length - 1;\n\n            if (count > 0) {\n                const newText = parts.join(replaceText);\n                this.editor.value = newText;\n                this.editor.dispatchEvent(new Event('input', { bubbles: true }));\n\n                const message =\n                    this.resolveTranslation('textEditor.findReplace.replacedCount', { count })\n                        .text || `Replaced ${count} occurrence(s)`;\n                this.showToast(message, 'success');\n            } else {\n                const message =\n                    this.resolveTranslation('textEditor.findReplace.noMatch').text ||\n                    'No match found';\n                this.showToast(message, 'info');\n            }\n\n            this.focusEditor();\n        },\n\n        /**\n         * Show toast notification\n         * @param {string} message - Message to display\n         * @param {string} type - Toast type: 'info', 'success', 'error'\n         * @param {number} duration - Display duration in ms (default: 3000)\n         */\n        showToast(\n            message: string,\n            type: 'info' | 'success' | 'error' = 'info',\n            duration = 3000\n        ): void {\n            if (!this.container) return;\n\n            const toast = document.createElement('div');\n            toast.className = `text-editor-toast text-editor-toast-${type}`;\n            toast.textContent = message;\n\n            // Add to container\n            if (!this.toastContainer) {\n                this.toastContainer = document.createElement('div');\n                this.toastContainer.className = 'text-editor-toast-container';\n                this.container.appendChild(this.toastContainer);\n            }\n\n            this.toastContainer.appendChild(toast);\n\n            // Trigger animation\n            setTimeout(() => toast.classList.add('show'), 10);\n\n            // Auto-remove\n            setTimeout(() => {\n                toast.classList.remove('show');\n                setTimeout(() => toast.remove(), 300);\n            }, duration);\n        },\n\n        /**\n         * Show input modal dialog\n         * @param {string} title - Modal title\n         * @param {string} placeholder - Input placeholder\n         * @param {string} defaultValue - Default input value\n         * @returns {Promise<string|null>} Resolves with input value or null if cancelled\n         */\n        showInputModal(\n            title: string,\n            defaultValue = '',\n            placeholder = ''\n        ): Promise<string | null> {\n            return new Promise(resolve => {\n                const modal = document.createElement('div');\n                modal.className = 'text-editor-modal-overlay';\n\n                modal.innerHTML = `\n                    <div class=\"text-editor-modal\">\n                        <div class=\"text-editor-modal-header\">\n                            <h3>${title}</h3>\n                        </div>\n                        <div class=\"text-editor-modal-body\">\n                            <input type=\"text\" class=\"text-editor-modal-input\" placeholder=\"${placeholder}\" value=\"${defaultValue}\">\n                        </div>\n                        <div class=\"text-editor-modal-footer\">\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-cancel\">Cancel</button>\n                            <button class=\"text-editor-modal-btn text-editor-modal-btn-confirm\">OK</button>\n                        </div>\n                    </div>\n                `;\n\n                document.body.appendChild(modal);\n\n                const input = modal.querySelector('.text-editor-modal-input') as HTMLInputElement | null;\n                const cancelBtn = modal.querySelector('.text-editor-modal-btn-cancel') as HTMLButtonElement | null;\n                const confirmBtn = modal.querySelector('.text-editor-modal-btn-confirm') as HTMLButtonElement | null;\n\n                if (!input || !cancelBtn || !confirmBtn) {\n                    modal.remove();\n                    resolve(null);\n                    return;\n                }\n\n                // Focus input and select text\n                setTimeout(() => {\n                    input?.focus();\n                    input?.select();\n                }, 50);\n\n                const cleanup = () => {\n                    modal.classList.add('closing');\n                    setTimeout(() => modal.remove(), 200);\n                };\n\n                const handleConfirm = () => {\n                    const value = input?.value.trim();\n                    cleanup();\n                    resolve((value || '') as string || null);\n                };\n\n                const handleCancel = () => {\n                    cleanup();\n                    resolve(null);\n                };\n\n                // Event listeners\n                confirmBtn.addEventListener('click', handleConfirm);\n                cancelBtn.addEventListener('click', handleCancel);\n                input.addEventListener('keydown', (e: KeyboardEvent) => {\n                    if (e.key === 'Enter') {\n                        e.preventDefault();\n                        handleConfirm();\n                    } else if (e.key === 'Escape') {\n                        e.preventDefault();\n                        handleCancel();\n                    }\n                });\n\n                // Click outside to close\n                modal.addEventListener('click', (e: MouseEvent) => {\n                    if (e.target === modal) {\n                        handleCancel();\n                    }\n                });\n\n                // Trigger animation\n                setTimeout(() => modal.classList.add('show'), 10);\n            });\n        },\n\n        /**\n         * Destroy text editor\n         */\n        destroy(): void {\n            if (this.container) {\n                this.container.innerHTML = '';\n                this.container = null;\n            }\n            this.editor = null;\n            this.statusBar = null;\n            this.saveButton = null;\n            this.fileInput = null;\n            this.wordCountDisplay = null;\n            this.lineColDisplay = null;\n            this.findReplacePanel = null;\n            this.findInput = null;\n            this.replaceInput = null;\n            this.toastContainer = null;\n        },\n    };\n\n    // Export to global scope\n    window.TextEditorSystem = TextEditorSystem;\n\n    // Auto-init if container exists on load\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', () => {\n            const container = document.getElementById('text-editor-container');\n            if (container) {\n                TextEditorSystem.init(container);\n            }\n        });\n    } else {\n        const container = document.getElementById('text-editor-container');\n        if (container) {\n            TextEditorSystem.init(container);\n        }\n    }\n// End of TextEditorSystem module\n", "(function () {\n    'use strict';\n\n    type PlaceholderState = { key: string; params?: Record<string, unknown> } | null;\n\n    function getEl(id: string): HTMLElement | null {\n        return document.getElementById(id);\n    }\n\n    function applyTranslations(el: HTMLElement | null): void {\n        const w = window as unknown as { appI18n?: { applyTranslations: (n?: Element) => void } };\n        if (el && w.appI18n && typeof w.appI18n.applyTranslations === 'function') {\n            w.appI18n.applyTranslations(el);\n        }\n    }\n\n    function setPlaceholder(messageKey: string, params?: Record<string, unknown>): void {\n        const placeholder = getEl('image-placeholder');\n        if (!placeholder) return;\n        if (typeof messageKey !== 'string' || messageKey.length === 0) {\n            placeholder.removeAttribute('data-i18n');\n            placeholder.removeAttribute('data-i18n-params');\n            placeholder.textContent = '';\n            \n            const domUtils = (window as any).DOMUtils;\n            if (domUtils && typeof domUtils.hide === 'function') {\n                domUtils.hide(placeholder);\n            } else {\n                placeholder.classList.add('hidden');\n            }\n            \n            state.placeholder = null;\n            return;\n        }\n        placeholder.setAttribute('data-i18n', messageKey);\n        if (params && Object.keys(params).length > 0) {\n            placeholder.setAttribute('data-i18n-params', JSON.stringify(params));\n        } else {\n            placeholder.removeAttribute('data-i18n-params');\n        }\n        state.placeholder = { key: messageKey, params };\n        applyTranslations(placeholder);\n        {\n            const domUtils = (window as unknown as { DOMUtils?: { show?: (el: Element) => void } })\n                .DOMUtils;\n            if (domUtils && typeof domUtils.show === 'function') {\n                domUtils.show(placeholder);\n            } else {\n                placeholder.classList.remove('hidden');\n            }\n        }\n    }\n\n    function updateInfo(opts: { repo?: string; path?: string; dimensions?: string; size?: number }): void {\n        const infoEl = getEl('image-info');\n        if (!infoEl) return;\n        const parts: string[] = [];\n        if (opts.repo) parts.push(opts.repo);\n        if (opts.path) parts.push(opts.path);\n        const meta: string[] = [];\n        if (opts.dimensions) meta.push(opts.dimensions);\n        if (typeof opts.size === 'number' && opts.size > 0) {\n            const kb = (opts.size / 1024).toFixed(1);\n            meta.push(`${kb} KB`);\n        }\n        const info = [parts.join(' / '), meta.join(' \u2022 ')].filter(Boolean).join(' \u2014 ');\n        if (info) {\n            infoEl.textContent = info;\n            const domUtils = (window as unknown as { DOMUtils?: { show?: (el: Element) => void } })\n                .DOMUtils;\n            if (domUtils && typeof domUtils.show === 'function') {\n                domUtils.show(infoEl);\n            } else {\n                infoEl.classList.remove('hidden');\n            }\n        } else {\n            infoEl.textContent = '';\n            const domUtils = (window as unknown as { DOMUtils?: { hide?: (el: Element) => void } })\n                .DOMUtils;\n            if (domUtils && typeof domUtils.hide === 'function') {\n                domUtils.hide(infoEl);\n            } else {\n                infoEl.classList.add('hidden');\n            }\n        }\n    }\n\n    const state: { placeholder: PlaceholderState } = { placeholder: null };\n\n    // Re-apply placeholder on language change\n    const gw = window as unknown as Window & { __imageViewerUtilsWired?: boolean };\n    if (!gw.__imageViewerUtilsWired) {\n        gw.__imageViewerUtilsWired = true;\n        window.addEventListener('languagePreferenceChange', () => {\n            if (state.placeholder) {\n                setPlaceholder(state.placeholder.key, state.placeholder.params);\n            }\n        });\n    }\n\n    // Export as globals (namespaced + legacy aliases if free)\n    type ImageViewerGlobal = Window & {\n        ImageViewerUtils?: { setPlaceholder?: typeof setPlaceholder; updateInfo?: typeof updateInfo };\n        setImagePlaceholder?: typeof setPlaceholder;\n        updateImageInfo?: typeof updateInfo;\n    };\n    const w = window as unknown as ImageViewerGlobal;\n    w.ImageViewerUtils = w.ImageViewerUtils || {};\n    w.ImageViewerUtils.setPlaceholder = setPlaceholder;\n    w.ImageViewerUtils.updateInfo = updateInfo;\n    if (typeof w.setImagePlaceholder !== 'function') w.setImagePlaceholder = setPlaceholder;\n    if (typeof w.updateImageInfo !== 'function') w.updateImageInfo = updateInfo;\n})();\n", "/**\n * src/ts/logger.ts\n * Typed port of the legacy `js/logger.js`.\n */\n\nexport type LogLevelName = 'ERROR' | 'WARN' | 'INFO' | 'DEBUG' | 'TRACE';\n\nconst LOG_LEVELS: Record<LogLevelName, number> = {\n    ERROR: 0,\n    WARN: 1,\n    INFO: 2,\n    DEBUG: 3,\n    TRACE: 4,\n};\n\nconst LOG_COLORS: Record<LogLevelName, string> = {\n    ERROR: '#ff0000',\n    WARN: '#ff9800',\n    INFO: '#2196f3',\n    DEBUG: '#9c27b0',\n    TRACE: '#607d8b',\n};\n\nexport class Logger {\n    level: number;\n    enabledCategories: Set<string>;\n    format: 'compact' | 'detailed';\n\n    constructor() {\n        this.level = this.isDevelopment() ? LOG_LEVELS.TRACE : LOG_LEVELS.WARN;\n        this.enabledCategories = new Set(['*']);\n        this.format = 'compact';\n    }\n\n    isDevelopment(): boolean {\n        try {\n            return (\n                location.hostname === 'localhost' ||\n                location.hostname === '127.0.0.1' ||\n                location.port !== ''\n            );\n        } catch {\n            return false;\n        }\n    }\n\n    setLevel(level: LogLevelName | number) {\n        if (typeof level === 'string') {\n            this.level = LOG_LEVELS[level.toUpperCase() as LogLevelName] ?? LOG_LEVELS.INFO;\n        } else {\n            this.level = level;\n        }\n    }\n\n    enableCategory(category: string) {\n        if (category === '*') {\n            this.enabledCategories.clear();\n            this.enabledCategories.add('*');\n        } else {\n            this.enabledCategories.add(category);\n        }\n    }\n\n    disableCategory(category: string) {\n        this.enabledCategories.delete(category);\n    }\n\n    isCategoryEnabled(category: string) {\n        return this.enabledCategories.has('*') || this.enabledCategories.has(category);\n    }\n\n    private _log(level: LogLevelName, category: string, message?: unknown, ...args: unknown[]) {\n        if (LOG_LEVELS[level] > this.level) return;\n        if (!this.isCategoryEnabled(category)) return;\n\n        const color = LOG_COLORS[level];\n        const timestamp = new Date().toLocaleTimeString();\n\n        if (this.format === 'detailed') {\n            console.log(\n                `%c[${timestamp}] [${level}] [${category}]`,\n                `color: ${color}; font-weight: bold`,\n                message,\n                ...args\n            );\n        } else {\n            console.log(`%c[${category}]`, `color: ${color}`, message, ...args);\n        }\n    }\n\n    error(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('ERROR', category, message, ...args);\n    }\n\n    warn(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('WARN', category, message, ...args);\n    }\n\n    info(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('INFO', category, message, ...args);\n    }\n\n    debug(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('DEBUG', category, message, ...args);\n    }\n\n    trace(category: string, message?: unknown, ...args: unknown[]) {\n        this._log('TRACE', category, message, ...args);\n    }\n\n    group(category: string, title?: string) {\n        if (!this.isCategoryEnabled(category)) return;\n        console.group(title ?? category);\n    }\n\n    groupEnd() {\n        console.groupEnd();\n    }\n\n    time(label: string) {\n        console.time(label);\n    }\n\n    timeEnd(label: string) {\n        console.timeEnd(label);\n    }\n}\n\nconst logger = new Logger();\n\nexport default logger;\n\ndeclare global {\n    interface Window {\n        Logger?: Logger;\n    }\n}\n\nif (typeof window !== 'undefined') {\n    window.Logger = logger;\n}\n\n// For CommonJS compatibility\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ndeclare const module: any;\nif (typeof module !== 'undefined' && module.exports) {\n    module.exports = logger;\n}\n", "(function () {\n    'use strict';\n\n    type Instance = { instanceId: string };\n    type Manager = {\n        getAllInstances(): Instance[];\n        getActiveInstance(): Instance | null;\n        setActiveInstance(id: string): void;\n        createInstance(config?: { title?: string }): Instance | null;\n        destroyInstance(id: string): void;\n    };\n\n    interface Options {\n        scope?: HTMLElement | Document;\n        newTitleFactory?: () => string | undefined;\n    }\n\n    type Binding = {\n        key: string;\n        ctrl?: boolean;\n        shift?: boolean;\n        handler: () => void;\n        description?: string;\n        context?: string; // 'global' or a window type like 'finder'\n    };\n\n    const state = {\n        bindings: [] as Binding[],\n        contextResolver: (() => 'global') as () => string,\n        globalListenerAttached: false,\n    };\n\n    // Note: We intentionally do not branch on platform. We accept either Cmd (Meta) or Ctrl as modifier everywhere.\n\n    function isEditable(target: EventTarget | null): boolean {\n        if (!(target instanceof Element)) return false;\n        const tag = target.tagName?.toLowerCase();\n        if (tag === 'input' || tag === 'textarea' || tag === 'select') return true;\n        return (target as HTMLElement).isContentEditable;\n    }\n\n    function nextIndex(current: number, total: number): number {\n        return (current + 1) % total;\n    }\n\n    function prevIndex(current: number, total: number): number {\n        return (current - 1 + total) % total;\n    }\n\n    function isBinding(x: unknown): x is Binding {\n        if (typeof x !== 'object' || x === null) return false;\n        const obj = x as { key?: unknown; handler?: unknown };\n        return typeof obj.key === 'string' && typeof obj.handler === 'function';\n    }\n\n    // Legacy-friendly register that accepts a binding object (used by MultiInstanceIntegration)\n    function register(binding: Binding): () => void;\n    // Manager-scoped shortcuts helper (convenience API)\n    function register(manager: Manager, options?: Options): () => void;\n    function register(arg1: Binding | Manager, arg2: Options = {} as Options): () => void {\n        // Binding-style registry\n        if (isBinding(arg1)) {\n            const b = arg1 as Binding;\n            state.bindings.push(b);\n            ensureGlobalListener();\n            return () => {\n                const idx = state.bindings.indexOf(b);\n                if (idx >= 0) state.bindings.splice(idx, 1);\n            };\n        }\n\n        // Manager-style\n        const manager = arg1 as Manager;\n        const scope: Document | HTMLElement = arg2.scope || document;\n        const handler = (e: KeyboardEvent) => {\n            // Cross-platform: accept either Cmd (Meta) or Ctrl as the modifier\n            const mod = e.metaKey || e.ctrlKey;\n            if (!mod) return;\n            if (isEditable(e.target)) return;\n            const key = e.key.toLowerCase();\n\n            if (key === 'n') {\n                e.preventDefault();\n                const title = arg2.newTitleFactory?.();\n                manager.createInstance({ title });\n                return;\n            }\n\n            const active = manager.getActiveInstance();\n            const instances = manager.getAllInstances();\n            const total = instances.length;\n            if (total === 0) return;\n\n            if (key === 'w' && active) {\n                e.preventDefault();\n                manager.destroyInstance(active.instanceId);\n                return;\n            }\n\n            if (key === 'tab') {\n                e.preventDefault();\n                const currentIndex = active\n                    ? instances.findIndex(i => i.instanceId === active.instanceId)\n                    : -1;\n                const idx = e.shiftKey\n                    ? prevIndex(currentIndex, total)\n                    : nextIndex(currentIndex, total);\n                const target = instances[idx];\n                if (target) manager.setActiveInstance(target.instanceId);\n                return;\n            }\n\n            if (/^[1-9]$/.test(key)) {\n                e.preventDefault();\n                const n = parseInt(key, 10);\n                const idx = Math.min(n - 1, total - 1);\n                const target = instances[idx];\n                if (target) manager.setActiveInstance(target.instanceId);\n                return;\n            }\n        };\n        scope.addEventListener('keydown', handler as unknown as EventListener);\n        return () => scope.removeEventListener('keydown', handler as unknown as EventListener);\n    }\n\n    function ensureGlobalListener() {\n        if (state.globalListenerAttached) return;\n        const listener = (e: KeyboardEvent) => {\n            // Cross-platform: accept either Cmd (Meta) or Ctrl as the modifier\n            const mod = e.metaKey || e.ctrlKey;\n            if (!mod) return;\n            if (isEditable(e.target)) return;\n            const key = e.key.toLowerCase();\n            const context = state.contextResolver?.() || 'global';\n            // Find first matching binding for current context or global\n            const binding = state.bindings.find(b => {\n                if (b.key.toLowerCase() !== key) return false;\n                if (!!b.ctrl !== true) return false; // API expects ctrl/meta always true\n                if (!!b.shift !== !!e.shiftKey && b.shift !== undefined) return false;\n                if (b.context && b.context !== context) return false;\n                return true;\n            });\n            if (binding) {\n                e.preventDefault();\n                try {\n                    binding.handler();\n                } catch {}\n            }\n        };\n        document.addEventListener('keydown', listener as unknown as EventListener);\n        state.globalListenerAttached = true;\n    }\n\n    function setContextResolver(resolver: () => string) {\n        state.contextResolver = resolver;\n        ensureGlobalListener();\n    }\n\n    const KeyboardShortcuts = { register, setContextResolver };\n    (window as unknown as { [k: string]: unknown }).KeyboardShortcuts = KeyboardShortcuts;\n})();\n\n", "(function () {\n    'use strict';\n\n    const GITHUB_CACHE_NS = 'finderGithubCacheV1:';\n\n    function getCacheTtl(): number {\n        const dflt = 5 * 60 * 1000; // 5 minutes\n        try {\n            const constants =\n                (window as unknown as { APP_CONSTANTS?: Record<string, unknown> }).APP_CONSTANTS ||\n                {};\n            const val = (constants as Record<string, unknown>)['GITHUB_CACHE_DURATION'];\n            return typeof val === 'number' ? (val as number) : dflt;\n        } catch {\n            return dflt;\n        }\n    }\n\n    function makeCacheKey(kind: 'repos' | 'contents', repo = '', subPath = ''): string {\n        if (kind === 'repos') return GITHUB_CACHE_NS + 'repos';\n        return `${GITHUB_CACHE_NS}contents:${repo}:${subPath}`;\n    }\n\n    function writeCache(\n        kind: 'repos' | 'contents',\n        repo: string,\n        subPath: string,\n        data: unknown\n    ): void {\n        const key = makeCacheKey(kind, repo, subPath);\n        try {\n            const payload = { t: Date.now(), d: data };\n            localStorage.setItem(key, JSON.stringify(payload));\n        } catch {\n            /* ignore */\n        }\n    }\n\n    function readCache<T = unknown>(kind: 'repos' | 'contents', repo = '', subPath = ''): T | null {\n        const key = makeCacheKey(kind, repo, subPath);\n        try {\n            const raw = localStorage.getItem(key);\n            if (!raw) return null;\n            const parsed = JSON.parse(raw);\n            if (!parsed || typeof parsed !== 'object') return null;\n            const ttl = getCacheTtl();\n            if (typeof parsed.t !== 'number' || Date.now() - parsed.t > ttl) return null;\n            return (parsed.d as T) ?? null;\n        } catch {\n            return null;\n        }\n    }\n\n    function getHeaders(): Record<string, string> {\n        const headers: Record<string, string> = { Accept: 'application/vnd.github.v3+json' };\n        try {\n            const token = localStorage.getItem('githubToken');\n            if (token && token.trim()) {\n                headers['Authorization'] = `token ${token.trim()}`;\n            }\n        } catch {\n            /* ignore */\n        }\n        return headers;\n    }\n\n    async function fetchJSON<T = unknown>(url: string): Promise<T> {\n        const res = await fetch(url, { headers: getHeaders() });\n        if (!res.ok) {\n            throw Object.assign(new Error(`GitHub API error: ${res.status}`), {\n                status: res.status,\n            });\n        }\n        return res.json() as Promise<T>;\n    }\n\n    async function fetchUserRepos(\n        username: string,\n        params?: { per_page?: number; sort?: string }\n    ): Promise<unknown[]> {\n        const search = new globalThis.URLSearchParams();\n        search.set('per_page', String(params?.per_page ?? 100));\n        search.set('sort', params?.sort ?? 'updated');\n        const url = `https://api.github.com/users/${encodeURIComponent(username)}/repos?${search.toString()}`;\n        return fetchJSON<unknown[]>(url);\n    }\n\n    async function fetchRepoContents(\n        username: string,\n        repo: string,\n        subPath = ''\n    ): Promise<unknown> {\n        const pathPart = subPath ? `/${encodeURIComponent(subPath).replace(/%2F/g, '/')}` : '';\n        const url = `https://api.github.com/repos/${encodeURIComponent(username)}/${encodeURIComponent(repo)}/contents${pathPart}`;\n        return fetchJSON<unknown>(url);\n    }\n\n    type GitHubAPINamespace = {\n        getHeaders: () => Record<string, string>;\n        readCache: <T = unknown>(\n            kind: 'repos' | 'contents',\n            repo?: string,\n            subPath?: string\n        ) => T | null;\n        writeCache: (\n            kind: 'repos' | 'contents',\n            repo: string,\n            subPath: string,\n            data: unknown\n        ) => void;\n        fetchJSON: <T = unknown>(url: string) => Promise<T>;\n        fetchUserRepos: (\n            username: string,\n            params?: { per_page?: number; sort?: string }\n        ) => Promise<unknown[]>;\n        fetchRepoContents: (username: string, repo: string, subPath?: string) => Promise<unknown>;\n    };\n\n    (window as unknown as { GitHubAPI: GitHubAPINamespace }).GitHubAPI = {\n        getHeaders,\n        readCache,\n        writeCache,\n        fetchJSON,\n        fetchUserRepos,\n        fetchRepoContents,\n    };\n})();\n", "console.log('Window Configurations loaded');\n\n/**\n * Window-Konfigurationen\n *\n * Hier werden alle Fenster/Modals definiert.\n * Um ein neues Fenster hinzuzuf\u00FCgen, einfach einen neuen Eintrag hier anlegen!\n */\n(function () {\n    'use strict';\n\n    const windowConfigurations = [\n        {\n            id: 'finder-modal',\n            type: 'persistent',\n            programKey: 'programs.finder',\n            icon: './img/sucher.png',\n            closeButtonId: 'close-finder-modal',\n            metadata: {\n                initHandler: function () {\n                    // Create first Finder instance when modal opens if none exist\n                    if (\n                        window.FinderInstanceManager &&\n                        !window.FinderInstanceManager.hasInstances()\n                    ) {\n                        const inst = window.FinderInstanceManager.createInstance({\n                            title: 'Finder',\n                        });\n                        // Ensure visibility and UI sync (tab bar + content) after fresh open\n                        try {\n                            const active =\n                                inst && inst.instanceId\n                                    ? inst\n                                    : window.FinderInstanceManager.getActiveInstance?.();\n                            if (active && window.MultiInstanceIntegration) {\n                                // Show the active instance content\n                                window.MultiInstanceIntegration.showInstance(\n                                    'finder',\n                                    active.instanceId\n                                );\n                                // If available, refresh the tab UI\n                                const integ =\n                                    window.MultiInstanceIntegration.getIntegration?.('finder');\n                                integ?.tabManager?.addTab?.(active);\n\n                                // Force tab UI refresh to ensure tab is rendered\n                                if (integ?.tabManager?.controller?.refresh) {\n                                    integ.tabManager.controller.refresh();\n                                }\n                            }\n                        } catch (e) {\n                            console.warn('Finder init post-create sync failed:', e);\n                        }\n                    }\n                },\n                openHandler: function () {\n                    // On every open: ensure at least one Finder instance is available and visible\n                    if (\n                        window.FinderInstanceManager &&\n                        !window.FinderInstanceManager.hasInstances()\n                    ) {\n                        const inst = window.FinderInstanceManager.createInstance({\n                            title: 'Finder',\n                        });\n                        try {\n                            const activeId =\n                                (inst && inst.instanceId) ||\n                                window.FinderInstanceManager.getActiveInstance?.()?.instanceId;\n                            if (activeId && window.MultiInstanceIntegration) {\n                                window.MultiInstanceIntegration.showInstance('finder', activeId);\n                                const integ =\n                                    window.MultiInstanceIntegration.getIntegration?.('finder');\n                                if (\n                                    integ &&\n                                    integ.tabManager &&\n                                    typeof integ.tabManager.addTab === 'function'\n                                ) {\n                                    integ.tabManager.addTab(inst || { instanceId: activeId });\n                                }\n                                // Force tab UI refresh to ensure tab is rendered\n                                if (integ?.tabManager?.controller?.refresh) {\n                                    integ.tabManager.controller.refresh();\n                                }\n                            }\n                        } catch (e) {\n                            console.warn('Finder open post-create sync failed:', e);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'launchpad-modal',\n            type: 'persistent',\n            programKey: 'programs.launchpad',\n            icon: './img/launchpad.png',\n            closeButtonId: 'close-launchpad-modal',\n            metadata: {\n                skipMenubarUpdate: true, // Don't update menubar when launchpad is focused\n                initHandler: function () {\n                    // Initialize Launchpad module if not already done\n                    if (window.LaunchpadSystem && !window.LaunchpadSystem.container) {\n                        const container = document.getElementById('launchpad-container');\n                        if (container) {\n                            window.LaunchpadSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'projects-modal',\n            type: 'persistent',\n            programKey: 'programs.projects',\n            icon: './img/sucher.png',\n            closeButtonId: 'close-projects-modal',\n        },\n        {\n            id: 'about-modal',\n            type: 'persistent',\n            programKey: 'programs.about',\n            icon: './img/profil.jpg',\n            closeButtonId: 'close-about-modal',\n        },\n        {\n            id: 'settings-modal',\n            type: 'persistent',\n            programKey: 'programs.settings',\n            icon: './img/settings.png',\n            closeButtonId: 'close-settings-modal',\n            metadata: {\n                initHandler: function () {\n                    // Initialize settings module if not already done\n                    if (window.SettingsSystem && !window.SettingsSystem.container) {\n                        const container = document.getElementById('settings-container');\n                        if (container) {\n                            window.SettingsSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'text-modal',\n            type: 'persistent',\n            programKey: 'programs.text',\n            icon: './img/notepad.png',\n            closeButtonId: 'close-text-modal',\n            metadata: {\n                initHandler: function () {\n                    // Primary: Create first Text Editor instance when modal opens if none exist\n                    if (\n                        window.TextEditorInstanceManager &&\n                        !window.TextEditorInstanceManager.hasInstances()\n                    ) {\n                        window.TextEditorInstanceManager.createInstance({\n                            title: 'Editor',\n                        });\n                    }\n                    // Fallback: Initialize old text editor module if instance manager not available\n                    else if (window.TextEditorSystem && !window.TextEditorSystem.container) {\n                        const container = document.getElementById('text-editor-container');\n                        if (container) {\n                            window.TextEditorSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n        {\n            id: 'image-modal',\n            type: 'persistent',\n            programKey: 'programs.image',\n            icon: './img/imageviewer.png',\n            closeButtonId: 'close-image-modal',\n        },\n        {\n            id: 'program-info-modal',\n            type: 'transient',\n            programKey: 'programs.default',\n            icon: './img/sucher.png',\n            closeButtonId: 'close-program-info-modal',\n        },\n        {\n            id: 'terminal-modal',\n            type: 'persistent',\n            programKey: 'programs.terminal',\n            icon: './img/terminal.png',\n            closeButtonId: 'close-terminal-modal',\n            metadata: {\n                initHandler: function () {\n                    // Primary: Create first Terminal instance when modal opens if none exist\n                    if (\n                        window.TerminalInstanceManager &&\n                        !window.TerminalInstanceManager.hasInstances()\n                    ) {\n                        window.TerminalInstanceManager.createInstance({\n                            title: 'Terminal',\n                        });\n                    }\n                    // Fallback: Initialize old terminal module if instance manager not available\n                    else if (window.TerminalSystem && !window.TerminalSystem.container) {\n                        const container = document.getElementById('terminal-container');\n                        if (container) {\n                            window.TerminalSystem.init(container);\n                        }\n                    }\n                },\n            },\n        },\n    ];\n\n    // Automatisch alle Fenster registrieren wenn WindowManager verf\u00FCgbar ist\n    if (window.WindowManager) {\n        window.WindowManager.registerAll(windowConfigurations);\n        console.log(`Registered ${windowConfigurations.length} windows`);\n    } else {\n        // Fallback: Warte auf WindowManager\n        document.addEventListener('DOMContentLoaded', () => {\n            if (window.WindowManager) {\n                window.WindowManager.registerAll(windowConfigurations);\n                console.log(`Registered ${windowConfigurations.length} windows (delayed)`);\n            }\n        });\n    }\n\n    // Export f\u00FCr Zugriff von au\u00DFen\n    window.windowConfigurations = windowConfigurations;\n})();\n", "console.log('FinderInstance loaded');\n\n/**\n * FinderInstance - Multi-Instance f\u00E4higer Finder-Implementierung\n *\n * Erm\u00F6glicht mehrere Finder-Fenster mit isolierten States\n * Zeigt, wie das Finder-Modul f\u00FCr Multi-Instance umgebaut werden kann\n */\n(function () {\n    'use strict';\n\n    // Constants\n    const ROOT_FOLDER_NAME = 'Computer';\n\n    /**\n     * Single Finder Instance\n     * Extends BaseWindowInstance to support multiple finder windows\n     */\n    class FinderInstance extends window.BaseWindowInstance {\n        constructor(config) {\n            super({\n                ...config,\n                type: 'finder',\n            });\n\n            // Finder-specific state\n            this.currentPath = [];\n            this.currentView = 'computer'; // 'computer', 'github', 'favorites', 'recent'\n            this.selectedItems = new Set();\n            this.viewMode = 'list'; // 'list', 'grid', 'columns'\n            this.sortBy = 'name'; // 'name', 'date', 'size', 'type'\n            this.sortOrder = 'asc'; // 'asc', 'desc'\n            this.githubRepos = [];\n            this.githubLoading = false;\n            this.githubError = false;\n            this.githubErrorMessage = '';\n            this.lastGithubItemsMap = new Map();\n            this.favorites = new Set();\n            this.recentFiles = [];\n\n            // DOM References (per instance)\n            this.domRefs = {\n                sidebarComputer: null,\n                sidebarGithub: null,\n                sidebarFavorites: null,\n                sidebarRecent: null,\n                breadcrumbs: null,\n                contentArea: null,\n                toolbar: null,\n                searchInput: null,\n            };\n\n            // GitHub cache\n            this.githubContentCache = new Map();\n\n            // Virtual file system (per instance)\n            this.virtualFileSystem = this._createVirtualFileSystem();\n        }\n\n        /**\n         * Create virtual file system for this instance\n         * @private\n         */\n        _createVirtualFileSystem() {\n            const rootFolder = {\n                type: 'folder',\n                icon: '\uD83D\uDCBB',\n                children: {\n                    Documents: {\n                        type: 'folder',\n                        icon: '\uD83D\uDCC4',\n                        children: {\n                            'README.md': {\n                                type: 'file',\n                                icon: '\uD83D\uDCDD',\n                                content:\n                                    '# Willkommen im Finder\\n\\nDies ist ein virtuelles Dateisystem.',\n                                size: 1024,\n                            },\n                        },\n                    },\n                    Downloads: {\n                        type: 'folder',\n                        icon: '\u2B07\uFE0F',\n                        children: {},\n                    },\n                    Pictures: {\n                        type: 'folder',\n                        icon: '\uD83D\uDDBC\uFE0F',\n                        children: {},\n                    },\n                    Music: {\n                        type: 'folder',\n                        icon: '\uD83C\uDFB5',\n                        children: {},\n                    },\n                    Videos: {\n                        type: 'folder',\n                        icon: '\uD83C\uDFAC',\n                        children: {},\n                    },\n                },\n            };\n\n            return {\n                [ROOT_FOLDER_NAME]: rootFolder,\n            };\n        }\n\n        /**\n         * Initialize instance state\n         * @protected\n         */\n        _initializeState(initialState) {\n            return {\n                ...super._initializeState(initialState),\n                currentPath: initialState.currentPath || [],\n                currentView: initialState.currentView || 'computer',\n                viewMode: initialState.viewMode || 'list',\n                sortBy: initialState.sortBy || 'name',\n                sortOrder: initialState.sortOrder || 'asc',\n                favorites: initialState.favorites || [],\n                recentFiles: initialState.recentFiles || [],\n            };\n        }\n\n        /**\n         * Render finder UI\n         * @protected\n         */\n        render() {\n            if (!this.container) return;\n\n            const html = `\n                <div class=\"finder-instance-wrapper flex-1 flex gap-0 min-h-0 overflow-hidden\">\n                    <!-- Sidebar -->\n                    <aside class=\"w-48 bg-gray-50 dark:bg-gray-900 border-r border-gray-200 dark:border-gray-700 overflow-y-auto\">\n                        <div class=\"py-2\">\n                            <!-- Favoriten Section -->\n                            <div class=\"px-3 py-1 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wide\"\n                                data-i18n=\"finder.sidebar.favorites\">\n                                Favoriten\n                            </div>\n                            <button id=\"finder-sidebar-computer\" data-finder-sidebar-computer data-action=\"finder:switchView\" data-finder-view=\"computer\"\n                                class=\"finder-sidebar-item finder-sidebar-active\">\n                                <span class=\"finder-sidebar-icon\">\uD83D\uDCBB</span>\n                                <span data-i18n=\"finder.sidebar.computer\">Computer</span>\n                            </button>\n                            <button id=\"finder-sidebar-recent\" data-finder-sidebar-recent data-action=\"finder:switchView\" data-finder-view=\"recent\"\n                                class=\"finder-sidebar-item\">\n                                <span class=\"finder-sidebar-icon\">\uD83D\uDD52</span>\n                                <span data-i18n=\"finder.sidebar.recent\">Zuletzt ge\u00F6ffnet</span>\n                            </button>\n\n                            <!-- Orte Section -->\n                            <div class=\"px-3 py-1 mt-4 text-xs font-semibold text-gray-500 dark:text-gray-400 uppercase tracking-wide\"\n                                data-i18n=\"finder.sidebar.locations\">\n                                Orte\n                            </div>\n                            <button id=\"finder-sidebar-github\" data-finder-sidebar-github data-action=\"finder:switchView\" data-finder-view=\"github\"\n                                class=\"finder-sidebar-item\">\n                                <span class=\"finder-sidebar-icon\">\uD83D\uDCC2</span>\n                                <span data-i18n=\"finder.sidebar.github\">GitHub Projekte</span>\n                            </button>\n                            <button id=\"finder-sidebar-favorites\" data-finder-sidebar-favorites data-action=\"finder:switchView\"\n                                data-finder-view=\"favorites\" class=\"finder-sidebar-item\">\n                                <span class=\"finder-sidebar-icon\">\u2B50</span>\n                                <span data-i18n=\"finder.sidebar.starred\">Mit Stern</span>\n                            </button>\n                        </div>\n                    </aside>\n\n                    <!-- Main Content Area -->\n                    <div class=\"flex-1 flex flex-col min-h-0\">\n                        <!-- Toolbar -->\n                        <div id=\"finder-toolbar\" data-finder-toolbar\n                            class=\"px-4 py-2 border-b border-gray-200 dark:border-gray-700 flex items-center gap-2\">\n                            <button data-action=\"finder:navigateUp\" class=\"finder-toolbar-btn\" title=\"Zur\u00FCck\"\n                                data-i18n-title=\"finder.toolbar.back\">\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                                    <path d=\"M19 12H5M12 19l-7-7 7-7\" />\n                                </svg>\n                            </button>\n                            <button data-action=\"finder:goRoot\" class=\"finder-toolbar-btn\" title=\"Vorw\u00E4rts\"\n                                data-i18n-title=\"finder.toolbar.forward\">\n                                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\">\n                                    <path d=\"M5 12h14M12 5l7 7-7 7\" />\n                                </svg>\n                            </button>\n                            <div class=\"flex-1 mx-2\">\n                                <div id=\"finder-path-breadcrumbs\" data-finder-breadcrumbs\n                                    class=\"flex items-center gap-1 text-sm text-gray-600 dark:text-gray-400\">\n                                    <!-- Breadcrumbs werden dynamisch generiert -->\n                                </div>\n                            </div>\n                            <div class=\"flex gap-1\">\n                                <button data-action=\"finder:setViewMode\" data-view-mode=\"list\" class=\"finder-toolbar-btn\"\n                                    title=\"Listenansicht\" data-i18n-title=\"finder.toolbar.listView\">\n                                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                        <path d=\"M3 4h18v2H3V4m0 7h18v2H3v-2m0 7h18v2H3v-2Z\" />\n                                    </svg>\n                                </button>\n                                <button data-action=\"finder:setViewMode\" data-view-mode=\"grid\" class=\"finder-toolbar-btn\"\n                                    title=\"Rasteransicht\" data-i18n-title=\"finder.toolbar.gridView\">\n                                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                                        <path d=\"M3 3h8v8H3V3m10 0h8v8h-8V3M3 13h8v8H3v-8m10 0h8v8h-8v-8Z\" />\n                                    </svg>\n                                </button>\n                            </div>\n                            <input id=\"finder-search-input\" data-finder-search type=\"text\" placeholder=\"Suchen\"\n                                data-i18n-placeholder=\"finder.toolbar.search\"\n                                class=\"px-3 py-1 text-sm border border-gray-300 dark:border-gray-600 rounded bg-white dark:bg-gray-700 text-gray-900 dark:text-gray-100 focus:outline-none focus:ring-2 focus:ring-blue-500\" />\n                        </div>\n\n                        <!-- Content Area -->\n                        <div id=\"finder-content-area\" data-finder-content class=\"flex-1 overflow-auto bg-white dark:bg-gray-800 p-4\">\n                            <!-- Content wird dynamisch generiert -->\n                        </div>\n                    </div>\n                </div>\n            `;\n\n            this.container.innerHTML = html;\n\n            // Cache DOM references\n            this.domRefs.sidebarComputer = this.container.querySelector(\n                '[data-finder-sidebar-computer]'\n            );\n            this.domRefs.sidebarGithub = this.container.querySelector(\n                '[data-finder-sidebar-github]'\n            );\n            this.domRefs.sidebarFavorites = this.container.querySelector(\n                '[data-finder-sidebar-favorites]'\n            );\n            this.domRefs.sidebarRecent = this.container.querySelector(\n                '[data-finder-sidebar-recent]'\n            );\n            this.domRefs.breadcrumbs = this.container.querySelector('[data-finder-breadcrumbs]');\n            this.domRefs.contentArea = this.container.querySelector('[data-finder-content]');\n            this.domRefs.toolbar = this.container.querySelector('[data-finder-toolbar]');\n            this.domRefs.searchInput = this.container.querySelector('[data-finder-search]');\n        }\n\n        /**\n         * Attach event listeners\n         * @protected\n         */\n        attachEventListeners() {\n            if (!this.container) return;\n\n            // Delegate events on container\n            this.container.addEventListener('click', e => this._handleClick(e));\n            this.container.addEventListener('dblclick', e => this._handleDoubleClick(e));\n\n            // Initial render\n            this.navigateTo(this.state.currentPath, this.state.currentView);\n        }\n\n        /**\n         * Handle click events\n         * @private\n         */\n        _handleClick(e) {\n            const action = e.target.closest('[data-action]')?.dataset.action;\n            if (!action) return;\n\n            const handlers = {\n                'finder:switchView': () => {\n                    const view = e.target.closest('[data-finder-view]')?.dataset.finderView;\n                    if (view) this.switchView(view);\n                },\n                'finder:navigateUp': () => this.navigateUp(),\n                'finder:goRoot': () => this.navigateTo([], this.currentView),\n                'finder:navigateToPath': () => {\n                    const path = e.target.closest('[data-path]')?.dataset.path;\n                    if (path) this.navigateTo(path);\n                },\n                'finder:setSortBy': () => {\n                    const sortBy = e.target.closest('[data-sort-by]')?.dataset.sortBy;\n                    if (sortBy) this.setSortBy(sortBy);\n                },\n                'finder:setViewMode': () => {\n                    const mode = e.target.closest('[data-view-mode]')?.dataset.viewMode;\n                    if (mode) this.setViewMode(mode);\n                },\n            };\n\n            if (handlers[action]) {\n                handlers[action]();\n            }\n        }\n\n        /**\n         * Handle double click events\n         * @private\n         */\n        _handleDoubleClick(e) {\n            const item = e.target.closest('[data-action-dblclick]');\n            if (!item || item.dataset.actionDblclick !== 'finder:openItem') return;\n\n            const name = item.dataset.itemName;\n            const type = item.dataset.itemType;\n            if (name && type) {\n                this.openItem(name, type);\n            }\n        }\n\n        /**\n         * Navigate to path\n         */\n        navigateTo(path, view = null) {\n            if (view !== null) {\n                this.currentView = view;\n            }\n\n            if (typeof path === 'string') {\n                this.currentPath = path === '' ? [] : path.split('/');\n            } else if (Array.isArray(path)) {\n                this.currentPath = [...path];\n            }\n\n            this.updateSidebarSelection();\n            this.renderBreadcrumbs();\n            this.renderContent();\n            this.updateState({\n                currentPath: this.currentPath,\n                currentView: this.currentView,\n            });\n        }\n\n        /**\n         * Navigate up one level\n         */\n        navigateUp() {\n            if (this.currentPath.length > 0) {\n                this.currentPath.pop();\n                this.navigateTo(this.currentPath);\n            }\n        }\n\n        /**\n         * Navigate to folder\n         */\n        navigateToFolder(folderName) {\n            this.currentPath.push(folderName);\n            this.navigateTo(this.currentPath);\n        }\n\n        /**\n         * Switch view\n         */\n        switchView(view) {\n            this.currentPath = [];\n            this.navigateTo([], view);\n        }\n\n        /**\n         * Update sidebar selection\n         */\n        updateSidebarSelection() {\n            const refs = this.domRefs;\n            if (!refs) return;\n\n            // Remove all active marks\n            [\n                refs.sidebarComputer,\n                refs.sidebarGithub,\n                refs.sidebarFavorites,\n                refs.sidebarRecent,\n            ].forEach(el => {\n                if (el) el.classList.remove('finder-sidebar-active');\n            });\n\n            // Mark current view\n            switch (this.currentView) {\n                case 'computer':\n                    if (refs.sidebarComputer)\n                        refs.sidebarComputer.classList.add('finder-sidebar-active');\n                    break;\n                case 'github':\n                    if (refs.sidebarGithub)\n                        refs.sidebarGithub.classList.add('finder-sidebar-active');\n                    break;\n                case 'favorites':\n                    if (refs.sidebarFavorites)\n                        refs.sidebarFavorites.classList.add('finder-sidebar-active');\n                    break;\n                case 'recent':\n                    if (refs.sidebarRecent)\n                        refs.sidebarRecent.classList.add('finder-sidebar-active');\n                    break;\n            }\n        }\n\n        /**\n         * Render breadcrumbs\n         */\n        renderBreadcrumbs() {\n            if (!this.domRefs.breadcrumbs) return;\n\n            const parts = [];\n\n            // View label\n            let viewLabel = '';\n            switch (this.currentView) {\n                case 'computer':\n                    viewLabel = 'Computer';\n                    break;\n                case 'github':\n                    viewLabel = 'GitHub Projekte';\n                    break;\n                case 'favorites':\n                    viewLabel = 'Favoriten';\n                    break;\n                case 'recent':\n                    viewLabel = 'Zuletzt ge\u00F6ffnet';\n                    break;\n            }\n\n            parts.push(\n                `<button class=\"finder-breadcrumb-item\" data-action=\"finder:goRoot\">${viewLabel}</button>`\n            );\n\n            // Path parts\n            this.currentPath.forEach((part, index) => {\n                // Skip root folder name if we're in computer view and it's the first part\n                if (index === 0 && this.currentView === 'computer' && part === ROOT_FOLDER_NAME) {\n                    return;\n                }\n\n                const pathUpToHere = this.currentPath.slice(0, index + 1);\n                parts.push('<span class=\"finder-breadcrumb-separator\">\u203A</span>');\n                parts.push(\n                    `<button class=\"finder-breadcrumb-item\" data-action=\"finder:navigateToPath\" data-path=\"${pathUpToHere.join('/')}\">${part}</button>`\n                );\n            });\n\n            this.domRefs.breadcrumbs.innerHTML = parts.join('');\n        }\n\n        /**\n         * Render content area\n         */\n        renderContent() {\n            if (!this.domRefs.contentArea) return;\n\n            // Special handling for GitHub view (async loading)\n            if (this.currentView === 'github') {\n                this.renderGithubContent();\n                return;\n            }\n\n            const items = this.getCurrentItems();\n\n            if (items.length === 0) {\n                this.domRefs.contentArea.innerHTML = `\n                    <div class=\"finder-empty-state\">\n                        <div class=\"text-6xl mb-4\">\uD83D\uDCC2</div>\n                        <div class=\"text-gray-500 dark:text-gray-400\">Dieser Ordner ist leer</div>\n                    </div>\n                `;\n                return;\n            }\n\n            // Sort items\n            const sortedItems = this.sortItems(items);\n\n            // Render based on view mode\n            switch (this.viewMode) {\n                case 'list':\n                    this.renderListView(sortedItems);\n                    break;\n                case 'grid':\n                    this.renderGridView(sortedItems);\n                    break;\n                case 'columns':\n                    this.renderListView(sortedItems); // Fallback to list for now\n                    break;\n            }\n        }\n\n        /**\n         * Get current items based on view and path\n         */\n        getCurrentItems() {\n            switch (this.currentView) {\n                case 'computer':\n                    return this.getComputerItems();\n                case 'github':\n                    return this.getGithubItems();\n                case 'favorites':\n                    return this.getFavoriteItems();\n                case 'recent':\n                    return this.getRecentItems();\n                default:\n                    return [];\n            }\n        }\n\n        /**\n         * Get computer items\n         */\n        getComputerItems() {\n            let current = this.virtualFileSystem;\n\n            for (const pathPart of this.currentPath) {\n                if (current[pathPart] && current[pathPart].children) {\n                    current = current[pathPart].children;\n                } else {\n                    return [];\n                }\n            }\n\n            return Object.entries(current).map(([name, item]) => ({\n                name,\n                type: item.type,\n                icon: item.icon || (item.type === 'folder' ? '\uD83D\uDCC1' : '\uD83D\uDCC4'),\n                size: item.size || 0,\n                modified: item.modified || new Date().toISOString(),\n            }));\n        }\n\n        /**\n         * Get GitHub items (placeholder - simplified from finder.js)\n         */\n        getGithubItems() {\n            // Fallback (should be handled by renderGithubContent)\n            return [];\n        }\n\n        /**\n         * Get favorite items\n         */\n        getFavoriteItems() {\n            return Array.from(this.favorites).map(path => ({\n                name: path.split('/').pop(),\n                type: 'favorite',\n                icon: '\u2B50',\n                path,\n            }));\n        }\n\n        /**\n         * Get recent items\n         */\n        getRecentItems() {\n            return this.recentFiles.map(file => ({\n                name: file.name,\n                type: 'recent',\n                icon: file.icon || '\uD83D\uDCC4',\n                path: file.path,\n                modified: file.modified,\n            }));\n        }\n\n        /**\n         * Sort items\n         */\n        sortItems(items) {\n            const sorted = [...items];\n\n            sorted.sort((a, b) => {\n                // Folders first\n                if (a.type === 'folder' && b.type !== 'folder') return -1;\n                if (a.type !== 'folder' && b.type === 'folder') return 1;\n\n                // Then by sortBy\n                let comparison = 0;\n                switch (this.sortBy) {\n                    case 'name':\n                        comparison = a.name.localeCompare(b.name);\n                        break;\n                    case 'size':\n                        comparison = (a.size || 0) - (b.size || 0);\n                        break;\n                    case 'date':\n                        comparison = new Date(b.modified || 0) - new Date(a.modified || 0);\n                        break;\n                    case 'type':\n                        comparison = (a.type || '').localeCompare(b.type || '');\n                        break;\n                }\n\n                return this.sortOrder === 'asc' ? comparison : -comparison;\n            });\n\n            return sorted;\n        }\n\n        /**\n         * Render list view\n         */\n        renderListView(items) {\n            const html = `\n                <div id=\"finder-list-container\">\n                <table class=\"finder-list-table\">\n                    <thead>\n                        <tr>\n                            <th data-action=\"finder:setSortBy\" data-sort-by=\"name\">Name</th>\n                            <th data-action=\"finder:setSortBy\" data-sort-by=\"size\">Gr\u00F6\u00DFe</th>\n                            <th data-action=\"finder:setSortBy\" data-sort-by=\"date\">Ge\u00E4ndert</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        ${items\n        .map(\n            item => `\n                            <tr class=\"finder-list-item\" data-action-dblclick=\"finder:openItem\" data-item-name=\"${item.name}\" data-item-type=\"${item.type}\">\n                                <td>\n                                    <span class=\"finder-item-icon\">${item.icon}</span>\n                                    <span class=\"finder-item-name\">${item.name}</span>\n                                </td>\n                                <td>${this.formatSize(item.size)}</td>\n                                <td>${this.formatDate(item.modified)}</td>\n                            </tr>\n                        `\n        )\n        .join('')}\n                    </tbody>\n                </table>\n                </div>\n            `;\n\n            this.domRefs.contentArea.innerHTML = html;\n        }\n\n        /**\n         * Render grid view\n         */\n        renderGridView(items) {\n            const html = `\n                <div id=\"finder-list-container\">\n                <div class=\"finder-grid-container\">\n                    ${items\n        .map(\n            item => `\n                        <div class=\"finder-grid-item\" data-action-dblclick=\"finder:openItem\" data-item-name=\"${item.name}\" data-item-type=\"${item.type}\">\n                            <div class=\"finder-grid-icon\">${item.icon}</div>\n                            <div class=\"finder-grid-name\">${item.name}</div>\n                        </div>\n                    `\n        )\n        .join('')}\n                </div>\n                </div>\n            `;\n\n            this.domRefs.contentArea.innerHTML = html;\n        }\n\n        /**\n         * Open item\n         */\n        openItem(name, type) {\n            if (type === 'folder') {\n                this.navigateToFolder(name);\n            } else if (type === 'file') {\n                // Add to recent files\n                this.addToRecent(name);\n                // Emit event for file opening (can be handled by parent)\n                this.emit('fileOpened', { name, path: [...this.currentPath, name].join('/') });\n\n                // If in GitHub view and image file, open image viewer\n                if (this.currentView === 'github') {\n                    const item = this.lastGithubItemsMap.get(name);\n                    const isImage = /\\.(png|jpe?g|gif|bmp|webp|svg)$/i.test(name);\n                    if (item && isImage && item.download_url) {\n                        this.openImageViewer({ src: item.download_url, name });\n                    }\n                }\n            }\n        }\n\n        /**\n         * Render GitHub view with async fetching and caching\n         */\n        async renderGithubContent() {\n            const el = this.domRefs.contentArea;\n            if (!el) return;\n\n            // Root (list repos)\n            if (this.currentPath.length === 0) {\n                // Loading placeholder\n                el.innerHTML = '<div class=\"finder-empty-state\">Lade Repositories\u2026</div>';\n                const repos = await this.fetchGithubRepos();\n                this.lastGithubItemsMap.clear();\n                const items = (repos || []).map(repo => ({\n                    name: repo.name,\n                    type: 'folder',\n                    icon: '\uD83D\uDCE6',\n                }));\n                items.forEach(it => this.lastGithubItemsMap.set(it.name, it));\n                if (this.githubError && items.length === 0) {\n                    el.innerHTML =\n                        '<div class=\"finder-empty-state text-center\"><div class=\"text-2xl mb-2\">\u26A0\uFE0F</div><div>Repositories could not be loaded (Repos konnten nicht geladen werden). Possible Rate Limit.</div></div>';\n                } else if (items.length === 0) {\n                    el.innerHTML =\n                        '<div class=\"finder-empty-state text-center\">Keine \u00F6ffentlichen Repositories gefunden</div>';\n                } else {\n                    this.renderListView(items);\n                }\n                return;\n            }\n\n            // Repo and subpaths\n            const repo = this.currentPath[0];\n            const subPathParts = this.currentPath.slice(1);\n            const subPath = subPathParts.join('/');\n\n            el.innerHTML = '<div class=\"finder-empty-state\">Lade Inhalte\u2026</div>';\n            const contents = await this.fetchGithubContents(repo, subPath);\n            this.lastGithubItemsMap.clear();\n            const items = (contents || []).map(entry => {\n                const isDir = entry.type === 'dir';\n                return {\n                    name: entry.name,\n                    type: isDir ? 'folder' : 'file',\n                    icon: isDir ? '\uD83D\uDCC1' : '\uD83D\uDCC4',\n                    size: entry.size || 0,\n                    download_url: entry.download_url || null,\n                };\n            });\n            items.forEach(it => this.lastGithubItemsMap.set(it.name, it));\n            if (this.githubError && items.length === 0) {\n                el.innerHTML =\n                    '<div class=\"finder-empty-state text-center\"><div class=\"text-2xl mb-2\">\u26A0\uFE0F</div><div>Repositories could not be loaded (Repos konnten nicht geladen werden). Possible Rate Limit.</div></div>';\n            } else if (items.length === 0) {\n                el.innerHTML =\n                    '<div class=\"finder-empty-state text-center\">Dieser Ordner ist leer</div>';\n            } else {\n                this.renderListView(items);\n            }\n        }\n\n        /**\n         * Fetch GitHub repos for configured user\n         */\n        async fetchGithubRepos() {\n            const GITHUB_USERNAME = 'Marormur';\n            try {\n                // Simple in-memory cache per instance\n                if (Array.isArray(this.githubRepos) && this.githubRepos.length) {\n                    return this.githubRepos;\n                }\n                const res = await fetch(`https://api.github.com/users/${GITHUB_USERNAME}/repos`, {\n                    headers: { Accept: 'application/vnd.github.v3+json' },\n                });\n                if (!res.ok) throw new Error('GitHub repos fetch failed');\n                const data = await res.json();\n                this.githubRepos = data || [];\n                this.githubError = false;\n                this.githubErrorMessage = '';\n                return this.githubRepos;\n            } catch (e) {\n                console.warn('GitHub repos error:', e);\n                this.githubError = true;\n                this.githubErrorMessage = 'Repositories could not be loaded';\n                return [];\n            }\n        }\n\n        /**\n         * Fetch contents (files/folders) for a given repo and subPath\n         */\n        async fetchGithubContents(repo, subPath = '') {\n            try {\n                const key = `${repo}:${subPath}`;\n                if (this.githubContentCache.has(key)) {\n                    return this.githubContentCache.get(key);\n                }\n                const base = `https://api.github.com/repos/Marormur/${repo}/contents`;\n                const url = subPath ? `${base}/${this._encodeGithubPath(subPath)}` : base;\n                const res = await fetch(url, {\n                    headers: { Accept: 'application/vnd.github.v3+json' },\n                });\n                if (!res.ok) throw new Error('GitHub contents fetch failed');\n                const data = await res.json();\n                this.githubContentCache.set(key, data || []);\n                this.githubError = false;\n                this.githubErrorMessage = '';\n                return data;\n            } catch (e) {\n                console.warn('GitHub contents error:', e);\n                this.githubError = true;\n                this.githubErrorMessage = 'Repositories could not be loaded';\n                return [];\n            }\n        }\n\n        /**\n         * Encode a GitHub path by encoding segments but keeping '/'\n         */\n        _encodeGithubPath(subPath) {\n            if (!subPath) return '';\n            return subPath\n                .split('/')\n                .filter(Boolean)\n                .map(seg => encodeURIComponent(seg))\n                .join('/');\n        }\n\n        /**\n         * Open image viewer modal with given src\n         */\n        openImageViewer({ src, name }) {\n            try {\n                const img = document.getElementById('image-viewer');\n                const info = document.getElementById('image-info');\n                const placeholder = document.getElementById('image-placeholder');\n                if (info) {\n                    info.textContent = name || '';\n                    info.classList.remove('hidden');\n                }\n                if (placeholder) placeholder.classList.add('hidden');\n                if (img) {\n                    img.src = src;\n                    img.classList.remove('hidden');\n                }\n                if (window.API?.window?.open) {\n                    window.API.window.open('image-modal');\n                } else {\n                    const modal = document.getElementById('image-modal');\n                    if (modal) modal.classList.remove('hidden');\n                }\n            } catch (e) {\n                console.warn('Failed to open image viewer:', e);\n            }\n        }\n\n        /**\n         * Add to recent files\n         */\n        addToRecent(name) {\n            const fullPath = [...this.currentPath, name].join('/');\n            this.recentFiles.unshift({\n                name,\n                path: fullPath,\n                icon: '\uD83D\uDCC4',\n                modified: new Date().toISOString(),\n            });\n\n            // Limit to 20 items\n            this.recentFiles = this.recentFiles.slice(0, 20);\n            this.updateState({ recentFiles: this.recentFiles });\n        }\n\n        /**\n         * Set sort by\n         */\n        setSortBy(field) {\n            if (this.sortBy === field) {\n                this.sortOrder = this.sortOrder === 'asc' ? 'desc' : 'asc';\n            } else {\n                this.sortBy = field;\n                this.sortOrder = 'asc';\n            }\n            this.renderContent();\n            this.updateState({ sortBy: this.sortBy, sortOrder: this.sortOrder });\n        }\n\n        /**\n         * Set view mode\n         */\n        setViewMode(mode) {\n            this.viewMode = mode;\n            this.renderContent();\n            this.updateState({ viewMode: this.viewMode });\n        }\n\n        /**\n         * Format size\n         */\n        formatSize(bytes) {\n            if (!bytes || bytes === 0) return '-';\n            if (bytes < 1024) return bytes + ' B';\n            if (bytes < 1024 * 1024) return (bytes / 1024).toFixed(1) + ' KB';\n            return (bytes / (1024 * 1024)).toFixed(1) + ' MB';\n        }\n\n        /**\n         * Format date\n         */\n        formatDate(dateStr) {\n            if (!dateStr) return '-';\n            const date = new Date(dateStr);\n            return date.toLocaleDateString('de-DE', {\n                day: '2-digit',\n                month: '2-digit',\n                year: 'numeric',\n            });\n        }\n\n        /**\n         * Serialize finder state\n         */\n        serialize() {\n            return {\n                ...super.serialize(),\n                currentPath: this.currentPath,\n                currentView: this.currentView,\n                viewMode: this.viewMode,\n                sortBy: this.sortBy,\n                sortOrder: this.sortOrder,\n                favorites: Array.from(this.favorites),\n                recentFiles: this.recentFiles,\n            };\n        }\n\n        /**\n         * Restore finder from saved state\n         */\n        deserialize(data) {\n            super.deserialize(data);\n\n            if (data.currentPath) {\n                this.currentPath = data.currentPath;\n            }\n\n            if (data.currentView) {\n                this.currentView = data.currentView;\n            }\n\n            if (data.viewMode) {\n                this.viewMode = data.viewMode;\n            }\n\n            if (data.sortBy) {\n                this.sortBy = data.sortBy;\n            }\n\n            if (data.sortOrder) {\n                this.sortOrder = data.sortOrder;\n            }\n\n            if (data.favorites) {\n                this.favorites = new Set(data.favorites);\n            }\n\n            if (data.recentFiles) {\n                this.recentFiles = data.recentFiles;\n            }\n\n            // Re-render\n            this.navigateTo(this.currentPath, this.currentView);\n        }\n\n        /**\n         * Focus finder\n         */\n        focus() {\n            super.focus();\n            if (this.domRefs.searchInput) {\n                // Don't auto-focus search input, just bring to front\n            }\n        }\n    }\n\n    // Export\n    window.FinderInstance = FinderInstance;\n\n    // Create Finder Instance Manager\n    if (window.InstanceManager) {\n        window.FinderInstanceManager = new window.InstanceManager({\n            type: 'finder',\n            instanceClass: FinderInstance,\n            maxInstances: 0, // Unlimited\n            createContainer: function (instanceId) {\n                // Create container and append to finder modal container\n                const finderModalContainer = document.getElementById('finder-container');\n                if (!finderModalContainer) {\n                    console.error('Finder container not found');\n                    return null;\n                }\n\n                const container = document.createElement('div');\n                container.id = `${instanceId}-container`;\n                // Make this container a flex column so the rendered content's flex-1 can expand\n                container.className = 'finder-instance-container h-full flex flex-col min-h-0';\n\n                // Initially hidden (will be shown by integration layer)\n                container.classList.add('hidden');\n\n                finderModalContainer.appendChild(container);\n                return container;\n            },\n        });\n    }\n})();\n", "/**\n * launchpad.js\n * Launchpad system for displaying all available applications in a grid\n */\nconsole.log('Launchpad loaded');\n\n(function (global) {\n    'use strict';\n\n    // State\n    let container = null;\n    let searchInput = null;\n    let appsGrid = null;\n    let allApps = [];\n    let filteredApps = [];\n\n    // Local translate helper\n    function translate(key, fallback) {\n        if (!global.appI18n || typeof global.appI18n.translate !== 'function') {\n            return fallback || key;\n        }\n        const result = global.appI18n.translate(key);\n        if (result === key && fallback) return fallback;\n        return result;\n    }\n\n    /**\n     * Initialize the Launchpad system\n     */\n    function init(containerElement) {\n        if (!containerElement) {\n            console.warn('LaunchpadSystem: No container element provided');\n            return;\n        }\n\n        // Prevent re-initialization\n        if (container) {\n            console.warn('LaunchpadSystem: Already initialized');\n            return;\n        }\n\n        container = containerElement;\n        render();\n        loadApps();\n    }\n\n    /**\n     * Render the Launchpad UI\n     */\n    function render() {\n        if (!container) return;\n\n        container.innerHTML = `\n            <div class=\"launchpad-container\">\n                <div class=\"launchpad-search\">\n                    <input\n                        id=\"launchpad-search-input\"\n                        type=\"text\"\n                        placeholder=\"${translate('modals.launchpad.searchPlaceholder', 'Search apps')}\"\n                        class=\"launchpad-search-input\"\n                    />\n                </div>\n                <div id=\"launchpad-apps-grid\" class=\"launchpad-apps-grid\">\n                    <!-- Apps will be rendered here -->\n                </div>\n            </div>\n        `;\n\n        // Get references\n        searchInput = container.querySelector('#launchpad-search-input');\n        appsGrid = container.querySelector('#launchpad-apps-grid');\n\n        // Attach event listeners\n        if (searchInput) {\n            searchInput.addEventListener('input', handleSearch);\n        }\n    }\n\n    /**\n     * Load all available applications from WindowManager\n     */\n    function loadApps() {\n        if (!global.WindowManager) {\n            console.warn('LaunchpadSystem: WindowManager not available');\n            return;\n        }\n\n        // Get all registered windows\n        const windowIds = global.WindowManager.getAllWindowIds();\n\n        allApps = [];\n\n        windowIds.forEach(windowId => {\n            const config = global.WindowManager.getConfig(windowId);\n            const programInfo = global.WindowManager.getProgramInfo(windowId);\n\n            // Skip transient windows like program-info-modal\n            if (config && config.type === 'transient') {\n                return;\n            }\n\n            // Skip the launchpad itself\n            if (windowId === 'launchpad-modal') {\n                return;\n            }\n\n            if (programInfo) {\n                allApps.push({\n                    id: windowId,\n                    name: programInfo.programLabel || translate('programs.default.label', 'App'),\n                    icon: programInfo.icon || './img/sucher.png',\n                    programKey: config ? config.programKey : null,\n                });\n            }\n        });\n\n        filteredApps = [...allApps];\n        renderApps();\n    }\n\n    /**\n     * Handle search input\n     */\n    function handleSearch(event) {\n        const query = event.target.value.toLowerCase().trim();\n\n        if (!query) {\n            filteredApps = [...allApps];\n        } else {\n            filteredApps = allApps.filter(app => app.name.toLowerCase().includes(query));\n        }\n\n        renderApps();\n    }\n\n    /**\n     * Render the apps grid\n     */\n    function renderApps() {\n        if (!appsGrid) return;\n\n        appsGrid.innerHTML = '';\n\n        if (filteredApps.length === 0) {\n            appsGrid.innerHTML = `\n                <div class=\"launchpad-empty\">\n                    <p>${translate('finder.empty', 'No apps found')}</p>\n                </div>\n            `;\n            return;\n        }\n\n        filteredApps.forEach(app => {\n            const appButton = document.createElement('button');\n            appButton.className = 'launchpad-app-button';\n            appButton.setAttribute('data-window-id', app.id);\n            // Use ActionBus to open the app and close Launchpad\n            appButton.setAttribute('data-action', 'launchpadOpenWindow');\n            appButton.title = app.name;\n\n            const iconContainer = document.createElement('div');\n            iconContainer.className = 'launchpad-app-icon';\n\n            // Render icon: image path or emoji\n            const isImagePath =\n                typeof app.icon === 'string' && /\\.(png|jpg|jpeg|gif|svg|webp)$/i.test(app.icon);\n            if (\n                isImagePath ||\n                (typeof app.icon === 'string' &&\n                    (app.icon.startsWith('./') || app.icon.startsWith('http')))\n            ) {\n                const icon = document.createElement('img');\n                icon.src = app.icon;\n                icon.alt = app.name;\n                icon.draggable = false;\n                iconContainer.appendChild(icon);\n            } else if (typeof app.icon === 'string' && app.icon.trim().length) {\n                const emoji = document.createElement('div');\n                emoji.className = 'launchpad-app-emoji';\n                emoji.textContent = app.icon;\n                iconContainer.appendChild(emoji);\n            } else {\n                const fallback = document.createElement('img');\n                fallback.src = './img/sucher.png';\n                fallback.alt = app.name;\n                fallback.draggable = false;\n                iconContainer.appendChild(fallback);\n            }\n\n            const label = document.createElement('span');\n            label.className = 'launchpad-app-label';\n            label.textContent = app.name;\n\n            appButton.appendChild(iconContainer);\n            appButton.appendChild(label);\n\n            // No explicit click handler; ActionBus will handle via data-action\n\n            appsGrid.appendChild(appButton);\n        });\n    }\n\n    /**\n     * Open an application and close Launchpad\n     */\n    function openApp(windowId) {\n        if (!windowId) return;\n\n        // Close Launchpad\n        const launchpadModal = document.getElementById('launchpad-modal');\n        if (launchpadModal && global.dialogs && global.dialogs['launchpad-modal']) {\n            global.dialogs['launchpad-modal'].close();\n        } else if (launchpadModal) {\n            launchpadModal.classList.add('hidden');\n        }\n\n        // Open the selected app\n        if (global.WindowManager && typeof global.WindowManager.open === 'function') {\n            global.WindowManager.open(windowId);\n            return;\n        }\n        const dialog = global.dialogs && global.dialogs[windowId];\n        if (dialog && typeof dialog.open === 'function') {\n            dialog.open();\n        } else {\n            const modalElement = document.getElementById(windowId);\n            if (modalElement) {\n                modalElement.classList.remove('hidden');\n                if (typeof global.bringDialogToFront === 'function') {\n                    global.bringDialogToFront(windowId);\n                }\n                if (typeof global.updateProgramLabelByTopModal === 'function') {\n                    global.updateProgramLabelByTopModal();\n                }\n            }\n        }\n    }\n\n    /**\n     * Refresh apps list (call when new apps are added)\n     */\n    function refresh() {\n        loadApps();\n    }\n\n    /**\n     * Clear search and reset to all apps\n     */\n    function clearSearch() {\n        if (searchInput) {\n            searchInput.value = '';\n        }\n        filteredApps = [...allApps];\n        renderApps();\n    }\n\n    // Listen for language changes and refresh apps\n    global.addEventListener('languagePreferenceChange', () => {\n        if (container) {\n            loadApps();\n        }\n    });\n\n    // Export\n    // Register ActionBus action to open window and close launchpad\n    if (global.ActionBus && typeof global.ActionBus.register === 'function') {\n        global.ActionBus.register('launchpadOpenWindow', params => {\n            const id = params?.windowId || params?.windowid || params?.window || params?.id;\n            if (id) openApp(id);\n        });\n    }\n\n    global.LaunchpadSystem = {\n        init,\n        refresh,\n        clearSearch,\n        get container() {\n            return container;\n        },\n    };\n})(window);\n", "console.log('MultiInstanceIntegration loaded');\n\n/**\n * Multi-Instance Modal Integration\n *\n * Integrates the tab system with existing modals (Terminal, TextEditor)\n * Wires up keyboard shortcuts and session management\n */\n(function () {\n    'use strict';\n\n    /**\n     * Integration manager for multi-instance modals\n     */\n    class MultiInstanceIntegration {\n        constructor() {\n            this.integrations = new Map();\n            this.isInitialized = false;\n        }\n\n        /**\n         * Initialize multi-instance integration\n         */\n        init() {\n            if (this.isInitialized) {\n                console.warn('MultiInstanceIntegration already initialized');\n                return;\n            }\n\n            // Wait for DOM and all dependencies to be ready\n            if (document.readyState === 'loading') {\n                document.addEventListener('DOMContentLoaded', () => {\n                    this.setup();\n                });\n            } else {\n                this.setup();\n            }\n        }\n\n        /**\n         * Setup integrations\n         */\n        setup() {\n            console.log('MultiInstanceIntegration: Setting up...');\n\n            // Check if required dependencies are available\n            if (!window.InstanceManager || !window.WindowTabManager || !window.KeyboardShortcuts) {\n                console.error('MultiInstanceIntegration: Required dependencies not loaded');\n                return;\n            }\n\n            // Setup Terminal integration if available\n            if (window.TerminalInstanceManager) {\n                this.setupTerminalIntegration();\n            }\n\n            // Setup Text Editor integration if available\n            if (window.TextEditorInstanceManager) {\n                this.setupTextEditorIntegration();\n            }\n\n            // Setup Finder integration if available\n            if (window.FinderInstanceManager) {\n                this.setupFinderIntegration();\n            }\n\n            // Register managers with session manager\n            if (window.SessionManager) {\n                if (window.TerminalInstanceManager) {\n                    window.SessionManager.registerManager(\n                        'terminal',\n                        window.TerminalInstanceManager\n                    );\n                }\n                if (window.TextEditorInstanceManager) {\n                    window.SessionManager.registerManager(\n                        'text-editor',\n                        window.TextEditorInstanceManager\n                    );\n                }\n                if (window.FinderInstanceManager) {\n                    window.SessionManager.registerManager('finder', window.FinderInstanceManager);\n                }\n\n                // Restore saved sessions before starting auto-save\n                window.SessionManager.restoreAllSessions();\n\n                // After restoring sessions (or on fresh start), ensure all integrations\n                // have their tabs properly set up and active instances visible\n                this.integrations.forEach((integration, type) => {\n                    const { manager, tabManager } = integration;\n                    const instances = manager.getAllInstances();\n\n                    // Refresh tabs to reflect current instances\n                    // (works for both restored instances and fresh starts)\n                    if (tabManager && tabManager.controller) {\n                        tabManager.controller.refresh();\n                    }\n\n                    // Show the active instance if any exist\n                    if (instances.length > 0) {\n                        const activeInstance = manager.getActiveInstance();\n                        if (activeInstance) {\n                            this.showInstance(type, activeInstance.instanceId);\n                        }\n                    }\n                });\n\n                // Start auto-save\n                window.SessionManager.startAutoSave();\n            }\n\n            // Provide a precise context resolver to KeyboardShortcuts\n            if (\n                window.KeyboardShortcuts &&\n                typeof window.KeyboardShortcuts.setContextResolver === 'function'\n            ) {\n                window.KeyboardShortcuts.setContextResolver(() => {\n                    try {\n                        const wm = window.WindowManager;\n                        const top =\n                            wm && typeof wm.getTopWindow === 'function' ? wm.getTopWindow() : null;\n                        const topId = top?.id || '';\n                        // Find matching integration by modalId\n                        let match = 'global';\n                        this.integrations.forEach((val, key) => {\n                            if (val && val.modalId === topId) {\n                                match = key;\n                            }\n                        });\n                        return match;\n                    } catch {\n                        return 'global';\n                    }\n                });\n            }\n\n            this.isInitialized = true;\n            console.log('MultiInstanceIntegration: Setup complete');\n        }\n\n        /**\n         * Setup Terminal modal integration\n         */\n        setupTerminalIntegration() {\n            console.log('Setting up Terminal integration...');\n\n            // Create tab manager for terminal\n            const terminalTabManager = new window.WindowTabManager({\n                containerId: 'terminal-tabs-container',\n                instanceManager: window.TerminalInstanceManager,\n                onTabSwitch: instanceId => {\n                    // Set as active in manager first\n                    window.TerminalInstanceManager.setActiveInstance(instanceId);\n                    // Then show/hide instances\n                    this.showInstance('terminal', instanceId);\n                },\n                onTabClose: _instanceId => {\n                    // Instance will be destroyed by tab manager\n                },\n                onNewTab: () => {\n                    // Create a new terminal instance\n                    const count = window.TerminalInstanceManager.getInstanceCount();\n                    window.TerminalInstanceManager.createInstance({\n                        title: `Terminal ${count + 1}`,\n                    });\n                },\n            });\n\n            // Store integration info\n            this.integrations.set('terminal', {\n                manager: window.TerminalInstanceManager,\n                tabManager: terminalTabManager,\n                modalId: 'terminal-modal',\n                containerId: 'terminal-container',\n            });\n\n            // Register keyboard shortcuts for Terminal (after integration is stored)\n            this.registerShortcutsForType('terminal', window.TerminalInstanceManager);\n\n            // Listen for new instances and add tabs\n            this.setupInstanceListeners('terminal');\n        }\n\n        /**\n         * Setup Text Editor modal integration\n         */\n        setupTextEditorIntegration() {\n            console.log('Setting up TextEditor integration...');\n\n            // Create tab manager for text editor\n            const editorTabManager = new window.WindowTabManager({\n                containerId: 'text-editor-tabs-container',\n                instanceManager: window.TextEditorInstanceManager,\n                onTabSwitch: instanceId => {\n                    // Set as active in manager first\n                    window.TextEditorInstanceManager.setActiveInstance(instanceId);\n                    // Then show/hide instances\n                    this.showInstance('text-editor', instanceId);\n                },\n                onTabClose: _instanceId => {\n                    // Instance will be destroyed by tab manager\n                },\n                onNewTab: () => {\n                    // Create a new text editor instance\n                    const count = window.TextEditorInstanceManager.getInstanceCount();\n                    window.TextEditorInstanceManager.createInstance({\n                        title: `Editor ${count + 1}`,\n                    });\n                },\n            });\n\n            // Store integration info\n            this.integrations.set('text-editor', {\n                manager: window.TextEditorInstanceManager,\n                tabManager: editorTabManager,\n                modalId: 'text-modal',\n                containerId: 'text-editor-container',\n            });\n\n            // Register keyboard shortcuts for Text Editor (after integration is stored)\n            this.registerShortcutsForType('text-editor', window.TextEditorInstanceManager);\n\n            // Listen for new instances and add tabs\n            this.setupInstanceListeners('text-editor');\n        }\n\n        /**\n         * Setup Finder modal integration\n         */\n        setupFinderIntegration() {\n            console.log('Setting up Finder integration...');\n\n            // Create tab manager for finder\n            const finderTabManager = new window.WindowTabManager({\n                containerId: 'finder-tabs-container',\n                instanceManager: window.FinderInstanceManager,\n                onTabSwitch: instanceId => {\n                    // Set as active in manager first\n                    window.FinderInstanceManager.setActiveInstance(instanceId);\n                    // Then show/hide instances\n                    this.showInstance('finder', instanceId);\n                },\n                onTabClose: _instanceId => {\n                    // Instance will be destroyed by tab manager\n                },\n                onNewTab: () => {\n                    // Create a new finder instance\n                    const count = window.FinderInstanceManager.getInstanceCount();\n                    window.FinderInstanceManager.createInstance({\n                        title: `Finder ${count + 1}`,\n                    });\n                },\n                // Close the Finder modal if the last tab was closed\n                onAllTabsClosed: () => {\n                    if (window.API?.window?.close) {\n                        window.API.window.close('finder-modal');\n                    } else {\n                        const modal = document.getElementById('finder-modal');\n                        if (modal) modal.classList.add('hidden');\n                    }\n                },\n            });\n\n            // Store integration info\n            this.integrations.set('finder', {\n                manager: window.FinderInstanceManager,\n                tabManager: finderTabManager,\n                modalId: 'finder-modal',\n                containerId: 'finder-container',\n            });\n\n            // Register keyboard shortcuts for Finder (after integration is stored)\n            this.registerShortcutsForType('finder', window.FinderInstanceManager);\n\n            // Listen for new instances and add tabs\n            this.setupInstanceListeners('finder');\n        }\n\n        /**\n         * Setup listeners for instance creation/destruction\n         * @param {string} type - Instance type\n         */\n        setupInstanceListeners(type) {\n            const integration = this.integrations.get(type);\n            if (!integration) return;\n\n            const { manager, tabManager, containerId: _containerId } = integration;\n\n            // Listen for instance creation (via manager)\n            const originalCreate = manager.createInstance.bind(manager);\n            manager.createInstance = config => {\n                const instance = originalCreate(config);\n                if (instance) {\n                    // Add tab for this instance\n                    tabManager.addTab(instance);\n\n                    // Show/hide instances based on active state\n                    this.updateInstanceVisibility(type);\n                }\n                return instance;\n            };\n\n            // Listen for instance destruction (via manager)\n            const originalDestroy = manager.destroyInstance.bind(manager);\n            manager.destroyInstance = instanceId => {\n                originalDestroy(instanceId);\n                // After destruction, force tab UI refresh to ensure sync\n                if (\n                    tabManager &&\n                    tabManager.controller &&\n                    typeof tabManager.controller.refresh === 'function'\n                ) {\n                    tabManager.controller.refresh();\n                }\n            };\n        }\n\n        /**\n         * Show a specific instance and hide others\n         * @param {string} type - Instance type\n         * @param {string} instanceId - Instance ID to show\n         */\n        showInstance(type, instanceId) {\n            const integration = this.integrations.get(type);\n            if (!integration) return;\n\n            const instances = integration.manager.getAllInstances();\n            instances.forEach(instance => {\n                if (instance.instanceId === instanceId) {\n                    instance.show();\n                } else {\n                    instance.hide();\n                }\n            });\n        }\n\n        /**\n         * Update visibility of all instances for a type\n         * @param {string} type - Instance type\n         */\n        updateInstanceVisibility(type) {\n            const integration = this.integrations.get(type);\n            if (!integration) return;\n\n            const activeInstance = integration.manager.getActiveInstance();\n            if (activeInstance) {\n                this.showInstance(type, activeInstance.instanceId);\n            }\n        }\n\n        /**\n         * Register keyboard shortcuts for a window type\n         * @param {string} type - Window type\n         * @param {InstanceManager} manager - Instance manager\n         */\n        registerShortcutsForType(type, manager) {\n            // Get the modal element to scope shortcuts to\n            const integration = this.integrations.get(type);\n            const modalId = integration?.modalId;\n            if (!modalId) {\n                console.error(`Cannot register shortcuts for ${type}: no modalId found`);\n                return;\n            }\n\n            const modalElement = document.getElementById(modalId);\n            if (!modalElement) {\n                console.error(\n                    `Cannot register shortcuts for ${type}: modal element ${modalId} not found`\n                );\n                return;\n            }\n\n            console.log(`Registering shortcuts for ${type} on modal ${modalId}`, modalElement);\n\n            // Use manager-style registration scoped to document\n            // Modal-scoped registration doesn't work because keyboard events require element focus\n            // Instead, we rely on the manager's instance state to determine if shortcuts should fire\n            const unregister = window.KeyboardShortcuts.register(manager, {\n                scope: document,\n                newTitleFactory: () => `${type} ${manager.getInstanceCount() + 1}`,\n            });\n\n            console.log(`Successfully registered shortcuts for ${type}`);\n\n            // Store unregister function for cleanup if needed\n            if (integration) {\n                integration.unregisterShortcuts = unregister;\n            }\n        }\n\n        /**\n         * Get integration for a type\n         * @param {string} type\n         * @returns {Object|null}\n         */\n        getIntegration(type) {\n            return this.integrations.get(type) || null;\n        }\n    }\n\n    // Create singleton instance\n    const integration = new MultiInstanceIntegration();\n\n    // Export to global scope\n    window.MultiInstanceIntegration = integration;\n\n    // Auto-initialize\n    integration.init();\n})();\n\n", "/*\n LEGACY JS: This file is part of the repository's legacy JavaScript sources.\n Maintained in-place. Prefer editing corresponding TypeScript sources in src/ts when available.\n Last edited (lint-maintenance): 2025-10-27\n*/\n// Desktop icons and selection logic\n// Exports: window.DesktopSystem\n(function (global) {\n    'use strict';\n\n    // Local translate helper (doesn't depend on app.js)\n    function translate(key, fallback) {\n        if (!global.appI18n || typeof global.appI18n.translate !== 'function') {\n            return fallback || key;\n        }\n        const result = global.appI18n.translate(key);\n        if (result === key && fallback) return fallback;\n        return result;\n    }\n\n    const DESKTOP_ITEMS = [\n        // { id: 'about', modalId: 'about-modal', icon: './img/profil.jpg', labelKey: 'desktop.about', fallbackLabel: '\u00DCber Marvin' },\n        // Shortcut: GitHub \"Ordner\" \u00F6ffnet den Finder direkt in der GitHub-Ansicht\n        {\n            id: 'github',\n            // Verwende Emoji-Icon f\u00FCr den Ordner, bis ein spezielles Icon vorhanden ist\n            emoji: '\uD83D\uDCC2',\n            labelKey: 'desktop.github',\n            fallbackLabel: 'GitHub Projekte',\n            onOpen: () => {\n                // \u00D6ffne Finder-Modal (neues Fenster-System)\n                if (window.API?.window?.open) {\n                    window.API.window.open('finder-modal');\n                } else {\n                    const modal = document.getElementById('finder-modal');\n                    if (modal) modal.classList.remove('hidden');\n                }\n\n                // Multi-Instance bevorzugt\n                if (window.FinderInstanceManager) {\n                    // Stelle sicher, dass mindestens eine Instanz existiert\n                    if (!window.FinderInstanceManager.hasInstances()) {\n                        window.FinderInstanceManager.createInstance({ title: 'Finder' });\n                    }\n                    const active =\n                        window.FinderInstanceManager.getActiveInstance() ||\n                        window.FinderInstanceManager.getAllInstances()[0];\n                    if (active && typeof active.switchView === 'function') {\n                        active.switchView('github');\n                        // Bringe die Instanz in den Vordergrund\n                        window.FinderInstanceManager.setActiveInstance(active.instanceId);\n                        if (window.MultiInstanceIntegration?.showInstance) {\n                            window.MultiInstanceIntegration.showInstance(\n                                'finder',\n                                active.instanceId\n                            );\n                        } else if (typeof active.show === 'function') {\n                            active.show();\n                        }\n                    }\n                    return true;\n                }\n\n                // Fallback auf Legacy FinderSystem\n                if (window.FinderSystem && typeof window.FinderSystem.navigateTo === 'function') {\n                    window.FinderSystem.navigateTo([], 'github');\n                    return true;\n                }\n\n                return false;\n            },\n        },\n    ];\n\n    const desktopItemsById = new Map();\n    const desktopButtons = new Map();\n    let desktopSelectedItemId = null;\n    const desktopSelectedIds = new Set();\n    let desktopLastFocusedIndex = -1;\n    let desktopSuppressBackgroundClick = false;\n\n    function updateDesktopSelectionUI() {\n        if (desktopLastFocusedIndex >= 0 && DESKTOP_ITEMS[desktopLastFocusedIndex]) {\n            desktopSelectedItemId = DESKTOP_ITEMS[desktopLastFocusedIndex].id;\n        } else {\n            desktopSelectedItemId =\n                desktopSelectedIds.size === 1 ? Array.from(desktopSelectedIds)[0] : null;\n        }\n        desktopButtons.forEach((btn, id) => {\n            if (desktopSelectedIds.has(id)) {\n                btn.dataset.selected = 'true';\n                btn.setAttribute('aria-selected', 'true');\n            } else {\n                btn.removeAttribute('data-selected');\n                btn.setAttribute('aria-selected', 'false');\n            }\n        });\n    }\n\n    function getDesktopAreaElement() {\n        return document.getElementById('desktop');\n    }\n    function getDesktopContainerElement() {\n        return document.getElementById('desktop-icons');\n    }\n\n    function createDesktopButton(item, index) {\n        const button = document.createElement('button');\n        button.type = 'button';\n        button.className = 'desktop-icon-button no-select';\n        button.dataset.desktopItemId = item.id;\n        button.dataset.desktopIndex = String(index);\n        // Use ActionBus for double-click to open; keep single-tap logic locally for touch/pen\n        button.setAttribute('data-action-dblclick', 'openDesktopItem');\n        button.setAttribute('data-item-id', item.id);\n        button.setAttribute('role', 'option');\n        button.setAttribute('aria-selected', 'false');\n        button.setAttribute('data-i18n-title', item.labelKey);\n        button.setAttribute('data-i18n-aria-label', item.labelKey);\n        const labelText = translate(item.labelKey, item.fallbackLabel);\n        button.title = labelText;\n        button.setAttribute('aria-label', labelText);\n        button.draggable = false;\n\n        const graphic = document.createElement('span');\n        graphic.className = 'desktop-icon-graphic';\n        if (item.icon) {\n            const img = document.createElement('img');\n            img.src = item.icon;\n            img.alt = '';\n            img.decoding = 'async';\n            img.referrerPolicy = 'no-referrer';\n            img.draggable = false;\n            graphic.appendChild(img);\n        } else if (item.emoji) {\n            graphic.textContent = item.emoji;\n        }\n        button.appendChild(graphic);\n\n        const label = document.createElement('span');\n        label.className = 'desktop-icon-label no-select';\n        label.textContent = labelText;\n        label.setAttribute('data-i18n', item.labelKey);\n        button.appendChild(label);\n\n        button.addEventListener('pointerdown', event => {\n            if (!event) return;\n            if (event.pointerType) {\n                button.dataset.activePointerType = event.pointerType;\n            } else {\n                delete button.dataset.activePointerType;\n            }\n        });\n        button.addEventListener(\n            'touchstart',\n            () => {\n                button.dataset.activePointerType = 'touch';\n            },\n            { passive: true }\n        );\n        button.addEventListener('mousedown', () => {\n            button.dataset.activePointerType = 'mouse';\n        });\n\n        button.addEventListener('click', event => {\n            event.preventDefault();\n            const index = Number(button.dataset.desktopIndex || 0);\n            const isMeta = event.ctrlKey || event.metaKey;\n            const isShift = event.shiftKey;\n\n            if (isShift && desktopLastFocusedIndex >= 0) {\n                const start = Math.min(desktopLastFocusedIndex, index);\n                const end = Math.max(desktopLastFocusedIndex, index);\n                for (let i = start; i <= end; i++) {\n                    const id = (DESKTOP_ITEMS[i] && DESKTOP_ITEMS[i].id) || null;\n                    if (id) desktopSelectedIds.add(id);\n                }\n                desktopLastFocusedIndex = index;\n                updateDesktopSelectionUI();\n            } else if (isMeta) {\n                if (desktopSelectedIds.has(item.id)) desktopSelectedIds.delete(item.id);\n                else desktopSelectedIds.add(item.id);\n                desktopLastFocusedIndex = index;\n                updateDesktopSelectionUI();\n            } else {\n                desktopSelectedIds.clear();\n                desktopSelectedIds.add(item.id);\n                desktopLastFocusedIndex = index;\n                updateDesktopSelectionUI();\n            }\n\n            const pointerType = button.dataset.activePointerType || '';\n            const shouldOpenOnSingleTap = pointerType === 'touch' || pointerType === 'pen';\n            // Double-click open is handled by ActionBus via data-action-dblclick\n            if (shouldOpenOnSingleTap) {\n                openDesktopItemById(item.id);\n            }\n            delete button.dataset.activePointerType;\n        });\n\n        button.addEventListener('keydown', handleDesktopKeydown);\n        button.addEventListener('focus', () => {\n            selectDesktopItem(item.id, { focus: false });\n        });\n\n        return button;\n    }\n\n    function renderDesktopIcons() {\n        const container = getDesktopContainerElement();\n        if (!container) return;\n        container.innerHTML = '';\n        desktopItemsById.clear();\n        desktopButtons.clear();\n        DESKTOP_ITEMS.forEach((item, index) => {\n            desktopItemsById.set(item.id, item);\n            const button = createDesktopButton(item, index);\n            desktopButtons.set(item.id, button);\n            container.appendChild(button);\n        });\n        if (global.appI18n && typeof global.appI18n.applyTranslations === 'function') {\n            global.appI18n.applyTranslations(container);\n        }\n    }\n\n    function selectDesktopItem(itemId, options = {}) {\n        const { focus = true } = options;\n        if (desktopSelectedItemId && desktopSelectedItemId === itemId) {\n            if (focus && desktopButtons.has(itemId)) {\n                const btn = desktopButtons.get(itemId);\n                if (typeof btn.focus === 'function') {\n                    try {\n                        btn.focus({ preventScroll: true });\n                    } catch {\n                        btn.focus();\n                    }\n                }\n            }\n            return;\n        }\n        if (desktopSelectedItemId && desktopButtons.has(desktopSelectedItemId)) {\n            const previousButton = desktopButtons.get(desktopSelectedItemId);\n            previousButton.removeAttribute('data-selected');\n            previousButton.setAttribute('aria-selected', 'false');\n        }\n        desktopSelectedIds.clear();\n        if (itemId) desktopSelectedIds.add(itemId);\n        desktopLastFocusedIndex = DESKTOP_ITEMS.findIndex(entry => entry.id === itemId);\n        updateDesktopSelectionUI();\n        if (focus && itemId && desktopButtons.has(itemId)) {\n            const nextButton = desktopButtons.get(itemId);\n            if (typeof nextButton.focus === 'function') {\n                try {\n                    nextButton.focus({ preventScroll: true });\n                } catch {\n                    nextButton.focus();\n                }\n            }\n        }\n    }\n\n    function clearDesktopSelection(options = {}) {\n        const { blur = false } = options;\n        const hadSelection = desktopSelectedIds.size > 0 || desktopSelectedItemId !== null;\n        desktopSelectedIds.clear();\n        desktopLastFocusedIndex = -1;\n        desktopSelectedItemId = null;\n        desktopButtons.forEach(btn => {\n            btn.removeAttribute('data-selected');\n            btn.setAttribute('aria-selected', 'false');\n        });\n        if (!hadSelection) return;\n        if (blur) {\n            const prev = document.querySelector('.desktop-icon-button[aria-selected=\"true\"]');\n            if (prev && typeof prev.blur === 'function') prev.blur();\n        }\n    }\n\n    function focusDesktopItemByIndex(index) {\n        if (!Array.isArray(DESKTOP_ITEMS) || DESKTOP_ITEMS.length === 0) return;\n        if (index < 0) index = 0;\n        if (index >= DESKTOP_ITEMS.length) index = DESKTOP_ITEMS.length - 1;\n        const item = DESKTOP_ITEMS[index];\n        if (!item) return;\n        selectDesktopItem(item.id, { focus: true });\n    }\n\n    function moveDesktopSelection(offset) {\n        if (!offset) return;\n        if (!Array.isArray(DESKTOP_ITEMS) || DESKTOP_ITEMS.length === 0) return;\n        const currentIndex = desktopSelectedItemId\n            ? DESKTOP_ITEMS.findIndex(entry => entry.id === desktopSelectedItemId)\n            : -1;\n        let targetIndex;\n        if (currentIndex === -1) {\n            targetIndex = offset > 0 ? 0 : DESKTOP_ITEMS.length - 1;\n        } else {\n            targetIndex = currentIndex + offset;\n            if (targetIndex < 0) targetIndex = 0;\n            if (targetIndex >= DESKTOP_ITEMS.length) targetIndex = DESKTOP_ITEMS.length - 1;\n        }\n        focusDesktopItemByIndex(targetIndex);\n    }\n\n    function openDesktopItem(item) {\n        if (!item) return false;\n        if (typeof item.onOpen === 'function') return !!item.onOpen(item);\n        if (item.modalId) {\n            const dialog = global.dialogs && global.dialogs[item.modalId];\n            if (dialog && typeof dialog.open === 'function') {\n                dialog.open();\n                return true;\n            }\n            const modalElement = document.getElementById(item.modalId);\n            if (modalElement) {\n                modalElement.classList.remove('hidden');\n                if (typeof global.bringDialogToFront === 'function') {\n                    global.bringDialogToFront(item.modalId);\n                }\n                if (typeof global.updateProgramLabelByTopModal === 'function') {\n                    global.updateProgramLabelByTopModal();\n                }\n                return true;\n            }\n        }\n        if (item.href) {\n            const target = item.target || '_blank';\n            global.open(item.href, target, 'noopener');\n            return true;\n        }\n        return false;\n    }\n\n    function openDesktopItemById(itemId) {\n        if (!itemId) return false;\n        const item = desktopItemsById.get(itemId);\n        if (!item) return false;\n        selectDesktopItem(itemId, { focus: true });\n        return openDesktopItem(item);\n    }\n\n    function handleDesktopKeydown(event) {\n        const { key } = event;\n        const target = event.currentTarget;\n        if (!target || !target.dataset) return;\n        const itemId = target.dataset.desktopItemId;\n        if (!itemId) return;\n        switch (key) {\n            case 'Enter':\n            case ' ':\n                event.preventDefault();\n                openDesktopItemById(itemId);\n                return;\n            case 'ArrowDown':\n            case 'ArrowRight':\n                event.preventDefault();\n                moveDesktopSelection(1);\n                return;\n            case 'ArrowUp':\n            case 'ArrowLeft':\n                event.preventDefault();\n                moveDesktopSelection(-1);\n                return;\n            case 'Home':\n                event.preventDefault();\n                focusDesktopItemByIndex(0);\n                return;\n            case 'End':\n                event.preventDefault();\n                focusDesktopItemByIndex(DESKTOP_ITEMS.length - 1);\n                return;\n            case 'Escape':\n                event.preventDefault();\n                clearDesktopSelection({ blur: true });\n                return;\n            default:\n                break;\n        }\n    }\n\n    function handleDesktopBackgroundPointer(event) {\n        if (event && typeof event.button === 'number' && event.button !== 0) return;\n        if (desktopSuppressBackgroundClick) return;\n        if (event && event.target && event.target.closest('.desktop-icon-button')) return;\n        clearDesktopSelection({ blur: true });\n    }\n\n    function initDesktop() {\n        renderDesktopIcons();\n        const desktopArea = getDesktopAreaElement();\n        if (desktopArea) {\n            desktopArea.addEventListener('click', handleDesktopBackgroundPointer);\n            desktopArea.addEventListener('touchstart', handleDesktopBackgroundPointer, {\n                passive: true,\n            });\n\n            let rubber = null;\n            let rubberStart = null;\n            const onPointerMove = e => {\n                if (!rubber || !rubberStart) return;\n                const x1 = Math.min(rubberStart.x, e.clientX);\n                const y1 = Math.min(rubberStart.y, e.clientY);\n                const x2 = Math.max(rubberStart.x, e.clientX);\n                const y2 = Math.max(rubberStart.y, e.clientY);\n                rubber.style.left = x1 + 'px';\n                rubber.style.top = y1 + 'px';\n                rubber.style.width = x2 - x1 + 'px';\n                rubber.style.height = y2 - y1 + 'px';\n                desktopButtons.forEach(btn => {\n                    const rect = btn.getBoundingClientRect();\n                    const intersects = !(\n                        rect.right < x1 ||\n                        rect.left > x2 ||\n                        rect.bottom < y1 ||\n                        rect.top > y2\n                    );\n                    if (intersects) btn.classList.add('rubber-selected');\n                    else btn.classList.remove('rubber-selected');\n                });\n            };\n\n            const onPointerUp = e => {\n                if (!rubber || !rubberStart) return;\n                const selected = [];\n                desktopButtons.forEach((btn, id) => {\n                    if (btn.classList.contains('rubber-selected')) {\n                        selected.push(id);\n                        btn.classList.remove('rubber-selected');\n                    }\n                });\n                if (e.ctrlKey || e.metaKey) {\n                    selected.forEach(id => {\n                        if (desktopSelectedIds.has(id)) desktopSelectedIds.delete(id);\n                        else desktopSelectedIds.add(id);\n                    });\n                } else {\n                    desktopSelectedIds.clear();\n                    selected.forEach(id => desktopSelectedIds.add(id));\n                }\n                if (selected.length > 0) {\n                    const lastId = selected[selected.length - 1];\n                    desktopLastFocusedIndex = DESKTOP_ITEMS.findIndex(entry => entry.id === lastId);\n                }\n                updateDesktopSelectionUI();\n                cleanupRubber();\n            };\n\n            const onPointerCancel = () => cleanupRubber();\n            const onWindowBlur = () => cleanupRubber();\n            const onVisibilityChange = () => {\n                if (document.visibilityState !== 'visible') cleanupRubber();\n            };\n\n            const cleanupRubber = () => {\n                if (!rubber) return;\n                desktopButtons.forEach(btn => btn.classList.remove('rubber-selected'));\n                try {\n                    rubber.remove();\n                } catch {\n                    /* ignore */\n                }\n                rubber = null;\n                rubberStart = null;\n                window.removeEventListener('pointermove', onPointerMove);\n                window.removeEventListener('pointerup', onPointerUp);\n                window.removeEventListener('pointercancel', onPointerCancel);\n                window.removeEventListener('blur', onWindowBlur);\n                document.removeEventListener('visibilitychange', onVisibilityChange);\n                desktopSuppressBackgroundClick = true;\n                setTimeout(() => {\n                    desktopSuppressBackgroundClick = false;\n                }, 120);\n            };\n\n            desktopArea.addEventListener('pointerdown', e => {\n                if (e.button !== 0) return;\n                if (e.target && e.target.closest && e.target.closest('.desktop-icon-button'))\n                    return;\n                rubberStart = { x: e.clientX, y: e.clientY };\n                rubber = document.createElement('div');\n                rubber.className = 'desktop-rubberband';\n                Object.assign(rubber.style, {\n                    position: 'fixed',\n                    left: rubberStart.x + 'px',\n                    top: rubberStart.y + 'px',\n                    width: '0px',\n                    height: '0px',\n                    zIndex: 99999,\n                    border: '1px dashed rgba(255,255,255,0.6)',\n                    background: 'rgba(59,130,246,0.12)',\n                    pointerEvents: 'none',\n                });\n                document.body.appendChild(rubber);\n                desktopSuppressBackgroundClick = true;\n                window.addEventListener('pointermove', onPointerMove);\n                window.addEventListener('pointerup', onPointerUp);\n                window.addEventListener('pointercancel', onPointerCancel);\n                window.addEventListener('blur', onWindowBlur);\n                document.addEventListener('visibilitychange', onVisibilityChange);\n            });\n        }\n    }\n\n    global.DesktopSystem = {\n        initDesktop,\n        renderDesktopIcons,\n        selectDesktopItem,\n        moveDesktopSelection,\n        openDesktopItemById,\n        clearDesktopSelection,\n    };\n})(window);\n", "// ============================================================================\n// js/system.js \u2014 System Status UI Module\n// ============================================================================\n// Manages:\n// - WiFi, Bluetooth, Focus, Dark Mode, Battery status\n// - Volume, Brightness sliders\n// - Audio device selection\n// - Network and Bluetooth device selection\n// - Icon updates and UI state synchronization\n//\n// Exports window.SystemUI with API:\n// - initSystemStatusControls()\n// - updateAllSystemStatusUI()\n// - handleSystemToggle(toggleKey)\n// - handleSystemAction(actionKey)\n// - handleSystemSliderInput(type, value)\n// - setConnectedNetwork(network, options)\n// - setBluetoothDevice(deviceName, options)\n// - setAudioDevice(deviceKey, options)\n// - getSystemStatus() \u2014 returns current state object\n// ============================================================================\n\n(function () {\n    'use strict';\n\n    console.log('\u2705 SystemUI loaded');\n\n    // ===== Module Dependencies =====\n    const appI18n = window.appI18n || {\n        translate: key => key,\n        applyTranslations: () => {},\n        getActiveLanguage: () => 'en',\n    };\n\n    const IconSystem = window.IconSystem || {};\n    const SYSTEM_ICONS = IconSystem.SYSTEM_ICONS || {};\n    const ensureSvgNamespace = IconSystem.ensureSvgNamespace || (svg => svg);\n    const renderIconIntoElement = IconSystem.renderIconIntoElement || (() => {});\n\n    const ThemeSystem = window.ThemeSystem || {};\n    const setThemePreference = ThemeSystem.setThemePreference || (() => {});\n\n    // Helper to hide all menu dropdowns (expected to be in app.js or global)\n    const hideMenuDropdowns =\n        window.hideMenuDropdowns ||\n        (() => {\n            document.querySelectorAll('.menu-dropdown').forEach(dropdown => {\n                if (!dropdown.classList.contains('hidden')) {\n                    dropdown.classList.add('hidden');\n                }\n            });\n            document.querySelectorAll('[data-menubar-trigger-button=\"true\"]').forEach(button => {\n                button.setAttribute('aria-expanded', 'false');\n            });\n            document.querySelectorAll('[data-system-menu-trigger]').forEach(button => {\n                button.setAttribute('aria-expanded', 'false');\n            });\n        });\n\n    // ===== System State =====\n    const systemStatus = {\n        wifi: true,\n        bluetooth: true,\n        focus: false,\n        darkMode: document.documentElement.classList.contains('dark'),\n        brightness: 80,\n        volume: 65,\n        audioDevice: 'speakers',\n        network: 'HomeLAN',\n        battery: 100,\n        connectedBluetoothDevice: 'AirPods',\n    };\n\n    // ===== UI Helper Functions =====\n\n    function applySystemIcon(iconToken, iconKey) {\n        const svg = SYSTEM_ICONS[iconKey];\n        const markup = svg ? ensureSvgNamespace(svg) : '';\n        document.querySelectorAll(`[data-icon=\"${iconToken}\"]`).forEach(el => {\n            renderIconIntoElement(el, markup, iconToken);\n        });\n    }\n\n    /*\n     LEGACY JS: System UI helpers maintained in JS. If a TypeScript source exists, prefer edits there.\n     Last edited (lint-maintenance): 2025-10-27\n    */\n    function updateSystemStateText(stateKey, text) {\n        document.querySelectorAll(`[data-state=\"${stateKey}\"]`).forEach(el => {\n            el.textContent = text !== null && text !== undefined ? String(text) : '';\n        });\n    }\n\n    function updateSystemToggleState(toggleKey, active) {\n        const toggle = document.querySelector(`[data-system-toggle=\"${toggleKey}\"]`);\n        if (toggle) {\n            toggle.classList.toggle('is-active', !!active);\n            toggle.setAttribute('aria-pressed', active ? 'true' : 'false');\n        }\n    }\n\n    function updateSystemMenuCheckbox(actionKey, checked) {\n        const checkbox = document.querySelector(`[data-system-action=\"${actionKey}\"]`);\n        if (checkbox) {\n            checkbox.setAttribute('aria-pressed', checked ? 'true' : 'false');\n            checkbox.classList.toggle('is-active', !!checked);\n        }\n    }\n\n    function updateSystemSliderValue(type, value) {\n        document.querySelectorAll(`[data-system-slider=\"${type}\"]`).forEach(slider => {\n            if (Number(slider.value) !== value) {\n                slider.value = value;\n            }\n        });\n        document.querySelectorAll(`[data-state=\"${type}\"]`).forEach(label => {\n            label.textContent = `${value}%`;\n        });\n    }\n\n    // ===== Status Update Functions =====\n\n    function updateWifiUI() {\n        const iconKey = systemStatus.wifi ? 'wifiOn' : 'wifiOff';\n        applySystemIcon('wifi', iconKey);\n        updateSystemStateText(\n            'wifi',\n            appI18n.translate(systemStatus.wifi ? 'menubar.state.on' : 'menubar.state.off')\n        );\n        updateSystemToggleState('wifi', systemStatus.wifi);\n        updateSystemMenuCheckbox('toggle-wifi', systemStatus.wifi);\n        document.querySelectorAll('#wifi-menu [data-network]').forEach(btn => {\n            const disabled = !systemStatus.wifi;\n            if (disabled) {\n                btn.setAttribute('aria-disabled', 'true');\n            } else {\n                btn.removeAttribute('aria-disabled');\n            }\n        });\n        setConnectedNetwork(systemStatus.network, { silent: true });\n    }\n\n    function updateBluetoothUI() {\n        const iconKey = systemStatus.bluetooth ? 'bluetoothOn' : 'bluetoothOff';\n        applySystemIcon('bluetooth', iconKey);\n        updateSystemStateText(\n            'bluetooth',\n            appI18n.translate(systemStatus.bluetooth ? 'menubar.state.on' : 'menubar.state.off')\n        );\n        updateSystemToggleState('bluetooth', systemStatus.bluetooth);\n        updateSystemMenuCheckbox('toggle-bluetooth', systemStatus.bluetooth);\n        const devices = document.querySelectorAll('#bluetooth-menu [data-device]');\n        devices.forEach(btn => {\n            const indicator = btn.querySelector('.system-network-indicator');\n            if (indicator && !indicator.dataset.default) {\n                indicator.dataset.default = indicator.textContent || '';\n            }\n            const disabled = !systemStatus.bluetooth;\n            if (disabled) {\n                btn.setAttribute('aria-disabled', 'true');\n            } else {\n                btn.removeAttribute('aria-disabled');\n            }\n        });\n        setBluetoothDevice(systemStatus.connectedBluetoothDevice, {\n            silent: true,\n            syncAudio: false,\n        });\n    }\n\n    function updateFocusUI() {\n        updateSystemToggleState('focus', systemStatus.focus);\n        updateSystemStateText(\n            'focus',\n            appI18n.translate(systemStatus.focus ? 'menubar.state.active' : 'menubar.state.off')\n        );\n    }\n\n    function updateDarkModeUI() {\n        const isDark = systemStatus.darkMode;\n        updateSystemToggleState('dark-mode', isDark);\n        updateSystemStateText(\n            'dark-mode',\n            appI18n.translate(isDark ? 'menubar.state.active' : 'menubar.state.off')\n        );\n        applySystemIcon('appearance', isDark ? 'appearanceDark' : 'appearanceLight');\n    }\n\n    function updateVolumeUI() {\n        const value = Math.max(0, Math.min(100, Number(systemStatus.volume) || 0));\n        systemStatus.volume = value;\n        let iconKey = 'volumeMute';\n        if (value === 0) {\n            iconKey = 'volumeMute';\n        } else if (value <= 33) {\n            iconKey = 'volumeLow';\n        } else if (value <= 66) {\n            iconKey = 'volumeMedium';\n        } else {\n            iconKey = 'volumeHigh';\n        }\n        applySystemIcon('volume', iconKey);\n        updateSystemSliderValue('volume', value);\n    }\n\n    function updateBrightnessUI() {\n        const value = Math.max(0, Math.min(100, Number(systemStatus.brightness) || 0));\n        systemStatus.brightness = value;\n        updateSystemSliderValue('brightness', value);\n    }\n\n    function updateBatteryUI() {\n        applySystemIcon('battery', 'batteryFull');\n        updateSystemStateText('battery', `${systemStatus.battery}%`);\n    }\n\n    function updateAudioDeviceUI() {\n        const active = systemStatus.audioDevice;\n        document.querySelectorAll('[data-audio-device]').forEach(btn => {\n            const isActive = btn.dataset.audioDevice === active;\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\n            btn.classList.toggle('is-active', isActive);\n        });\n    }\n\n    // ===== Device Selection Functions =====\n\n    function setConnectedNetwork(network, options = {}) {\n        if (network) {\n            systemStatus.network = network;\n        }\n        const activeNetwork = systemStatus.network;\n        document.querySelectorAll('#wifi-menu [data-network]').forEach(btn => {\n            const indicator = btn.querySelector('.system-network-indicator');\n            if (indicator && !indicator.dataset.default) {\n                indicator.dataset.default = indicator.textContent || '';\n            }\n            const isActive =\n                !btn.hasAttribute('aria-disabled') &&\n                btn.dataset.network === activeNetwork &&\n                systemStatus.wifi;\n            btn.classList.toggle('is-active', isActive);\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\n            if (indicator) {\n                if (!systemStatus.wifi) {\n                    indicator.textContent = indicator.dataset.default || '';\n                } else if (isActive) {\n                    indicator.textContent = appI18n.translate('menubar.state.connected');\n                } else {\n                    indicator.textContent = indicator.dataset.default || '';\n                }\n            }\n        });\n        if (!options.silent) {\n            hideMenuDropdowns();\n        }\n    }\n\n    function setBluetoothDevice(deviceName, options = {}) {\n        const syncAudio = options.syncAudio !== false;\n        if (deviceName) {\n            systemStatus.connectedBluetoothDevice = deviceName;\n            if (syncAudio && deviceName === 'AirPods') {\n                systemStatus.audioDevice = 'airpods';\n            }\n        }\n        const activeDevice = systemStatus.connectedBluetoothDevice;\n        document.querySelectorAll('#bluetooth-menu [data-device]').forEach(btn => {\n            const indicator = btn.querySelector('.system-network-indicator');\n            if (indicator && !indicator.dataset.default) {\n                indicator.dataset.default = indicator.textContent || '';\n            }\n            const isActive = systemStatus.bluetooth && btn.dataset.device === activeDevice;\n            btn.classList.toggle('is-active', isActive);\n            btn.setAttribute('aria-pressed', isActive ? 'true' : 'false');\n            if (indicator) {\n                if (!systemStatus.bluetooth) {\n                    indicator.textContent = indicator.dataset.default || '';\n                } else if (isActive) {\n                    indicator.textContent = appI18n.translate('menubar.state.connected');\n                } else {\n                    indicator.textContent = indicator.dataset.default || '';\n                }\n            }\n        });\n        updateAudioDeviceUI();\n        if (!options.silent) {\n            hideMenuDropdowns();\n        }\n    }\n\n    function setAudioDevice(deviceKey, options = {}) {\n        if (!deviceKey) return;\n        systemStatus.audioDevice = deviceKey;\n        if (deviceKey === 'airpods') {\n            systemStatus.connectedBluetoothDevice = 'AirPods';\n        }\n        updateAudioDeviceUI();\n        updateBluetoothUI();\n        if (!options.silent) {\n            hideMenuDropdowns();\n        }\n    }\n\n    // ===== Toggle and Action Handlers =====\n\n    function handleSystemToggle(toggleKey) {\n        switch (toggleKey) {\n            case 'wifi':\n                systemStatus.wifi = !systemStatus.wifi;\n                updateWifiUI();\n                break;\n            case 'bluetooth':\n                systemStatus.bluetooth = !systemStatus.bluetooth;\n                updateBluetoothUI();\n                break;\n            case 'focus':\n                systemStatus.focus = !systemStatus.focus;\n                updateFocusUI();\n                break;\n            case 'dark-mode': {\n                const next = !document.documentElement.classList.contains('dark');\n                systemStatus.darkMode = next;\n                if (typeof setThemePreference === 'function') {\n                    setThemePreference(next ? 'dark' : 'light');\n                } else {\n                    document.documentElement.classList.toggle('dark', next);\n                }\n                updateDarkModeUI();\n                break;\n            }\n            default:\n                break;\n        }\n    }\n\n    function handleSystemAction(actionKey) {\n        switch (actionKey) {\n            case 'toggle-wifi':\n                handleSystemToggle('wifi');\n                break;\n            case 'toggle-bluetooth':\n                handleSystemToggle('bluetooth');\n                break;\n            case 'open-network':\n            case 'open-bluetooth':\n            case 'open-sound':\n                if (window.dialogs && window.dialogs['settings-modal']) {\n                    window.dialogs['settings-modal'].open();\n                } else {\n                    console.info(`Aktion \"${actionKey}\" w\u00FCrde Einstellungen \u00F6ffnen.`);\n                }\n                hideMenuDropdowns();\n                break;\n            case 'open-spotlight':\n            case 'open-siri':\n                console.info(`Aktion \"${actionKey}\" ausgel\u00F6st.`);\n                hideMenuDropdowns();\n                break;\n            default:\n                break;\n        }\n    }\n\n    function handleSystemSliderInput(type, value) {\n        if (!Number.isFinite(value)) return;\n        if (type === 'volume') {\n            systemStatus.volume = value;\n            updateVolumeUI();\n        } else if (type === 'brightness') {\n            systemStatus.brightness = value;\n            updateBrightnessUI();\n        }\n    }\n\n    // ===== Main Update Function =====\n\n    function updateAllSystemStatusUI() {\n        applySystemIcon('sun', 'sun');\n        applySystemIcon('moon', 'moon');\n        updateWifiUI();\n        updateBluetoothUI();\n        updateFocusUI();\n        updateDarkModeUI();\n        updateVolumeUI();\n        updateBrightnessUI();\n        updateBatteryUI();\n        updateAudioDeviceUI();\n    }\n\n    // ===== Initialization =====\n\n    function initSystemStatusControls() {\n        document.querySelectorAll('.system-network-indicator').forEach(indicator => {\n            indicator.dataset.default = indicator.textContent || '';\n        });\n\n        document.querySelectorAll('[data-system-menu-trigger]').forEach(trigger => {\n            // bindDropdownTrigger is expected in app.js or global scope\n            if (typeof window.bindDropdownTrigger === 'function') {\n                window.bindDropdownTrigger(trigger, {\n                    hoverRequiresOpen: true,\n                });\n            }\n        });\n\n        // Route toggles through ActionBus\n        document.querySelectorAll('[data-system-toggle]').forEach(toggle => {\n            toggle.dataset.action = 'system:toggle';\n            // ActionBus will stop propagation and execute\n        });\n\n        document.querySelectorAll('[data-system-slider]').forEach(slider => {\n            ['pointerdown', 'mousedown', 'touchstart'].forEach(evt => {\n                slider.addEventListener(evt, e => e.stopPropagation());\n            });\n            slider.addEventListener('input', event => {\n                event.stopPropagation();\n                const value = Number(slider.value);\n                handleSystemSliderInput(slider.dataset.systemSlider, value);\n            });\n        });\n\n        document.querySelectorAll('[data-system-action]').forEach(btn => {\n            btn.dataset.action = 'system:action';\n        });\n\n        document.querySelectorAll('[data-audio-device]').forEach(btn => {\n            btn.dataset.action = 'system:setAudioDevice';\n        });\n\n        document.querySelectorAll('[data-network]').forEach(btn => {\n            btn.dataset.action = 'system:setNetwork';\n        });\n\n        document.querySelectorAll('[data-device]').forEach(btn => {\n            btn.dataset.action = 'system:setBluetoothDevice';\n        });\n\n        updateAllSystemStatusUI();\n    }\n\n    // ===== Public API =====\n\n    window.SystemUI = {\n        initSystemStatusControls,\n        updateAllSystemStatusUI,\n        handleSystemToggle,\n        handleSystemAction,\n        handleSystemSliderInput,\n        setConnectedNetwork,\n        setBluetoothDevice,\n        setAudioDevice,\n        getSystemStatus: () => Object.assign({}, systemStatus),\n    };\n})();\n", "/**\n * Application Initialization Module\n * Handles DOMContentLoaded setup and modal initialization.\n *\n * This module centralizes application bootstrap logic that was previously\n * in the DOMContentLoaded handler in app.js.\n *\n * @module app-init\n */\n\n// Export to make this a proper module for global augmentation\nexport {};\n\n/**\n * Global window interface extensions for app initialization\n */\ndeclare global {\n    interface Window {\n        initApp?: () => void;\n    }\n}\n\n/**\n * Type helper for WindowManager\n */\ninterface IWindowManager {\n    getAllWindowIds?: () => string[];\n    getTransientWindowIds?: () => string[];\n    setDialogInstance?: (id: string, instance: unknown) => void;\n}\n\n/**\n * Type helper for Dialog class\n */\ninterface IDialog {\n    new (id: string): unknown;\n}\n\n/**\n * Type helper for external module functions\n */\ninterface GlobalModules {\n    ActionBus?: {\n        init?: () => void;\n    };\n    Dialog?: IDialog;\n    FinderSystem?: {\n        init?: () => void;\n    };\n    SettingsSystem?: {\n        init?: (container: HTMLElement) => void;\n    };\n    TextEditorSystem?: {\n        init?: (container: HTMLElement) => void;\n    };\n    TerminalSystem?: {\n        init?: (container: HTMLElement) => void;\n    };\n    TerminalInstanceManager?: unknown;\n    DockSystem?: {\n        initDockDragDrop?: () => void;\n    };\n}\n\n/**\n * Initialize modal IDs from WindowManager or fallback to default list\n * @returns Object containing modalIds array and transientModalIds set\n */\nfunction initModalIds(): { modalIds: string[]; transientModalIds: Set<string> } {\n    const win = window as Window & {\n        WindowManager?: IWindowManager;\n        APP_CONSTANTS?: { MODAL_IDS?: string[]; TRANSIENT_MODAL_IDS?: Set<string> };\n    };\n\n    if (win.WindowManager) {\n        const modalIds = win.WindowManager.getAllWindowIds?.() || [];\n        const transientIds = win.WindowManager.getTransientWindowIds?.() || [];\n        return {\n            modalIds,\n            transientModalIds: new Set(transientIds),\n        };\n    } else {\n        // Fallback\n        const modalIds = win.APP_CONSTANTS?.MODAL_IDS || [\n            'finder-modal',\n            'projects-modal',\n            'about-modal',\n            'settings-modal',\n            'text-modal',\n            'terminal-modal',\n            'image-modal',\n            'program-info-modal',\n        ];\n        const transientModalIds =\n            win.APP_CONSTANTS?.TRANSIENT_MODAL_IDS || new Set(['program-info-modal']);\n        return { modalIds, transientModalIds };\n    }\n}\n\n/**\n * Main application initialization function.\n * Called automatically on DOMContentLoaded.\n * Sets up dialog instances, ActionBus, and initializes all subsystems.\n */\nfunction initApp(): void {\n    const win = window as Window & GlobalModules & { WindowManager?: IWindowManager };\n    const funcs = window as Window & {\n        hideMenuDropdowns?: () => void;\n        bringDialogToFront?: (id: string) => void;\n        updateProgramLabelByTopModal?: () => void;\n        syncTopZIndexWithDOM?: () => void;\n        restoreWindowPositions?: () => void;\n        restoreOpenModals?: () => void;\n        initSystemStatusControls?: () => void;\n        initDesktop?: () => void;\n        initDockMagnification?: () => void;\n    };\n\n    // Modal-IDs initialisieren\n    const { modalIds } = initModalIds();\n\n    // ActionBus initialisieren\n    if (win.ActionBus) {\n        win.ActionBus.init?.();\n    }\n\n    // Wenn auf einen sichtbaren Modalcontainer geklickt wird, hole das Fenster in den Vordergrund\n    document.querySelectorAll('.modal').forEach(modal => {\n        modal.addEventListener('click', function (e) {\n            // Verhindere, dass Klicks auf interaktive Elemente im Modal den Fokuswechsel st\u00F6ren.\n            const target = e.target as Node;\n            if (e.target === modal || modal.contains(target)) {\n                funcs.hideMenuDropdowns?.();\n                funcs.bringDialogToFront?.(modal.id);\n                funcs.updateProgramLabelByTopModal?.();\n            }\n        });\n    });\n\n    // Dialog-Instanzen erstellen und im WindowManager registrieren\n    const dialogs = window.dialogs || {};\n    window.dialogs = dialogs;\n    if (modalIds && Array.isArray(modalIds)) {\n        modalIds.forEach(id => {\n            const modal = document.getElementById(id);\n            if (!modal || !win.Dialog) return;\n            const dialogInstance = new win.Dialog(id);\n            dialogs[id] = dialogInstance as unknown as Record<string, unknown>;\n\n            // Im WindowManager registrieren\n            if (win.WindowManager) {\n                win.WindowManager.setDialogInstance?.(id, dialogInstance);\n            }\n        });\n    }\n\n    // Add click-outside-to-close functionality for launchpad\n    const launchpadModal = document.getElementById('launchpad-modal');\n    if (launchpadModal) {\n        // Primary: close when clicking outside the inner content within the modal wrapper.\n        launchpadModal.addEventListener('click', function (e) {\n            try {\n                const inner = launchpadModal.querySelector('.launchpad-modal-inner');\n                const target = e.target as Node;\n                if (inner ? !inner.contains(target) : target === launchpadModal) {\n                    const launchpadDialog = dialogs['launchpad-modal'] as { close?: () => void };\n                    launchpadDialog?.close?.();\n                }\n            } catch {\n                /* ignore */\n            }\n        });\n\n        // Fallback: capture-phase handler to close even when the wrapper has pointer-events:none\n        // and clicks are dispatched to underlying elements (e.g., tests using page.mouse.click).\n        document.addEventListener(\n            'click',\n            function (e) {\n                try {\n                    // Only act if launchpad is currently visible\n                    if (launchpadModal.classList.contains('hidden')) return;\n                    const inner = launchpadModal.querySelector('.launchpad-modal-inner');\n                    const target = e.target as Node;\n                    if (inner && inner.contains(target)) return; // clicked inside \u2192 ignore\n                    const launchpadDialog = dialogs['launchpad-modal'] as { close?: () => void };\n                    launchpadDialog?.close?.();\n                } catch {\n                    /* ignore */\n                }\n            },\n            true\n        );\n    }\n\n    funcs.syncTopZIndexWithDOM?.();\n    funcs.restoreWindowPositions?.();\n    funcs.restoreOpenModals?.();\n    funcs.initSystemStatusControls?.();\n    funcs.initDesktop?.();\n\n    // Finder initialisieren nach Dialog-Setup\n    if (win.FinderSystem && typeof win.FinderSystem.init === 'function') {\n        win.FinderSystem.init();\n    }\n\n    // Initialize settings module\n    if (win.SettingsSystem) {\n        const settingsContainer = document.getElementById('settings-container');\n        if (settingsContainer) {\n            win.SettingsSystem.init?.(settingsContainer);\n        }\n    }\n\n    // Initialize text editor module\n    if (win.TextEditorSystem) {\n        const textEditorContainer = document.getElementById('text-editor-container');\n        if (textEditorContainer) {\n            win.TextEditorSystem.init?.(textEditorContainer);\n        }\n    }\n\n    // Initialize terminal module (legacy) only when multi\u2011instance is not available\n    // Prevents duplicate inputs causing E2E strict-mode locator conflicts\n    if (!win.TerminalInstanceManager && win.TerminalSystem) {\n        const terminalContainer = document.getElementById('terminal-container');\n        if (terminalContainer) {\n            win.TerminalSystem.init?.(terminalContainer);\n        }\n    }\n\n    funcs.initDockMagnification?.();\n    if (win.DockSystem && typeof win.DockSystem.initDockDragDrop === 'function') {\n        win.DockSystem.initDockDragDrop();\n    }\n\n    // Defensive: ensure the dock is visible. Some environments or timing races\n    // can leave the dock with hidden/display styles that make it \"invisible\"\n    // to Playwright checks. Remove any accidental 'hidden' class and reset\n    // inline visibility/display so tests can interact reliably.\n    try {\n        const dockEl = document.getElementById('dock');\n        if (dockEl) {\n            if (dockEl.classList.contains('hidden')) dockEl.classList.remove('hidden');\n            // Reset common inline properties that may hide the element\n            dockEl.style.display = dockEl.style.display || '';\n            dockEl.style.visibility = dockEl.style.visibility || 'visible';\n        }\n    } catch {\n        // non-fatal; continue startup\n    }\n\n    // Defensive DOM fix: if the dock has been accidentally placed inside a\n    // modal wrapper (for example due to malformed HTML or runtime reparenting),\n    // move it to document.body so it isn't affected by ancestor display:none\n    // which makes it invisible to Playwright. This is a low-risk, idempotent\n    // operation and keeps tests deterministic while the underlying HTML is\n    // corrected.\n    try {\n        const dockEl = document.getElementById('dock');\n        if (dockEl && dockEl.parentElement && dockEl.parentElement !== document.body) {\n            document.body.appendChild(dockEl);\n            console.info('[APP-INIT] moved #dock to document.body to avoid hidden ancestor(s)');\n        }\n    } catch {\n        /* ignore */\n    }\n\n    // Defensive: ensure all modal wrappers are direct children of <body>.\n    // This helps when malformed HTML accidentally nests modal wrappers\n    // inside each other which in turn causes computed display:none on\n    // ancestors and zero-sized geometry for centered content.\n    try {\n        const ensureModalsInBody = () => {\n            try {\n                const modals = Array.from(document.querySelectorAll('.modal')) as HTMLElement[];\n                let moved = false;\n                modals.forEach(m => {\n                    if (m.parentElement && m.parentElement !== document.body) {\n                        document.body.appendChild(m);\n                        moved = true;\n                    }\n                });\n                if (moved)\n                    console.info(\n                        '[APP-INIT] reparented misplaced .modal elements to document.body'\n                    );\n                return moved;\n            } catch {\n                return false;\n            }\n        };\n\n        ensureModalsInBody();\n        setTimeout(ensureModalsInBody, 50);\n        setTimeout(ensureModalsInBody, 200);\n        setTimeout(ensureModalsInBody, 500);\n    } catch {\n        /* ignore */\n    }\n\n    // Debugging: log some runtime info about the dock so E2E traces show why\n    // Playwright may mark it hidden; include computed styles and dimensions.\n    try {\n        const dockEl = document.getElementById('dock');\n        if (dockEl) {\n            const rect = dockEl.getBoundingClientRect();\n            const cs = window.getComputedStyle(dockEl);\n            console.info('[APP-INIT] Dock debug:', {\n                className: dockEl.className,\n                display: cs.display,\n                visibility: cs.visibility,\n                opacity: cs.opacity,\n                width: rect.width,\n                height: rect.height,\n                top: rect.top,\n                left: rect.left,\n                inViewport: rect.top < (window.innerHeight || 0) && rect.bottom > 0,\n            });\n            // Also write these values into a data attribute so E2E snapshots and\n            // traces (which may not include console output) can inspect the\n            // runtime state of the dock element.\n            try {\n                const dbg = JSON.stringify({\n                    className: dockEl.className,\n                    display: cs.display,\n                    visibility: cs.visibility,\n                    opacity: cs.opacity,\n                    width: Math.round(rect.width),\n                    height: Math.round(rect.height),\n                    top: Math.round(rect.top),\n                    left: Math.round(rect.left),\n                    inViewport: rect.top < (window.innerHeight || 0) && rect.bottom > 0,\n                });\n                dockEl.setAttribute('data-dock-debug', dbg);\n            } catch {\n                /* swallow */\n            }\n        } else {\n            console.info('[APP-INIT] Dock debug: element not found');\n        }\n    } catch (e) {\n        console.warn('[APP-INIT] Dock debug failed', e);\n    }\n\n    // Signal that the app is ready for E2E tests.\n    // Important: delay setting __APP_READY until the full page load event\n    // so that later scripts (for example the legacy `app.js` included\n    // after this file) have a chance to run and not hide UI elements\n    // after tests consider the app ready.\n    const gw = window as Window & { __APP_READY?: boolean };\n    function markReady() {\n        try {\n            // At load time, ensure the dock is placed under document.body so\n            // any legacy scripts that reparent early don't leave it inside a\n            // hidden modal. Do this right before signaling readiness so tests\n            // observe the final DOM state.\n            const ensureDockInBody = () => {\n                try {\n                    const dockEl = document.getElementById('dock');\n                    if (dockEl && dockEl.parentElement && dockEl.parentElement !== document.body) {\n                        document.body.appendChild(dockEl);\n                        console.info('[APP-INIT] moved #dock to document.body (ensured at load)');\n                        return true;\n                    }\n                } catch {\n                    /* ignore */\n                }\n                return false;\n            };\n\n            // Try immediately and a few times after small delays to survive other\n            // scripts that may reparent DOM nodes during startup.\n            ensureDockInBody();\n            setTimeout(ensureDockInBody, 50);\n            setTimeout(ensureDockInBody, 200);\n            setTimeout(ensureDockInBody, 500);\n\n            gw.__APP_READY = true;\n            console.info('[APP-INIT] __APP_READY=true');\n        } catch {\n            /* swallow */\n        }\n    }\n\n    if (document.readyState === 'complete') {\n        // load already fired\n        markReady();\n    } else {\n        window.addEventListener('load', markReady, { once: true });\n        // Fallback: if the load event doesn't fire (e.g., due to a blocked resource)\n        // make sure tests can proceed by marking ready after a short grace period.\n        setTimeout(() => {\n            if (!gw.__APP_READY) {\n                console.warn('[APP-INIT] load event not observed within timeout; forcing __APP_READY');\n                markReady();\n            }\n        }, 4000);\n    }\n}\n\n// ============================================================================\n// IIFE Export Pattern - Expose initApp globally and auto-attach to DOMContentLoaded\n// ============================================================================\n\n(() => {\n    if (typeof window.initApp !== 'function') {\n        window.initApp = initApp;\n    }\n\n    // Auto-attach to DOMContentLoaded\n    if (document.readyState === 'loading') {\n        document.addEventListener('DOMContentLoaded', initApp);\n    } else {\n        // DOMContentLoaded already fired, run immediately\n        initApp();\n    }\n})();\n", "/*\n * src/ts/compat/expose-globals.ts\n * Central adapter to expose modern TS modules on window for legacy consumers.\n * This file is used as the single esbuild entry to produce an IIFE bundle.\n */\n\nconsole.log('[BUNDLE] expose-globals.ts loading...');\n\n// Import the modern module(s) we want to expose explicitly\nimport * as DOMUtils from '../dom-utils';\n\n// Import legacy/global modules for their side effects so they register on window.*\nimport '../api';\nimport '../window-manager';\nimport '../action-bus';\nimport '../dialog-utils';\nimport '../snap-utils';\nimport '../program-actions';\nimport '../program-menu-sync';\nimport '../menu';\nimport '../dock';\nimport '../dialog';\nimport '../menubar-utils';\nimport '../context-menu';\nimport '../storage';\nimport '../theme';\nimport '../base-window-instance'; // Must come before instance types\nimport '../instance-manager';\nimport '../window-chrome';\nimport '../window-tabs';\nimport '../terminal-instance';\nimport '../text-editor-instance';\nimport '../text-editor';\nimport '../image-viewer-utils';\nimport '../logger';\nimport '../keyboard-shortcuts';\nimport '../github-api';\n\n// Legacy JS modules (copied to src/ts/legacy/ for esbuild compatibility)\nimport '../legacy/window-configs.js'; // Must load before windows are registered\nimport '../legacy/finder-instance.js';\nimport '../legacy/launchpad.js';\nimport '../legacy/multi-instance-integration.js';\nimport '../legacy/desktop.js';\nimport '../legacy/system.js';\n\n// Finally, include the TypeScript app initialization to bootstrap and signal readiness\n// This sets window.__APP_READY = true when the app finishes loading. It must come\n// AFTER all side-effect imports above so that globals like WindowManager/Dialog exist.\nimport '../app-init';\n\n// Guarded attach for modern modules not yet on window\ntype WindowWithBundle = Window & { __BUNDLE_READY__?: boolean; initApp?: () => void } & Record<string, unknown>;\nconst w = window as unknown as WindowWithBundle;\n\nif (!('DOMUtils' in w)) {\n  w['DOMUtils'] = DOMUtils;\n}\n\n// Trigger app initialization manually since the IIFE in app-init.ts\n// runs in module scope and may not execute due to esbuild bundling\nif (typeof w.initApp === 'function') {\n  console.log('[BUNDLE] Triggering initApp; readyState:', document.readyState);\n  if (document.readyState === 'loading') {\n    document.addEventListener('DOMContentLoaded', w.initApp);\n  } else {\n    w.initApp();\n  }\n} else {\n  console.error('[BUNDLE] window.initApp is not defined; app initialization failed');\n}\n\n// Optional ready flag for tests\nw.__BUNDLE_READY__ = true;\n"],
  "mappings": "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",
  "names": ["module", "translate", "getDockReservedBottom", "sendTextEditorMenuAction", "translate", "renderApplicationMenu", "info", "r", "_a", "_b", "_c", "minTop", "openModal", "toggleDarkMode", "getMenuItemsForTarget", "clearMenu", "renderMenu", "clampPosition", "showContextMenu", "buildAndOpenAt", "hideContextMenu", "bindAutoClose", "unbindAutoClose", "getModalIds", "updateDockIndicators", "syncTopZIndexWithDOM", "BaseWindowInstance", "_a", "_a", "w", "_a", "items", "repo", "translate", "query", "integration", "translate", "index", "toggle", "_a", "_b", "_c"]
}
